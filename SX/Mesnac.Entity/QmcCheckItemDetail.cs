//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmcCheckItemDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmcCheckItemDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.QmcCheckItemDetail\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmcCheckItemDetail\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"ItemDetailId\" type=\"System.Int32" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"ItemDetailId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isP" +
        "rimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"MaterialCode\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"MaterialCode\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"ItemId\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"ItemId\" mappingColumnType=\"System.Int" +
        "32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Frequency\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"Frequency\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"PrimeMaxValue\" type=\"System.Nullable`1[System.Decimal]\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"PrimeMaxValue\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=" +
        "\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PrimeMi" +
        "nValue\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PrimeMinValue\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PrimeOperator\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"PrimeOperator\" mappingColumnType=\"System.String\" sqlType=" +
        "\"varchar(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Prim" +
        "eTextValue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"PrimeTextValue\" mappingColumnType" +
        "=\"System.String\" sqlType=\"text\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"GoodMaxValue\" type=\"System.Nullable`1[System.Decimal]\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"GoodMaxValue\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=" +
        "\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"GoodMin" +
        "Value\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"GoodMinValue\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"GoodOperator\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"GoodOperator\" mappingColumnType=\"System.String\" sqlType=\"var" +
        "char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"GoodText" +
        "Value\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"GoodTextValue\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"text\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"CheckMethod\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckMethod\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\"" +
        " mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"PrimeIncludeMinBorder\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"PrimeIncludeMinBorder\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Pri" +
        "meIncludeMaxBorder\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PrimeIncludeMaxBorder\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"GoodIncludeMinBorder\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"GoodIncludeMinBorder\" mappingColumnType=\"System.String\" sqlType=\"char(" +
        "1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"GoodIncludeMa" +
        "xBorder\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"GoodIncludeMaxBorder\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Version\" type=\"System.Nullable`1[System.Int32]\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Version\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LatestFlag\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"LatestFlag\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Activ" +
        "ateFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"ActivateFlag\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"LastDate\" type=\"System.Nullable`1[System.DateTime]\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"LastDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sq" +
        "lType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "GoodDisplayValue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"GoodDisplayValue\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"text\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"PrimeDisplayValue\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pri" +
        "meDisplayValue\" mappingColumnType=\"System.String\" sqlType=\"text\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"InputGoodMaxValue\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"InputGoodMaxValue\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"InputGoodMinValue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"InputGoodMinValue\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"InputPrimeMaxValue\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"InputPrimeMaxValue\" mappingColumnType=\"System.String\" sqlType=\"nvarchar" +
        "(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InputPrimeM" +
        "inValue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"InputPrimeMinValue\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"OrderID\" type=\"System.Nullable`1[System.Int32]\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"OrderID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TeXing\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"TeXing\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinMa" +
        "xValue\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MinMaxValue\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinMinValue\" type=\"System.Nul" +
        "lable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"MinMinValue\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"MinOperator\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MinOp" +
        "erator\" mappingColumnType=\"System.String\" sqlType=\"varchar(5)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"MinTextValue\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"MinTextValue\" mappingColumnType=\"System.String\" sqlType=\"text\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinIncludeMinBorder" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"MinIncludeMinBorder\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"MinIncludeMaxBorder\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MinIncludeM" +
        "axBorder\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"MinDisplayValue\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"MinDisplayValue\" mappingColumnType=\"System.String\" sqlType=\"tex" +
        "t\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InputMinMaxVal" +
        "ue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"InputMinMaxValue\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"InputMinMinValue\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"InputMinMi" +
        "nValue\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"MaxMaxValue\" type=\"System.Nullab" +
        "le`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"MaxMaxValue\" mappingColumnType=\"System.Nulla" +
        "ble`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"MaxMinValue\" type=\"System.Nullable`1[System.Decimal]\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"MaxMinValue\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" s" +
        "qlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "MaxOperator\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"MaxOperator\" mappingColumnType=\"" +
        "System.String\" sqlType=\"varchar(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"MaxTextValue\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaxTextValue" +
        "\" mappingColumnType=\"System.String\" sqlType=\"text\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"MaxIncludeMinBorder\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"MaxIncludeMinBorder\" mappingColumnType=\"System.String\" sqlType=\"char(1" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaxIncludeMaxB" +
        "order\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"MaxIncludeMaxBorder\" mappingColumnType" +
        "=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"MaxDisplayValue\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaxDisplay" +
        "Value\" mappingColumnType=\"System.String\" sqlType=\"text\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"InputMaxMaxValue\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"InputMaxMaxValue\" mappingColumnType=\"System.String\" sqlType=\"nvarcha" +
        "r(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InputMaxMi" +
        "nValue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"InputMaxMinValue\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class QmcCheckItemDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmcCheckItemDetailEntityConfiguration;
        
        protected int _ItemDetailId;
        
        protected string _MaterialCode;
        
        protected int _ItemId;
        
        protected string _Frequency;
        
        protected global::System.Decimal? _PrimeMaxValue;
        
        protected global::System.Decimal? _PrimeMinValue;
        
        protected string _PrimeOperator;
        
        protected string _PrimeTextValue;
        
        protected global::System.Decimal? _GoodMaxValue;
        
        protected global::System.Decimal? _GoodMinValue;
        
        protected string _GoodOperator;
        
        protected string _GoodTextValue;
        
        protected string _CheckMethod;
        
        protected string _Remark;
        
        protected string _PrimeIncludeMinBorder;
        
        protected string _PrimeIncludeMaxBorder;
        
        protected string _GoodIncludeMinBorder;
        
        protected string _GoodIncludeMaxBorder;
        
        protected global::System.Int32? _Version;
        
        protected string _LatestFlag;
        
        protected string _ActivateFlag;
        
        protected string _DeleteFlag;
        
        protected global::System.DateTime? _LastDate;
        
        protected string _GoodDisplayValue;
        
        protected string _PrimeDisplayValue;
        
        protected string _InputGoodMaxValue;
        
        protected string _InputGoodMinValue;
        
        protected string _InputPrimeMaxValue;
        
        protected string _InputPrimeMinValue;
        
        protected global::System.Int32? _OrderID;
        
        protected string _TeXing;
        
        protected global::System.Decimal? _MinMaxValue;
        
        protected global::System.Decimal? _MinMinValue;
        
        protected string _MinOperator;
        
        protected string _MinTextValue;
        
        protected string _MinIncludeMinBorder;
        
        protected string _MinIncludeMaxBorder;
        
        protected string _MinDisplayValue;
        
        protected string _InputMinMaxValue;
        
        protected string _InputMinMinValue;
        
        protected global::System.Decimal? _MaxMaxValue;
        
        protected global::System.Decimal? _MaxMinValue;
        
        protected string _MaxOperator;
        
        protected string _MaxTextValue;
        
        protected string _MaxIncludeMinBorder;
        
        protected string _MaxIncludeMaxBorder;
        
        protected string _MaxDisplayValue;
        
        protected string _InputMaxMaxValue;
        
        protected string _InputMaxMinValue;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmcCheckItemDetail left, global::Mesnac.Entity.QmcCheckItemDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmcCheckItemDetail left, global::Mesnac.Entity.QmcCheckItemDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ItemDetailId {
            get {
                return this._ItemDetailId;
            }
            set {
                this.OnPropertyChanged("ItemDetailId", this._ItemDetailId, value);
                this._ItemDetailId = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public int ItemId {
            get {
                return this._ItemId;
            }
            set {
                this.OnPropertyChanged("ItemId", this._ItemId, value);
                this._ItemId = value;
            }
        }
        
        public string Frequency {
            get {
                return this._Frequency;
            }
            set {
                this.OnPropertyChanged("Frequency", this._Frequency, value);
                this._Frequency = value;
            }
        }
        
        public global::System.Decimal? PrimeMaxValue {
            get {
                return this._PrimeMaxValue;
            }
            set {
                this.OnPropertyChanged("PrimeMaxValue", this._PrimeMaxValue, value);
                this._PrimeMaxValue = value;
            }
        }
        
        public global::System.Decimal? PrimeMinValue {
            get {
                return this._PrimeMinValue;
            }
            set {
                this.OnPropertyChanged("PrimeMinValue", this._PrimeMinValue, value);
                this._PrimeMinValue = value;
            }
        }
        
        public string PrimeOperator {
            get {
                return this._PrimeOperator;
            }
            set {
                this.OnPropertyChanged("PrimeOperator", this._PrimeOperator, value);
                this._PrimeOperator = value;
            }
        }
        
        public string PrimeTextValue {
            get {
                return this._PrimeTextValue;
            }
            set {
                this.OnPropertyChanged("PrimeTextValue", this._PrimeTextValue, value);
                this._PrimeTextValue = value;
            }
        }
        
        public global::System.Decimal? GoodMaxValue {
            get {
                return this._GoodMaxValue;
            }
            set {
                this.OnPropertyChanged("GoodMaxValue", this._GoodMaxValue, value);
                this._GoodMaxValue = value;
            }
        }
        
        public global::System.Decimal? GoodMinValue {
            get {
                return this._GoodMinValue;
            }
            set {
                this.OnPropertyChanged("GoodMinValue", this._GoodMinValue, value);
                this._GoodMinValue = value;
            }
        }
        
        public string GoodOperator {
            get {
                return this._GoodOperator;
            }
            set {
                this.OnPropertyChanged("GoodOperator", this._GoodOperator, value);
                this._GoodOperator = value;
            }
        }
        
        public string GoodTextValue {
            get {
                return this._GoodTextValue;
            }
            set {
                this.OnPropertyChanged("GoodTextValue", this._GoodTextValue, value);
                this._GoodTextValue = value;
            }
        }
        
        public string CheckMethod {
            get {
                return this._CheckMethod;
            }
            set {
                this.OnPropertyChanged("CheckMethod", this._CheckMethod, value);
                this._CheckMethod = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string PrimeIncludeMinBorder {
            get {
                return this._PrimeIncludeMinBorder;
            }
            set {
                this.OnPropertyChanged("PrimeIncludeMinBorder", this._PrimeIncludeMinBorder, value);
                this._PrimeIncludeMinBorder = value;
            }
        }
        
        public string PrimeIncludeMaxBorder {
            get {
                return this._PrimeIncludeMaxBorder;
            }
            set {
                this.OnPropertyChanged("PrimeIncludeMaxBorder", this._PrimeIncludeMaxBorder, value);
                this._PrimeIncludeMaxBorder = value;
            }
        }
        
        public string GoodIncludeMinBorder {
            get {
                return this._GoodIncludeMinBorder;
            }
            set {
                this.OnPropertyChanged("GoodIncludeMinBorder", this._GoodIncludeMinBorder, value);
                this._GoodIncludeMinBorder = value;
            }
        }
        
        public string GoodIncludeMaxBorder {
            get {
                return this._GoodIncludeMaxBorder;
            }
            set {
                this.OnPropertyChanged("GoodIncludeMaxBorder", this._GoodIncludeMaxBorder, value);
                this._GoodIncludeMaxBorder = value;
            }
        }
        
        public global::System.Int32? Version {
            get {
                return this._Version;
            }
            set {
                this.OnPropertyChanged("Version", this._Version, value);
                this._Version = value;
            }
        }
        
        public string LatestFlag {
            get {
                return this._LatestFlag;
            }
            set {
                this.OnPropertyChanged("LatestFlag", this._LatestFlag, value);
                this._LatestFlag = value;
            }
        }
        
        public string ActivateFlag {
            get {
                return this._ActivateFlag;
            }
            set {
                this.OnPropertyChanged("ActivateFlag", this._ActivateFlag, value);
                this._ActivateFlag = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public global::System.DateTime? LastDate {
            get {
                return this._LastDate;
            }
            set {
                this.OnPropertyChanged("LastDate", this._LastDate, value);
                this._LastDate = value;
            }
        }
        
        public string GoodDisplayValue {
            get {
                return this._GoodDisplayValue;
            }
            set {
                this.OnPropertyChanged("GoodDisplayValue", this._GoodDisplayValue, value);
                this._GoodDisplayValue = value;
            }
        }
        
        public string PrimeDisplayValue {
            get {
                return this._PrimeDisplayValue;
            }
            set {
                this.OnPropertyChanged("PrimeDisplayValue", this._PrimeDisplayValue, value);
                this._PrimeDisplayValue = value;
            }
        }
        
        public string InputGoodMaxValue {
            get {
                return this._InputGoodMaxValue;
            }
            set {
                this.OnPropertyChanged("InputGoodMaxValue", this._InputGoodMaxValue, value);
                this._InputGoodMaxValue = value;
            }
        }
        
        public string InputGoodMinValue {
            get {
                return this._InputGoodMinValue;
            }
            set {
                this.OnPropertyChanged("InputGoodMinValue", this._InputGoodMinValue, value);
                this._InputGoodMinValue = value;
            }
        }
        
        public string InputPrimeMaxValue {
            get {
                return this._InputPrimeMaxValue;
            }
            set {
                this.OnPropertyChanged("InputPrimeMaxValue", this._InputPrimeMaxValue, value);
                this._InputPrimeMaxValue = value;
            }
        }
        
        public string InputPrimeMinValue {
            get {
                return this._InputPrimeMinValue;
            }
            set {
                this.OnPropertyChanged("InputPrimeMinValue", this._InputPrimeMinValue, value);
                this._InputPrimeMinValue = value;
            }
        }
        
        public global::System.Int32? OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public string TeXing {
            get {
                return this._TeXing;
            }
            set {
                this.OnPropertyChanged("TeXing", this._TeXing, value);
                this._TeXing = value;
            }
        }
        
        public global::System.Decimal? MinMaxValue {
            get {
                return this._MinMaxValue;
            }
            set {
                this.OnPropertyChanged("MinMaxValue", this._MinMaxValue, value);
                this._MinMaxValue = value;
            }
        }
        
        public global::System.Decimal? MinMinValue {
            get {
                return this._MinMinValue;
            }
            set {
                this.OnPropertyChanged("MinMinValue", this._MinMinValue, value);
                this._MinMinValue = value;
            }
        }
        
        public string MinOperator {
            get {
                return this._MinOperator;
            }
            set {
                this.OnPropertyChanged("MinOperator", this._MinOperator, value);
                this._MinOperator = value;
            }
        }
        
        public string MinTextValue {
            get {
                return this._MinTextValue;
            }
            set {
                this.OnPropertyChanged("MinTextValue", this._MinTextValue, value);
                this._MinTextValue = value;
            }
        }
        
        public string MinIncludeMinBorder {
            get {
                return this._MinIncludeMinBorder;
            }
            set {
                this.OnPropertyChanged("MinIncludeMinBorder", this._MinIncludeMinBorder, value);
                this._MinIncludeMinBorder = value;
            }
        }
        
        public string MinIncludeMaxBorder {
            get {
                return this._MinIncludeMaxBorder;
            }
            set {
                this.OnPropertyChanged("MinIncludeMaxBorder", this._MinIncludeMaxBorder, value);
                this._MinIncludeMaxBorder = value;
            }
        }
        
        public string MinDisplayValue {
            get {
                return this._MinDisplayValue;
            }
            set {
                this.OnPropertyChanged("MinDisplayValue", this._MinDisplayValue, value);
                this._MinDisplayValue = value;
            }
        }
        
        public string InputMinMaxValue {
            get {
                return this._InputMinMaxValue;
            }
            set {
                this.OnPropertyChanged("InputMinMaxValue", this._InputMinMaxValue, value);
                this._InputMinMaxValue = value;
            }
        }
        
        public string InputMinMinValue {
            get {
                return this._InputMinMinValue;
            }
            set {
                this.OnPropertyChanged("InputMinMinValue", this._InputMinMinValue, value);
                this._InputMinMinValue = value;
            }
        }
        
        public global::System.Decimal? MaxMaxValue {
            get {
                return this._MaxMaxValue;
            }
            set {
                this.OnPropertyChanged("MaxMaxValue", this._MaxMaxValue, value);
                this._MaxMaxValue = value;
            }
        }
        
        public global::System.Decimal? MaxMinValue {
            get {
                return this._MaxMinValue;
            }
            set {
                this.OnPropertyChanged("MaxMinValue", this._MaxMinValue, value);
                this._MaxMinValue = value;
            }
        }
        
        public string MaxOperator {
            get {
                return this._MaxOperator;
            }
            set {
                this.OnPropertyChanged("MaxOperator", this._MaxOperator, value);
                this._MaxOperator = value;
            }
        }
        
        public string MaxTextValue {
            get {
                return this._MaxTextValue;
            }
            set {
                this.OnPropertyChanged("MaxTextValue", this._MaxTextValue, value);
                this._MaxTextValue = value;
            }
        }
        
        public string MaxIncludeMinBorder {
            get {
                return this._MaxIncludeMinBorder;
            }
            set {
                this.OnPropertyChanged("MaxIncludeMinBorder", this._MaxIncludeMinBorder, value);
                this._MaxIncludeMinBorder = value;
            }
        }
        
        public string MaxIncludeMaxBorder {
            get {
                return this._MaxIncludeMaxBorder;
            }
            set {
                this.OnPropertyChanged("MaxIncludeMaxBorder", this._MaxIncludeMaxBorder, value);
                this._MaxIncludeMaxBorder = value;
            }
        }
        
        public string MaxDisplayValue {
            get {
                return this._MaxDisplayValue;
            }
            set {
                this.OnPropertyChanged("MaxDisplayValue", this._MaxDisplayValue, value);
                this._MaxDisplayValue = value;
            }
        }
        
        public string InputMaxMaxValue {
            get {
                return this._InputMaxMaxValue;
            }
            set {
                this.OnPropertyChanged("InputMaxMaxValue", this._InputMaxMaxValue, value);
                this._InputMaxMaxValue = value;
            }
        }
        
        public string InputMaxMinValue {
            get {
                return this._InputMaxMinValue;
            }
            set {
                this.OnPropertyChanged("InputMaxMinValue", this._InputMaxMinValue, value);
                this._InputMaxMinValue = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmcCheckItemDetail._QmcCheckItemDetailEntityConfiguration == null)) {
                QmcCheckItemDetail._QmcCheckItemDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmcCheckItemDetail");
            }
            return QmcCheckItemDetail._QmcCheckItemDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ItemDetailId,
                    this._MaterialCode,
                    this._ItemId,
                    this._Frequency,
                    this._PrimeMaxValue,
                    this._PrimeMinValue,
                    this._PrimeOperator,
                    this._PrimeTextValue,
                    this._GoodMaxValue,
                    this._GoodMinValue,
                    this._GoodOperator,
                    this._GoodTextValue,
                    this._CheckMethod,
                    this._Remark,
                    this._PrimeIncludeMinBorder,
                    this._PrimeIncludeMaxBorder,
                    this._GoodIncludeMinBorder,
                    this._GoodIncludeMaxBorder,
                    this._Version,
                    this._LatestFlag,
                    this._ActivateFlag,
                    this._DeleteFlag,
                    this._LastDate,
                    this._GoodDisplayValue,
                    this._PrimeDisplayValue,
                    this._InputGoodMaxValue,
                    this._InputGoodMinValue,
                    this._InputPrimeMaxValue,
                    this._InputPrimeMinValue,
                    this._OrderID,
                    this._TeXing,
                    this._MinMaxValue,
                    this._MinMinValue,
                    this._MinOperator,
                    this._MinTextValue,
                    this._MinIncludeMinBorder,
                    this._MinIncludeMaxBorder,
                    this._MinDisplayValue,
                    this._InputMinMaxValue,
                    this._InputMinMinValue,
                    this._MaxMaxValue,
                    this._MaxMinValue,
                    this._MaxOperator,
                    this._MaxTextValue,
                    this._MaxIncludeMinBorder,
                    this._MaxIncludeMaxBorder,
                    this._MaxDisplayValue,
                    this._InputMaxMaxValue,
                    this._InputMaxMinValue};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ItemDetailId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MaterialCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ItemId = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Frequency = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._PrimeMaxValue = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._PrimeMinValue = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._PrimeOperator = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._PrimeTextValue = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._GoodMaxValue = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._GoodMinValue = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._GoodOperator = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._GoodTextValue = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._CheckMethod = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Remark = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._PrimeIncludeMinBorder = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._PrimeIncludeMaxBorder = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._GoodIncludeMinBorder = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._GoodIncludeMaxBorder = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Version = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._LatestFlag = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._ActivateFlag = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._DeleteFlag = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._LastDate = this.GetDateTime(reader, 22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._GoodDisplayValue = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._PrimeDisplayValue = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._InputGoodMaxValue = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._InputGoodMinValue = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._InputPrimeMaxValue = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._InputPrimeMinValue = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._OrderID = reader.GetInt32(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._TeXing = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._MinMaxValue = reader.GetDecimal(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._MinMinValue = reader.GetDecimal(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._MinOperator = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._MinTextValue = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._MinIncludeMinBorder = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._MinIncludeMaxBorder = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._MinDisplayValue = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._InputMinMaxValue = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._InputMinMinValue = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._MaxMaxValue = reader.GetDecimal(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._MaxMinValue = reader.GetDecimal(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._MaxOperator = reader.GetString(42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._MaxTextValue = reader.GetString(43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._MaxIncludeMinBorder = reader.GetString(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._MaxIncludeMaxBorder = reader.GetString(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._MaxDisplayValue = reader.GetString(46);
            }
            if ((false == reader.IsDBNull(47))) {
                this._InputMaxMaxValue = reader.GetString(47);
            }
            if ((false == reader.IsDBNull(48))) {
                this._InputMaxMinValue = reader.GetString(48);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ItemDetailId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MaterialCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ItemId = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Frequency = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._PrimeMaxValue = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._PrimeMinValue = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._PrimeOperator = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._PrimeTextValue = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._GoodMaxValue = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._GoodMinValue = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._GoodOperator = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._GoodTextValue = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._CheckMethod = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Remark = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._PrimeIncludeMinBorder = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._PrimeIncludeMaxBorder = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._GoodIncludeMinBorder = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._GoodIncludeMaxBorder = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Version = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._LatestFlag = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._ActivateFlag = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._DeleteFlag = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._LastDate = this.GetDateTime(row, 22);
            }
            if ((false == row.IsNull(23))) {
                this._GoodDisplayValue = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._PrimeDisplayValue = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._InputGoodMaxValue = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._InputGoodMinValue = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._InputPrimeMaxValue = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._InputPrimeMinValue = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._OrderID = ((System.Nullable<int>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._TeXing = ((string)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._MinMaxValue = ((System.Nullable<decimal>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._MinMinValue = ((System.Nullable<decimal>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._MinOperator = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._MinTextValue = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._MinIncludeMinBorder = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._MinIncludeMaxBorder = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._MinDisplayValue = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._InputMinMaxValue = ((string)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._InputMinMinValue = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._MaxMaxValue = ((System.Nullable<decimal>)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._MaxMinValue = ((System.Nullable<decimal>)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._MaxOperator = ((string)(row[42]));
            }
            if ((false == row.IsNull(43))) {
                this._MaxTextValue = ((string)(row[43]));
            }
            if ((false == row.IsNull(44))) {
                this._MaxIncludeMinBorder = ((string)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._MaxIncludeMaxBorder = ((string)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._MaxDisplayValue = ((string)(row[46]));
            }
            if ((false == row.IsNull(47))) {
                this._InputMaxMaxValue = ((string)(row[47]));
            }
            if ((false == row.IsNull(48))) {
                this._InputMaxMinValue = ((string)(row[48]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmcCheckItemDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmcCheckItemDetail)(obj)).isAttached) 
                        && (this.ItemDetailId == ((global::Mesnac.Entity.QmcCheckItemDetail)(obj)).ItemDetailId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ItemDetailId = new NBear.Common.PropertyItem("ItemDetailId", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _ItemId = new NBear.Common.PropertyItem("ItemId", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _Frequency = new NBear.Common.PropertyItem("Frequency", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeMaxValue = new NBear.Common.PropertyItem("PrimeMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeMinValue = new NBear.Common.PropertyItem("PrimeMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeOperator = new NBear.Common.PropertyItem("PrimeOperator", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeTextValue = new NBear.Common.PropertyItem("PrimeTextValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodMaxValue = new NBear.Common.PropertyItem("GoodMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodMinValue = new NBear.Common.PropertyItem("GoodMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodOperator = new NBear.Common.PropertyItem("GoodOperator", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodTextValue = new NBear.Common.PropertyItem("GoodTextValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _CheckMethod = new NBear.Common.PropertyItem("CheckMethod", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeIncludeMinBorder = new NBear.Common.PropertyItem("PrimeIncludeMinBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeIncludeMaxBorder = new NBear.Common.PropertyItem("PrimeIncludeMaxBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodIncludeMinBorder = new NBear.Common.PropertyItem("GoodIncludeMinBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodIncludeMaxBorder = new NBear.Common.PropertyItem("GoodIncludeMaxBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _Version = new NBear.Common.PropertyItem("Version", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _LatestFlag = new NBear.Common.PropertyItem("LatestFlag", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _ActivateFlag = new NBear.Common.PropertyItem("ActivateFlag", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _LastDate = new NBear.Common.PropertyItem("LastDate", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _GoodDisplayValue = new NBear.Common.PropertyItem("GoodDisplayValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _PrimeDisplayValue = new NBear.Common.PropertyItem("PrimeDisplayValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputGoodMaxValue = new NBear.Common.PropertyItem("InputGoodMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputGoodMinValue = new NBear.Common.PropertyItem("InputGoodMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputPrimeMaxValue = new NBear.Common.PropertyItem("InputPrimeMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputPrimeMinValue = new NBear.Common.PropertyItem("InputPrimeMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _TeXing = new NBear.Common.PropertyItem("TeXing", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinMaxValue = new NBear.Common.PropertyItem("MinMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinMinValue = new NBear.Common.PropertyItem("MinMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinOperator = new NBear.Common.PropertyItem("MinOperator", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinTextValue = new NBear.Common.PropertyItem("MinTextValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinIncludeMinBorder = new NBear.Common.PropertyItem("MinIncludeMinBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinIncludeMaxBorder = new NBear.Common.PropertyItem("MinIncludeMaxBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MinDisplayValue = new NBear.Common.PropertyItem("MinDisplayValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputMinMaxValue = new NBear.Common.PropertyItem("InputMinMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputMinMinValue = new NBear.Common.PropertyItem("InputMinMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxMaxValue = new NBear.Common.PropertyItem("MaxMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxMinValue = new NBear.Common.PropertyItem("MaxMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxOperator = new NBear.Common.PropertyItem("MaxOperator", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxTextValue = new NBear.Common.PropertyItem("MaxTextValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxIncludeMinBorder = new NBear.Common.PropertyItem("MaxIncludeMinBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxIncludeMaxBorder = new NBear.Common.PropertyItem("MaxIncludeMaxBorder", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _MaxDisplayValue = new NBear.Common.PropertyItem("MaxDisplayValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputMaxMaxValue = new NBear.Common.PropertyItem("InputMaxMaxValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            protected NBear.Common.PropertyItem _InputMaxMinValue = new NBear.Common.PropertyItem("InputMaxMinValue", "Mesnac.Entity.QmcCheckItemDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ItemDetailId {
                get {
                    if ((aliasName == null)) {
                        return _ItemDetailId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemDetailId", _ItemDetailId.EntityConfiguration, _ItemDetailId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemId {
                get {
                    if ((aliasName == null)) {
                        return _ItemId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemId", _ItemId.EntityConfiguration, _ItemId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Frequency {
                get {
                    if ((aliasName == null)) {
                        return _Frequency;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Frequency", _Frequency.EntityConfiguration, _Frequency.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _PrimeMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeMaxValue", _PrimeMaxValue.EntityConfiguration, _PrimeMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeMinValue {
                get {
                    if ((aliasName == null)) {
                        return _PrimeMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeMinValue", _PrimeMinValue.EntityConfiguration, _PrimeMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeOperator {
                get {
                    if ((aliasName == null)) {
                        return _PrimeOperator;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeOperator", _PrimeOperator.EntityConfiguration, _PrimeOperator.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeTextValue {
                get {
                    if ((aliasName == null)) {
                        return _PrimeTextValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeTextValue", _PrimeTextValue.EntityConfiguration, _PrimeTextValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _GoodMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodMaxValue", _GoodMaxValue.EntityConfiguration, _GoodMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodMinValue {
                get {
                    if ((aliasName == null)) {
                        return _GoodMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodMinValue", _GoodMinValue.EntityConfiguration, _GoodMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodOperator {
                get {
                    if ((aliasName == null)) {
                        return _GoodOperator;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodOperator", _GoodOperator.EntityConfiguration, _GoodOperator.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodTextValue {
                get {
                    if ((aliasName == null)) {
                        return _GoodTextValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodTextValue", _GoodTextValue.EntityConfiguration, _GoodTextValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckMethod {
                get {
                    if ((aliasName == null)) {
                        return _CheckMethod;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckMethod", _CheckMethod.EntityConfiguration, _CheckMethod.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeIncludeMinBorder {
                get {
                    if ((aliasName == null)) {
                        return _PrimeIncludeMinBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeIncludeMinBorder", _PrimeIncludeMinBorder.EntityConfiguration, _PrimeIncludeMinBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeIncludeMaxBorder {
                get {
                    if ((aliasName == null)) {
                        return _PrimeIncludeMaxBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeIncludeMaxBorder", _PrimeIncludeMaxBorder.EntityConfiguration, _PrimeIncludeMaxBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodIncludeMinBorder {
                get {
                    if ((aliasName == null)) {
                        return _GoodIncludeMinBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodIncludeMinBorder", _GoodIncludeMinBorder.EntityConfiguration, _GoodIncludeMinBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodIncludeMaxBorder {
                get {
                    if ((aliasName == null)) {
                        return _GoodIncludeMaxBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodIncludeMaxBorder", _GoodIncludeMaxBorder.EntityConfiguration, _GoodIncludeMaxBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Version {
                get {
                    if ((aliasName == null)) {
                        return _Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Version", _Version.EntityConfiguration, _Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LatestFlag {
                get {
                    if ((aliasName == null)) {
                        return _LatestFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LatestFlag", _LatestFlag.EntityConfiguration, _LatestFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ActivateFlag {
                get {
                    if ((aliasName == null)) {
                        return _ActivateFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ActivateFlag", _ActivateFlag.EntityConfiguration, _ActivateFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastDate {
                get {
                    if ((aliasName == null)) {
                        return _LastDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastDate", _LastDate.EntityConfiguration, _LastDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodDisplayValue {
                get {
                    if ((aliasName == null)) {
                        return _GoodDisplayValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodDisplayValue", _GoodDisplayValue.EntityConfiguration, _GoodDisplayValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeDisplayValue {
                get {
                    if ((aliasName == null)) {
                        return _PrimeDisplayValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeDisplayValue", _PrimeDisplayValue.EntityConfiguration, _PrimeDisplayValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputGoodMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _InputGoodMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputGoodMaxValue", _InputGoodMaxValue.EntityConfiguration, _InputGoodMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputGoodMinValue {
                get {
                    if ((aliasName == null)) {
                        return _InputGoodMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputGoodMinValue", _InputGoodMinValue.EntityConfiguration, _InputGoodMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputPrimeMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _InputPrimeMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputPrimeMaxValue", _InputPrimeMaxValue.EntityConfiguration, _InputPrimeMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputPrimeMinValue {
                get {
                    if ((aliasName == null)) {
                        return _InputPrimeMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputPrimeMinValue", _InputPrimeMinValue.EntityConfiguration, _InputPrimeMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TeXing {
                get {
                    if ((aliasName == null)) {
                        return _TeXing;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TeXing", _TeXing.EntityConfiguration, _TeXing.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _MinMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinMaxValue", _MinMaxValue.EntityConfiguration, _MinMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinMinValue {
                get {
                    if ((aliasName == null)) {
                        return _MinMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinMinValue", _MinMinValue.EntityConfiguration, _MinMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinOperator {
                get {
                    if ((aliasName == null)) {
                        return _MinOperator;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinOperator", _MinOperator.EntityConfiguration, _MinOperator.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinTextValue {
                get {
                    if ((aliasName == null)) {
                        return _MinTextValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinTextValue", _MinTextValue.EntityConfiguration, _MinTextValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinIncludeMinBorder {
                get {
                    if ((aliasName == null)) {
                        return _MinIncludeMinBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinIncludeMinBorder", _MinIncludeMinBorder.EntityConfiguration, _MinIncludeMinBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinIncludeMaxBorder {
                get {
                    if ((aliasName == null)) {
                        return _MinIncludeMaxBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinIncludeMaxBorder", _MinIncludeMaxBorder.EntityConfiguration, _MinIncludeMaxBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinDisplayValue {
                get {
                    if ((aliasName == null)) {
                        return _MinDisplayValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinDisplayValue", _MinDisplayValue.EntityConfiguration, _MinDisplayValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputMinMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _InputMinMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputMinMaxValue", _InputMinMaxValue.EntityConfiguration, _InputMinMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputMinMinValue {
                get {
                    if ((aliasName == null)) {
                        return _InputMinMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputMinMinValue", _InputMinMinValue.EntityConfiguration, _InputMinMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _MaxMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxMaxValue", _MaxMaxValue.EntityConfiguration, _MaxMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxMinValue {
                get {
                    if ((aliasName == null)) {
                        return _MaxMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxMinValue", _MaxMinValue.EntityConfiguration, _MaxMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxOperator {
                get {
                    if ((aliasName == null)) {
                        return _MaxOperator;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxOperator", _MaxOperator.EntityConfiguration, _MaxOperator.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxTextValue {
                get {
                    if ((aliasName == null)) {
                        return _MaxTextValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxTextValue", _MaxTextValue.EntityConfiguration, _MaxTextValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxIncludeMinBorder {
                get {
                    if ((aliasName == null)) {
                        return _MaxIncludeMinBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxIncludeMinBorder", _MaxIncludeMinBorder.EntityConfiguration, _MaxIncludeMinBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxIncludeMaxBorder {
                get {
                    if ((aliasName == null)) {
                        return _MaxIncludeMaxBorder;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxIncludeMaxBorder", _MaxIncludeMaxBorder.EntityConfiguration, _MaxIncludeMaxBorder.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxDisplayValue {
                get {
                    if ((aliasName == null)) {
                        return _MaxDisplayValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxDisplayValue", _MaxDisplayValue.EntityConfiguration, _MaxDisplayValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputMaxMaxValue {
                get {
                    if ((aliasName == null)) {
                        return _InputMaxMaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputMaxMaxValue", _InputMaxMaxValue.EntityConfiguration, _InputMaxMaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputMaxMinValue {
                get {
                    if ((aliasName == null)) {
                        return _InputMaxMinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputMaxMinValue", _InputMaxMinValue.EntityConfiguration, _InputMaxMinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
