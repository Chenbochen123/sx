//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmcFactoryNonCheckArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmcFactoryNonCheck> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.QmcFactoryNonCheck\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmcFactoryNonCheck\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"FactoryCode\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"FactoryCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialCode\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"MaterialCode\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"NonCheckNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"NonCh" +
        "eckNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"c" +
        "har(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"NonCheckWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"NonChe" +
        "ckWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TotalNum\" type=" +
        "\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"TotalNum\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"TotalWeight\" type=\"System.Nullable`1[System.Decimal]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"TotalWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]" +
        "\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"ErrorNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ErrorNum\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"MSetNum\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"MSetNum\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"NSetNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"NSetNum\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"CMNNum\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"CMNNum\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n" +
        "</EntityConfiguration>")]
    public partial class QmcFactoryNonCheck : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmcFactoryNonCheckEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _FactoryCode;
        
        protected string _MaterialCode;
        
        protected global::System.Int32? _NonCheckNum;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected global::System.Decimal? _NonCheckWeight;
        
        protected global::System.Int32? _TotalNum;
        
        protected global::System.Decimal? _TotalWeight;
        
        protected global::System.Int32? _ErrorNum;
        
        protected global::System.Int32? _MSetNum;
        
        protected global::System.Int32? _NSetNum;
        
        protected global::System.Int32? _CMNNum;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmcFactoryNonCheck left, global::Mesnac.Entity.QmcFactoryNonCheck right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmcFactoryNonCheck left, global::Mesnac.Entity.QmcFactoryNonCheck right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string FactoryCode {
            get {
                return this._FactoryCode;
            }
            set {
                this.OnPropertyChanged("FactoryCode", this._FactoryCode, value);
                this._FactoryCode = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public global::System.Int32? NonCheckNum {
            get {
                return this._NonCheckNum;
            }
            set {
                this.OnPropertyChanged("NonCheckNum", this._NonCheckNum, value);
                this._NonCheckNum = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.Decimal? NonCheckWeight {
            get {
                return this._NonCheckWeight;
            }
            set {
                this.OnPropertyChanged("NonCheckWeight", this._NonCheckWeight, value);
                this._NonCheckWeight = value;
            }
        }
        
        public global::System.Int32? TotalNum {
            get {
                return this._TotalNum;
            }
            set {
                this.OnPropertyChanged("TotalNum", this._TotalNum, value);
                this._TotalNum = value;
            }
        }
        
        public global::System.Decimal? TotalWeight {
            get {
                return this._TotalWeight;
            }
            set {
                this.OnPropertyChanged("TotalWeight", this._TotalWeight, value);
                this._TotalWeight = value;
            }
        }
        
        public global::System.Int32? ErrorNum {
            get {
                return this._ErrorNum;
            }
            set {
                this.OnPropertyChanged("ErrorNum", this._ErrorNum, value);
                this._ErrorNum = value;
            }
        }
        
        public global::System.Int32? MSetNum {
            get {
                return this._MSetNum;
            }
            set {
                this.OnPropertyChanged("MSetNum", this._MSetNum, value);
                this._MSetNum = value;
            }
        }
        
        public global::System.Int32? NSetNum {
            get {
                return this._NSetNum;
            }
            set {
                this.OnPropertyChanged("NSetNum", this._NSetNum, value);
                this._NSetNum = value;
            }
        }
        
        public global::System.Int32? CMNNum {
            get {
                return this._CMNNum;
            }
            set {
                this.OnPropertyChanged("CMNNum", this._CMNNum, value);
                this._CMNNum = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmcFactoryNonCheck._QmcFactoryNonCheckEntityConfiguration == null)) {
                QmcFactoryNonCheck._QmcFactoryNonCheckEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmcFactoryNonCheck");
            }
            return QmcFactoryNonCheck._QmcFactoryNonCheckEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._FactoryCode,
                    this._MaterialCode,
                    this._NonCheckNum,
                    this._DeleteFlag,
                    this._Remark,
                    this._NonCheckWeight,
                    this._TotalNum,
                    this._TotalWeight,
                    this._ErrorNum,
                    this._MSetNum,
                    this._NSetNum,
                    this._CMNNum};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._FactoryCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MaterialCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._NonCheckNum = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._DeleteFlag = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Remark = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._NonCheckWeight = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._TotalNum = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._TotalWeight = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ErrorNum = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._MSetNum = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._NSetNum = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._CMNNum = reader.GetInt32(12);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._FactoryCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MaterialCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._NonCheckNum = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._DeleteFlag = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Remark = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._NonCheckWeight = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._TotalNum = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._TotalWeight = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ErrorNum = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._MSetNum = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._NSetNum = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._CMNNum = ((System.Nullable<int>)(row[12]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmcFactoryNonCheck).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmcFactoryNonCheck)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.QmcFactoryNonCheck)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _FactoryCode = new NBear.Common.PropertyItem("FactoryCode", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _NonCheckNum = new NBear.Common.PropertyItem("NonCheckNum", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _NonCheckWeight = new NBear.Common.PropertyItem("NonCheckWeight", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _TotalNum = new NBear.Common.PropertyItem("TotalNum", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _TotalWeight = new NBear.Common.PropertyItem("TotalWeight", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _ErrorNum = new NBear.Common.PropertyItem("ErrorNum", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _MSetNum = new NBear.Common.PropertyItem("MSetNum", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _NSetNum = new NBear.Common.PropertyItem("NSetNum", "Mesnac.Entity.QmcFactoryNonCheck");
            
            protected NBear.Common.PropertyItem _CMNNum = new NBear.Common.PropertyItem("CMNNum", "Mesnac.Entity.QmcFactoryNonCheck");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FactoryCode {
                get {
                    if ((aliasName == null)) {
                        return _FactoryCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FactoryCode", _FactoryCode.EntityConfiguration, _FactoryCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NonCheckNum {
                get {
                    if ((aliasName == null)) {
                        return _NonCheckNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NonCheckNum", _NonCheckNum.EntityConfiguration, _NonCheckNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NonCheckWeight {
                get {
                    if ((aliasName == null)) {
                        return _NonCheckWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NonCheckWeight", _NonCheckWeight.EntityConfiguration, _NonCheckWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TotalNum {
                get {
                    if ((aliasName == null)) {
                        return _TotalNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TotalNum", _TotalNum.EntityConfiguration, _TotalNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TotalWeight {
                get {
                    if ((aliasName == null)) {
                        return _TotalWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TotalWeight", _TotalWeight.EntityConfiguration, _TotalWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErrorNum {
                get {
                    if ((aliasName == null)) {
                        return _ErrorNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErrorNum", _ErrorNum.EntityConfiguration, _ErrorNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MSetNum {
                get {
                    if ((aliasName == null)) {
                        return _MSetNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MSetNum", _MSetNum.EntityConfiguration, _MSetNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NSetNum {
                get {
                    if ((aliasName == null)) {
                        return _NSetNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NSetNum", _NSetNum.EntityConfiguration, _NSetNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CMNNum {
                get {
                    if ((aliasName == null)) {
                        return _CMNNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CMNNum", _CMNNum.EntityConfiguration, _CMNNum.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
