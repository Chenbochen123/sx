//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TblMaterArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.TblMater>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.TblMater\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUp" +
        "date=\"false\" isRelation=\"false\" mappingName=\"TblMater\" batchSize=\"10\">\r\n  <Prope" +
        "rties>\r\n    <Property name=\"Mater_Code\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater" +
        "_Code\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"tru" +
        "e\" isNotNull=\"true\" />\r\n    <Property name=\"Mater_Name\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Mater_Name\" mappingColumnType=\"System.String\" sqlType=\"varchar(40)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_Type\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Mater_Type\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Fac_name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Fac_name\" mappingColumnType=\"System" +
        ".String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"MARK\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(" +
        "1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MA" +
        "RK\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"f" +
        "alse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"O" +
        "bjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Error_allow\" type=\"System.Nullable`1[System." +
        "Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Error_allow\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class TblMater : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TblMaterEntityConfiguration;

        protected string _Mater_Code;

        protected string _Mater_Name;

        protected string _Mater_Type;

        protected string _Fac_name;

        protected string _MARK;

        protected int _ObjID;

        protected global::System.Decimal? _Error_allow;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.TblMater left, global::Mesnac.Entity.TblMater right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.TblMater left, global::Mesnac.Entity.TblMater right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string Mater_Code
        {
            get
            {
                return this._Mater_Code;
            }
            set
            {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }

        public string Mater_Name
        {
            get
            {
                return this._Mater_Name;
            }
            set
            {
                this.OnPropertyChanged("Mater_Name", this._Mater_Name, value);
                this._Mater_Name = value;
            }
        }

        public string Mater_Type
        {
            get
            {
                return this._Mater_Type;
            }
            set
            {
                this.OnPropertyChanged("Mater_Type", this._Mater_Type, value);
                this._Mater_Type = value;
            }
        }

        public string Fac_name
        {
            get
            {
                return this._Fac_name;
            }
            set
            {
                this.OnPropertyChanged("Fac_name", this._Fac_name, value);
                this._Fac_name = value;
            }
        }

        public string MARK
        {
            get
            {
                return this._MARK;
            }
            set
            {
                this.OnPropertyChanged("MARK", this._MARK, value);
                this._MARK = value;
            }
        }

        public int ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public global::System.Decimal? Error_allow
        {
            get
            {
                return this._Error_allow;
            }
            set
            {
                this.OnPropertyChanged("Error_allow", this._Error_allow, value);
                this._Error_allow = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TblMater._TblMaterEntityConfiguration == null))
            {
                TblMater._TblMaterEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.TblMater");
            }
            return TblMater._TblMaterEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._Mater_Code,
                    this._Mater_Name,
                    this._Mater_Type,
                    this._Fac_name,
                    this._MARK,
                    this._ObjID,
                    this._Error_allow};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._Mater_Code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Mater_Name = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Mater_Type = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Fac_name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._MARK = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._ObjID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Error_allow = reader.GetDecimal(6);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._Mater_Code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Mater_Name = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Mater_Type = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Fac_name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._MARK = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._ObjID = ((int)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Error_allow = ((System.Nullable<decimal>)(row[6]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.TblMater).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.TblMater)(obj)).isAttached)
                        && (this.Mater_Code == ((global::Mesnac.Entity.TblMater)(obj)).Mater_Code));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.TblMater");

            protected NBear.Common.PropertyItem _Mater_Name = new NBear.Common.PropertyItem("Mater_Name", "Mesnac.Entity.TblMater");

            protected NBear.Common.PropertyItem _Mater_Type = new NBear.Common.PropertyItem("Mater_Type", "Mesnac.Entity.TblMater");

            protected NBear.Common.PropertyItem _Fac_name = new NBear.Common.PropertyItem("Fac_name", "Mesnac.Entity.TblMater");

            protected NBear.Common.PropertyItem _MARK = new NBear.Common.PropertyItem("MARK", "Mesnac.Entity.TblMater");

            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.TblMater");

            protected NBear.Common.PropertyItem _Error_allow = new NBear.Common.PropertyItem("Error_allow", "Mesnac.Entity.TblMater");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem Mater_Code
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mater_Code;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Mater_Name
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mater_Name;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mater_Name", _Mater_Name.EntityConfiguration, _Mater_Name.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Mater_Type
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mater_Type;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mater_Type", _Mater_Type.EntityConfiguration, _Mater_Type.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Fac_name
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Fac_name;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Fac_name", _Fac_name.EntityConfiguration, _Fac_name.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MARK
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MARK;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MARK", _MARK.EntityConfiguration, _MARK.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Error_allow
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Error_allow;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Error_allow", _Error_allow.EntityConfiguration, _Error_allow.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
