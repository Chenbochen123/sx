//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PpmReturnRubberArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmReturnRubber>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmReturnRubber\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmReturnRubber\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimar" +
        "yKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"ShelfBarcode\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"ShelfBarcode\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Barc" +
        "odeStart\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarcodeStart\" map" +
        "pingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"BarcodeEnd\" type=\"System.Nullable`" +
        "1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"BarcodeEnd\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"PlanDate\" type=\"System.DateTime\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanDate\" mappingColu" +
        "mnType=\"System.DateTime\" sqlType=\"datetime\" isPrimaryKey=\"true\" isNotNull=\"true\"" +
        " />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipCode" +
        "\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"ShiftID\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"ShiftID\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"t" +
        "rue\" isNotNull=\"true\" />\r\n    <Property name=\"ShiftClassID\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"ShiftClassID\" mappingColumnType=\"System.String\" sqlType=\"char(1)\"" +
        " isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"MaterCode\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"MaterCode\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Ret" +
        "urnWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ReturnWeight\" " +
        "mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealWeight\" type=\"System." +
        "Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"RealWeight\" mappingColumnType=\"System." +
        "Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"OperDate\" type=\"System.Nullable`1[System.DateTime]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"OperDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" " +
        "sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"BackFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"BackFlag\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"CustCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CustCode\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"OperPerson\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OperPe" +
        "rson\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"ReturnReason\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"ReturnReason\" mappingColumnType=\"System.String\" sqlType=\"nvarchar" +
        "(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StockType\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"StockType\" mappingColumnType=\"System.String\"" +
        " sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"ProdDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ProdDate\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StockInSign\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"StockInSign\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"StockNo\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StockNo\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Mem_Note\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Mem_Note\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"PrintDate\" type=\"System.Nullabl" +
        "e`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"PrintDate\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"ValidDate\" type=\"System.Nullable`1[System.DateTime]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"ValidDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sql" +
        "Type=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"D" +
        "eleteFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" " +
        "mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"WorkShopCode\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"WorkShopCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(5)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PpmReturnRubber : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PpmReturnRubberEntityConfiguration;

        protected string _Barcode;

        protected string _ShelfBarcode;

        protected global::System.Int32? _BarcodeStart;

        protected global::System.Int32? _BarcodeEnd;

        protected global::System.DateTime _PlanDate;

        protected string _EquipCode;

        protected string _ShiftID;

        protected string _ShiftClassID;

        protected string _MaterCode;

        protected global::System.Decimal? _ReturnWeight;

        protected global::System.Decimal? _RealWeight;

        protected global::System.DateTime? _OperDate;

        protected string _BackFlag;

        protected string _CustCode;

        protected string _OperPerson;

        protected string _ReturnReason;

        protected string _StockType;

        protected global::System.DateTime? _ProdDate;

        protected global::System.Int32? _StockInSign;

        protected string _StockNo;

        protected string _Mem_Note;

        protected global::System.DateTime? _PrintDate;

        protected global::System.DateTime? _ValidDate;

        protected string _DeleteFlag;

        protected string _WorkShopCode;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PpmReturnRubber left, global::Mesnac.Entity.PpmReturnRubber right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PpmReturnRubber left, global::Mesnac.Entity.PpmReturnRubber right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string Barcode
        {
            get
            {
                return this._Barcode;
            }
            set
            {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }

        public string ShelfBarcode
        {
            get
            {
                return this._ShelfBarcode;
            }
            set
            {
                this.OnPropertyChanged("ShelfBarcode", this._ShelfBarcode, value);
                this._ShelfBarcode = value;
            }
        }

        public global::System.Int32? BarcodeStart
        {
            get
            {
                return this._BarcodeStart;
            }
            set
            {
                this.OnPropertyChanged("BarcodeStart", this._BarcodeStart, value);
                this._BarcodeStart = value;
            }
        }

        public global::System.Int32? BarcodeEnd
        {
            get
            {
                return this._BarcodeEnd;
            }
            set
            {
                this.OnPropertyChanged("BarcodeEnd", this._BarcodeEnd, value);
                this._BarcodeEnd = value;
            }
        }

        public global::System.DateTime PlanDate
        {
            get
            {
                return this._PlanDate;
            }
            set
            {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public string ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public string ShiftClassID
        {
            get
            {
                return this._ShiftClassID;
            }
            set
            {
                this.OnPropertyChanged("ShiftClassID", this._ShiftClassID, value);
                this._ShiftClassID = value;
            }
        }

        public string MaterCode
        {
            get
            {
                return this._MaterCode;
            }
            set
            {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }

        public global::System.Decimal? ReturnWeight
        {
            get
            {
                return this._ReturnWeight;
            }
            set
            {
                this.OnPropertyChanged("ReturnWeight", this._ReturnWeight, value);
                this._ReturnWeight = value;
            }
        }

        public global::System.Decimal? RealWeight
        {
            get
            {
                return this._RealWeight;
            }
            set
            {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }

        public global::System.DateTime? OperDate
        {
            get
            {
                return this._OperDate;
            }
            set
            {
                this.OnPropertyChanged("OperDate", this._OperDate, value);
                this._OperDate = value;
            }
        }

        public string BackFlag
        {
            get
            {
                return this._BackFlag;
            }
            set
            {
                this.OnPropertyChanged("BackFlag", this._BackFlag, value);
                this._BackFlag = value;
            }
        }

        public string CustCode
        {
            get
            {
                return this._CustCode;
            }
            set
            {
                this.OnPropertyChanged("CustCode", this._CustCode, value);
                this._CustCode = value;
            }
        }

        public string OperPerson
        {
            get
            {
                return this._OperPerson;
            }
            set
            {
                this.OnPropertyChanged("OperPerson", this._OperPerson, value);
                this._OperPerson = value;
            }
        }

        public string ReturnReason
        {
            get
            {
                return this._ReturnReason;
            }
            set
            {
                this.OnPropertyChanged("ReturnReason", this._ReturnReason, value);
                this._ReturnReason = value;
            }
        }

        public string StockType
        {
            get
            {
                return this._StockType;
            }
            set
            {
                this.OnPropertyChanged("StockType", this._StockType, value);
                this._StockType = value;
            }
        }

        public global::System.DateTime? ProdDate
        {
            get
            {
                return this._ProdDate;
            }
            set
            {
                this.OnPropertyChanged("ProdDate", this._ProdDate, value);
                this._ProdDate = value;
            }
        }

        public global::System.Int32? StockInSign
        {
            get
            {
                return this._StockInSign;
            }
            set
            {
                this.OnPropertyChanged("StockInSign", this._StockInSign, value);
                this._StockInSign = value;
            }
        }

        public string StockNo
        {
            get
            {
                return this._StockNo;
            }
            set
            {
                this.OnPropertyChanged("StockNo", this._StockNo, value);
                this._StockNo = value;
            }
        }

        public string Mem_Note
        {
            get
            {
                return this._Mem_Note;
            }
            set
            {
                this.OnPropertyChanged("Mem_Note", this._Mem_Note, value);
                this._Mem_Note = value;
            }
        }

        public global::System.DateTime? PrintDate
        {
            get
            {
                return this._PrintDate;
            }
            set
            {
                this.OnPropertyChanged("PrintDate", this._PrintDate, value);
                this._PrintDate = value;
            }
        }

        public global::System.DateTime? ValidDate
        {
            get
            {
                return this._ValidDate;
            }
            set
            {
                this.OnPropertyChanged("ValidDate", this._ValidDate, value);
                this._ValidDate = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string WorkShopCode
        {
            get
            {
                return this._WorkShopCode;
            }
            set
            {
                this.OnPropertyChanged("WorkShopCode", this._WorkShopCode, value);
                this._WorkShopCode = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PpmReturnRubber._PpmReturnRubberEntityConfiguration == null))
            {
                PpmReturnRubber._PpmReturnRubberEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmReturnRubber");
            }
            return PpmReturnRubber._PpmReturnRubberEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._Barcode,
                    this._ShelfBarcode,
                    this._BarcodeStart,
                    this._BarcodeEnd,
                    this._PlanDate,
                    this._EquipCode,
                    this._ShiftID,
                    this._ShiftClassID,
                    this._MaterCode,
                    this._ReturnWeight,
                    this._RealWeight,
                    this._OperDate,
                    this._BackFlag,
                    this._CustCode,
                    this._OperPerson,
                    this._ReturnReason,
                    this._StockType,
                    this._ProdDate,
                    this._StockInSign,
                    this._StockNo,
                    this._Mem_Note,
                    this._PrintDate,
                    this._ValidDate,
                    this._DeleteFlag,
                    this._WorkShopCode};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ShelfBarcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._BarcodeStart = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._BarcodeEnd = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._PlanDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._EquipCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ShiftID = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ShiftClassID = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._MaterCode = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ReturnWeight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._RealWeight = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._OperDate = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._BackFlag = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._CustCode = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._OperPerson = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._ReturnReason = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._StockType = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._ProdDate = this.GetDateTime(reader, 17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._StockInSign = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._StockNo = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._Mem_Note = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._PrintDate = this.GetDateTime(reader, 21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._ValidDate = this.GetDateTime(reader, 22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._DeleteFlag = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._WorkShopCode = reader.GetString(24);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ShelfBarcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._BarcodeStart = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._BarcodeEnd = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._PlanDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._EquipCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ShiftID = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ShiftClassID = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._MaterCode = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._ReturnWeight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._RealWeight = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._OperDate = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12)))
            {
                this._BackFlag = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._CustCode = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._OperPerson = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._ReturnReason = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._StockType = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._ProdDate = this.GetDateTime(row, 17);
            }
            if ((false == row.IsNull(18)))
            {
                this._StockInSign = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._StockNo = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._Mem_Note = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._PrintDate = this.GetDateTime(row, 21);
            }
            if ((false == row.IsNull(22)))
            {
                this._ValidDate = this.GetDateTime(row, 22);
            }
            if ((false == row.IsNull(23)))
            {
                this._DeleteFlag = ((string)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._WorkShopCode = ((string)(row[24]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmReturnRubber).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return (((((((this.isAttached && ((global::Mesnac.Entity.PpmReturnRubber)(obj)).isAttached)
                        && (this.Barcode == ((global::Mesnac.Entity.PpmReturnRubber)(obj)).Barcode))
                        && (this.PlanDate == ((global::Mesnac.Entity.PpmReturnRubber)(obj)).PlanDate))
                        && (this.EquipCode == ((global::Mesnac.Entity.PpmReturnRubber)(obj)).EquipCode))
                        && (this.ShiftID == ((global::Mesnac.Entity.PpmReturnRubber)(obj)).ShiftID))
                        && (this.ShiftClassID == ((global::Mesnac.Entity.PpmReturnRubber)(obj)).ShiftClassID))
                        && (this.MaterCode == ((global::Mesnac.Entity.PpmReturnRubber)(obj)).MaterCode));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ShelfBarcode = new NBear.Common.PropertyItem("ShelfBarcode", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _BarcodeStart = new NBear.Common.PropertyItem("BarcodeStart", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _BarcodeEnd = new NBear.Common.PropertyItem("BarcodeEnd", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ShiftClassID = new NBear.Common.PropertyItem("ShiftClassID", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ReturnWeight = new NBear.Common.PropertyItem("ReturnWeight", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _OperDate = new NBear.Common.PropertyItem("OperDate", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _BackFlag = new NBear.Common.PropertyItem("BackFlag", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _CustCode = new NBear.Common.PropertyItem("CustCode", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _OperPerson = new NBear.Common.PropertyItem("OperPerson", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ReturnReason = new NBear.Common.PropertyItem("ReturnReason", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _StockType = new NBear.Common.PropertyItem("StockType", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ProdDate = new NBear.Common.PropertyItem("ProdDate", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _StockInSign = new NBear.Common.PropertyItem("StockInSign", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _StockNo = new NBear.Common.PropertyItem("StockNo", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _Mem_Note = new NBear.Common.PropertyItem("Mem_Note", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _PrintDate = new NBear.Common.PropertyItem("PrintDate", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _ValidDate = new NBear.Common.PropertyItem("ValidDate", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PpmReturnRubber");

            protected NBear.Common.PropertyItem _WorkShopCode = new NBear.Common.PropertyItem("WorkShopCode", "Mesnac.Entity.PpmReturnRubber");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem Barcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Barcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShelfBarcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShelfBarcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShelfBarcode", _ShelfBarcode.EntityConfiguration, _ShelfBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarcodeStart
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarcodeStart;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarcodeStart", _BarcodeStart.EntityConfiguration, _BarcodeStart.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarcodeEnd
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarcodeEnd;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarcodeEnd", _BarcodeEnd.EntityConfiguration, _BarcodeEnd.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftClassID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftClassID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftClassID", _ShiftClassID.EntityConfiguration, _ShiftClassID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturnWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturnWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturnWeight", _ReturnWeight.EntityConfiguration, _ReturnWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OperDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OperDate", _OperDate.EntityConfiguration, _OperDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BackFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BackFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BackFlag", _BackFlag.EntityConfiguration, _BackFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CustCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CustCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CustCode", _CustCode.EntityConfiguration, _CustCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OperPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OperPerson", _OperPerson.EntityConfiguration, _OperPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturnReason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturnReason;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturnReason", _ReturnReason.EntityConfiguration, _ReturnReason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StockType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StockType;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StockType", _StockType.EntityConfiguration, _StockType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ProdDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProdDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ProdDate", _ProdDate.EntityConfiguration, _ProdDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StockInSign
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StockInSign;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StockInSign", _StockInSign.EntityConfiguration, _StockInSign.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StockNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StockNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StockNo", _StockNo.EntityConfiguration, _StockNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Mem_Note
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mem_Note;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mem_Note", _Mem_Note.EntityConfiguration, _Mem_Note.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PrintDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PrintDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PrintDate", _PrintDate.EntityConfiguration, _PrintDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ValidDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ValidDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ValidDate", _ValidDate.EntityConfiguration, _ValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem WorkShopCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _WorkShopCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("WorkShopCode", _WorkShopCode.EntityConfiguration, _WorkShopCode.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
