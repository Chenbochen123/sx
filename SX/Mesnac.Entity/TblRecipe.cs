//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class TblRecipeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.TblRecipe> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.TblRecipe\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"TblRecipe\" batchSize=\"10\">\r\n  <Pro" +
        "perties>\r\n    <Property name=\"Mater_code\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mat" +
        "er_code\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"t" +
        "rue\" isNotNull=\"true\" />\r\n    <Property name=\"Equip_code\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Equip_code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isP" +
        "rimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Edt_code\" type=\"System" +
        ".Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Edt_code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" i" +
        "sPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Recipe_type\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Recipe_type\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"varchar(5)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mod" +
        "ify_time\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Modify_time\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Shelf_num\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Sh" +
        "elf_num\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_weigh\" type=\"Syste" +
        "m.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Set_weigh\" mappingColumnType=\"System" +
        ".Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"CB_RecycleType\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"CB_RecycleType\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CB_RecycleTime\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"CB_RecycleTime\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"OverTemp_MinTime\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"OverTemp_MinTime\" mappingColumnType=\"System.Nullable`1[System.I" +
        "nt32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"OverTime_Time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OverTime" +
        "_Time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OverTemp_Temp\" type=\"Sys" +
        "tem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"OverTemp_Temp\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"Max_InPloyTemp\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" sqlDefaultValue=\"(200)\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Max_InPloyTemp\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Min_InPloyTemp\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" sqlDefaultValue=\"(30)\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Min_InPloyTemp\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Is_UseAreaTemp\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Is_Use" +
        "AreaTemp\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Side_Temp\" type=\"System.Nullable`1[" +
        "System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Side_Temp\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Roll_Temp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Roll_Te" +
        "mp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ddoor_Temp\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Ddoor_Temp\" mappingColumnType=\"System.Null" +
        "able`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"MakeUp_Temp\" type=\"System.Nullable`1[System.Int32]\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"MakeUp_Temp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"i" +
        "nt\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IsRecycle\" ty" +
        "pe=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsRecycle\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Modify_Flag\" type=\"System.String\" isInherited=\"false\" sqlDe" +
        "faultValue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Modify_Flag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ObjID\" type=\"System.I" +
        "nt32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Packweight\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Packweight\" mappingColumnType=\"System.String\" sqlType=\"va" +
        "rchar(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SAP_Ve" +
        "rsionID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"SAP_VersionID\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"B_Version\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"B_Version\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"R_Version\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"R_Version\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"S_Factory\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"S_Factory\" mappingColumnType=\"System.String\" sqlType=\"varchar(5" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DisChangeTime\"" +
        " type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DisChangeTime\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Routing_type\" type=\"System.Int32\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Routing_type\" mappingColumnType=\"System.Int32\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"JieDuan\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"JieDuan\" mappingColumnType=\"System.String\" sql" +
        "Type=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n<" +
        "/EntityConfiguration>")]
    public partial class TblRecipe : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _TblRecipeEntityConfiguration;
        
        protected string _Mater_code;
        
        protected string _Equip_code;
        
        protected int _Edt_code;
        
        protected string _Recipe_type;
        
        protected string _Modify_time;
        
        protected global::System.Int32? _Shelf_num;
        
        protected global::System.Decimal? _Set_weigh;
        
        protected string _CB_RecycleType;
        
        protected global::System.Int32? _CB_RecycleTime;
        
        protected global::System.Int32? _OverTemp_MinTime;
        
        protected global::System.Int32? _OverTime_Time;
        
        protected global::System.Int32? _OverTemp_Temp;
        
        protected global::System.Int32? _Max_InPloyTemp;
        
        protected global::System.Int32? _Min_InPloyTemp;
        
        protected string _Is_UseAreaTemp;
        
        protected global::System.Int32? _Side_Temp;
        
        protected global::System.Int32? _Roll_Temp;
        
        protected global::System.Int32? _Ddoor_Temp;
        
        protected global::System.Int32? _MakeUp_Temp;
        
        protected string _IsRecycle;
        
        protected string _Modify_Flag;
        
        protected int _ObjID;
        
        protected string _Packweight;
        
        protected string _SAP_VersionID;
        
        protected string _B_Version;
        
        protected string _R_Version;
        
        protected string _S_Factory;
        
        protected global::System.Int32? _DisChangeTime;
        
        protected int _Routing_type;
        
        protected string _JieDuan;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.TblRecipe left, global::Mesnac.Entity.TblRecipe right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.TblRecipe left, global::Mesnac.Entity.TblRecipe right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mater_code {
            get {
                return this._Mater_code;
            }
            set {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public int Edt_code {
            get {
                return this._Edt_code;
            }
            set {
                this.OnPropertyChanged("Edt_code", this._Edt_code, value);
                this._Edt_code = value;
            }
        }
        
        public string Recipe_type {
            get {
                return this._Recipe_type;
            }
            set {
                this.OnPropertyChanged("Recipe_type", this._Recipe_type, value);
                this._Recipe_type = value;
            }
        }
        
        public string Modify_time {
            get {
                return this._Modify_time;
            }
            set {
                this.OnPropertyChanged("Modify_time", this._Modify_time, value);
                this._Modify_time = value;
            }
        }
        
        public global::System.Int32? Shelf_num {
            get {
                return this._Shelf_num;
            }
            set {
                this.OnPropertyChanged("Shelf_num", this._Shelf_num, value);
                this._Shelf_num = value;
            }
        }
        
        public global::System.Decimal? Set_weigh {
            get {
                return this._Set_weigh;
            }
            set {
                this.OnPropertyChanged("Set_weigh", this._Set_weigh, value);
                this._Set_weigh = value;
            }
        }
        
        public string CB_RecycleType {
            get {
                return this._CB_RecycleType;
            }
            set {
                this.OnPropertyChanged("CB_RecycleType", this._CB_RecycleType, value);
                this._CB_RecycleType = value;
            }
        }
        
        public global::System.Int32? CB_RecycleTime {
            get {
                return this._CB_RecycleTime;
            }
            set {
                this.OnPropertyChanged("CB_RecycleTime", this._CB_RecycleTime, value);
                this._CB_RecycleTime = value;
            }
        }
        
        public global::System.Int32? OverTemp_MinTime {
            get {
                return this._OverTemp_MinTime;
            }
            set {
                this.OnPropertyChanged("OverTemp_MinTime", this._OverTemp_MinTime, value);
                this._OverTemp_MinTime = value;
            }
        }
        
        public global::System.Int32? OverTime_Time {
            get {
                return this._OverTime_Time;
            }
            set {
                this.OnPropertyChanged("OverTime_Time", this._OverTime_Time, value);
                this._OverTime_Time = value;
            }
        }
        
        public global::System.Int32? OverTemp_Temp {
            get {
                return this._OverTemp_Temp;
            }
            set {
                this.OnPropertyChanged("OverTemp_Temp", this._OverTemp_Temp, value);
                this._OverTemp_Temp = value;
            }
        }
        
        public global::System.Int32? Max_InPloyTemp {
            get {
                return this._Max_InPloyTemp;
            }
            set {
                this.OnPropertyChanged("Max_InPloyTemp", this._Max_InPloyTemp, value);
                this._Max_InPloyTemp = value;
            }
        }
        
        public global::System.Int32? Min_InPloyTemp {
            get {
                return this._Min_InPloyTemp;
            }
            set {
                this.OnPropertyChanged("Min_InPloyTemp", this._Min_InPloyTemp, value);
                this._Min_InPloyTemp = value;
            }
        }
        
        public string Is_UseAreaTemp {
            get {
                return this._Is_UseAreaTemp;
            }
            set {
                this.OnPropertyChanged("Is_UseAreaTemp", this._Is_UseAreaTemp, value);
                this._Is_UseAreaTemp = value;
            }
        }
        
        public global::System.Int32? Side_Temp {
            get {
                return this._Side_Temp;
            }
            set {
                this.OnPropertyChanged("Side_Temp", this._Side_Temp, value);
                this._Side_Temp = value;
            }
        }
        
        public global::System.Int32? Roll_Temp {
            get {
                return this._Roll_Temp;
            }
            set {
                this.OnPropertyChanged("Roll_Temp", this._Roll_Temp, value);
                this._Roll_Temp = value;
            }
        }
        
        public global::System.Int32? Ddoor_Temp {
            get {
                return this._Ddoor_Temp;
            }
            set {
                this.OnPropertyChanged("Ddoor_Temp", this._Ddoor_Temp, value);
                this._Ddoor_Temp = value;
            }
        }
        
        public global::System.Int32? MakeUp_Temp {
            get {
                return this._MakeUp_Temp;
            }
            set {
                this.OnPropertyChanged("MakeUp_Temp", this._MakeUp_Temp, value);
                this._MakeUp_Temp = value;
            }
        }
        
        public string IsRecycle {
            get {
                return this._IsRecycle;
            }
            set {
                this.OnPropertyChanged("IsRecycle", this._IsRecycle, value);
                this._IsRecycle = value;
            }
        }
        
        public string Modify_Flag {
            get {
                return this._Modify_Flag;
            }
            set {
                this.OnPropertyChanged("Modify_Flag", this._Modify_Flag, value);
                this._Modify_Flag = value;
            }
        }
        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string Packweight {
            get {
                return this._Packweight;
            }
            set {
                this.OnPropertyChanged("Packweight", this._Packweight, value);
                this._Packweight = value;
            }
        }
        
        public string SAP_VersionID {
            get {
                return this._SAP_VersionID;
            }
            set {
                this.OnPropertyChanged("SAP_VersionID", this._SAP_VersionID, value);
                this._SAP_VersionID = value;
            }
        }
        
        public string B_Version {
            get {
                return this._B_Version;
            }
            set {
                this.OnPropertyChanged("B_Version", this._B_Version, value);
                this._B_Version = value;
            }
        }
        
        public string R_Version {
            get {
                return this._R_Version;
            }
            set {
                this.OnPropertyChanged("R_Version", this._R_Version, value);
                this._R_Version = value;
            }
        }
        
        public string S_Factory {
            get {
                return this._S_Factory;
            }
            set {
                this.OnPropertyChanged("S_Factory", this._S_Factory, value);
                this._S_Factory = value;
            }
        }
        
        public global::System.Int32? DisChangeTime {
            get {
                return this._DisChangeTime;
            }
            set {
                this.OnPropertyChanged("DisChangeTime", this._DisChangeTime, value);
                this._DisChangeTime = value;
            }
        }
        
        public int Routing_type {
            get {
                return this._Routing_type;
            }
            set {
                this.OnPropertyChanged("Routing_type", this._Routing_type, value);
                this._Routing_type = value;
            }
        }
        
        public string JieDuan {
            get {
                return this._JieDuan;
            }
            set {
                this.OnPropertyChanged("JieDuan", this._JieDuan, value);
                this._JieDuan = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((TblRecipe._TblRecipeEntityConfiguration == null)) {
                TblRecipe._TblRecipeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.TblRecipe");
            }
            return TblRecipe._TblRecipeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mater_code,
                    this._Equip_code,
                    this._Edt_code,
                    this._Recipe_type,
                    this._Modify_time,
                    this._Shelf_num,
                    this._Set_weigh,
                    this._CB_RecycleType,
                    this._CB_RecycleTime,
                    this._OverTemp_MinTime,
                    this._OverTime_Time,
                    this._OverTemp_Temp,
                    this._Max_InPloyTemp,
                    this._Min_InPloyTemp,
                    this._Is_UseAreaTemp,
                    this._Side_Temp,
                    this._Roll_Temp,
                    this._Ddoor_Temp,
                    this._MakeUp_Temp,
                    this._IsRecycle,
                    this._Modify_Flag,
                    this._ObjID,
                    this._Packweight,
                    this._SAP_VersionID,
                    this._B_Version,
                    this._R_Version,
                    this._S_Factory,
                    this._DisChangeTime,
                    this._Routing_type,
                    this._JieDuan};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mater_code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Edt_code = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Recipe_type = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Modify_time = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Shelf_num = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Set_weigh = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._CB_RecycleType = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._CB_RecycleTime = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._OverTemp_MinTime = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._OverTime_Time = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._OverTemp_Temp = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Max_InPloyTemp = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Min_InPloyTemp = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Is_UseAreaTemp = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Side_Temp = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Roll_Temp = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Ddoor_Temp = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._MakeUp_Temp = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._IsRecycle = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Modify_Flag = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._ObjID = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Packweight = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._SAP_VersionID = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._B_Version = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._R_Version = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._S_Factory = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._DisChangeTime = reader.GetInt32(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Routing_type = reader.GetInt32(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._JieDuan = reader.GetString(29);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mater_code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Edt_code = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Recipe_type = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Modify_time = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Shelf_num = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Set_weigh = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._CB_RecycleType = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._CB_RecycleTime = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._OverTemp_MinTime = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._OverTime_Time = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._OverTemp_Temp = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Max_InPloyTemp = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Min_InPloyTemp = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Is_UseAreaTemp = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Side_Temp = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Roll_Temp = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Ddoor_Temp = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._MakeUp_Temp = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._IsRecycle = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Modify_Flag = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._ObjID = ((int)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Packweight = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._SAP_VersionID = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._B_Version = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._R_Version = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._S_Factory = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._DisChangeTime = ((System.Nullable<int>)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._Routing_type = ((int)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._JieDuan = ((string)(row[29]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.TblRecipe).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((((this.isAttached && ((global::Mesnac.Entity.TblRecipe)(obj)).isAttached) 
                        && (this.Mater_code == ((global::Mesnac.Entity.TblRecipe)(obj)).Mater_code)) 
                        && (this.Equip_code == ((global::Mesnac.Entity.TblRecipe)(obj)).Equip_code)) 
                        && (this.Edt_code == ((global::Mesnac.Entity.TblRecipe)(obj)).Edt_code)) 
                        && (this.Recipe_type == ((global::Mesnac.Entity.TblRecipe)(obj)).Recipe_type)) 
                        && (this.Routing_type == ((global::Mesnac.Entity.TblRecipe)(obj)).Routing_type));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Edt_code = new NBear.Common.PropertyItem("Edt_code", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Recipe_type = new NBear.Common.PropertyItem("Recipe_type", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Modify_time = new NBear.Common.PropertyItem("Modify_time", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Shelf_num = new NBear.Common.PropertyItem("Shelf_num", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Set_weigh = new NBear.Common.PropertyItem("Set_weigh", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _CB_RecycleType = new NBear.Common.PropertyItem("CB_RecycleType", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _CB_RecycleTime = new NBear.Common.PropertyItem("CB_RecycleTime", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _OverTemp_MinTime = new NBear.Common.PropertyItem("OverTemp_MinTime", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _OverTime_Time = new NBear.Common.PropertyItem("OverTime_Time", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _OverTemp_Temp = new NBear.Common.PropertyItem("OverTemp_Temp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Max_InPloyTemp = new NBear.Common.PropertyItem("Max_InPloyTemp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Min_InPloyTemp = new NBear.Common.PropertyItem("Min_InPloyTemp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Is_UseAreaTemp = new NBear.Common.PropertyItem("Is_UseAreaTemp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Side_Temp = new NBear.Common.PropertyItem("Side_Temp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Roll_Temp = new NBear.Common.PropertyItem("Roll_Temp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Ddoor_Temp = new NBear.Common.PropertyItem("Ddoor_Temp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _MakeUp_Temp = new NBear.Common.PropertyItem("MakeUp_Temp", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _IsRecycle = new NBear.Common.PropertyItem("IsRecycle", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Modify_Flag = new NBear.Common.PropertyItem("Modify_Flag", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Packweight = new NBear.Common.PropertyItem("Packweight", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _SAP_VersionID = new NBear.Common.PropertyItem("SAP_VersionID", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _B_Version = new NBear.Common.PropertyItem("B_Version", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _R_Version = new NBear.Common.PropertyItem("R_Version", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _S_Factory = new NBear.Common.PropertyItem("S_Factory", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _DisChangeTime = new NBear.Common.PropertyItem("DisChangeTime", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _Routing_type = new NBear.Common.PropertyItem("Routing_type", "Mesnac.Entity.TblRecipe");
            
            protected NBear.Common.PropertyItem _JieDuan = new NBear.Common.PropertyItem("JieDuan", "Mesnac.Entity.TblRecipe");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mater_code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Edt_code {
                get {
                    if ((aliasName == null)) {
                        return _Edt_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Edt_code", _Edt_code.EntityConfiguration, _Edt_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_type {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_type", _Recipe_type.EntityConfiguration, _Recipe_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Modify_time {
                get {
                    if ((aliasName == null)) {
                        return _Modify_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Modify_time", _Modify_time.EntityConfiguration, _Modify_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelf_num {
                get {
                    if ((aliasName == null)) {
                        return _Shelf_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelf_num", _Shelf_num.EntityConfiguration, _Shelf_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_weigh {
                get {
                    if ((aliasName == null)) {
                        return _Set_weigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_weigh", _Set_weigh.EntityConfiguration, _Set_weigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CB_RecycleType {
                get {
                    if ((aliasName == null)) {
                        return _CB_RecycleType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CB_RecycleType", _CB_RecycleType.EntityConfiguration, _CB_RecycleType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CB_RecycleTime {
                get {
                    if ((aliasName == null)) {
                        return _CB_RecycleTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CB_RecycleTime", _CB_RecycleTime.EntityConfiguration, _CB_RecycleTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTemp_MinTime {
                get {
                    if ((aliasName == null)) {
                        return _OverTemp_MinTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTemp_MinTime", _OverTemp_MinTime.EntityConfiguration, _OverTemp_MinTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTime_Time {
                get {
                    if ((aliasName == null)) {
                        return _OverTime_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTime_Time", _OverTime_Time.EntityConfiguration, _OverTime_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTemp_Temp {
                get {
                    if ((aliasName == null)) {
                        return _OverTemp_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTemp_Temp", _OverTemp_Temp.EntityConfiguration, _OverTemp_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_InPloyTemp {
                get {
                    if ((aliasName == null)) {
                        return _Max_InPloyTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_InPloyTemp", _Max_InPloyTemp.EntityConfiguration, _Max_InPloyTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Min_InPloyTemp {
                get {
                    if ((aliasName == null)) {
                        return _Min_InPloyTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Min_InPloyTemp", _Min_InPloyTemp.EntityConfiguration, _Min_InPloyTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Is_UseAreaTemp {
                get {
                    if ((aliasName == null)) {
                        return _Is_UseAreaTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Is_UseAreaTemp", _Is_UseAreaTemp.EntityConfiguration, _Is_UseAreaTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Side_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Side_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Side_Temp", _Side_Temp.EntityConfiguration, _Side_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Roll_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Roll_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Roll_Temp", _Roll_Temp.EntityConfiguration, _Roll_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ddoor_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Ddoor_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ddoor_Temp", _Ddoor_Temp.EntityConfiguration, _Ddoor_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MakeUp_Temp {
                get {
                    if ((aliasName == null)) {
                        return _MakeUp_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MakeUp_Temp", _MakeUp_Temp.EntityConfiguration, _MakeUp_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsRecycle {
                get {
                    if ((aliasName == null)) {
                        return _IsRecycle;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsRecycle", _IsRecycle.EntityConfiguration, _IsRecycle.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Modify_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Modify_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Modify_Flag", _Modify_Flag.EntityConfiguration, _Modify_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Packweight {
                get {
                    if ((aliasName == null)) {
                        return _Packweight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Packweight", _Packweight.EntityConfiguration, _Packweight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAP_VersionID {
                get {
                    if ((aliasName == null)) {
                        return _SAP_VersionID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAP_VersionID", _SAP_VersionID.EntityConfiguration, _SAP_VersionID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem B_Version {
                get {
                    if ((aliasName == null)) {
                        return _B_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("B_Version", _B_Version.EntityConfiguration, _B_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem R_Version {
                get {
                    if ((aliasName == null)) {
                        return _R_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("R_Version", _R_Version.EntityConfiguration, _R_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem S_Factory {
                get {
                    if ((aliasName == null)) {
                        return _S_Factory;
                    }
                    else {
                        return new NBear.Common.PropertyItem("S_Factory", _S_Factory.EntityConfiguration, _S_Factory.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DisChangeTime {
                get {
                    if ((aliasName == null)) {
                        return _DisChangeTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DisChangeTime", _DisChangeTime.EntityConfiguration, _DisChangeTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Routing_type {
                get {
                    if ((aliasName == null)) {
                        return _Routing_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Routing_type", _Routing_type.EntityConfiguration, _Routing_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JieDuan {
                get {
                    if ((aliasName == null)) {
                        return _JieDuan;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JieDuan", _JieDuan.EntityConfiguration, _JieDuan.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
