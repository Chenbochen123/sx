//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_LuDaiInfoArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_LuDaiInfo> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_LuDaiInfo\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_LuDaiInfo\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"Serialid\" type=\"System.Int64\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Serialid\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\"" +
        " isNotNull=\"true\" />\r\n    <Property name=\"No\" type=\"System.Nullable`1[System.Int" +
        "32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"No\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Work_Typ" +
        "e\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Work_Type\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Process_name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Process_name\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Equip_name\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"E" +
        "quip_name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Check_content\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Check_content\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Admi" +
        "n_user\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Admin_user\" mappingColumnType=\"System" +
        ".String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Safe_user\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Safe_user\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Check_user\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"C" +
        "heck_user\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"User_num\" type=\"System.Nullab" +
        "le`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"User_num\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Check_hour\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Check_hour\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decim" +
        "al\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Construction\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Construction\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"Cycle\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Cycle\" m" +
        "appingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Safe_measures\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Safe_measures\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"S" +
        "tart_date\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Start_date\" m" +
        "appingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Replace_date\" type=\"Syst" +
        "em.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Replace_date\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Mater_type\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Mater_type\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_num\" type=\"System.N" +
        "ullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Mater_num\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Memo\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Memo\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Workshopname\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Workshopname\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UseDay\" type=\"System.Nul" +
        "lable`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UseDay\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_LuDaiInfo : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_LuDaiInfoEntityConfiguration;
        
        protected long _Serialid;
        
        protected global::System.Int32? _No;
        
        protected string _Work_Type;
        
        protected string _Process_name;
        
        protected string _Equip_name;
        
        protected string _Check_content;
        
        protected string _Admin_user;
        
        protected string _Safe_user;
        
        protected string _Check_user;
        
        protected global::System.Int32? _User_num;
        
        protected global::System.Decimal? _Check_hour;
        
        protected string _Construction;
        
        protected global::System.Decimal? _Cycle;
        
        protected string _Safe_measures;
        
        protected global::System.DateTime? _Start_date;
        
        protected global::System.DateTime? _Replace_date;
        
        protected string _Mater_type;
        
        protected global::System.Decimal? _Mater_num;
        
        protected string _Memo;
        
        protected string _Workshopname;
        
        protected global::System.Decimal? _UseDay;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_LuDaiInfo left, global::Mesnac.Entity.Eqm_LuDaiInfo right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_LuDaiInfo left, global::Mesnac.Entity.Eqm_LuDaiInfo right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public global::System.Int32? No {
            get {
                return this._No;
            }
            set {
                this.OnPropertyChanged("No", this._No, value);
                this._No = value;
            }
        }
        
        public string Work_Type {
            get {
                return this._Work_Type;
            }
            set {
                this.OnPropertyChanged("Work_Type", this._Work_Type, value);
                this._Work_Type = value;
            }
        }
        
        public string Process_name {
            get {
                return this._Process_name;
            }
            set {
                this.OnPropertyChanged("Process_name", this._Process_name, value);
                this._Process_name = value;
            }
        }
        
        public string Equip_name {
            get {
                return this._Equip_name;
            }
            set {
                this.OnPropertyChanged("Equip_name", this._Equip_name, value);
                this._Equip_name = value;
            }
        }
        
        public string Check_content {
            get {
                return this._Check_content;
            }
            set {
                this.OnPropertyChanged("Check_content", this._Check_content, value);
                this._Check_content = value;
            }
        }
        
        public string Admin_user {
            get {
                return this._Admin_user;
            }
            set {
                this.OnPropertyChanged("Admin_user", this._Admin_user, value);
                this._Admin_user = value;
            }
        }
        
        public string Safe_user {
            get {
                return this._Safe_user;
            }
            set {
                this.OnPropertyChanged("Safe_user", this._Safe_user, value);
                this._Safe_user = value;
            }
        }
        
        public string Check_user {
            get {
                return this._Check_user;
            }
            set {
                this.OnPropertyChanged("Check_user", this._Check_user, value);
                this._Check_user = value;
            }
        }
        
        public global::System.Int32? User_num {
            get {
                return this._User_num;
            }
            set {
                this.OnPropertyChanged("User_num", this._User_num, value);
                this._User_num = value;
            }
        }
        
        public global::System.Decimal? Check_hour {
            get {
                return this._Check_hour;
            }
            set {
                this.OnPropertyChanged("Check_hour", this._Check_hour, value);
                this._Check_hour = value;
            }
        }
        
        public string Construction {
            get {
                return this._Construction;
            }
            set {
                this.OnPropertyChanged("Construction", this._Construction, value);
                this._Construction = value;
            }
        }
        
        public global::System.Decimal? Cycle {
            get {
                return this._Cycle;
            }
            set {
                this.OnPropertyChanged("Cycle", this._Cycle, value);
                this._Cycle = value;
            }
        }
        
        public string Safe_measures {
            get {
                return this._Safe_measures;
            }
            set {
                this.OnPropertyChanged("Safe_measures", this._Safe_measures, value);
                this._Safe_measures = value;
            }
        }
        
        public global::System.DateTime? Start_date {
            get {
                return this._Start_date;
            }
            set {
                this.OnPropertyChanged("Start_date", this._Start_date, value);
                this._Start_date = value;
            }
        }
        
        public global::System.DateTime? Replace_date {
            get {
                return this._Replace_date;
            }
            set {
                this.OnPropertyChanged("Replace_date", this._Replace_date, value);
                this._Replace_date = value;
            }
        }
        
        public string Mater_type {
            get {
                return this._Mater_type;
            }
            set {
                this.OnPropertyChanged("Mater_type", this._Mater_type, value);
                this._Mater_type = value;
            }
        }
        
        public global::System.Decimal? Mater_num {
            get {
                return this._Mater_num;
            }
            set {
                this.OnPropertyChanged("Mater_num", this._Mater_num, value);
                this._Mater_num = value;
            }
        }
        
        public string Memo {
            get {
                return this._Memo;
            }
            set {
                this.OnPropertyChanged("Memo", this._Memo, value);
                this._Memo = value;
            }
        }
        
        public string Workshopname {
            get {
                return this._Workshopname;
            }
            set {
                this.OnPropertyChanged("Workshopname", this._Workshopname, value);
                this._Workshopname = value;
            }
        }
        
        public global::System.Decimal? UseDay {
            get {
                return this._UseDay;
            }
            set {
                this.OnPropertyChanged("UseDay", this._UseDay, value);
                this._UseDay = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_LuDaiInfo._Eqm_LuDaiInfoEntityConfiguration == null)) {
                Eqm_LuDaiInfo._Eqm_LuDaiInfoEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_LuDaiInfo");
            }
            return Eqm_LuDaiInfo._Eqm_LuDaiInfoEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serialid,
                    this._No,
                    this._Work_Type,
                    this._Process_name,
                    this._Equip_name,
                    this._Check_content,
                    this._Admin_user,
                    this._Safe_user,
                    this._Check_user,
                    this._User_num,
                    this._Check_hour,
                    this._Construction,
                    this._Cycle,
                    this._Safe_measures,
                    this._Start_date,
                    this._Replace_date,
                    this._Mater_type,
                    this._Mater_num,
                    this._Memo,
                    this._Workshopname,
                    this._UseDay};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serialid = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._No = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Work_Type = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Process_name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_name = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Check_content = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Admin_user = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Safe_user = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Check_user = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._User_num = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Check_hour = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Construction = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Cycle = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Safe_measures = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Start_date = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Replace_date = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Mater_type = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Mater_num = reader.GetDecimal(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Memo = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Workshopname = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._UseDay = reader.GetDecimal(20);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serialid = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._No = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Work_Type = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Process_name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_name = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Check_content = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Admin_user = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Safe_user = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Check_user = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._User_num = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Check_hour = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Construction = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Cycle = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Safe_measures = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Start_date = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15))) {
                this._Replace_date = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16))) {
                this._Mater_type = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Mater_num = ((System.Nullable<decimal>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Memo = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Workshopname = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._UseDay = ((System.Nullable<decimal>)(row[20]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_LuDaiInfo).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_LuDaiInfo)(obj)).isAttached) 
                        && (this.Serialid == ((global::Mesnac.Entity.Eqm_LuDaiInfo)(obj)).Serialid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _No = new NBear.Common.PropertyItem("No", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Work_Type = new NBear.Common.PropertyItem("Work_Type", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Process_name = new NBear.Common.PropertyItem("Process_name", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Equip_name = new NBear.Common.PropertyItem("Equip_name", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Check_content = new NBear.Common.PropertyItem("Check_content", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Admin_user = new NBear.Common.PropertyItem("Admin_user", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Safe_user = new NBear.Common.PropertyItem("Safe_user", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Check_user = new NBear.Common.PropertyItem("Check_user", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _User_num = new NBear.Common.PropertyItem("User_num", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Check_hour = new NBear.Common.PropertyItem("Check_hour", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Construction = new NBear.Common.PropertyItem("Construction", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Cycle = new NBear.Common.PropertyItem("Cycle", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Safe_measures = new NBear.Common.PropertyItem("Safe_measures", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Start_date = new NBear.Common.PropertyItem("Start_date", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Replace_date = new NBear.Common.PropertyItem("Replace_date", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Mater_type = new NBear.Common.PropertyItem("Mater_type", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Mater_num = new NBear.Common.PropertyItem("Mater_num", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Memo = new NBear.Common.PropertyItem("Memo", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _Workshopname = new NBear.Common.PropertyItem("Workshopname", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            protected NBear.Common.PropertyItem _UseDay = new NBear.Common.PropertyItem("UseDay", "Mesnac.Entity.Eqm_LuDaiInfo");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem No {
                get {
                    if ((aliasName == null)) {
                        return _No;
                    }
                    else {
                        return new NBear.Common.PropertyItem("No", _No.EntityConfiguration, _No.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_Type {
                get {
                    if ((aliasName == null)) {
                        return _Work_Type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_Type", _Work_Type.EntityConfiguration, _Work_Type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Process_name {
                get {
                    if ((aliasName == null)) {
                        return _Process_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Process_name", _Process_name.EntityConfiguration, _Process_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_name {
                get {
                    if ((aliasName == null)) {
                        return _Equip_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_name", _Equip_name.EntityConfiguration, _Equip_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_content {
                get {
                    if ((aliasName == null)) {
                        return _Check_content;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_content", _Check_content.EntityConfiguration, _Check_content.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Admin_user {
                get {
                    if ((aliasName == null)) {
                        return _Admin_user;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Admin_user", _Admin_user.EntityConfiguration, _Admin_user.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Safe_user {
                get {
                    if ((aliasName == null)) {
                        return _Safe_user;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Safe_user", _Safe_user.EntityConfiguration, _Safe_user.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_user {
                get {
                    if ((aliasName == null)) {
                        return _Check_user;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_user", _Check_user.EntityConfiguration, _Check_user.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem User_num {
                get {
                    if ((aliasName == null)) {
                        return _User_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("User_num", _User_num.EntityConfiguration, _User_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_hour {
                get {
                    if ((aliasName == null)) {
                        return _Check_hour;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_hour", _Check_hour.EntityConfiguration, _Check_hour.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Construction {
                get {
                    if ((aliasName == null)) {
                        return _Construction;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Construction", _Construction.EntityConfiguration, _Construction.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Cycle {
                get {
                    if ((aliasName == null)) {
                        return _Cycle;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Cycle", _Cycle.EntityConfiguration, _Cycle.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Safe_measures {
                get {
                    if ((aliasName == null)) {
                        return _Safe_measures;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Safe_measures", _Safe_measures.EntityConfiguration, _Safe_measures.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Start_date {
                get {
                    if ((aliasName == null)) {
                        return _Start_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Start_date", _Start_date.EntityConfiguration, _Start_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Replace_date {
                get {
                    if ((aliasName == null)) {
                        return _Replace_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Replace_date", _Replace_date.EntityConfiguration, _Replace_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_type {
                get {
                    if ((aliasName == null)) {
                        return _Mater_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_type", _Mater_type.EntityConfiguration, _Mater_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_num {
                get {
                    if ((aliasName == null)) {
                        return _Mater_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_num", _Mater_num.EntityConfiguration, _Mater_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo {
                get {
                    if ((aliasName == null)) {
                        return _Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo", _Memo.EntityConfiguration, _Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshopname {
                get {
                    if ((aliasName == null)) {
                        return _Workshopname;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshopname", _Workshopname.EntityConfiguration, _Workshopname.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UseDay {
                get {
                    if ((aliasName == null)) {
                        return _UseDay;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UseDay", _UseDay.EntityConfiguration, _UseDay.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
