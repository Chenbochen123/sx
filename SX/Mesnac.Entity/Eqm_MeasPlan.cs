//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_MeasPlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_MeasPlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_MeasPlan\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_MeasPlan\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Mp_planid\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Mp_planid\" mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"" +
        "true\" isNotNull=\"true\" />\r\n    <Property name=\"JL_code\" type=\"System.Int32\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"JL_code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"JL_planDate\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"JL_planDate\" mappingColumnType=\"System.String\" sqlType=\"char(10" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JL_RealDate\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"JL_RealDate\" mappingColumnType=\"System.String\"" +
        " sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"JL_PlanDay\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JL_PlanDay" +
        "\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JL_RealDay\" type=\"Syste" +
        "m.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"JL_RealDay\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Plan_state\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pl" +
        "an_state\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Handle_date\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Handle_date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Handle_name\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Handle_name\" mappingColumnType=\"System.String\" sql" +
        "Type=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Rls_cps\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"Rls_cps\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Mp_result\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_result\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(255)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"JL_Date\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JL_Date\"" +
        " mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_MeasPlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_MeasPlanEntityConfiguration;
        
        protected string _Mp_planid;
        
        protected int _JL_code;
        
        protected string _JL_planDate;
        
        protected string _JL_RealDate;
        
        protected global::System.Decimal? _JL_PlanDay;
        
        protected global::System.Decimal? _JL_RealDay;
        
        protected string _Plan_state;
        
        protected string _Handle_date;
        
        protected string _Handle_name;
        
        protected string _Rls_cps;
        
        protected string _Mp_result;
        
        protected string _JL_Date;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_MeasPlan left, global::Mesnac.Entity.Eqm_MeasPlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_MeasPlan left, global::Mesnac.Entity.Eqm_MeasPlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mp_planid {
            get {
                return this._Mp_planid;
            }
            set {
                this.OnPropertyChanged("Mp_planid", this._Mp_planid, value);
                this._Mp_planid = value;
            }
        }
        
        public int JL_code {
            get {
                return this._JL_code;
            }
            set {
                this.OnPropertyChanged("JL_code", this._JL_code, value);
                this._JL_code = value;
            }
        }
        
        public string JL_planDate {
            get {
                return this._JL_planDate;
            }
            set {
                this.OnPropertyChanged("JL_planDate", this._JL_planDate, value);
                this._JL_planDate = value;
            }
        }
        
        public string JL_RealDate {
            get {
                return this._JL_RealDate;
            }
            set {
                this.OnPropertyChanged("JL_RealDate", this._JL_RealDate, value);
                this._JL_RealDate = value;
            }
        }
        
        public global::System.Decimal? JL_PlanDay {
            get {
                return this._JL_PlanDay;
            }
            set {
                this.OnPropertyChanged("JL_PlanDay", this._JL_PlanDay, value);
                this._JL_PlanDay = value;
            }
        }
        
        public global::System.Decimal? JL_RealDay {
            get {
                return this._JL_RealDay;
            }
            set {
                this.OnPropertyChanged("JL_RealDay", this._JL_RealDay, value);
                this._JL_RealDay = value;
            }
        }
        
        public string Plan_state {
            get {
                return this._Plan_state;
            }
            set {
                this.OnPropertyChanged("Plan_state", this._Plan_state, value);
                this._Plan_state = value;
            }
        }
        
        public string Handle_date {
            get {
                return this._Handle_date;
            }
            set {
                this.OnPropertyChanged("Handle_date", this._Handle_date, value);
                this._Handle_date = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string Rls_cps {
            get {
                return this._Rls_cps;
            }
            set {
                this.OnPropertyChanged("Rls_cps", this._Rls_cps, value);
                this._Rls_cps = value;
            }
        }
        
        public string Mp_result {
            get {
                return this._Mp_result;
            }
            set {
                this.OnPropertyChanged("Mp_result", this._Mp_result, value);
                this._Mp_result = value;
            }
        }
        
        public string JL_Date {
            get {
                return this._JL_Date;
            }
            set {
                this.OnPropertyChanged("JL_Date", this._JL_Date, value);
                this._JL_Date = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_MeasPlan._Eqm_MeasPlanEntityConfiguration == null)) {
                Eqm_MeasPlan._Eqm_MeasPlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_MeasPlan");
            }
            return Eqm_MeasPlan._Eqm_MeasPlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_planid,
                    this._JL_code,
                    this._JL_planDate,
                    this._JL_RealDate,
                    this._JL_PlanDay,
                    this._JL_RealDay,
                    this._Plan_state,
                    this._Handle_date,
                    this._Handle_name,
                    this._Rls_cps,
                    this._Mp_result,
                    this._JL_Date};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_planid = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._JL_code = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._JL_planDate = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._JL_RealDate = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._JL_PlanDay = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._JL_RealDay = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Plan_state = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Handle_date = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Handle_name = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Rls_cps = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Mp_result = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._JL_Date = reader.GetString(11);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_planid = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._JL_code = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._JL_planDate = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._JL_RealDate = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._JL_PlanDay = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._JL_RealDay = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Plan_state = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Handle_date = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Handle_name = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Rls_cps = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Mp_result = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._JL_Date = ((string)(row[11]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_MeasPlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_MeasPlan)(obj)).isAttached) 
                        && (this.Mp_planid == ((global::Mesnac.Entity.Eqm_MeasPlan)(obj)).Mp_planid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_planid = new NBear.Common.PropertyItem("Mp_planid", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _JL_code = new NBear.Common.PropertyItem("JL_code", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _JL_planDate = new NBear.Common.PropertyItem("JL_planDate", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _JL_RealDate = new NBear.Common.PropertyItem("JL_RealDate", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _JL_PlanDay = new NBear.Common.PropertyItem("JL_PlanDay", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _JL_RealDay = new NBear.Common.PropertyItem("JL_RealDay", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _Plan_state = new NBear.Common.PropertyItem("Plan_state", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _Handle_date = new NBear.Common.PropertyItem("Handle_date", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _Rls_cps = new NBear.Common.PropertyItem("Rls_cps", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _Mp_result = new NBear.Common.PropertyItem("Mp_result", "Mesnac.Entity.Eqm_MeasPlan");
            
            protected NBear.Common.PropertyItem _JL_Date = new NBear.Common.PropertyItem("JL_Date", "Mesnac.Entity.Eqm_MeasPlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_planid {
                get {
                    if ((aliasName == null)) {
                        return _Mp_planid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_planid", _Mp_planid.EntityConfiguration, _Mp_planid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_code {
                get {
                    if ((aliasName == null)) {
                        return _JL_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_code", _JL_code.EntityConfiguration, _JL_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_planDate {
                get {
                    if ((aliasName == null)) {
                        return _JL_planDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_planDate", _JL_planDate.EntityConfiguration, _JL_planDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_RealDate {
                get {
                    if ((aliasName == null)) {
                        return _JL_RealDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_RealDate", _JL_RealDate.EntityConfiguration, _JL_RealDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_PlanDay {
                get {
                    if ((aliasName == null)) {
                        return _JL_PlanDay;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_PlanDay", _JL_PlanDay.EntityConfiguration, _JL_PlanDay.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_RealDay {
                get {
                    if ((aliasName == null)) {
                        return _JL_RealDay;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_RealDay", _JL_RealDay.EntityConfiguration, _JL_RealDay.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_state {
                get {
                    if ((aliasName == null)) {
                        return _Plan_state;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_state", _Plan_state.EntityConfiguration, _Plan_state.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_date {
                get {
                    if ((aliasName == null)) {
                        return _Handle_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_date", _Handle_date.EntityConfiguration, _Handle_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Rls_cps {
                get {
                    if ((aliasName == null)) {
                        return _Rls_cps;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Rls_cps", _Rls_cps.EntityConfiguration, _Rls_cps.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_result {
                get {
                    if ((aliasName == null)) {
                        return _Mp_result;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_result", _Mp_result.EntityConfiguration, _Mp_result.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_Date {
                get {
                    if ((aliasName == null)) {
                        return _JL_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_Date", _JL_Date.EntityConfiguration, _JL_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
