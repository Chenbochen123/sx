//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptShiftConfigArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptShiftConfig> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PptShiftConfig\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isB" +
        "atchUpdate=\"false\" isRelation=\"false\" mappingName=\"PptShiftConfig\" batchSize=\"10" +
        "\">\r\n  <Properties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherite" +
        "d=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(18)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"PlanDate\" t" +
        "ype=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanDate\" mappingColumnTy" +
        "pe=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInhe" +
        "rited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shif" +
        "tID\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"ClassID\" type=\"System.Nullable`1[System" +
        ".Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"ClassID\" mappingColumnType=\"System.Nullable`1[System.Int1" +
        "6]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"MaterialCode\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' " +
        "\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mat" +
        "erialCode\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialName\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"MaterialName\" mappingColumnType=\"System.String\" sqlType=\"nvarcha" +
        "r(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BarcodeSta" +
        "rt\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"" +
        "(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"B" +
        "arcodeStart\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BarcodeEnd\" type=\"" +
        "System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarcodeEnd\"" +
        " mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TotalWeight\" type=\"System.Null" +
        "able`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"TotalWeight\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"ShelfNum\" type=\"System.Nullable`1[System.Int32]\" isInh" +
        "erited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"ShelfNum\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"RealWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Rea" +
        "lWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BarcodeUse\" type" +
        "=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarcodeUs" +
        "e\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PrintDate\" type=\"System.Null" +
        "able`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PrintDate\" mappingC" +
        "olumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"OperCode\" type=\"System.String\" " +
        "isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"OperCode\" mappingColumnType=\"System.String\" " +
        "sqlType=\"varchar(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"ReceiveDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Receive" +
        "Date\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MemNote\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"MemNote\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"StockFlag\" type=\"System.String\" isInherited=\"false\" sqlDefault" +
        "Value=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"StockFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckFlag\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" sqlDefaultValue=\"\'N\'\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"CheckFlag\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"UpdateFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Updat" +
        "eFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"UsedNum\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"UsedNum\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"UsedWeigh\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UsedWeigh\" m" +
        "appingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedFlag\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"UsedFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedDate\" type=\"" +
        "System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"UsedDate\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"UsedShiftID\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"UsedShiftID\" mappingColumnType=\"System.String\" sqlType=\"char(2)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedClassID\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"UsedClassID\" mappingColumnType=\"System.String\" sqlType=\"cha" +
        "r(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedEquip\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"UsedEquip\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"AscendNum\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"AscendNum\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"OrgOrNot\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OrgOrNot\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"OrgBarcode\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OrgBar" +
        "code\" mappingColumnType=\"System.String\" sqlType=\"char(18)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"UPERP\" type=\"System.Nullable`1[System." +
        "Boolean]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"UPERP\" mappingColumnType=\"System.N" +
        "ullable`1[System.Boolean]\" sqlType=\"bit\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"DealMode\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DealMode\" m" +
        "appingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"DiffTime\" type=\"System.Nullable`1[System." +
        "Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"DiffTime\" mappingColumnType=\"System.Nullable`1[System.De" +
        "cimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"MaterCode2\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode2\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(13)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"PlanID\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanID\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"ProdDate\" type=\"System.Nullable`1[System.DateT" +
        "ime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"ProdDate\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"PiWeight\" type=\"System.Nullable`1[System.Deci" +
        "mal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"PiWeight\" mappingColumnType=\"System.Nullable`1[System.Decima" +
        "l]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"ShiftBarCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftBarCode\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"ShiftBarCodeNew\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S" +
        "hiftBarCodeNew\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ValidDate\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"ValidDate\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ZJSID\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"ZJSID\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"U" +
        "serID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"UserID\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"LLMemNote\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LLMemNote\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"TecDealFlag\" type=\"System.String\" isInherited=\"false\" s" +
        "qlDefaultValue=\"\'N\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"TecDealFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TecDeal_Idea\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"TecDeal_Idea\" mappingColumnType=\"System.String\" " +
        "sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"TecDealIdea\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TecDealIdea\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"LLBarCode\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LLBarCo" +
        "de\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PptShiftConfig : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptShiftConfigEntityConfiguration;
        
        protected string _Barcode;
        
        protected global::System.DateTime? _PlanDate;
        
        protected string _EquipCode;
        
        protected global::System.Int16? _ShiftID;
        
        protected global::System.Int16? _ClassID;
        
        protected string _MaterialCode;
        
        protected string _MaterialName;
        
        protected global::System.Int32? _BarcodeStart;
        
        protected global::System.Int32? _BarcodeEnd;
        
        protected global::System.Decimal? _TotalWeight;
        
        protected global::System.Int32? _ShelfNum;
        
        protected global::System.Decimal? _RealWeight;
        
        protected global::System.Int32? _BarcodeUse;
        
        protected global::System.DateTime? _PrintDate;
        
        protected string _OperCode;
        
        protected global::System.DateTime? _ReceiveDate;
        
        protected string _MemNote;
        
        protected string _StockFlag;
        
        protected string _CheckFlag;
        
        protected string _UpdateFlag;
        
        protected global::System.Int32? _UsedNum;
        
        protected global::System.Decimal? _UsedWeigh;
        
        protected string _UsedFlag;
        
        protected global::System.DateTime? _UsedDate;
        
        protected string _UsedShiftID;
        
        protected string _UsedClassID;
        
        protected string _UsedEquip;
        
        protected string _AscendNum;
        
        protected string _OrgOrNot;
        
        protected string _OrgBarcode;
        
        protected global::System.Boolean? _UPERP;
        
        protected string _DealMode;
        
        protected global::System.Decimal? _DiffTime;
        
        protected string _MaterCode2;
        
        protected string _PlanID;
        
        protected global::System.DateTime? _ProdDate;
        
        protected global::System.Decimal? _PiWeight;
        
        protected string _ShiftBarCode;
        
        protected string _ShiftBarCodeNew;
        
        protected string _ValidDate;
        
        protected string _ZJSID;
        
        protected string _UserID;
        
        protected string _LLMemNote;
        
        protected string _TecDealFlag;
        
        protected string _TecDeal_Idea;
        
        protected string _TecDealIdea;
        
        protected string _LLBarCode;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptShiftConfig left, global::Mesnac.Entity.PptShiftConfig right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptShiftConfig left, global::Mesnac.Entity.PptShiftConfig right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public global::System.DateTime? PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public global::System.Int16? ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public global::System.Int16? ClassID {
            get {
                return this._ClassID;
            }
            set {
                this.OnPropertyChanged("ClassID", this._ClassID, value);
                this._ClassID = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }
        
        public global::System.Int32? BarcodeStart {
            get {
                return this._BarcodeStart;
            }
            set {
                this.OnPropertyChanged("BarcodeStart", this._BarcodeStart, value);
                this._BarcodeStart = value;
            }
        }
        
        public global::System.Int32? BarcodeEnd {
            get {
                return this._BarcodeEnd;
            }
            set {
                this.OnPropertyChanged("BarcodeEnd", this._BarcodeEnd, value);
                this._BarcodeEnd = value;
            }
        }
        
        public global::System.Decimal? TotalWeight {
            get {
                return this._TotalWeight;
            }
            set {
                this.OnPropertyChanged("TotalWeight", this._TotalWeight, value);
                this._TotalWeight = value;
            }
        }
        
        public global::System.Int32? ShelfNum {
            get {
                return this._ShelfNum;
            }
            set {
                this.OnPropertyChanged("ShelfNum", this._ShelfNum, value);
                this._ShelfNum = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public global::System.Int32? BarcodeUse {
            get {
                return this._BarcodeUse;
            }
            set {
                this.OnPropertyChanged("BarcodeUse", this._BarcodeUse, value);
                this._BarcodeUse = value;
            }
        }
        
        public global::System.DateTime? PrintDate {
            get {
                return this._PrintDate;
            }
            set {
                this.OnPropertyChanged("PrintDate", this._PrintDate, value);
                this._PrintDate = value;
            }
        }
        
        public string OperCode {
            get {
                return this._OperCode;
            }
            set {
                this.OnPropertyChanged("OperCode", this._OperCode, value);
                this._OperCode = value;
            }
        }
        
        public global::System.DateTime? ReceiveDate {
            get {
                return this._ReceiveDate;
            }
            set {
                this.OnPropertyChanged("ReceiveDate", this._ReceiveDate, value);
                this._ReceiveDate = value;
            }
        }
        
        public string MemNote {
            get {
                return this._MemNote;
            }
            set {
                this.OnPropertyChanged("MemNote", this._MemNote, value);
                this._MemNote = value;
            }
        }
        
        public string StockFlag {
            get {
                return this._StockFlag;
            }
            set {
                this.OnPropertyChanged("StockFlag", this._StockFlag, value);
                this._StockFlag = value;
            }
        }
        
        public string CheckFlag {
            get {
                return this._CheckFlag;
            }
            set {
                this.OnPropertyChanged("CheckFlag", this._CheckFlag, value);
                this._CheckFlag = value;
            }
        }
        
        public string UpdateFlag {
            get {
                return this._UpdateFlag;
            }
            set {
                this.OnPropertyChanged("UpdateFlag", this._UpdateFlag, value);
                this._UpdateFlag = value;
            }
        }
        
        public global::System.Int32? UsedNum {
            get {
                return this._UsedNum;
            }
            set {
                this.OnPropertyChanged("UsedNum", this._UsedNum, value);
                this._UsedNum = value;
            }
        }
        
        public global::System.Decimal? UsedWeigh {
            get {
                return this._UsedWeigh;
            }
            set {
                this.OnPropertyChanged("UsedWeigh", this._UsedWeigh, value);
                this._UsedWeigh = value;
            }
        }
        
        public string UsedFlag {
            get {
                return this._UsedFlag;
            }
            set {
                this.OnPropertyChanged("UsedFlag", this._UsedFlag, value);
                this._UsedFlag = value;
            }
        }
        
        public global::System.DateTime? UsedDate {
            get {
                return this._UsedDate;
            }
            set {
                this.OnPropertyChanged("UsedDate", this._UsedDate, value);
                this._UsedDate = value;
            }
        }
        
        public string UsedShiftID {
            get {
                return this._UsedShiftID;
            }
            set {
                this.OnPropertyChanged("UsedShiftID", this._UsedShiftID, value);
                this._UsedShiftID = value;
            }
        }
        
        public string UsedClassID {
            get {
                return this._UsedClassID;
            }
            set {
                this.OnPropertyChanged("UsedClassID", this._UsedClassID, value);
                this._UsedClassID = value;
            }
        }
        
        public string UsedEquip {
            get {
                return this._UsedEquip;
            }
            set {
                this.OnPropertyChanged("UsedEquip", this._UsedEquip, value);
                this._UsedEquip = value;
            }
        }
        
        public string AscendNum {
            get {
                return this._AscendNum;
            }
            set {
                this.OnPropertyChanged("AscendNum", this._AscendNum, value);
                this._AscendNum = value;
            }
        }
        
        public string OrgOrNot {
            get {
                return this._OrgOrNot;
            }
            set {
                this.OnPropertyChanged("OrgOrNot", this._OrgOrNot, value);
                this._OrgOrNot = value;
            }
        }
        
        public string OrgBarcode {
            get {
                return this._OrgBarcode;
            }
            set {
                this.OnPropertyChanged("OrgBarcode", this._OrgBarcode, value);
                this._OrgBarcode = value;
            }
        }
        
        public global::System.Boolean? UPERP {
            get {
                return this._UPERP;
            }
            set {
                this.OnPropertyChanged("UPERP", this._UPERP, value);
                this._UPERP = value;
            }
        }
        
        public string DealMode {
            get {
                return this._DealMode;
            }
            set {
                this.OnPropertyChanged("DealMode", this._DealMode, value);
                this._DealMode = value;
            }
        }
        
        public global::System.Decimal? DiffTime {
            get {
                return this._DiffTime;
            }
            set {
                this.OnPropertyChanged("DiffTime", this._DiffTime, value);
                this._DiffTime = value;
            }
        }
        
        public string MaterCode2 {
            get {
                return this._MaterCode2;
            }
            set {
                this.OnPropertyChanged("MaterCode2", this._MaterCode2, value);
                this._MaterCode2 = value;
            }
        }
        
        public string PlanID {
            get {
                return this._PlanID;
            }
            set {
                this.OnPropertyChanged("PlanID", this._PlanID, value);
                this._PlanID = value;
            }
        }
        
        public global::System.DateTime? ProdDate {
            get {
                return this._ProdDate;
            }
            set {
                this.OnPropertyChanged("ProdDate", this._ProdDate, value);
                this._ProdDate = value;
            }
        }
        
        public global::System.Decimal? PiWeight {
            get {
                return this._PiWeight;
            }
            set {
                this.OnPropertyChanged("PiWeight", this._PiWeight, value);
                this._PiWeight = value;
            }
        }
        
        public string ShiftBarCode {
            get {
                return this._ShiftBarCode;
            }
            set {
                this.OnPropertyChanged("ShiftBarCode", this._ShiftBarCode, value);
                this._ShiftBarCode = value;
            }
        }
        
        public string ShiftBarCodeNew {
            get {
                return this._ShiftBarCodeNew;
            }
            set {
                this.OnPropertyChanged("ShiftBarCodeNew", this._ShiftBarCodeNew, value);
                this._ShiftBarCodeNew = value;
            }
        }
        
        public string ValidDate {
            get {
                return this._ValidDate;
            }
            set {
                this.OnPropertyChanged("ValidDate", this._ValidDate, value);
                this._ValidDate = value;
            }
        }
        
        public string ZJSID {
            get {
                return this._ZJSID;
            }
            set {
                this.OnPropertyChanged("ZJSID", this._ZJSID, value);
                this._ZJSID = value;
            }
        }
        
        public string UserID {
            get {
                return this._UserID;
            }
            set {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }
        
        public string LLMemNote {
            get {
                return this._LLMemNote;
            }
            set {
                this.OnPropertyChanged("LLMemNote", this._LLMemNote, value);
                this._LLMemNote = value;
            }
        }
        
        public string TecDealFlag {
            get {
                return this._TecDealFlag;
            }
            set {
                this.OnPropertyChanged("TecDealFlag", this._TecDealFlag, value);
                this._TecDealFlag = value;
            }
        }
        
        public string TecDeal_Idea {
            get {
                return this._TecDeal_Idea;
            }
            set {
                this.OnPropertyChanged("TecDeal_Idea", this._TecDeal_Idea, value);
                this._TecDeal_Idea = value;
            }
        }
        
        public string TecDealIdea {
            get {
                return this._TecDealIdea;
            }
            set {
                this.OnPropertyChanged("TecDealIdea", this._TecDealIdea, value);
                this._TecDealIdea = value;
            }
        }
        
        public string LLBarCode {
            get {
                return this._LLBarCode;
            }
            set {
                this.OnPropertyChanged("LLBarCode", this._LLBarCode, value);
                this._LLBarCode = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptShiftConfig._PptShiftConfigEntityConfiguration == null)) {
                PptShiftConfig._PptShiftConfigEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptShiftConfig");
            }
            return PptShiftConfig._PptShiftConfigEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._PlanDate,
                    this._EquipCode,
                    this._ShiftID,
                    this._ClassID,
                    this._MaterialCode,
                    this._MaterialName,
                    this._BarcodeStart,
                    this._BarcodeEnd,
                    this._TotalWeight,
                    this._ShelfNum,
                    this._RealWeight,
                    this._BarcodeUse,
                    this._PrintDate,
                    this._OperCode,
                    this._ReceiveDate,
                    this._MemNote,
                    this._StockFlag,
                    this._CheckFlag,
                    this._UpdateFlag,
                    this._UsedNum,
                    this._UsedWeigh,
                    this._UsedFlag,
                    this._UsedDate,
                    this._UsedShiftID,
                    this._UsedClassID,
                    this._UsedEquip,
                    this._AscendNum,
                    this._OrgOrNot,
                    this._OrgBarcode,
                    this._UPERP,
                    this._DealMode,
                    this._DiffTime,
                    this._MaterCode2,
                    this._PlanID,
                    this._ProdDate,
                    this._PiWeight,
                    this._ShiftBarCode,
                    this._ShiftBarCodeNew,
                    this._ValidDate,
                    this._ZJSID,
                    this._UserID,
                    this._LLMemNote,
                    this._TecDealFlag,
                    this._TecDeal_Idea,
                    this._TecDealIdea,
                    this._LLBarCode};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PlanDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EquipCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ShiftID = reader.GetInt16(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ClassID = reader.GetInt16(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterialCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterialName = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._BarcodeStart = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._BarcodeEnd = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._TotalWeight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._ShelfNum = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._RealWeight = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._BarcodeUse = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._PrintDate = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._OperCode = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._ReceiveDate = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._MemNote = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._StockFlag = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._CheckFlag = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._UpdateFlag = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._UsedNum = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._UsedWeigh = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._UsedFlag = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._UsedDate = this.GetDateTime(reader, 23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._UsedShiftID = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._UsedClassID = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._UsedEquip = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._AscendNum = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._OrgOrNot = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._OrgBarcode = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._UPERP = reader.GetBoolean(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._DealMode = reader.GetString(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._DiffTime = reader.GetDecimal(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._MaterCode2 = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._PlanID = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._ProdDate = this.GetDateTime(reader, 35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._PiWeight = reader.GetDecimal(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._ShiftBarCode = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._ShiftBarCodeNew = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._ValidDate = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._ZJSID = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._UserID = reader.GetString(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._LLMemNote = reader.GetString(42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._TecDealFlag = reader.GetString(43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._TecDeal_Idea = reader.GetString(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._TecDealIdea = reader.GetString(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._LLBarCode = reader.GetString(46);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PlanDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2))) {
                this._EquipCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ShiftID = ((System.Nullable<short>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ClassID = ((System.Nullable<short>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterialCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaterialName = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._BarcodeStart = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._BarcodeEnd = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._TotalWeight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._ShelfNum = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._BarcodeUse = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._PrintDate = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14))) {
                this._OperCode = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._ReceiveDate = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16))) {
                this._MemNote = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._StockFlag = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._CheckFlag = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._UpdateFlag = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._UsedNum = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._UsedWeigh = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._UsedFlag = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._UsedDate = this.GetDateTime(row, 23);
            }
            if ((false == row.IsNull(24))) {
                this._UsedShiftID = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._UsedClassID = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._UsedEquip = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._AscendNum = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._OrgOrNot = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._OrgBarcode = ((string)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._UPERP = ((System.Nullable<bool>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._DealMode = ((string)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._DiffTime = ((System.Nullable<decimal>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._MaterCode2 = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._PlanID = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._ProdDate = this.GetDateTime(row, 35);
            }
            if ((false == row.IsNull(36))) {
                this._PiWeight = ((System.Nullable<decimal>)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._ShiftBarCode = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._ShiftBarCodeNew = ((string)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._ValidDate = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._ZJSID = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._UserID = ((string)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._LLMemNote = ((string)(row[42]));
            }
            if ((false == row.IsNull(43))) {
                this._TecDealFlag = ((string)(row[43]));
            }
            if ((false == row.IsNull(44))) {
                this._TecDeal_Idea = ((string)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._TecDealIdea = ((string)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._LLBarCode = ((string)(row[46]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptShiftConfig).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptShiftConfig)(obj)).isAttached) 
                        && (this.Barcode == ((global::Mesnac.Entity.PptShiftConfig)(obj)).Barcode));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ClassID = new NBear.Common.PropertyItem("ClassID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _MaterialName = new NBear.Common.PropertyItem("MaterialName", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _BarcodeStart = new NBear.Common.PropertyItem("BarcodeStart", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _BarcodeEnd = new NBear.Common.PropertyItem("BarcodeEnd", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _TotalWeight = new NBear.Common.PropertyItem("TotalWeight", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ShelfNum = new NBear.Common.PropertyItem("ShelfNum", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _BarcodeUse = new NBear.Common.PropertyItem("BarcodeUse", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _PrintDate = new NBear.Common.PropertyItem("PrintDate", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _OperCode = new NBear.Common.PropertyItem("OperCode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ReceiveDate = new NBear.Common.PropertyItem("ReceiveDate", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _MemNote = new NBear.Common.PropertyItem("MemNote", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _StockFlag = new NBear.Common.PropertyItem("StockFlag", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _CheckFlag = new NBear.Common.PropertyItem("CheckFlag", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UpdateFlag = new NBear.Common.PropertyItem("UpdateFlag", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedNum = new NBear.Common.PropertyItem("UsedNum", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedWeigh = new NBear.Common.PropertyItem("UsedWeigh", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedFlag = new NBear.Common.PropertyItem("UsedFlag", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedDate = new NBear.Common.PropertyItem("UsedDate", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedShiftID = new NBear.Common.PropertyItem("UsedShiftID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedClassID = new NBear.Common.PropertyItem("UsedClassID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UsedEquip = new NBear.Common.PropertyItem("UsedEquip", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _AscendNum = new NBear.Common.PropertyItem("AscendNum", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _OrgOrNot = new NBear.Common.PropertyItem("OrgOrNot", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _OrgBarcode = new NBear.Common.PropertyItem("OrgBarcode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UPERP = new NBear.Common.PropertyItem("UPERP", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _DealMode = new NBear.Common.PropertyItem("DealMode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _DiffTime = new NBear.Common.PropertyItem("DiffTime", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _MaterCode2 = new NBear.Common.PropertyItem("MaterCode2", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _PlanID = new NBear.Common.PropertyItem("PlanID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ProdDate = new NBear.Common.PropertyItem("ProdDate", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _PiWeight = new NBear.Common.PropertyItem("PiWeight", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ShiftBarCode = new NBear.Common.PropertyItem("ShiftBarCode", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ShiftBarCodeNew = new NBear.Common.PropertyItem("ShiftBarCodeNew", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ValidDate = new NBear.Common.PropertyItem("ValidDate", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _ZJSID = new NBear.Common.PropertyItem("ZJSID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _UserID = new NBear.Common.PropertyItem("UserID", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _LLMemNote = new NBear.Common.PropertyItem("LLMemNote", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _TecDealFlag = new NBear.Common.PropertyItem("TecDealFlag", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _TecDeal_Idea = new NBear.Common.PropertyItem("TecDeal_Idea", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _TecDealIdea = new NBear.Common.PropertyItem("TecDealIdea", "Mesnac.Entity.PptShiftConfig");
            
            protected NBear.Common.PropertyItem _LLBarCode = new NBear.Common.PropertyItem("LLBarCode", "Mesnac.Entity.PptShiftConfig");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ClassID {
                get {
                    if ((aliasName == null)) {
                        return _ClassID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ClassID", _ClassID.EntityConfiguration, _ClassID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarcodeStart {
                get {
                    if ((aliasName == null)) {
                        return _BarcodeStart;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarcodeStart", _BarcodeStart.EntityConfiguration, _BarcodeStart.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarcodeEnd {
                get {
                    if ((aliasName == null)) {
                        return _BarcodeEnd;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarcodeEnd", _BarcodeEnd.EntityConfiguration, _BarcodeEnd.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TotalWeight {
                get {
                    if ((aliasName == null)) {
                        return _TotalWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TotalWeight", _TotalWeight.EntityConfiguration, _TotalWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfNum {
                get {
                    if ((aliasName == null)) {
                        return _ShelfNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfNum", _ShelfNum.EntityConfiguration, _ShelfNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarcodeUse {
                get {
                    if ((aliasName == null)) {
                        return _BarcodeUse;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarcodeUse", _BarcodeUse.EntityConfiguration, _BarcodeUse.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrintDate {
                get {
                    if ((aliasName == null)) {
                        return _PrintDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrintDate", _PrintDate.EntityConfiguration, _PrintDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperCode {
                get {
                    if ((aliasName == null)) {
                        return _OperCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperCode", _OperCode.EntityConfiguration, _OperCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ReceiveDate {
                get {
                    if ((aliasName == null)) {
                        return _ReceiveDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ReceiveDate", _ReceiveDate.EntityConfiguration, _ReceiveDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MemNote {
                get {
                    if ((aliasName == null)) {
                        return _MemNote;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MemNote", _MemNote.EntityConfiguration, _MemNote.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StockFlag {
                get {
                    if ((aliasName == null)) {
                        return _StockFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StockFlag", _StockFlag.EntityConfiguration, _StockFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckFlag {
                get {
                    if ((aliasName == null)) {
                        return _CheckFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckFlag", _CheckFlag.EntityConfiguration, _CheckFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UpdateFlag {
                get {
                    if ((aliasName == null)) {
                        return _UpdateFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UpdateFlag", _UpdateFlag.EntityConfiguration, _UpdateFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedNum {
                get {
                    if ((aliasName == null)) {
                        return _UsedNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedNum", _UsedNum.EntityConfiguration, _UsedNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedWeigh {
                get {
                    if ((aliasName == null)) {
                        return _UsedWeigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedWeigh", _UsedWeigh.EntityConfiguration, _UsedWeigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedFlag {
                get {
                    if ((aliasName == null)) {
                        return _UsedFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedFlag", _UsedFlag.EntityConfiguration, _UsedFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedDate {
                get {
                    if ((aliasName == null)) {
                        return _UsedDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedDate", _UsedDate.EntityConfiguration, _UsedDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedShiftID {
                get {
                    if ((aliasName == null)) {
                        return _UsedShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedShiftID", _UsedShiftID.EntityConfiguration, _UsedShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedClassID {
                get {
                    if ((aliasName == null)) {
                        return _UsedClassID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedClassID", _UsedClassID.EntityConfiguration, _UsedClassID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedEquip {
                get {
                    if ((aliasName == null)) {
                        return _UsedEquip;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedEquip", _UsedEquip.EntityConfiguration, _UsedEquip.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AscendNum {
                get {
                    if ((aliasName == null)) {
                        return _AscendNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AscendNum", _AscendNum.EntityConfiguration, _AscendNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrgOrNot {
                get {
                    if ((aliasName == null)) {
                        return _OrgOrNot;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrgOrNot", _OrgOrNot.EntityConfiguration, _OrgOrNot.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrgBarcode {
                get {
                    if ((aliasName == null)) {
                        return _OrgBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrgBarcode", _OrgBarcode.EntityConfiguration, _OrgBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UPERP {
                get {
                    if ((aliasName == null)) {
                        return _UPERP;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UPERP", _UPERP.EntityConfiguration, _UPERP.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DealMode {
                get {
                    if ((aliasName == null)) {
                        return _DealMode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DealMode", _DealMode.EntityConfiguration, _DealMode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DiffTime {
                get {
                    if ((aliasName == null)) {
                        return _DiffTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DiffTime", _DiffTime.EntityConfiguration, _DiffTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode2 {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode2", _MaterCode2.EntityConfiguration, _MaterCode2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanID {
                get {
                    if ((aliasName == null)) {
                        return _PlanID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanID", _PlanID.EntityConfiguration, _PlanID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProdDate {
                get {
                    if ((aliasName == null)) {
                        return _ProdDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProdDate", _ProdDate.EntityConfiguration, _ProdDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PiWeight {
                get {
                    if ((aliasName == null)) {
                        return _PiWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PiWeight", _PiWeight.EntityConfiguration, _PiWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftBarCode {
                get {
                    if ((aliasName == null)) {
                        return _ShiftBarCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftBarCode", _ShiftBarCode.EntityConfiguration, _ShiftBarCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftBarCodeNew {
                get {
                    if ((aliasName == null)) {
                        return _ShiftBarCodeNew;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftBarCodeNew", _ShiftBarCodeNew.EntityConfiguration, _ShiftBarCodeNew.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ValidDate {
                get {
                    if ((aliasName == null)) {
                        return _ValidDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ValidDate", _ValidDate.EntityConfiguration, _ValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ZJSID {
                get {
                    if ((aliasName == null)) {
                        return _ZJSID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ZJSID", _ZJSID.EntityConfiguration, _ZJSID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserID {
                get {
                    if ((aliasName == null)) {
                        return _UserID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLMemNote {
                get {
                    if ((aliasName == null)) {
                        return _LLMemNote;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLMemNote", _LLMemNote.EntityConfiguration, _LLMemNote.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TecDealFlag {
                get {
                    if ((aliasName == null)) {
                        return _TecDealFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TecDealFlag", _TecDealFlag.EntityConfiguration, _TecDealFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TecDeal_Idea {
                get {
                    if ((aliasName == null)) {
                        return _TecDeal_Idea;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TecDeal_Idea", _TecDeal_Idea.EntityConfiguration, _TecDeal_Idea.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TecDealIdea {
                get {
                    if ((aliasName == null)) {
                        return _TecDealIdea;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TecDealIdea", _TecDealIdea.EntityConfiguration, _TecDealIdea.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLBarCode {
                get {
                    if ((aliasName == null)) {
                        return _LLBarCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLBarCode", _LLBarCode.EntityConfiguration, _LLBarCode.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
