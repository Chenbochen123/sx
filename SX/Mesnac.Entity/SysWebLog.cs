//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class SysWebLogArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.SysWebLog> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.SysWebLog\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"SysWebLog\" batchSize=\"10\">\r\n  <Pro" +
        "perties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" isR" +
        "eadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" map" +
        "pingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\"" +
        " />\r\n    <Property name=\"UserCode\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UserCode\" " +
        "mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"PageID\" type=\"System.Nullable`1[System.I" +
        "nt32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"PageID\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Me" +
        "thodID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MethodID\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"UserIP\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"UserIP\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShowName\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"ShowName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MethodResult\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"MethodResult\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"PageRequest\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PageRequest\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(0)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark" +
        "\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"RecordTime\" type=\"System.Nullable`1[S" +
        "ystem.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"RecordTime\" mappingColumnType=\"System.Nullable`1[" +
        "System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "  </Properties>\r\n</EntityConfiguration>")]
    public partial class SysWebLog : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _SysWebLogEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _UserCode;
        
        protected global::System.Int32? _PageID;
        
        protected global::System.Int32? _MethodID;
        
        protected string _UserIP;
        
        protected string _ShowName;
        
        protected string _MethodResult;
        
        protected string _PageRequest;
        
        protected string _Remark;
        
        protected global::System.DateTime? _RecordTime;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.SysWebLog left, global::Mesnac.Entity.SysWebLog right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.SysWebLog left, global::Mesnac.Entity.SysWebLog right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string UserCode {
            get {
                return this._UserCode;
            }
            set {
                this.OnPropertyChanged("UserCode", this._UserCode, value);
                this._UserCode = value;
            }
        }
        
        public global::System.Int32? PageID {
            get {
                return this._PageID;
            }
            set {
                this.OnPropertyChanged("PageID", this._PageID, value);
                this._PageID = value;
            }
        }
        
        public global::System.Int32? MethodID {
            get {
                return this._MethodID;
            }
            set {
                this.OnPropertyChanged("MethodID", this._MethodID, value);
                this._MethodID = value;
            }
        }
        
        public string UserIP {
            get {
                return this._UserIP;
            }
            set {
                this.OnPropertyChanged("UserIP", this._UserIP, value);
                this._UserIP = value;
            }
        }
        
        public string ShowName {
            get {
                return this._ShowName;
            }
            set {
                this.OnPropertyChanged("ShowName", this._ShowName, value);
                this._ShowName = value;
            }
        }
        
        public string MethodResult {
            get {
                return this._MethodResult;
            }
            set {
                this.OnPropertyChanged("MethodResult", this._MethodResult, value);
                this._MethodResult = value;
            }
        }
        
        public string PageRequest {
            get {
                return this._PageRequest;
            }
            set {
                this.OnPropertyChanged("PageRequest", this._PageRequest, value);
                this._PageRequest = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.DateTime? RecordTime {
            get {
                return this._RecordTime;
            }
            set {
                this.OnPropertyChanged("RecordTime", this._RecordTime, value);
                this._RecordTime = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((SysWebLog._SysWebLogEntityConfiguration == null)) {
                SysWebLog._SysWebLogEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.SysWebLog");
            }
            return SysWebLog._SysWebLogEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._UserCode,
                    this._PageID,
                    this._MethodID,
                    this._UserIP,
                    this._ShowName,
                    this._MethodResult,
                    this._PageRequest,
                    this._Remark,
                    this._RecordTime};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._UserCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._PageID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MethodID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._UserIP = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._ShowName = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MethodResult = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._PageRequest = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Remark = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._RecordTime = this.GetDateTime(reader, 9);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._UserCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._PageID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MethodID = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._UserIP = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._ShowName = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MethodResult = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._PageRequest = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Remark = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._RecordTime = this.GetDateTime(row, 9);
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.SysWebLog).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.SysWebLog)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.SysWebLog)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _UserCode = new NBear.Common.PropertyItem("UserCode", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _PageID = new NBear.Common.PropertyItem("PageID", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _MethodID = new NBear.Common.PropertyItem("MethodID", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _UserIP = new NBear.Common.PropertyItem("UserIP", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _ShowName = new NBear.Common.PropertyItem("ShowName", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _MethodResult = new NBear.Common.PropertyItem("MethodResult", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _PageRequest = new NBear.Common.PropertyItem("PageRequest", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.SysWebLog");
            
            protected NBear.Common.PropertyItem _RecordTime = new NBear.Common.PropertyItem("RecordTime", "Mesnac.Entity.SysWebLog");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserCode {
                get {
                    if ((aliasName == null)) {
                        return _UserCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserCode", _UserCode.EntityConfiguration, _UserCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PageID {
                get {
                    if ((aliasName == null)) {
                        return _PageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PageID", _PageID.EntityConfiguration, _PageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MethodID {
                get {
                    if ((aliasName == null)) {
                        return _MethodID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MethodID", _MethodID.EntityConfiguration, _MethodID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserIP {
                get {
                    if ((aliasName == null)) {
                        return _UserIP;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserIP", _UserIP.EntityConfiguration, _UserIP.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShowName {
                get {
                    if ((aliasName == null)) {
                        return _ShowName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShowName", _ShowName.EntityConfiguration, _ShowName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MethodResult {
                get {
                    if ((aliasName == null)) {
                        return _MethodResult;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MethodResult", _MethodResult.EntityConfiguration, _MethodResult.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PageRequest {
                get {
                    if ((aliasName == null)) {
                        return _PageRequest;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PageRequest", _PageRequest.EntityConfiguration, _PageRequest.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordTime {
                get {
                    if ((aliasName == null)) {
                        return _RecordTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordTime", _RecordTime.EntityConfiguration, _RecordTime.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
