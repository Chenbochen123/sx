//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtOpenActionModelMainArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtOpenActionModelMain> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtOpenActionModelMain\" isReadOnly=\"false\" isAutoPreLoad=\"fa" +
        "lse\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtOpenActionModelMai" +
        "n\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Deci" +
        "mal\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"ObjID\" mappingColumnType=\"System.Decimal\" sqlType=\"decimal\" is" +
        "PrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"ModelName\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"ModelName\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mod" +
        "elCreateDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ModelCreat" +
        "eDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ModelCreateUser\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"ModelCreateUser\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"ModelValidDate\" type=\"System.Nullable`1[System.DateTime]\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"ModelValidDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sql" +
        "Type=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"M" +
        "odelDetail\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"ModelDetail\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" " +
        "mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Re" +
        "mark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PmtOpenActionModelMain : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtOpenActionModelMainEntityConfiguration;
        
        protected decimal _ObjID;
        
        protected string _ModelName;
        
        protected global::System.DateTime? _ModelCreateDate;
        
        protected string _ModelCreateUser;
        
        protected global::System.DateTime? _ModelValidDate;
        
        protected string _ModelDetail;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtOpenActionModelMain left, global::Mesnac.Entity.PmtOpenActionModelMain right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtOpenActionModelMain left, global::Mesnac.Entity.PmtOpenActionModelMain right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public decimal ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string ModelName {
            get {
                return this._ModelName;
            }
            set {
                this.OnPropertyChanged("ModelName", this._ModelName, value);
                this._ModelName = value;
            }
        }
        
        public global::System.DateTime? ModelCreateDate {
            get {
                return this._ModelCreateDate;
            }
            set {
                this.OnPropertyChanged("ModelCreateDate", this._ModelCreateDate, value);
                this._ModelCreateDate = value;
            }
        }
        
        public string ModelCreateUser {
            get {
                return this._ModelCreateUser;
            }
            set {
                this.OnPropertyChanged("ModelCreateUser", this._ModelCreateUser, value);
                this._ModelCreateUser = value;
            }
        }
        
        public global::System.DateTime? ModelValidDate {
            get {
                return this._ModelValidDate;
            }
            set {
                this.OnPropertyChanged("ModelValidDate", this._ModelValidDate, value);
                this._ModelValidDate = value;
            }
        }
        
        public string ModelDetail {
            get {
                return this._ModelDetail;
            }
            set {
                this.OnPropertyChanged("ModelDetail", this._ModelDetail, value);
                this._ModelDetail = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtOpenActionModelMain._PmtOpenActionModelMainEntityConfiguration == null)) {
                PmtOpenActionModelMain._PmtOpenActionModelMainEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtOpenActionModelMain");
            }
            return PmtOpenActionModelMain._PmtOpenActionModelMainEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._ModelName,
                    this._ModelCreateDate,
                    this._ModelCreateUser,
                    this._ModelValidDate,
                    this._ModelDetail,
                    this._DeleteFlag,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetDecimal(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._ModelName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ModelCreateDate = this.GetDateTime(reader, 2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ModelCreateUser = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ModelValidDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._ModelDetail = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._DeleteFlag = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Remark = reader.GetString(7);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((decimal)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._ModelName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ModelCreateDate = this.GetDateTime(row, 2);
            }
            if ((false == row.IsNull(3))) {
                this._ModelCreateUser = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ModelValidDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5))) {
                this._ModelDetail = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._DeleteFlag = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Remark = ((string)(row[7]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtOpenActionModelMain).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtOpenActionModelMain)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PmtOpenActionModelMain)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _ModelName = new NBear.Common.PropertyItem("ModelName", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _ModelCreateDate = new NBear.Common.PropertyItem("ModelCreateDate", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _ModelCreateUser = new NBear.Common.PropertyItem("ModelCreateUser", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _ModelValidDate = new NBear.Common.PropertyItem("ModelValidDate", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _ModelDetail = new NBear.Common.PropertyItem("ModelDetail", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PmtOpenActionModelMain");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PmtOpenActionModelMain");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ModelName {
                get {
                    if ((aliasName == null)) {
                        return _ModelName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ModelName", _ModelName.EntityConfiguration, _ModelName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ModelCreateDate {
                get {
                    if ((aliasName == null)) {
                        return _ModelCreateDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ModelCreateDate", _ModelCreateDate.EntityConfiguration, _ModelCreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ModelCreateUser {
                get {
                    if ((aliasName == null)) {
                        return _ModelCreateUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ModelCreateUser", _ModelCreateUser.EntityConfiguration, _ModelCreateUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ModelValidDate {
                get {
                    if ((aliasName == null)) {
                        return _ModelValidDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ModelValidDate", _ModelValidDate.EntityConfiguration, _ModelValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ModelDetail {
                get {
                    if ((aliasName == null)) {
                        return _ModelDetail;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ModelDetail", _ModelDetail.EntityConfiguration, _ModelDetail.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
