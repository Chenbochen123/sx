//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptMonthlyEnteringArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptMonthlyEntering> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PptMonthlyEntering\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PptMonthlyEntering\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"MaterialCode\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"MaterialCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(13" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialName\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"MaterialName\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"PlanNum\" type=\"System.Nullable`1[System.Double]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanNum\"" +
        " mappingColumnType=\"System.Nullable`1[System.Double]\" sqlType=\"float\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TypeID\" type=\"System.Nullab" +
        "le`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"TypeID\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"YearMonth\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"YearMonth\" mappingColum" +
        "nType=\"System.String\" sqlType=\"nchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PptMonthlyEntering : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptMonthlyEnteringEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _MaterialCode;
        
        protected string _MaterialName;
        
        protected global::System.Double? _PlanNum;
        
        protected global::System.Int32? _TypeID;
        
        protected string _YearMonth;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptMonthlyEntering left, global::Mesnac.Entity.PptMonthlyEntering right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptMonthlyEntering left, global::Mesnac.Entity.PptMonthlyEntering right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }
        
        public global::System.Double? PlanNum {
            get {
                return this._PlanNum;
            }
            set {
                this.OnPropertyChanged("PlanNum", this._PlanNum, value);
                this._PlanNum = value;
            }
        }
        
        public global::System.Int32? TypeID {
            get {
                return this._TypeID;
            }
            set {
                this.OnPropertyChanged("TypeID", this._TypeID, value);
                this._TypeID = value;
            }
        }
        
        public string YearMonth {
            get {
                return this._YearMonth;
            }
            set {
                this.OnPropertyChanged("YearMonth", this._YearMonth, value);
                this._YearMonth = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptMonthlyEntering._PptMonthlyEnteringEntityConfiguration == null)) {
                PptMonthlyEntering._PptMonthlyEnteringEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptMonthlyEntering");
            }
            return PptMonthlyEntering._PptMonthlyEnteringEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._MaterialCode,
                    this._MaterialName,
                    this._PlanNum,
                    this._TypeID,
                    this._YearMonth};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MaterialCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MaterialName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._PlanNum = reader.GetDouble(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._TypeID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._YearMonth = reader.GetString(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MaterialCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MaterialName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._PlanNum = ((System.Nullable<double>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._TypeID = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._YearMonth = ((string)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptMonthlyEntering).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptMonthlyEntering)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PptMonthlyEntering)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PptMonthlyEntering");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PptMonthlyEntering");
            
            protected NBear.Common.PropertyItem _MaterialName = new NBear.Common.PropertyItem("MaterialName", "Mesnac.Entity.PptMonthlyEntering");
            
            protected NBear.Common.PropertyItem _PlanNum = new NBear.Common.PropertyItem("PlanNum", "Mesnac.Entity.PptMonthlyEntering");
            
            protected NBear.Common.PropertyItem _TypeID = new NBear.Common.PropertyItem("TypeID", "Mesnac.Entity.PptMonthlyEntering");
            
            protected NBear.Common.PropertyItem _YearMonth = new NBear.Common.PropertyItem("YearMonth", "Mesnac.Entity.PptMonthlyEntering");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanNum {
                get {
                    if ((aliasName == null)) {
                        return _PlanNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanNum", _PlanNum.EntityConfiguration, _PlanNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TypeID {
                get {
                    if ((aliasName == null)) {
                        return _TypeID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TypeID", _TypeID.EntityConfiguration, _TypeID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem YearMonth {
                get {
                    if ((aliasName == null)) {
                        return _YearMonth;
                    }
                    else {
                        return new NBear.Common.PropertyItem("YearMonth", _YearMonth.EntityConfiguration, _YearMonth.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
