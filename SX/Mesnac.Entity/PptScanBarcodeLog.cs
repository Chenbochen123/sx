//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptScanBarcodeLogArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptScanBarcodeLog> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PptScanBarcodeLog\" isReadOnly=\"true\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PptScanBarcodeLog\" batchSiz" +
        "e=\"10\">\r\n  <Properties>\r\n    <Property name=\"Dt\" type=\"System.DateTime\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"Dt\" mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeCode\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"RecipeCode\" mappingColumnType=\"System.String\" sqlType=\"v" +
        "archar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ScanB" +
        "arcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"ScanBarcode\" mappingColumnType=\"System" +
        ".String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"ScanMaterCode\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ScanMaterCode\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Msg\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Msg\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Usercode\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Usercode\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftId\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"ShiftId\" mappingColumnType=\"System.String\" sqlType=\"varchar(4)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ClassId\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"ClassId\" mappingColumnType=\"System.String\" sqlType=\"varc" +
        "har(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConf" +
        "iguration>")]
    public partial class PptScanBarcodeLog : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptScanBarcodeLogEntityConfiguration;
        
        protected global::System.DateTime _Dt;
        
        protected string _EquipCode;
        
        protected string _RecipeCode;
        
        protected string _ScanBarcode;
        
        protected string _ScanMaterCode;
        
        protected string _Msg;
        
        protected string _Usercode;
        
        protected string _ShiftId;
        
        protected string _ClassId;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptScanBarcodeLog left, global::Mesnac.Entity.PptScanBarcodeLog right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptScanBarcodeLog left, global::Mesnac.Entity.PptScanBarcodeLog right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public global::System.DateTime Dt {
            get {
                return this._Dt;
            }
            set {
                this.OnPropertyChanged("Dt", this._Dt, value);
                this._Dt = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string RecipeCode {
            get {
                return this._RecipeCode;
            }
            set {
                this.OnPropertyChanged("RecipeCode", this._RecipeCode, value);
                this._RecipeCode = value;
            }
        }
        
        public string ScanBarcode {
            get {
                return this._ScanBarcode;
            }
            set {
                this.OnPropertyChanged("ScanBarcode", this._ScanBarcode, value);
                this._ScanBarcode = value;
            }
        }
        
        public string ScanMaterCode {
            get {
                return this._ScanMaterCode;
            }
            set {
                this.OnPropertyChanged("ScanMaterCode", this._ScanMaterCode, value);
                this._ScanMaterCode = value;
            }
        }
        
        public string Msg {
            get {
                return this._Msg;
            }
            set {
                this.OnPropertyChanged("Msg", this._Msg, value);
                this._Msg = value;
            }
        }
        
        public string Usercode {
            get {
                return this._Usercode;
            }
            set {
                this.OnPropertyChanged("Usercode", this._Usercode, value);
                this._Usercode = value;
            }
        }
        
        public string ShiftId {
            get {
                return this._ShiftId;
            }
            set {
                this.OnPropertyChanged("ShiftId", this._ShiftId, value);
                this._ShiftId = value;
            }
        }
        
        public string ClassId {
            get {
                return this._ClassId;
            }
            set {
                this.OnPropertyChanged("ClassId", this._ClassId, value);
                this._ClassId = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptScanBarcodeLog._PptScanBarcodeLogEntityConfiguration == null)) {
                PptScanBarcodeLog._PptScanBarcodeLogEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptScanBarcodeLog");
            }
            return PptScanBarcodeLog._PptScanBarcodeLogEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Dt,
                    this._EquipCode,
                    this._RecipeCode,
                    this._ScanBarcode,
                    this._ScanMaterCode,
                    this._Msg,
                    this._Usercode,
                    this._ShiftId,
                    this._ClassId};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Dt = this.GetDateTime(reader, 0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._RecipeCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ScanBarcode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ScanMaterCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Msg = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Usercode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._ShiftId = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ClassId = reader.GetString(8);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Dt = this.GetDateTime(row, 0);
            }
            if ((false == row.IsNull(1))) {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._RecipeCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ScanBarcode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ScanMaterCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Msg = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Usercode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._ShiftId = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ClassId = ((string)(row[8]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptScanBarcodeLog).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptScanBarcodeLog)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Dt = new NBear.Common.PropertyItem("Dt", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _RecipeCode = new NBear.Common.PropertyItem("RecipeCode", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _ScanBarcode = new NBear.Common.PropertyItem("ScanBarcode", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _ScanMaterCode = new NBear.Common.PropertyItem("ScanMaterCode", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _Msg = new NBear.Common.PropertyItem("Msg", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _Usercode = new NBear.Common.PropertyItem("Usercode", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _ShiftId = new NBear.Common.PropertyItem("ShiftId", "Mesnac.Entity.PptScanBarcodeLog");
            
            protected NBear.Common.PropertyItem _ClassId = new NBear.Common.PropertyItem("ClassId", "Mesnac.Entity.PptScanBarcodeLog");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Dt {
                get {
                    if ((aliasName == null)) {
                        return _Dt;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dt", _Dt.EntityConfiguration, _Dt.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeCode", _RecipeCode.EntityConfiguration, _RecipeCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ScanBarcode {
                get {
                    if ((aliasName == null)) {
                        return _ScanBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ScanBarcode", _ScanBarcode.EntityConfiguration, _ScanBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ScanMaterCode {
                get {
                    if ((aliasName == null)) {
                        return _ScanMaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ScanMaterCode", _ScanMaterCode.EntityConfiguration, _ScanMaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Msg {
                get {
                    if ((aliasName == null)) {
                        return _Msg;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Msg", _Msg.EntityConfiguration, _Msg.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Usercode {
                get {
                    if ((aliasName == null)) {
                        return _Usercode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Usercode", _Usercode.EntityConfiguration, _Usercode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftId {
                get {
                    if ((aliasName == null)) {
                        return _ShiftId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftId", _ShiftId.EntityConfiguration, _ShiftId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ClassId {
                get {
                    if ((aliasName == null)) {
                        return _ClassId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ClassId", _ClassId.EntityConfiguration, _ClassId.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
