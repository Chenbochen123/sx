//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class BasMaterialMinorTypeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasMaterialMinorType>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.BasMaterialMinorType\" isReadOnly=\"false\" isAutoPreLoad=\"fals" +
        "e\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"BasMaterialMinorType\" b" +
        "atchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=" +
        "\"true\" isNotNull=\"true\" />\r\n    <Property name=\"MinorTypeID\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"MinorTypeID\" mappingColumnType=\"System.String\" sqlType=\"char(2)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinorTypeName\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"MinorTypeName\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"MajorID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MajorID\" m" +
        "appingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=" +
        "\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ERPRela" +
        "tionType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"ERPRelationType\" mappingColumnType=" +
        "\"System.String\" sqlType=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"MinStore\" type=\"System.Nullable`1[System.Decimal]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"MinStore\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"" +
        "decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaxStore" +
        "\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaxStore\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class BasMaterialMinorType : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _BasMaterialMinorTypeEntityConfiguration;

        protected int _ObjID;

        protected string _MinorTypeID;

        protected string _MinorTypeName;

        protected global::System.Int32? _MajorID;

        protected string _Remark;

        protected string _DeleteFlag;

        protected string _ERPRelationType;

        protected global::System.Decimal? _MinStore;

        protected global::System.Decimal? _MaxStore;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.BasMaterialMinorType left, global::Mesnac.Entity.BasMaterialMinorType right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.BasMaterialMinorType left, global::Mesnac.Entity.BasMaterialMinorType right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public string MinorTypeID
        {
            get
            {
                return this._MinorTypeID;
            }
            set
            {
                this.OnPropertyChanged("MinorTypeID", this._MinorTypeID, value);
                this._MinorTypeID = value;
            }
        }

        public string MinorTypeName
        {
            get
            {
                return this._MinorTypeName;
            }
            set
            {
                this.OnPropertyChanged("MinorTypeName", this._MinorTypeName, value);
                this._MinorTypeName = value;
            }
        }

        public global::System.Int32? MajorID
        {
            get
            {
                return this._MajorID;
            }
            set
            {
                this.OnPropertyChanged("MajorID", this._MajorID, value);
                this._MajorID = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string ERPRelationType
        {
            get
            {
                return this._ERPRelationType;
            }
            set
            {
                this.OnPropertyChanged("ERPRelationType", this._ERPRelationType, value);
                this._ERPRelationType = value;
            }
        }

        public global::System.Decimal? MinStore
        {
            get
            {
                return this._MinStore;
            }
            set
            {
                this.OnPropertyChanged("MinStore", this._MinStore, value);
                this._MinStore = value;
            }
        }

        public global::System.Decimal? MaxStore
        {
            get
            {
                return this._MaxStore;
            }
            set
            {
                this.OnPropertyChanged("MaxStore", this._MaxStore, value);
                this._MaxStore = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((BasMaterialMinorType._BasMaterialMinorTypeEntityConfiguration == null))
            {
                BasMaterialMinorType._BasMaterialMinorTypeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasMaterialMinorType");
            }
            return BasMaterialMinorType._BasMaterialMinorTypeEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._ObjID,
                    this._MinorTypeID,
                    this._MinorTypeName,
                    this._MajorID,
                    this._Remark,
                    this._DeleteFlag,
                    this._ERPRelationType,
                    this._MinStore,
                    this._MaxStore};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._MinorTypeID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._MinorTypeName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MajorID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Remark = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._DeleteFlag = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ERPRelationType = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._MinStore = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._MaxStore = reader.GetDecimal(8);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._MinorTypeID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._MinorTypeName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MajorID = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Remark = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._DeleteFlag = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ERPRelationType = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._MinStore = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._MaxStore = ((System.Nullable<decimal>)(row[8]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasMaterialMinorType).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasMaterialMinorType)(obj)).isAttached)
                        && (this.ObjID == ((global::Mesnac.Entity.BasMaterialMinorType)(obj)).ObjID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _MinorTypeID = new NBear.Common.PropertyItem("MinorTypeID", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _MinorTypeName = new NBear.Common.PropertyItem("MinorTypeName", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _MajorID = new NBear.Common.PropertyItem("MajorID", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _ERPRelationType = new NBear.Common.PropertyItem("ERPRelationType", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _MinStore = new NBear.Common.PropertyItem("MinStore", "Mesnac.Entity.BasMaterialMinorType");

            protected NBear.Common.PropertyItem _MaxStore = new NBear.Common.PropertyItem("MaxStore", "Mesnac.Entity.BasMaterialMinorType");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MinorTypeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MinorTypeID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MinorTypeID", _MinorTypeID.EntityConfiguration, _MinorTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MinorTypeName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MinorTypeName;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MinorTypeName", _MinorTypeName.EntityConfiguration, _MinorTypeName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MajorID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MajorID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MajorID", _MajorID.EntityConfiguration, _MajorID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ERPRelationType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ERPRelationType;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ERPRelationType", _ERPRelationType.EntityConfiguration, _ERPRelationType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MinStore
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MinStore;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MinStore", _MinStore.EntityConfiguration, _MinStore.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaxStore
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaxStore;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaxStore", _MaxStore.EntityConfiguration, _MaxStore.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
