//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PpmRubberStorageArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmRubberStorage>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PpmRubberStorage\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmRubberStorage\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"StorageID\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" is" +
        "PrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StoragePlaceID\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property na" +
        "me=\"Barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <" +
        "Property name=\"ShelfBarcode\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShelfBarcode\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"BarcodeStart\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"BarcodeStart\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"BarcodeEnd\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarcodeE" +
        "nd\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShelfNum\" type=\"System.Null" +
        "able`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"ShelfNum\" mappingColumnType=\"System.Nullable" +
        "`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"MemNote\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MemNote\" mappingColum" +
        "nType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"PlanDate\" type=\"System.Nullable`1[System.DateTime]\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"PlanDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" s" +
        "qlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"ShiftID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System." +
        "String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"ShiftClassID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftClassID\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipCo" +
        "de\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ValidDate\" type=\"Sy" +
        "stem.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"ValidDate\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"ProductWeight\" type=\"System.Nullable`1[Syste" +
        "m.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"ProductWeight\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"StockFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultVa" +
        "lue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"StockFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckFlag\" type=\"System.String" +
        "\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"CheckFlag\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"TecDealFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TecDea" +
        "lFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"TecDealIdea\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"TecDealIdea\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ConsumeWeight\" t" +
        "ype=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ConsumeWeight\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"RealWeight\" type=\"System.Nullable`1[" +
        "System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"RealWeight\" mappingColumnType=\"System.Nullable`1[" +
        "System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"RecordDate\" type=\"System.Nullable`1[System.DateTime]\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"RecordDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType" +
        "=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OperP" +
        "erson\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"OperPerson\" mappingColumnType=\"System." +
        "String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"RubType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RubType\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"varchar(2)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"LLBarCode\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LLBarCode" +
        "\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"RealNum\" type=\"System.Nullable`1[System" +
        ".Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"RealNum\" mappingColumnType=\"System.Nullable`1[System.Int3" +
        "2]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"IsInValid\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"IsInValid\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"varchar(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </" +
        "Properties>\r\n</EntityConfiguration>")]
    public partial class PpmRubberStorage : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PpmRubberStorageEntityConfiguration;

        protected string _StorageID;

        protected string _StoragePlaceID;

        protected string _Barcode;

        protected string _ShelfBarcode;

        protected global::System.Int32? _BarcodeStart;

        protected global::System.Int32? _BarcodeEnd;

        protected global::System.Int32? _ShelfNum;

        protected string _MemNote;

        protected global::System.DateTime? _PlanDate;

        protected string _ShiftID;

        protected string _ShiftClassID;

        protected string _EquipCode;

        protected string _MaterCode;

        protected global::System.DateTime? _ValidDate;

        protected global::System.Decimal? _ProductWeight;

        protected string _StockFlag;

        protected string _CheckFlag;

        protected string _TecDealFlag;

        protected string _TecDealIdea;

        protected global::System.Decimal? _ConsumeWeight;

        protected global::System.Decimal? _RealWeight;

        protected global::System.DateTime? _RecordDate;

        protected string _OperPerson;

        protected string _RubType;

        protected string _LLBarCode;

        protected global::System.Int32? _RealNum;

        protected string _IsInValid;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PpmRubberStorage left, global::Mesnac.Entity.PpmRubberStorage right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PpmRubberStorage left, global::Mesnac.Entity.PpmRubberStorage right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public string StoragePlaceID
        {
            get
            {
                return this._StoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }

        public string Barcode
        {
            get
            {
                return this._Barcode;
            }
            set
            {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }

        public string ShelfBarcode
        {
            get
            {
                return this._ShelfBarcode;
            }
            set
            {
                this.OnPropertyChanged("ShelfBarcode", this._ShelfBarcode, value);
                this._ShelfBarcode = value;
            }
        }

        public global::System.Int32? BarcodeStart
        {
            get
            {
                return this._BarcodeStart;
            }
            set
            {
                this.OnPropertyChanged("BarcodeStart", this._BarcodeStart, value);
                this._BarcodeStart = value;
            }
        }

        public global::System.Int32? BarcodeEnd
        {
            get
            {
                return this._BarcodeEnd;
            }
            set
            {
                this.OnPropertyChanged("BarcodeEnd", this._BarcodeEnd, value);
                this._BarcodeEnd = value;
            }
        }

        public global::System.Int32? ShelfNum
        {
            get
            {
                return this._ShelfNum;
            }
            set
            {
                this.OnPropertyChanged("ShelfNum", this._ShelfNum, value);
                this._ShelfNum = value;
            }
        }

        public string MemNote
        {
            get
            {
                return this._MemNote;
            }
            set
            {
                this.OnPropertyChanged("MemNote", this._MemNote, value);
                this._MemNote = value;
            }
        }

        public global::System.DateTime? PlanDate
        {
            get
            {
                return this._PlanDate;
            }
            set
            {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }

        public string ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public string ShiftClassID
        {
            get
            {
                return this._ShiftClassID;
            }
            set
            {
                this.OnPropertyChanged("ShiftClassID", this._ShiftClassID, value);
                this._ShiftClassID = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public string MaterCode
        {
            get
            {
                return this._MaterCode;
            }
            set
            {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }

        public global::System.DateTime? ValidDate
        {
            get
            {
                return this._ValidDate;
            }
            set
            {
                this.OnPropertyChanged("ValidDate", this._ValidDate, value);
                this._ValidDate = value;
            }
        }

        public global::System.Decimal? ProductWeight
        {
            get
            {
                return this._ProductWeight;
            }
            set
            {
                this.OnPropertyChanged("ProductWeight", this._ProductWeight, value);
                this._ProductWeight = value;
            }
        }

        public string StockFlag
        {
            get
            {
                return this._StockFlag;
            }
            set
            {
                this.OnPropertyChanged("StockFlag", this._StockFlag, value);
                this._StockFlag = value;
            }
        }

        public string CheckFlag
        {
            get
            {
                return this._CheckFlag;
            }
            set
            {
                this.OnPropertyChanged("CheckFlag", this._CheckFlag, value);
                this._CheckFlag = value;
            }
        }

        public string TecDealFlag
        {
            get
            {
                return this._TecDealFlag;
            }
            set
            {
                this.OnPropertyChanged("TecDealFlag", this._TecDealFlag, value);
                this._TecDealFlag = value;
            }
        }

        public string TecDealIdea
        {
            get
            {
                return this._TecDealIdea;
            }
            set
            {
                this.OnPropertyChanged("TecDealIdea", this._TecDealIdea, value);
                this._TecDealIdea = value;
            }
        }

        public global::System.Decimal? ConsumeWeight
        {
            get
            {
                return this._ConsumeWeight;
            }
            set
            {
                this.OnPropertyChanged("ConsumeWeight", this._ConsumeWeight, value);
                this._ConsumeWeight = value;
            }
        }

        public global::System.Decimal? RealWeight
        {
            get
            {
                return this._RealWeight;
            }
            set
            {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }

        public global::System.DateTime? RecordDate
        {
            get
            {
                return this._RecordDate;
            }
            set
            {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }

        public string OperPerson
        {
            get
            {
                return this._OperPerson;
            }
            set
            {
                this.OnPropertyChanged("OperPerson", this._OperPerson, value);
                this._OperPerson = value;
            }
        }

        public string RubType
        {
            get
            {
                return this._RubType;
            }
            set
            {
                this.OnPropertyChanged("RubType", this._RubType, value);
                this._RubType = value;
            }
        }

        public string LLBarCode
        {
            get
            {
                return this._LLBarCode;
            }
            set
            {
                this.OnPropertyChanged("LLBarCode", this._LLBarCode, value);
                this._LLBarCode = value;
            }
        }

        public global::System.Int32? RealNum
        {
            get
            {
                return this._RealNum;
            }
            set
            {
                this.OnPropertyChanged("RealNum", this._RealNum, value);
                this._RealNum = value;
            }
        }

        public string IsInValid
        {
            get
            {
                return this._IsInValid;
            }
            set
            {
                this.OnPropertyChanged("IsInValid", this._IsInValid, value);
                this._IsInValid = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PpmRubberStorage._PpmRubberStorageEntityConfiguration == null))
            {
                PpmRubberStorage._PpmRubberStorageEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmRubberStorage");
            }
            return PpmRubberStorage._PpmRubberStorageEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._StorageID,
                    this._StoragePlaceID,
                    this._Barcode,
                    this._ShelfBarcode,
                    this._BarcodeStart,
                    this._BarcodeEnd,
                    this._ShelfNum,
                    this._MemNote,
                    this._PlanDate,
                    this._ShiftID,
                    this._ShiftClassID,
                    this._EquipCode,
                    this._MaterCode,
                    this._ValidDate,
                    this._ProductWeight,
                    this._StockFlag,
                    this._CheckFlag,
                    this._TecDealFlag,
                    this._TecDealIdea,
                    this._ConsumeWeight,
                    this._RealWeight,
                    this._RecordDate,
                    this._OperPerson,
                    this._RubType,
                    this._LLBarCode,
                    this._RealNum,
                    this._IsInValid};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._StorageID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._StoragePlaceID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Barcode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ShelfBarcode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._BarcodeStart = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._BarcodeEnd = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ShelfNum = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._MemNote = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._PlanDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ShiftID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._ShiftClassID = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._EquipCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._MaterCode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._ValidDate = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._ProductWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._StockFlag = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._CheckFlag = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._TecDealFlag = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._TecDealIdea = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._ConsumeWeight = reader.GetDecimal(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._RealWeight = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._RecordDate = this.GetDateTime(reader, 21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._OperPerson = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._RubType = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._LLBarCode = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._RealNum = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._IsInValid = reader.GetString(26);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._StorageID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._StoragePlaceID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Barcode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ShelfBarcode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._BarcodeStart = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._BarcodeEnd = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ShelfNum = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._MemNote = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._PlanDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._ShiftID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._ShiftClassID = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._EquipCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._MaterCode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._ValidDate = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._ProductWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._StockFlag = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._CheckFlag = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._TecDealFlag = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._TecDealIdea = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._ConsumeWeight = ((System.Nullable<decimal>)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._RealWeight = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._RecordDate = this.GetDateTime(row, 21);
            }
            if ((false == row.IsNull(22)))
            {
                this._OperPerson = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._RubType = ((string)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._LLBarCode = ((string)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._RealNum = ((System.Nullable<int>)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._IsInValid = ((string)(row[26]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmRubberStorage).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PpmRubberStorage)(obj)).isAttached)
                        && (this.StorageID == ((global::Mesnac.Entity.PpmRubberStorage)(obj)).StorageID))
                        && (this.StoragePlaceID == ((global::Mesnac.Entity.PpmRubberStorage)(obj)).StoragePlaceID))
                        && (this.Barcode == ((global::Mesnac.Entity.PpmRubberStorage)(obj)).Barcode));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ShelfBarcode = new NBear.Common.PropertyItem("ShelfBarcode", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _BarcodeStart = new NBear.Common.PropertyItem("BarcodeStart", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _BarcodeEnd = new NBear.Common.PropertyItem("BarcodeEnd", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ShelfNum = new NBear.Common.PropertyItem("ShelfNum", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _MemNote = new NBear.Common.PropertyItem("MemNote", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ShiftClassID = new NBear.Common.PropertyItem("ShiftClassID", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ValidDate = new NBear.Common.PropertyItem("ValidDate", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ProductWeight = new NBear.Common.PropertyItem("ProductWeight", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _StockFlag = new NBear.Common.PropertyItem("StockFlag", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _CheckFlag = new NBear.Common.PropertyItem("CheckFlag", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _TecDealFlag = new NBear.Common.PropertyItem("TecDealFlag", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _TecDealIdea = new NBear.Common.PropertyItem("TecDealIdea", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _ConsumeWeight = new NBear.Common.PropertyItem("ConsumeWeight", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _OperPerson = new NBear.Common.PropertyItem("OperPerson", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _RubType = new NBear.Common.PropertyItem("RubType", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _LLBarCode = new NBear.Common.PropertyItem("LLBarCode", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _RealNum = new NBear.Common.PropertyItem("RealNum", "Mesnac.Entity.PpmRubberStorage");

            protected NBear.Common.PropertyItem _IsInValid = new NBear.Common.PropertyItem("IsInValid", "Mesnac.Entity.PpmRubberStorage");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Barcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Barcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShelfBarcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShelfBarcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShelfBarcode", _ShelfBarcode.EntityConfiguration, _ShelfBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarcodeStart
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarcodeStart;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarcodeStart", _BarcodeStart.EntityConfiguration, _BarcodeStart.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarcodeEnd
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarcodeEnd;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarcodeEnd", _BarcodeEnd.EntityConfiguration, _BarcodeEnd.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShelfNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShelfNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShelfNum", _ShelfNum.EntityConfiguration, _ShelfNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MemNote
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MemNote;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MemNote", _MemNote.EntityConfiguration, _MemNote.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftClassID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftClassID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftClassID", _ShiftClassID.EntityConfiguration, _ShiftClassID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ValidDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ValidDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ValidDate", _ValidDate.EntityConfiguration, _ValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ProductWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ProductWeight", _ProductWeight.EntityConfiguration, _ProductWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StockFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StockFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StockFlag", _StockFlag.EntityConfiguration, _StockFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CheckFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CheckFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CheckFlag", _CheckFlag.EntityConfiguration, _CheckFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem TecDealFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TecDealFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TecDealFlag", _TecDealFlag.EntityConfiguration, _TecDealFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem TecDealIdea
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TecDealIdea;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TecDealIdea", _TecDealIdea.EntityConfiguration, _TecDealIdea.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ConsumeWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ConsumeWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ConsumeWeight", _ConsumeWeight.EntityConfiguration, _ConsumeWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RecordDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RecordDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OperPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OperPerson", _OperPerson.EntityConfiguration, _OperPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RubType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RubType;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RubType", _RubType.EntityConfiguration, _RubType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LLBarCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LLBarCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LLBarCode", _LLBarCode.EntityConfiguration, _LLBarCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealNum", _RealNum.EntityConfiguration, _RealNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IsInValid
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsInValid;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IsInValid", _IsInValid.EntityConfiguration, _IsInValid.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
