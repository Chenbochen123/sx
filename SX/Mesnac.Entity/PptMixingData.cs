//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptMixingDataArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptMixingData> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PptMixingData\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"PptMixingData\" batchSize=\"10\">\r" +
        "\n  <Properties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Barcode\" mappingColumnType=\"System.String\" sqlType=\"char(18)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"MixID\" type=\"System.Int32\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"MixID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"TermCode\" type=\"System.Nullable`1[Syst" +
        "em.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"TermCode\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"SetTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnl" +
        "y=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SetTime\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"SeTemp\" type=\"System.Nullable`1[System" +
        ".Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"SeTemp\" mappingColumnType=\"System.Nullable`1[System.Deci" +
        "mal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"SetEner\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isR" +
        "eadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SetEner\" m" +
        "appingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SetPower\" type=\"System.Nul" +
        "lable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"SetPower\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"SetPres\" type=\"System.Nullable`1[System.Decimal]\" isInher" +
        "ited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"SetPres\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"de" +
        "cimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SetRota\" t" +
        "ype=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"SetRota\" mappingColumnType=" +
        "\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"ActCode\" type=\"System.Nullable`1[System.Int" +
        "32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"ActCode\" mappingColumnType=\"System.Nullable`1[System.Int32]\" s" +
        "qlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Save" +
        "Time\" type=\"System.DateTime\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"SaveTime\" mappingColumnType=\"System.Da" +
        "teTime\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"PFTime\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"PFTime\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"PFTemp\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PFTemp\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"PFEner\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PFEner\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"PFPower\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PFP" +
        "ower\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"PFPres\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"PFPres\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PFRota\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"PFRota\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PptMixingData : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptMixingDataEntityConfiguration;
        
        protected string _Barcode;
        
        protected int _MixID;
        
        protected global::System.Int32? _TermCode;
        
        protected global::System.Int32? _SetTime;
        
        protected global::System.Decimal? _SeTemp;
        
        protected global::System.Decimal? _SetEner;
        
        protected global::System.Decimal? _SetPower;
        
        protected global::System.Decimal? _SetPres;
        
        protected global::System.Decimal? _SetRota;
        
        protected global::System.Int32? _ActCode;
        
        protected global::System.DateTime _SaveTime;
        
        protected string _PFTime;
        
        protected string _PFTemp;
        
        protected string _PFEner;
        
        protected string _PFPower;
        
        protected string _PFPres;
        
        protected string _PFRota;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptMixingData left, global::Mesnac.Entity.PptMixingData right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptMixingData left, global::Mesnac.Entity.PptMixingData right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int MixID {
            get {
                return this._MixID;
            }
            set {
                this.OnPropertyChanged("MixID", this._MixID, value);
                this._MixID = value;
            }
        }
        
        public global::System.Int32? TermCode {
            get {
                return this._TermCode;
            }
            set {
                this.OnPropertyChanged("TermCode", this._TermCode, value);
                this._TermCode = value;
            }
        }
        
        public global::System.Int32? SetTime {
            get {
                return this._SetTime;
            }
            set {
                this.OnPropertyChanged("SetTime", this._SetTime, value);
                this._SetTime = value;
            }
        }
        
        public global::System.Decimal? SeTemp {
            get {
                return this._SeTemp;
            }
            set {
                this.OnPropertyChanged("SeTemp", this._SeTemp, value);
                this._SeTemp = value;
            }
        }
        
        public global::System.Decimal? SetEner {
            get {
                return this._SetEner;
            }
            set {
                this.OnPropertyChanged("SetEner", this._SetEner, value);
                this._SetEner = value;
            }
        }
        
        public global::System.Decimal? SetPower {
            get {
                return this._SetPower;
            }
            set {
                this.OnPropertyChanged("SetPower", this._SetPower, value);
                this._SetPower = value;
            }
        }
        
        public global::System.Decimal? SetPres {
            get {
                return this._SetPres;
            }
            set {
                this.OnPropertyChanged("SetPres", this._SetPres, value);
                this._SetPres = value;
            }
        }
        
        public global::System.Decimal? SetRota {
            get {
                return this._SetRota;
            }
            set {
                this.OnPropertyChanged("SetRota", this._SetRota, value);
                this._SetRota = value;
            }
        }
        
        public global::System.Int32? ActCode {
            get {
                return this._ActCode;
            }
            set {
                this.OnPropertyChanged("ActCode", this._ActCode, value);
                this._ActCode = value;
            }
        }
        
        public global::System.DateTime SaveTime {
            get {
                return this._SaveTime;
            }
            set {
                this.OnPropertyChanged("SaveTime", this._SaveTime, value);
                this._SaveTime = value;
            }
        }
        
        public string PFTime {
            get {
                return this._PFTime;
            }
            set {
                this.OnPropertyChanged("PFTime", this._PFTime, value);
                this._PFTime = value;
            }
        }
        
        public string PFTemp {
            get {
                return this._PFTemp;
            }
            set {
                this.OnPropertyChanged("PFTemp", this._PFTemp, value);
                this._PFTemp = value;
            }
        }
        
        public string PFEner {
            get {
                return this._PFEner;
            }
            set {
                this.OnPropertyChanged("PFEner", this._PFEner, value);
                this._PFEner = value;
            }
        }
        
        public string PFPower {
            get {
                return this._PFPower;
            }
            set {
                this.OnPropertyChanged("PFPower", this._PFPower, value);
                this._PFPower = value;
            }
        }
        
        public string PFPres {
            get {
                return this._PFPres;
            }
            set {
                this.OnPropertyChanged("PFPres", this._PFPres, value);
                this._PFPres = value;
            }
        }
        
        public string PFRota {
            get {
                return this._PFRota;
            }
            set {
                this.OnPropertyChanged("PFRota", this._PFRota, value);
                this._PFRota = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptMixingData._PptMixingDataEntityConfiguration == null)) {
                PptMixingData._PptMixingDataEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptMixingData");
            }
            return PptMixingData._PptMixingDataEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._MixID,
                    this._TermCode,
                    this._SetTime,
                    this._SeTemp,
                    this._SetEner,
                    this._SetPower,
                    this._SetPres,
                    this._SetRota,
                    this._ActCode,
                    this._SaveTime,
                    this._PFTime,
                    this._PFTemp,
                    this._PFEner,
                    this._PFPower,
                    this._PFPres,
                    this._PFRota};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MixID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._TermCode = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SetTime = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._SeTemp = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._SetEner = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._SetPower = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._SetPres = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._SetRota = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ActCode = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._SaveTime = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._PFTime = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._PFTemp = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._PFEner = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._PFPower = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._PFPres = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._PFRota = reader.GetString(16);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MixID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._TermCode = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._SetTime = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._SeTemp = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._SetEner = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._SetPower = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._SetPres = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._SetRota = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ActCode = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._SaveTime = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._PFTime = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._PFTemp = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._PFEner = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._PFPower = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._PFPres = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._PFRota = ((string)(row[16]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptMixingData).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptMixingData)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _MixID = new NBear.Common.PropertyItem("MixID", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _TermCode = new NBear.Common.PropertyItem("TermCode", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SetTime = new NBear.Common.PropertyItem("SetTime", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SeTemp = new NBear.Common.PropertyItem("SeTemp", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SetEner = new NBear.Common.PropertyItem("SetEner", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SetPower = new NBear.Common.PropertyItem("SetPower", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SetPres = new NBear.Common.PropertyItem("SetPres", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SetRota = new NBear.Common.PropertyItem("SetRota", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _ActCode = new NBear.Common.PropertyItem("ActCode", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _SaveTime = new NBear.Common.PropertyItem("SaveTime", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _PFTime = new NBear.Common.PropertyItem("PFTime", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _PFTemp = new NBear.Common.PropertyItem("PFTemp", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _PFEner = new NBear.Common.PropertyItem("PFEner", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _PFPower = new NBear.Common.PropertyItem("PFPower", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _PFPres = new NBear.Common.PropertyItem("PFPres", "Mesnac.Entity.PptMixingData");
            
            protected NBear.Common.PropertyItem _PFRota = new NBear.Common.PropertyItem("PFRota", "Mesnac.Entity.PptMixingData");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MixID {
                get {
                    if ((aliasName == null)) {
                        return _MixID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MixID", _MixID.EntityConfiguration, _MixID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TermCode {
                get {
                    if ((aliasName == null)) {
                        return _TermCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TermCode", _TermCode.EntityConfiguration, _TermCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetTime {
                get {
                    if ((aliasName == null)) {
                        return _SetTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetTime", _SetTime.EntityConfiguration, _SetTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeTemp {
                get {
                    if ((aliasName == null)) {
                        return _SeTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeTemp", _SeTemp.EntityConfiguration, _SeTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetEner {
                get {
                    if ((aliasName == null)) {
                        return _SetEner;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetEner", _SetEner.EntityConfiguration, _SetEner.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetPower {
                get {
                    if ((aliasName == null)) {
                        return _SetPower;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetPower", _SetPower.EntityConfiguration, _SetPower.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetPres {
                get {
                    if ((aliasName == null)) {
                        return _SetPres;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetPres", _SetPres.EntityConfiguration, _SetPres.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetRota {
                get {
                    if ((aliasName == null)) {
                        return _SetRota;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetRota", _SetRota.EntityConfiguration, _SetRota.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ActCode {
                get {
                    if ((aliasName == null)) {
                        return _ActCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ActCode", _ActCode.EntityConfiguration, _ActCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SaveTime {
                get {
                    if ((aliasName == null)) {
                        return _SaveTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SaveTime", _SaveTime.EntityConfiguration, _SaveTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFTime {
                get {
                    if ((aliasName == null)) {
                        return _PFTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFTime", _PFTime.EntityConfiguration, _PFTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFTemp {
                get {
                    if ((aliasName == null)) {
                        return _PFTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFTemp", _PFTemp.EntityConfiguration, _PFTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFEner {
                get {
                    if ((aliasName == null)) {
                        return _PFEner;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFEner", _PFEner.EntityConfiguration, _PFEner.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFPower {
                get {
                    if ((aliasName == null)) {
                        return _PFPower;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFPower", _PFPower.EntityConfiguration, _PFPower.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFPres {
                get {
                    if ((aliasName == null)) {
                        return _PFPres;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFPres", _PFPres.EntityConfiguration, _PFPres.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFRota {
                get {
                    if ((aliasName == null)) {
                        return _PFRota;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFRota", _PFRota.EntityConfiguration, _PFRota.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
