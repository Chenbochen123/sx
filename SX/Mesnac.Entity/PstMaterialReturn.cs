//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstMaterialReturnArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstMaterialReturn>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstMaterialReturn\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstMaterialReturn\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrim" +
        "aryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"ReturnDate\" type=\"System." +
        "Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"ReturnDate\" mappingColumnType=\"System" +
        ".Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"ReturnReason\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"ReturnReason\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ReturnFactory\" type=\"Syst" +
        "em.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"ReturnFactory\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"MakerPerson\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Maker" +
        "Person\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"StorageID\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InaccountDurati" +
        "on\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"InaccountDuration\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"nvarchar(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"ChkDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"ChkDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datet" +
        "ime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ChkPerson\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"ChkPerson\" mappingColumnType=\"System.String\" s" +
        "qlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"ChkResultFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ChkResultFlag\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" sq" +
        "lDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarc" +
        "har(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityCon" +
        "figuration>")]
    public partial class PstMaterialReturn : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstMaterialReturnEntityConfiguration;

        protected string _BillNo;

        protected global::System.DateTime? _ReturnDate;

        protected string _ReturnReason;

        protected global::System.Int32? _ReturnFactory;

        protected string _MakerPerson;

        protected string _StorageID;

        protected string _InaccountDuration;

        protected global::System.DateTime? _ChkDate;

        protected string _ChkPerson;

        protected string _ChkResultFlag;

        protected string _DeleteFlag;

        protected string _Remark;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PstMaterialReturn left, global::Mesnac.Entity.PstMaterialReturn right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PstMaterialReturn left, global::Mesnac.Entity.PstMaterialReturn right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string BillNo
        {
            get
            {
                return this._BillNo;
            }
            set
            {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }

        public global::System.DateTime? ReturnDate
        {
            get
            {
                return this._ReturnDate;
            }
            set
            {
                this.OnPropertyChanged("ReturnDate", this._ReturnDate, value);
                this._ReturnDate = value;
            }
        }

        public string ReturnReason
        {
            get
            {
                return this._ReturnReason;
            }
            set
            {
                this.OnPropertyChanged("ReturnReason", this._ReturnReason, value);
                this._ReturnReason = value;
            }
        }

        public global::System.Int32? ReturnFactory
        {
            get
            {
                return this._ReturnFactory;
            }
            set
            {
                this.OnPropertyChanged("ReturnFactory", this._ReturnFactory, value);
                this._ReturnFactory = value;
            }
        }

        public string MakerPerson
        {
            get
            {
                return this._MakerPerson;
            }
            set
            {
                this.OnPropertyChanged("MakerPerson", this._MakerPerson, value);
                this._MakerPerson = value;
            }
        }

        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public string InaccountDuration
        {
            get
            {
                return this._InaccountDuration;
            }
            set
            {
                this.OnPropertyChanged("InaccountDuration", this._InaccountDuration, value);
                this._InaccountDuration = value;
            }
        }

        public global::System.DateTime? ChkDate
        {
            get
            {
                return this._ChkDate;
            }
            set
            {
                this.OnPropertyChanged("ChkDate", this._ChkDate, value);
                this._ChkDate = value;
            }
        }

        public string ChkPerson
        {
            get
            {
                return this._ChkPerson;
            }
            set
            {
                this.OnPropertyChanged("ChkPerson", this._ChkPerson, value);
                this._ChkPerson = value;
            }
        }

        public string ChkResultFlag
        {
            get
            {
                return this._ChkResultFlag;
            }
            set
            {
                this.OnPropertyChanged("ChkResultFlag", this._ChkResultFlag, value);
                this._ChkResultFlag = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PstMaterialReturn._PstMaterialReturnEntityConfiguration == null))
            {
                PstMaterialReturn._PstMaterialReturnEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstMaterialReturn");
            }
            return PstMaterialReturn._PstMaterialReturnEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._BillNo,
                    this._ReturnDate,
                    this._ReturnReason,
                    this._ReturnFactory,
                    this._MakerPerson,
                    this._StorageID,
                    this._InaccountDuration,
                    this._ChkDate,
                    this._ChkPerson,
                    this._ChkResultFlag,
                    this._DeleteFlag,
                    this._Remark};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._ReturnDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ReturnReason = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ReturnFactory = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._MakerPerson = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._StorageID = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._InaccountDuration = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ChkDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._ChkPerson = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ChkResultFlag = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._DeleteFlag = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Remark = reader.GetString(11);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._ReturnDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2)))
            {
                this._ReturnReason = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ReturnFactory = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._MakerPerson = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._StorageID = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._InaccountDuration = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ChkDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8)))
            {
                this._ChkPerson = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._ChkResultFlag = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._DeleteFlag = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Remark = ((string)(row[11]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstMaterialReturn).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PstMaterialReturn)(obj)).isAttached)
                        && (this.BillNo == ((global::Mesnac.Entity.PstMaterialReturn)(obj)).BillNo));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _ReturnDate = new NBear.Common.PropertyItem("ReturnDate", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _ReturnReason = new NBear.Common.PropertyItem("ReturnReason", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _ReturnFactory = new NBear.Common.PropertyItem("ReturnFactory", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _MakerPerson = new NBear.Common.PropertyItem("MakerPerson", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _InaccountDuration = new NBear.Common.PropertyItem("InaccountDuration", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _ChkDate = new NBear.Common.PropertyItem("ChkDate", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _ChkPerson = new NBear.Common.PropertyItem("ChkPerson", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _ChkResultFlag = new NBear.Common.PropertyItem("ChkResultFlag", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PstMaterialReturn");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstMaterialReturn");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem BillNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturnDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturnDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturnDate", _ReturnDate.EntityConfiguration, _ReturnDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturnReason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturnReason;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturnReason", _ReturnReason.EntityConfiguration, _ReturnReason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturnFactory
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturnFactory;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturnFactory", _ReturnFactory.EntityConfiguration, _ReturnFactory.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MakerPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MakerPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MakerPerson", _MakerPerson.EntityConfiguration, _MakerPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InaccountDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InaccountDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InaccountDuration", _InaccountDuration.EntityConfiguration, _InaccountDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkDate", _ChkDate.EntityConfiguration, _ChkDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkPerson", _ChkPerson.EntityConfiguration, _ChkPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkResultFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkResultFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkResultFlag", _ChkResultFlag.EntityConfiguration, _ChkResultFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
