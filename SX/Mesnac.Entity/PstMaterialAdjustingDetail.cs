//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstMaterialAdjustingDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstMaterialAdjustingDetail>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstMaterialAdjustingDetail\" isReadOnly=\"false\" isAutoPreLoad" +
        "=\"false\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstMaterialAdjust" +
        "ingDetail\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Barcode" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(18)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property na" +
        "me=\"OrderID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"OrderID\" mappingColumnType=\"Syste" +
        "m.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property na" +
        "me=\"StorageID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"StorageID\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"StoragePlaceID\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StorageP" +
        "laceID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"RecordDate\" type=\"System.Nullabl" +
        "e`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"RecordDate\" mappingColumnType=\"System.Nullab" +
        "le`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode" +
        "\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"DecreaseOrAddFlag\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"DecreaseOrAddFlag\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"AdjustingN" +
        "um\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AdjustingNum\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"PieceWeight\" type=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"PieceWeight\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"AdjustingWeight\" type=\"System.Nullable`1[System.Decimal]\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"AdjustingWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" s" +
        "qlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</E" +
        "ntityConfiguration>")]
    public partial class PstMaterialAdjustingDetail : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstMaterialAdjustingDetailEntityConfiguration;

        protected string _BillNo;

        protected string _Barcode;

        protected int _OrderID;

        protected string _StorageID;

        protected string _StoragePlaceID;

        protected global::System.DateTime? _RecordDate;

        protected string _MaterCode;

        protected string _DecreaseOrAddFlag;

        protected global::System.Int32? _AdjustingNum;

        protected global::System.Decimal? _PieceWeight;

        protected global::System.Decimal? _AdjustingWeight;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PstMaterialAdjustingDetail left, global::Mesnac.Entity.PstMaterialAdjustingDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PstMaterialAdjustingDetail left, global::Mesnac.Entity.PstMaterialAdjustingDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string BillNo
        {
            get
            {
                return this._BillNo;
            }
            set
            {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }

        public string Barcode
        {
            get
            {
                return this._Barcode;
            }
            set
            {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }

        public int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }

        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public string StoragePlaceID
        {
            get
            {
                return this._StoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }

        public global::System.DateTime? RecordDate
        {
            get
            {
                return this._RecordDate;
            }
            set
            {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }

        public string MaterCode
        {
            get
            {
                return this._MaterCode;
            }
            set
            {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }

        public string DecreaseOrAddFlag
        {
            get
            {
                return this._DecreaseOrAddFlag;
            }
            set
            {
                this.OnPropertyChanged("DecreaseOrAddFlag", this._DecreaseOrAddFlag, value);
                this._DecreaseOrAddFlag = value;
            }
        }

        public global::System.Int32? AdjustingNum
        {
            get
            {
                return this._AdjustingNum;
            }
            set
            {
                this.OnPropertyChanged("AdjustingNum", this._AdjustingNum, value);
                this._AdjustingNum = value;
            }
        }

        public global::System.Decimal? PieceWeight
        {
            get
            {
                return this._PieceWeight;
            }
            set
            {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }

        public global::System.Decimal? AdjustingWeight
        {
            get
            {
                return this._AdjustingWeight;
            }
            set
            {
                this.OnPropertyChanged("AdjustingWeight", this._AdjustingWeight, value);
                this._AdjustingWeight = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PstMaterialAdjustingDetail._PstMaterialAdjustingDetailEntityConfiguration == null))
            {
                PstMaterialAdjustingDetail._PstMaterialAdjustingDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstMaterialAdjustingDetail");
            }
            return PstMaterialAdjustingDetail._PstMaterialAdjustingDetailEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._BillNo,
                    this._Barcode,
                    this._OrderID,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._RecordDate,
                    this._MaterCode,
                    this._DecreaseOrAddFlag,
                    this._AdjustingNum,
                    this._PieceWeight,
                    this._AdjustingWeight};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Barcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._OrderID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._StorageID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._StoragePlaceID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._RecordDate = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._MaterCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._DecreaseOrAddFlag = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._AdjustingNum = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._PieceWeight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._AdjustingWeight = reader.GetDecimal(10);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Barcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._OrderID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._StorageID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._StoragePlaceID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._RecordDate = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6)))
            {
                this._MaterCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._DecreaseOrAddFlag = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._AdjustingNum = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._PieceWeight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._AdjustingWeight = ((System.Nullable<decimal>)(row[10]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstMaterialAdjustingDetail).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PstMaterialAdjustingDetail)(obj)).isAttached)
                        && (this.BillNo == ((global::Mesnac.Entity.PstMaterialAdjustingDetail)(obj)).BillNo))
                        && (this.Barcode == ((global::Mesnac.Entity.PstMaterialAdjustingDetail)(obj)).Barcode))
                        && (this.OrderID == ((global::Mesnac.Entity.PstMaterialAdjustingDetail)(obj)).OrderID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _DecreaseOrAddFlag = new NBear.Common.PropertyItem("DecreaseOrAddFlag", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _AdjustingNum = new NBear.Common.PropertyItem("AdjustingNum", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PstMaterialAdjustingDetail");

            protected NBear.Common.PropertyItem _AdjustingWeight = new NBear.Common.PropertyItem("AdjustingWeight", "Mesnac.Entity.PstMaterialAdjustingDetail");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem BillNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Barcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Barcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OrderID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OrderID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RecordDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RecordDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DecreaseOrAddFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DecreaseOrAddFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DecreaseOrAddFlag", _DecreaseOrAddFlag.EntityConfiguration, _DecreaseOrAddFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AdjustingNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AdjustingNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AdjustingNum", _AdjustingNum.EntityConfiguration, _AdjustingNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PieceWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PieceWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AdjustingWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AdjustingWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AdjustingWeight", _AdjustingWeight.EntityConfiguration, _AdjustingWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
