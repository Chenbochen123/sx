//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Qmt_QuaStandMasterArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Qmt_QuaStandMaster> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Qmt_QuaStandMaster\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Qmt_QuaStandMaster\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"Stand_id\" type=\"System.Int32\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Stand_id\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey" +
        "=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Stand_code\" type=\"System.Int32\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Stand_code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_code\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Mater_code\" mappingColumnType=\"System.String\" sqlType=\"c" +
        "har(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Define_d" +
        "ate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Define_date\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Worker_barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Worker_barcode\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Stand_vision\" type=\"System.Nullable`1[System.Int3" +
        "2]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Stand_vision\" mappingColumnType=\"System.Nullable`1[System.Int3" +
        "2]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Stand_VisionStat\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stand_VisionStat\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Stand_Date\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stand_" +
        "Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"CountMCode\" type=\"System.String\" isInh" +
        "erited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"CountMCode\" mappingColumnType=\"System.String\" sql" +
        "Type=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"M" +
        "emo_note\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Memo_note\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Auditing\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fa" +
        "lse\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Auditing\" mappingColumnType=\"System.Nullable`1[System.Int32" +
        "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "AuditUser\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"AuditUser\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"MaterCode2\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode2\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Recipe_Version\" type=\"System.Nullable`1[System" +
        ".Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Recipe_Version\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Start_shift\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" " +
        "sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Start_shift\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Ent" +
        "ityConfiguration>")]
    public partial class Qmt_QuaStandMaster : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Qmt_QuaStandMasterEntityConfiguration;
        
        protected int _Stand_id;
        
        protected int _Stand_code;
        
        protected string _Mater_code;
        
        protected string _Define_date;
        
        protected string _Worker_barcode;
        
        protected global::System.Int32? _Stand_vision;
        
        protected string _Stand_VisionStat;
        
        protected string _Stand_Date;
        
        protected string _CountMCode;
        
        protected string _Memo_note;
        
        protected global::System.Int32? _Auditing;
        
        protected string _AuditUser;
        
        protected string _MaterCode2;
        
        protected global::System.Int32? _Recipe_Version;
        
        protected global::System.Int32? _Start_shift;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Qmt_QuaStandMaster left, global::Mesnac.Entity.Qmt_QuaStandMaster right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Qmt_QuaStandMaster left, global::Mesnac.Entity.Qmt_QuaStandMaster right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Stand_id {
            get {
                return this._Stand_id;
            }
            set {
                this.OnPropertyChanged("Stand_id", this._Stand_id, value);
                this._Stand_id = value;
            }
        }
        
        public int Stand_code {
            get {
                return this._Stand_code;
            }
            set {
                this.OnPropertyChanged("Stand_code", this._Stand_code, value);
                this._Stand_code = value;
            }
        }
        
        public string Mater_code {
            get {
                return this._Mater_code;
            }
            set {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }
        
        public string Define_date {
            get {
                return this._Define_date;
            }
            set {
                this.OnPropertyChanged("Define_date", this._Define_date, value);
                this._Define_date = value;
            }
        }
        
        public string Worker_barcode {
            get {
                return this._Worker_barcode;
            }
            set {
                this.OnPropertyChanged("Worker_barcode", this._Worker_barcode, value);
                this._Worker_barcode = value;
            }
        }
        
        public global::System.Int32? Stand_vision {
            get {
                return this._Stand_vision;
            }
            set {
                this.OnPropertyChanged("Stand_vision", this._Stand_vision, value);
                this._Stand_vision = value;
            }
        }
        
        public string Stand_VisionStat {
            get {
                return this._Stand_VisionStat;
            }
            set {
                this.OnPropertyChanged("Stand_VisionStat", this._Stand_VisionStat, value);
                this._Stand_VisionStat = value;
            }
        }
        
        public string Stand_Date {
            get {
                return this._Stand_Date;
            }
            set {
                this.OnPropertyChanged("Stand_Date", this._Stand_Date, value);
                this._Stand_Date = value;
            }
        }
        
        public string CountMCode {
            get {
                return this._CountMCode;
            }
            set {
                this.OnPropertyChanged("CountMCode", this._CountMCode, value);
                this._CountMCode = value;
            }
        }
        
        public string Memo_note {
            get {
                return this._Memo_note;
            }
            set {
                this.OnPropertyChanged("Memo_note", this._Memo_note, value);
                this._Memo_note = value;
            }
        }
        
        public global::System.Int32? Auditing {
            get {
                return this._Auditing;
            }
            set {
                this.OnPropertyChanged("Auditing", this._Auditing, value);
                this._Auditing = value;
            }
        }
        
        public string AuditUser {
            get {
                return this._AuditUser;
            }
            set {
                this.OnPropertyChanged("AuditUser", this._AuditUser, value);
                this._AuditUser = value;
            }
        }
        
        public string MaterCode2 {
            get {
                return this._MaterCode2;
            }
            set {
                this.OnPropertyChanged("MaterCode2", this._MaterCode2, value);
                this._MaterCode2 = value;
            }
        }
        
        public global::System.Int32? Recipe_Version {
            get {
                return this._Recipe_Version;
            }
            set {
                this.OnPropertyChanged("Recipe_Version", this._Recipe_Version, value);
                this._Recipe_Version = value;
            }
        }
        
        public global::System.Int32? Start_shift {
            get {
                return this._Start_shift;
            }
            set {
                this.OnPropertyChanged("Start_shift", this._Start_shift, value);
                this._Start_shift = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Qmt_QuaStandMaster._Qmt_QuaStandMasterEntityConfiguration == null)) {
                Qmt_QuaStandMaster._Qmt_QuaStandMasterEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Qmt_QuaStandMaster");
            }
            return Qmt_QuaStandMaster._Qmt_QuaStandMasterEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Stand_id,
                    this._Stand_code,
                    this._Mater_code,
                    this._Define_date,
                    this._Worker_barcode,
                    this._Stand_vision,
                    this._Stand_VisionStat,
                    this._Stand_Date,
                    this._CountMCode,
                    this._Memo_note,
                    this._Auditing,
                    this._AuditUser,
                    this._MaterCode2,
                    this._Recipe_Version,
                    this._Start_shift};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Stand_id = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Stand_code = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mater_code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Define_date = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Worker_barcode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Stand_vision = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Stand_VisionStat = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Stand_Date = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._CountMCode = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Memo_note = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Auditing = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._AuditUser = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._MaterCode2 = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Recipe_Version = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Start_shift = reader.GetInt32(14);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Stand_id = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Stand_code = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mater_code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Define_date = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Worker_barcode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Stand_vision = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Stand_VisionStat = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Stand_Date = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._CountMCode = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Memo_note = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Auditing = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._AuditUser = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._MaterCode2 = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Recipe_Version = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Start_shift = ((System.Nullable<int>)(row[14]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Qmt_QuaStandMaster).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Qmt_QuaStandMaster)(obj)).isAttached) 
                        && (this.Stand_id == ((global::Mesnac.Entity.Qmt_QuaStandMaster)(obj)).Stand_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Stand_id = new NBear.Common.PropertyItem("Stand_id", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Stand_code = new NBear.Common.PropertyItem("Stand_code", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Define_date = new NBear.Common.PropertyItem("Define_date", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Worker_barcode = new NBear.Common.PropertyItem("Worker_barcode", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Stand_vision = new NBear.Common.PropertyItem("Stand_vision", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Stand_VisionStat = new NBear.Common.PropertyItem("Stand_VisionStat", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Stand_Date = new NBear.Common.PropertyItem("Stand_Date", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _CountMCode = new NBear.Common.PropertyItem("CountMCode", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Memo_note = new NBear.Common.PropertyItem("Memo_note", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Auditing = new NBear.Common.PropertyItem("Auditing", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _AuditUser = new NBear.Common.PropertyItem("AuditUser", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _MaterCode2 = new NBear.Common.PropertyItem("MaterCode2", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Recipe_Version = new NBear.Common.PropertyItem("Recipe_Version", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            protected NBear.Common.PropertyItem _Start_shift = new NBear.Common.PropertyItem("Start_shift", "Mesnac.Entity.Qmt_QuaStandMaster");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Stand_id {
                get {
                    if ((aliasName == null)) {
                        return _Stand_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stand_id", _Stand_id.EntityConfiguration, _Stand_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stand_code {
                get {
                    if ((aliasName == null)) {
                        return _Stand_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stand_code", _Stand_code.EntityConfiguration, _Stand_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Define_date {
                get {
                    if ((aliasName == null)) {
                        return _Define_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Define_date", _Define_date.EntityConfiguration, _Define_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Worker_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Worker_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Worker_barcode", _Worker_barcode.EntityConfiguration, _Worker_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stand_vision {
                get {
                    if ((aliasName == null)) {
                        return _Stand_vision;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stand_vision", _Stand_vision.EntityConfiguration, _Stand_vision.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stand_VisionStat {
                get {
                    if ((aliasName == null)) {
                        return _Stand_VisionStat;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stand_VisionStat", _Stand_VisionStat.EntityConfiguration, _Stand_VisionStat.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stand_Date {
                get {
                    if ((aliasName == null)) {
                        return _Stand_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stand_Date", _Stand_Date.EntityConfiguration, _Stand_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CountMCode {
                get {
                    if ((aliasName == null)) {
                        return _CountMCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CountMCode", _CountMCode.EntityConfiguration, _CountMCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo_note {
                get {
                    if ((aliasName == null)) {
                        return _Memo_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo_note", _Memo_note.EntityConfiguration, _Memo_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Auditing {
                get {
                    if ((aliasName == null)) {
                        return _Auditing;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Auditing", _Auditing.EntityConfiguration, _Auditing.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AuditUser {
                get {
                    if ((aliasName == null)) {
                        return _AuditUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AuditUser", _AuditUser.EntityConfiguration, _AuditUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode2 {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode2", _MaterCode2.EntityConfiguration, _MaterCode2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_Version {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_Version", _Recipe_Version.EntityConfiguration, _Recipe_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Start_shift {
                get {
                    if ((aliasName == null)) {
                        return _Start_shift;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Start_shift", _Start_shift.EntityConfiguration, _Start_shift.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
