//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class IncSapOrderReloadArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.IncSapOrderReload> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.IncSapOrderReload\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"IncSapOrderReload\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjId\" type=\"System.Int32\" isInher" +
        "ited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"ObjId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" " +
        "isNotNull=\"true\" />\r\n    <Property name=\"MesOrderCode\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"MesOrderCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MesOrderType\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"MesOrderType\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"SendDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SendD" +
        "ate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SendSystem\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"SendSystem\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"DealState\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"DealState\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"ErrorDesc\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ErrorDesc\" map" +
        "pingColumnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"SAPOrderCode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"SAPOrderCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SAPOrderType\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"SAPOrderType\" mappingColumnType=\"System.String\" s" +
        "qlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Ext_1\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Ext_1\" mappingColumnType=\"System" +
        ".String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Ext_2\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ext_2\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Ext_3\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ext_3\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Ext_4\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ex" +
        "t_4\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"UploadDate\" type=\"System.Nullable`" +
        "1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"UploadDate\" mappingColumnType=\"System.Nullable" +
        "`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"IsUpload\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsUpload\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class IncSapOrderReload : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _IncSapOrderReloadEntityConfiguration;
        
        protected int _ObjId;
        
        protected string _MesOrderCode;
        
        protected string _MesOrderType;
        
        protected global::System.DateTime? _SendDate;
        
        protected string _SendSystem;
        
        protected string _DealState;
        
        protected string _ErrorDesc;
        
        protected string _SAPOrderCode;
        
        protected string _SAPOrderType;
        
        protected string _Ext_1;
        
        protected string _Ext_2;
        
        protected string _Ext_3;
        
        protected string _Ext_4;
        
        protected global::System.DateTime? _UploadDate;
        
        protected string _IsUpload;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.IncSapOrderReload left, global::Mesnac.Entity.IncSapOrderReload right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.IncSapOrderReload left, global::Mesnac.Entity.IncSapOrderReload right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjId {
            get {
                return this._ObjId;
            }
            set {
                this.OnPropertyChanged("ObjId", this._ObjId, value);
                this._ObjId = value;
            }
        }
        
        public string MesOrderCode {
            get {
                return this._MesOrderCode;
            }
            set {
                this.OnPropertyChanged("MesOrderCode", this._MesOrderCode, value);
                this._MesOrderCode = value;
            }
        }
        
        public string MesOrderType {
            get {
                return this._MesOrderType;
            }
            set {
                this.OnPropertyChanged("MesOrderType", this._MesOrderType, value);
                this._MesOrderType = value;
            }
        }
        
        public global::System.DateTime? SendDate {
            get {
                return this._SendDate;
            }
            set {
                this.OnPropertyChanged("SendDate", this._SendDate, value);
                this._SendDate = value;
            }
        }
        
        public string SendSystem {
            get {
                return this._SendSystem;
            }
            set {
                this.OnPropertyChanged("SendSystem", this._SendSystem, value);
                this._SendSystem = value;
            }
        }
        
        public string DealState {
            get {
                return this._DealState;
            }
            set {
                this.OnPropertyChanged("DealState", this._DealState, value);
                this._DealState = value;
            }
        }
        
        public string ErrorDesc {
            get {
                return this._ErrorDesc;
            }
            set {
                this.OnPropertyChanged("ErrorDesc", this._ErrorDesc, value);
                this._ErrorDesc = value;
            }
        }
        
        public string SAPOrderCode {
            get {
                return this._SAPOrderCode;
            }
            set {
                this.OnPropertyChanged("SAPOrderCode", this._SAPOrderCode, value);
                this._SAPOrderCode = value;
            }
        }
        
        public string SAPOrderType {
            get {
                return this._SAPOrderType;
            }
            set {
                this.OnPropertyChanged("SAPOrderType", this._SAPOrderType, value);
                this._SAPOrderType = value;
            }
        }
        
        public string Ext_1 {
            get {
                return this._Ext_1;
            }
            set {
                this.OnPropertyChanged("Ext_1", this._Ext_1, value);
                this._Ext_1 = value;
            }
        }
        
        public string Ext_2 {
            get {
                return this._Ext_2;
            }
            set {
                this.OnPropertyChanged("Ext_2", this._Ext_2, value);
                this._Ext_2 = value;
            }
        }
        
        public string Ext_3 {
            get {
                return this._Ext_3;
            }
            set {
                this.OnPropertyChanged("Ext_3", this._Ext_3, value);
                this._Ext_3 = value;
            }
        }
        
        public string Ext_4 {
            get {
                return this._Ext_4;
            }
            set {
                this.OnPropertyChanged("Ext_4", this._Ext_4, value);
                this._Ext_4 = value;
            }
        }
        
        public global::System.DateTime? UploadDate {
            get {
                return this._UploadDate;
            }
            set {
                this.OnPropertyChanged("UploadDate", this._UploadDate, value);
                this._UploadDate = value;
            }
        }
        
        public string IsUpload {
            get {
                return this._IsUpload;
            }
            set {
                this.OnPropertyChanged("IsUpload", this._IsUpload, value);
                this._IsUpload = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((IncSapOrderReload._IncSapOrderReloadEntityConfiguration == null)) {
                IncSapOrderReload._IncSapOrderReloadEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.IncSapOrderReload");
            }
            return IncSapOrderReload._IncSapOrderReloadEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjId,
                    this._MesOrderCode,
                    this._MesOrderType,
                    this._SendDate,
                    this._SendSystem,
                    this._DealState,
                    this._ErrorDesc,
                    this._SAPOrderCode,
                    this._SAPOrderType,
                    this._Ext_1,
                    this._Ext_2,
                    this._Ext_3,
                    this._Ext_4,
                    this._UploadDate,
                    this._IsUpload,
                    this._DeleteFlag,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MesOrderCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MesOrderType = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SendDate = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._SendSystem = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._DealState = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ErrorDesc = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._SAPOrderCode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._SAPOrderType = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Ext_1 = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Ext_2 = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Ext_3 = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Ext_4 = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._UploadDate = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._IsUpload = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._DeleteFlag = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Remark = reader.GetString(16);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MesOrderCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MesOrderType = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._SendDate = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4))) {
                this._SendSystem = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._DealState = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ErrorDesc = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._SAPOrderCode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._SAPOrderType = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Ext_1 = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Ext_2 = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Ext_3 = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Ext_4 = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._UploadDate = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14))) {
                this._IsUpload = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._DeleteFlag = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Remark = ((string)(row[16]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.IncSapOrderReload).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.IncSapOrderReload)(obj)).isAttached) 
                        && (this.ObjId == ((global::Mesnac.Entity.IncSapOrderReload)(obj)).ObjId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjId = new NBear.Common.PropertyItem("ObjId", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _MesOrderCode = new NBear.Common.PropertyItem("MesOrderCode", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _MesOrderType = new NBear.Common.PropertyItem("MesOrderType", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _SendDate = new NBear.Common.PropertyItem("SendDate", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _SendSystem = new NBear.Common.PropertyItem("SendSystem", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _DealState = new NBear.Common.PropertyItem("DealState", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _ErrorDesc = new NBear.Common.PropertyItem("ErrorDesc", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _SAPOrderCode = new NBear.Common.PropertyItem("SAPOrderCode", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _SAPOrderType = new NBear.Common.PropertyItem("SAPOrderType", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _Ext_1 = new NBear.Common.PropertyItem("Ext_1", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _Ext_2 = new NBear.Common.PropertyItem("Ext_2", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _Ext_3 = new NBear.Common.PropertyItem("Ext_3", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _Ext_4 = new NBear.Common.PropertyItem("Ext_4", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _UploadDate = new NBear.Common.PropertyItem("UploadDate", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _IsUpload = new NBear.Common.PropertyItem("IsUpload", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.IncSapOrderReload");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.IncSapOrderReload");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjId {
                get {
                    if ((aliasName == null)) {
                        return _ObjId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjId", _ObjId.EntityConfiguration, _ObjId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MesOrderCode {
                get {
                    if ((aliasName == null)) {
                        return _MesOrderCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MesOrderCode", _MesOrderCode.EntityConfiguration, _MesOrderCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MesOrderType {
                get {
                    if ((aliasName == null)) {
                        return _MesOrderType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MesOrderType", _MesOrderType.EntityConfiguration, _MesOrderType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendDate {
                get {
                    if ((aliasName == null)) {
                        return _SendDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendDate", _SendDate.EntityConfiguration, _SendDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendSystem {
                get {
                    if ((aliasName == null)) {
                        return _SendSystem;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendSystem", _SendSystem.EntityConfiguration, _SendSystem.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DealState {
                get {
                    if ((aliasName == null)) {
                        return _DealState;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DealState", _DealState.EntityConfiguration, _DealState.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErrorDesc {
                get {
                    if ((aliasName == null)) {
                        return _ErrorDesc;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErrorDesc", _ErrorDesc.EntityConfiguration, _ErrorDesc.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPOrderCode {
                get {
                    if ((aliasName == null)) {
                        return _SAPOrderCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPOrderCode", _SAPOrderCode.EntityConfiguration, _SAPOrderCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPOrderType {
                get {
                    if ((aliasName == null)) {
                        return _SAPOrderType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPOrderType", _SAPOrderType.EntityConfiguration, _SAPOrderType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_1 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_1", _Ext_1.EntityConfiguration, _Ext_1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_2 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_2", _Ext_2.EntityConfiguration, _Ext_2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_3 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_3", _Ext_3.EntityConfiguration, _Ext_3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_4 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_4;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_4", _Ext_4.EntityConfiguration, _Ext_4.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UploadDate {
                get {
                    if ((aliasName == null)) {
                        return _UploadDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UploadDate", _UploadDate.EntityConfiguration, _UploadDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsUpload {
                get {
                    if ((aliasName == null)) {
                        return _IsUpload;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsUpload", _IsUpload.EntityConfiguration, _IsUpload.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
