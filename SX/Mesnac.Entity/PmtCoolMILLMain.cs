//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtCoolMILLMainArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtCoolMILLMain> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtCoolMILLMain\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtCoolMILLMain\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"MaterialCode\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"MaterialCode\" mappingColumnType=\"System.String\" sqlType=\"char(20)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EdtCode" +
        "\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EdtCode\" mappingColumnTyp" +
        "e=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"CTabletSpeed\" type=\"System.Nullable`1[System.De" +
        "cimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"CTabletSpeed\" mappingColumnType=\"System.Nullable`1[System." +
        "Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"CTabletThick\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "CTabletThick\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"dec" +
        "imal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CTabletTemp" +
        "\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CTabletTemp\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"CTabletWeigh\" type=\"System.Nullable" +
        "`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"CTabletWeigh\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"CIsUseCode\" type=\"System.Nullable`1[System.Int32]\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"CIsUseCode\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=" +
        "\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CIsUseCutte" +
        "r\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CIsUseCutter\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"CCutterNum\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"CCutterNum\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"CreateDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CreateD" +
        "ate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UpdateDate\" type=\"" +
        "System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"UpdateDate\" mappingColumnType=" +
        "\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Dummy1\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Dummy1\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dummy2\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Dummy2\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dummy3\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Dummy3\" mappingColumnType=\"System.String\" sqlType=\"nvarc" +
        "har(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dummy4\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Dummy4\" mappingColumnType=\"System.String\" sql" +
        "Type=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"RecipeObjID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeObjID" +
        "\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ErroeAllow\" type=\"System.Null" +
        "able`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"ErroeAllow\" mappingColumnType=\"System.Null" +
        "able`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"ErroeAllowMove\" type=\"System.Nullable`1[System.Decimal]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"ErroeAllowMove\" mappingColumnType=\"System.Nullable`1[System.Deci" +
        "mal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"TotalWeigh\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TotalW" +
        "eigh\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BatchWeigh\" type=\"S" +
        "ystem.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"BatchWeigh\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"DrugNum\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"DrugNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sq" +
        "lType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DrugT" +
        "ime\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DrugTime\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"RubErroeAllow\" type=\"System.Nullabl" +
        "e`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"RubErroeAllow\" mappingColumnType=\"System.Null" +
        "able`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PmtCoolMILLMain : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtCoolMILLMainEntityConfiguration;
        
        protected string _MaterialCode;
        
        protected string _EquipCode;
        
        protected global::System.Int32? _EdtCode;
        
        protected global::System.Decimal? _CTabletSpeed;
        
        protected global::System.Decimal? _CTabletThick;
        
        protected global::System.Decimal? _CTabletTemp;
        
        protected global::System.Decimal? _CTabletWeigh;
        
        protected global::System.Int32? _CIsUseCode;
        
        protected global::System.Int32? _CIsUseCutter;
        
        protected global::System.Int32? _CCutterNum;
        
        protected global::System.DateTime? _CreateDate;
        
        protected global::System.DateTime? _UpdateDate;
        
        protected string _Dummy1;
        
        protected string _Dummy2;
        
        protected string _Dummy3;
        
        protected string _Dummy4;
        
        protected global::System.Int32? _RecipeObjID;
        
        protected global::System.Decimal? _ErroeAllow;
        
        protected global::System.Decimal? _ErroeAllowMove;
        
        protected global::System.Decimal? _TotalWeigh;
        
        protected global::System.Decimal? _BatchWeigh;
        
        protected global::System.Int32? _DrugNum;
        
        protected global::System.Decimal? _DrugTime;
        
        protected global::System.Decimal? _RubErroeAllow;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtCoolMILLMain left, global::Mesnac.Entity.PmtCoolMILLMain right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtCoolMILLMain left, global::Mesnac.Entity.PmtCoolMILLMain right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public global::System.Int32? EdtCode {
            get {
                return this._EdtCode;
            }
            set {
                this.OnPropertyChanged("EdtCode", this._EdtCode, value);
                this._EdtCode = value;
            }
        }
        
        public global::System.Decimal? CTabletSpeed {
            get {
                return this._CTabletSpeed;
            }
            set {
                this.OnPropertyChanged("CTabletSpeed", this._CTabletSpeed, value);
                this._CTabletSpeed = value;
            }
        }
        
        public global::System.Decimal? CTabletThick {
            get {
                return this._CTabletThick;
            }
            set {
                this.OnPropertyChanged("CTabletThick", this._CTabletThick, value);
                this._CTabletThick = value;
            }
        }
        
        public global::System.Decimal? CTabletTemp {
            get {
                return this._CTabletTemp;
            }
            set {
                this.OnPropertyChanged("CTabletTemp", this._CTabletTemp, value);
                this._CTabletTemp = value;
            }
        }
        
        public global::System.Decimal? CTabletWeigh {
            get {
                return this._CTabletWeigh;
            }
            set {
                this.OnPropertyChanged("CTabletWeigh", this._CTabletWeigh, value);
                this._CTabletWeigh = value;
            }
        }
        
        public global::System.Int32? CIsUseCode {
            get {
                return this._CIsUseCode;
            }
            set {
                this.OnPropertyChanged("CIsUseCode", this._CIsUseCode, value);
                this._CIsUseCode = value;
            }
        }
        
        public global::System.Int32? CIsUseCutter {
            get {
                return this._CIsUseCutter;
            }
            set {
                this.OnPropertyChanged("CIsUseCutter", this._CIsUseCutter, value);
                this._CIsUseCutter = value;
            }
        }
        
        public global::System.Int32? CCutterNum {
            get {
                return this._CCutterNum;
            }
            set {
                this.OnPropertyChanged("CCutterNum", this._CCutterNum, value);
                this._CCutterNum = value;
            }
        }
        
        public global::System.DateTime? CreateDate {
            get {
                return this._CreateDate;
            }
            set {
                this.OnPropertyChanged("CreateDate", this._CreateDate, value);
                this._CreateDate = value;
            }
        }
        
        public global::System.DateTime? UpdateDate {
            get {
                return this._UpdateDate;
            }
            set {
                this.OnPropertyChanged("UpdateDate", this._UpdateDate, value);
                this._UpdateDate = value;
            }
        }
        
        public string Dummy1 {
            get {
                return this._Dummy1;
            }
            set {
                this.OnPropertyChanged("Dummy1", this._Dummy1, value);
                this._Dummy1 = value;
            }
        }
        
        public string Dummy2 {
            get {
                return this._Dummy2;
            }
            set {
                this.OnPropertyChanged("Dummy2", this._Dummy2, value);
                this._Dummy2 = value;
            }
        }
        
        public string Dummy3 {
            get {
                return this._Dummy3;
            }
            set {
                this.OnPropertyChanged("Dummy3", this._Dummy3, value);
                this._Dummy3 = value;
            }
        }
        
        public string Dummy4 {
            get {
                return this._Dummy4;
            }
            set {
                this.OnPropertyChanged("Dummy4", this._Dummy4, value);
                this._Dummy4 = value;
            }
        }
        
        public global::System.Int32? RecipeObjID {
            get {
                return this._RecipeObjID;
            }
            set {
                this.OnPropertyChanged("RecipeObjID", this._RecipeObjID, value);
                this._RecipeObjID = value;
            }
        }
        
        public global::System.Decimal? ErroeAllow {
            get {
                return this._ErroeAllow;
            }
            set {
                this.OnPropertyChanged("ErroeAllow", this._ErroeAllow, value);
                this._ErroeAllow = value;
            }
        }
        
        public global::System.Decimal? ErroeAllowMove {
            get {
                return this._ErroeAllowMove;
            }
            set {
                this.OnPropertyChanged("ErroeAllowMove", this._ErroeAllowMove, value);
                this._ErroeAllowMove = value;
            }
        }
        
        public global::System.Decimal? TotalWeigh {
            get {
                return this._TotalWeigh;
            }
            set {
                this.OnPropertyChanged("TotalWeigh", this._TotalWeigh, value);
                this._TotalWeigh = value;
            }
        }
        
        public global::System.Decimal? BatchWeigh {
            get {
                return this._BatchWeigh;
            }
            set {
                this.OnPropertyChanged("BatchWeigh", this._BatchWeigh, value);
                this._BatchWeigh = value;
            }
        }
        
        public global::System.Int32? DrugNum {
            get {
                return this._DrugNum;
            }
            set {
                this.OnPropertyChanged("DrugNum", this._DrugNum, value);
                this._DrugNum = value;
            }
        }
        
        public global::System.Decimal? DrugTime {
            get {
                return this._DrugTime;
            }
            set {
                this.OnPropertyChanged("DrugTime", this._DrugTime, value);
                this._DrugTime = value;
            }
        }
        
        public global::System.Decimal? RubErroeAllow {
            get {
                return this._RubErroeAllow;
            }
            set {
                this.OnPropertyChanged("RubErroeAllow", this._RubErroeAllow, value);
                this._RubErroeAllow = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtCoolMILLMain._PmtCoolMILLMainEntityConfiguration == null)) {
                PmtCoolMILLMain._PmtCoolMILLMainEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtCoolMILLMain");
            }
            return PmtCoolMILLMain._PmtCoolMILLMainEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._MaterialCode,
                    this._EquipCode,
                    this._EdtCode,
                    this._CTabletSpeed,
                    this._CTabletThick,
                    this._CTabletTemp,
                    this._CTabletWeigh,
                    this._CIsUseCode,
                    this._CIsUseCutter,
                    this._CCutterNum,
                    this._CreateDate,
                    this._UpdateDate,
                    this._Dummy1,
                    this._Dummy2,
                    this._Dummy3,
                    this._Dummy4,
                    this._RecipeObjID,
                    this._ErroeAllow,
                    this._ErroeAllowMove,
                    this._TotalWeigh,
                    this._BatchWeigh,
                    this._DrugNum,
                    this._DrugTime,
                    this._RubErroeAllow};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._MaterialCode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EdtCode = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._CTabletSpeed = reader.GetDecimal(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._CTabletThick = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._CTabletTemp = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._CTabletWeigh = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._CIsUseCode = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._CIsUseCutter = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._CCutterNum = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._CreateDate = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._UpdateDate = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Dummy1 = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Dummy2 = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Dummy3 = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Dummy4 = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._RecipeObjID = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._ErroeAllow = reader.GetDecimal(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._ErroeAllowMove = reader.GetDecimal(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._TotalWeigh = reader.GetDecimal(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._BatchWeigh = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._DrugNum = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._DrugTime = reader.GetDecimal(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._RubErroeAllow = reader.GetDecimal(23);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._MaterialCode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._EdtCode = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._CTabletSpeed = ((System.Nullable<decimal>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._CTabletThick = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._CTabletTemp = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._CTabletWeigh = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._CIsUseCode = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._CIsUseCutter = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._CCutterNum = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._CreateDate = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._UpdateDate = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._Dummy1 = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Dummy2 = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Dummy3 = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Dummy4 = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._RecipeObjID = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._ErroeAllow = ((System.Nullable<decimal>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._ErroeAllowMove = ((System.Nullable<decimal>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._TotalWeigh = ((System.Nullable<decimal>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._BatchWeigh = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._DrugNum = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._DrugTime = ((System.Nullable<decimal>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._RubErroeAllow = ((System.Nullable<decimal>)(row[23]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtCoolMILLMain).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtCoolMILLMain)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _EdtCode = new NBear.Common.PropertyItem("EdtCode", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CTabletSpeed = new NBear.Common.PropertyItem("CTabletSpeed", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CTabletThick = new NBear.Common.PropertyItem("CTabletThick", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CTabletTemp = new NBear.Common.PropertyItem("CTabletTemp", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CTabletWeigh = new NBear.Common.PropertyItem("CTabletWeigh", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CIsUseCode = new NBear.Common.PropertyItem("CIsUseCode", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CIsUseCutter = new NBear.Common.PropertyItem("CIsUseCutter", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CCutterNum = new NBear.Common.PropertyItem("CCutterNum", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _CreateDate = new NBear.Common.PropertyItem("CreateDate", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _UpdateDate = new NBear.Common.PropertyItem("UpdateDate", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _Dummy1 = new NBear.Common.PropertyItem("Dummy1", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _Dummy2 = new NBear.Common.PropertyItem("Dummy2", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _Dummy3 = new NBear.Common.PropertyItem("Dummy3", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _Dummy4 = new NBear.Common.PropertyItem("Dummy4", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _RecipeObjID = new NBear.Common.PropertyItem("RecipeObjID", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _ErroeAllow = new NBear.Common.PropertyItem("ErroeAllow", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _ErroeAllowMove = new NBear.Common.PropertyItem("ErroeAllowMove", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _TotalWeigh = new NBear.Common.PropertyItem("TotalWeigh", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _BatchWeigh = new NBear.Common.PropertyItem("BatchWeigh", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _DrugNum = new NBear.Common.PropertyItem("DrugNum", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _DrugTime = new NBear.Common.PropertyItem("DrugTime", "Mesnac.Entity.PmtCoolMILLMain");
            
            protected NBear.Common.PropertyItem _RubErroeAllow = new NBear.Common.PropertyItem("RubErroeAllow", "Mesnac.Entity.PmtCoolMILLMain");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EdtCode {
                get {
                    if ((aliasName == null)) {
                        return _EdtCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EdtCode", _EdtCode.EntityConfiguration, _EdtCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CTabletSpeed {
                get {
                    if ((aliasName == null)) {
                        return _CTabletSpeed;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CTabletSpeed", _CTabletSpeed.EntityConfiguration, _CTabletSpeed.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CTabletThick {
                get {
                    if ((aliasName == null)) {
                        return _CTabletThick;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CTabletThick", _CTabletThick.EntityConfiguration, _CTabletThick.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CTabletTemp {
                get {
                    if ((aliasName == null)) {
                        return _CTabletTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CTabletTemp", _CTabletTemp.EntityConfiguration, _CTabletTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CTabletWeigh {
                get {
                    if ((aliasName == null)) {
                        return _CTabletWeigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CTabletWeigh", _CTabletWeigh.EntityConfiguration, _CTabletWeigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CIsUseCode {
                get {
                    if ((aliasName == null)) {
                        return _CIsUseCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CIsUseCode", _CIsUseCode.EntityConfiguration, _CIsUseCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CIsUseCutter {
                get {
                    if ((aliasName == null)) {
                        return _CIsUseCutter;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CIsUseCutter", _CIsUseCutter.EntityConfiguration, _CIsUseCutter.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CCutterNum {
                get {
                    if ((aliasName == null)) {
                        return _CCutterNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CCutterNum", _CCutterNum.EntityConfiguration, _CCutterNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CreateDate {
                get {
                    if ((aliasName == null)) {
                        return _CreateDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CreateDate", _CreateDate.EntityConfiguration, _CreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UpdateDate {
                get {
                    if ((aliasName == null)) {
                        return _UpdateDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UpdateDate", _UpdateDate.EntityConfiguration, _UpdateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dummy1 {
                get {
                    if ((aliasName == null)) {
                        return _Dummy1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dummy1", _Dummy1.EntityConfiguration, _Dummy1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dummy2 {
                get {
                    if ((aliasName == null)) {
                        return _Dummy2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dummy2", _Dummy2.EntityConfiguration, _Dummy2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dummy3 {
                get {
                    if ((aliasName == null)) {
                        return _Dummy3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dummy3", _Dummy3.EntityConfiguration, _Dummy3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dummy4 {
                get {
                    if ((aliasName == null)) {
                        return _Dummy4;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dummy4", _Dummy4.EntityConfiguration, _Dummy4.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeObjID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeObjID", _RecipeObjID.EntityConfiguration, _RecipeObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErroeAllow {
                get {
                    if ((aliasName == null)) {
                        return _ErroeAllow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErroeAllow", _ErroeAllow.EntityConfiguration, _ErroeAllow.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErroeAllowMove {
                get {
                    if ((aliasName == null)) {
                        return _ErroeAllowMove;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErroeAllowMove", _ErroeAllowMove.EntityConfiguration, _ErroeAllowMove.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TotalWeigh {
                get {
                    if ((aliasName == null)) {
                        return _TotalWeigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TotalWeigh", _TotalWeigh.EntityConfiguration, _TotalWeigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BatchWeigh {
                get {
                    if ((aliasName == null)) {
                        return _BatchWeigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BatchWeigh", _BatchWeigh.EntityConfiguration, _BatchWeigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DrugNum {
                get {
                    if ((aliasName == null)) {
                        return _DrugNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DrugNum", _DrugNum.EntityConfiguration, _DrugNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DrugTime {
                get {
                    if ((aliasName == null)) {
                        return _DrugTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DrugTime", _DrugTime.EntityConfiguration, _DrugTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RubErroeAllow {
                get {
                    if ((aliasName == null)) {
                        return _RubErroeAllow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RubErroeAllow", _RubErroeAllow.EntityConfiguration, _RubErroeAllow.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
