//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class EqmSparePartRepairOutArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmSparePartRepairOut> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.EqmSparePartRepairOut\" isReadOnly=\"false\" isAutoPreLoad=\"fal" +
        "se\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmSparePartRepairOut\"" +
        " batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey" +
        "=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"SendNo\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"SendNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SendDate\" type=\"Sys" +
        "tem.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"SendDate\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"SparePartCode\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"SparePartCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SparePartModel\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"SparePartModel\" mappingColumnType=\"System.String\"" +
        " sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"StoreOutNum\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stor" +
        "eOutNum\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SendUser\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"SendUser\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "RecordDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecordDate\" " +
        "mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(" +
        "500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String" +
        "\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"OrderID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"OrderID\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </" +
        "Properties>\r\n</EntityConfiguration>")]
    public partial class EqmSparePartRepairOut : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _EqmSparePartRepairOutEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _SendNo;
        
        protected global::System.DateTime? _SendDate;
        
        protected string _SparePartCode;
        
        protected string _SparePartModel;
        
        protected global::System.Decimal? _StoreOutNum;
        
        protected string _SendUser;
        
        protected global::System.DateTime? _RecordDate;
        
        protected string _Remark;
        
        protected string _DeleteFlag;
        
        protected string _OrderID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.EqmSparePartRepairOut left, global::Mesnac.Entity.EqmSparePartRepairOut right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.EqmSparePartRepairOut left, global::Mesnac.Entity.EqmSparePartRepairOut right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string SendNo {
            get {
                return this._SendNo;
            }
            set {
                this.OnPropertyChanged("SendNo", this._SendNo, value);
                this._SendNo = value;
            }
        }
        
        public global::System.DateTime? SendDate {
            get {
                return this._SendDate;
            }
            set {
                this.OnPropertyChanged("SendDate", this._SendDate, value);
                this._SendDate = value;
            }
        }
        
        public string SparePartCode {
            get {
                return this._SparePartCode;
            }
            set {
                this.OnPropertyChanged("SparePartCode", this._SparePartCode, value);
                this._SparePartCode = value;
            }
        }
        
        public string SparePartModel {
            get {
                return this._SparePartModel;
            }
            set {
                this.OnPropertyChanged("SparePartModel", this._SparePartModel, value);
                this._SparePartModel = value;
            }
        }
        
        public global::System.Decimal? StoreOutNum {
            get {
                return this._StoreOutNum;
            }
            set {
                this.OnPropertyChanged("StoreOutNum", this._StoreOutNum, value);
                this._StoreOutNum = value;
            }
        }
        
        public string SendUser {
            get {
                return this._SendUser;
            }
            set {
                this.OnPropertyChanged("SendUser", this._SendUser, value);
                this._SendUser = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((EqmSparePartRepairOut._EqmSparePartRepairOutEntityConfiguration == null)) {
                EqmSparePartRepairOut._EqmSparePartRepairOutEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmSparePartRepairOut");
            }
            return EqmSparePartRepairOut._EqmSparePartRepairOutEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._SendNo,
                    this._SendDate,
                    this._SparePartCode,
                    this._SparePartModel,
                    this._StoreOutNum,
                    this._SendUser,
                    this._RecordDate,
                    this._Remark,
                    this._DeleteFlag,
                    this._OrderID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._SendNo = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._SendDate = this.GetDateTime(reader, 2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SparePartCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._SparePartModel = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._StoreOutNum = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._SendUser = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._RecordDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Remark = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._DeleteFlag = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._OrderID = reader.GetString(10);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._SendNo = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._SendDate = this.GetDateTime(row, 2);
            }
            if ((false == row.IsNull(3))) {
                this._SparePartCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._SparePartModel = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._StoreOutNum = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._SendUser = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._RecordDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8))) {
                this._Remark = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._DeleteFlag = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._OrderID = ((string)(row[10]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmSparePartRepairOut).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmSparePartRepairOut)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.EqmSparePartRepairOut)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _SendNo = new NBear.Common.PropertyItem("SendNo", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _SendDate = new NBear.Common.PropertyItem("SendDate", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _SparePartCode = new NBear.Common.PropertyItem("SparePartCode", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _SparePartModel = new NBear.Common.PropertyItem("SparePartModel", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _StoreOutNum = new NBear.Common.PropertyItem("StoreOutNum", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _SendUser = new NBear.Common.PropertyItem("SendUser", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.EqmSparePartRepairOut");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.EqmSparePartRepairOut");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendNo {
                get {
                    if ((aliasName == null)) {
                        return _SendNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendNo", _SendNo.EntityConfiguration, _SendNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendDate {
                get {
                    if ((aliasName == null)) {
                        return _SendDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendDate", _SendDate.EntityConfiguration, _SendDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartCode {
                get {
                    if ((aliasName == null)) {
                        return _SparePartCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartCode", _SparePartCode.EntityConfiguration, _SparePartCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartModel {
                get {
                    if ((aliasName == null)) {
                        return _SparePartModel;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartModel", _SparePartModel.EntityConfiguration, _SparePartModel.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoreOutNum {
                get {
                    if ((aliasName == null)) {
                        return _StoreOutNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoreOutNum", _StoreOutNum.EntityConfiguration, _StoreOutNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendUser {
                get {
                    if ((aliasName == null)) {
                        return _SendUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendUser", _SendUser.EntityConfiguration, _SendUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
