//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptBarBomDataArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptBarBomData> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PptBarBomData\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"PptBarBomData\" batchSize=\"10\">\r" +
        "\n  <Properties>\r\n    <Property name=\"SourceBarcode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"SourceBarcode\" mappingColumnType=\"System.String\" sqlType=\"char(18)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TargetBarcode\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"TargetBarcode\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"char(18)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Cur" +
        "rentBarcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"CurrentBarcode\" mappingColumnType" +
        "=\"System.String\" sqlType=\"varchar(25)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"SourceMaterCode\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SourceM" +
        "aterCode\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"TargetMaterCode\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"TargetMaterCode\" mappingColumnType=\"System.String\" sqlType=\"cha" +
        "r(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CurrentMat" +
        "erCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"CurrentMaterCode\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"UsedWeigh\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"UsedWeigh\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decim" +
        "al\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedTime\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"UsedTime\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"She" +
        "lfFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"ShelfFlag\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"ScanBarcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ScanBarcode\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(25)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"ScanMaterCode\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Scan" +
        "MaterCode\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PptBarBomData : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptBarBomDataEntityConfiguration;
        
        protected string _SourceBarcode;
        
        protected string _TargetBarcode;
        
        protected string _CurrentBarcode;
        
        protected string _SourceMaterCode;
        
        protected string _TargetMaterCode;
        
        protected string _CurrentMaterCode;
        
        protected global::System.Decimal? _UsedWeigh;
        
        protected string _UsedTime;
        
        protected string _ShelfFlag;
        
        protected string _ScanBarcode;
        
        protected string _ScanMaterCode;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptBarBomData left, global::Mesnac.Entity.PptBarBomData right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptBarBomData left, global::Mesnac.Entity.PptBarBomData right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string SourceBarcode {
            get {
                return this._SourceBarcode;
            }
            set {
                this.OnPropertyChanged("SourceBarcode", this._SourceBarcode, value);
                this._SourceBarcode = value;
            }
        }
        
        public string TargetBarcode {
            get {
                return this._TargetBarcode;
            }
            set {
                this.OnPropertyChanged("TargetBarcode", this._TargetBarcode, value);
                this._TargetBarcode = value;
            }
        }
        
        public string CurrentBarcode {
            get {
                return this._CurrentBarcode;
            }
            set {
                this.OnPropertyChanged("CurrentBarcode", this._CurrentBarcode, value);
                this._CurrentBarcode = value;
            }
        }
        
        public string SourceMaterCode {
            get {
                return this._SourceMaterCode;
            }
            set {
                this.OnPropertyChanged("SourceMaterCode", this._SourceMaterCode, value);
                this._SourceMaterCode = value;
            }
        }
        
        public string TargetMaterCode {
            get {
                return this._TargetMaterCode;
            }
            set {
                this.OnPropertyChanged("TargetMaterCode", this._TargetMaterCode, value);
                this._TargetMaterCode = value;
            }
        }
        
        public string CurrentMaterCode {
            get {
                return this._CurrentMaterCode;
            }
            set {
                this.OnPropertyChanged("CurrentMaterCode", this._CurrentMaterCode, value);
                this._CurrentMaterCode = value;
            }
        }
        
        public global::System.Decimal? UsedWeigh {
            get {
                return this._UsedWeigh;
            }
            set {
                this.OnPropertyChanged("UsedWeigh", this._UsedWeigh, value);
                this._UsedWeigh = value;
            }
        }
        
        public string UsedTime {
            get {
                return this._UsedTime;
            }
            set {
                this.OnPropertyChanged("UsedTime", this._UsedTime, value);
                this._UsedTime = value;
            }
        }
        
        public string ShelfFlag {
            get {
                return this._ShelfFlag;
            }
            set {
                this.OnPropertyChanged("ShelfFlag", this._ShelfFlag, value);
                this._ShelfFlag = value;
            }
        }
        
        public string ScanBarcode {
            get {
                return this._ScanBarcode;
            }
            set {
                this.OnPropertyChanged("ScanBarcode", this._ScanBarcode, value);
                this._ScanBarcode = value;
            }
        }
        
        public string ScanMaterCode {
            get {
                return this._ScanMaterCode;
            }
            set {
                this.OnPropertyChanged("ScanMaterCode", this._ScanMaterCode, value);
                this._ScanMaterCode = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptBarBomData._PptBarBomDataEntityConfiguration == null)) {
                PptBarBomData._PptBarBomDataEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptBarBomData");
            }
            return PptBarBomData._PptBarBomDataEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._SourceBarcode,
                    this._TargetBarcode,
                    this._CurrentBarcode,
                    this._SourceMaterCode,
                    this._TargetMaterCode,
                    this._CurrentMaterCode,
                    this._UsedWeigh,
                    this._UsedTime,
                    this._ShelfFlag,
                    this._ScanBarcode,
                    this._ScanMaterCode};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._SourceBarcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._TargetBarcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._CurrentBarcode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SourceMaterCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._TargetMaterCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._CurrentMaterCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._UsedWeigh = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._UsedTime = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ShelfFlag = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ScanBarcode = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._ScanMaterCode = reader.GetString(10);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._SourceBarcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._TargetBarcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._CurrentBarcode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._SourceMaterCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._TargetMaterCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._CurrentMaterCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._UsedWeigh = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._UsedTime = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ShelfFlag = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ScanBarcode = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._ScanMaterCode = ((string)(row[10]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptBarBomData).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptBarBomData)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _SourceBarcode = new NBear.Common.PropertyItem("SourceBarcode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _TargetBarcode = new NBear.Common.PropertyItem("TargetBarcode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _CurrentBarcode = new NBear.Common.PropertyItem("CurrentBarcode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _SourceMaterCode = new NBear.Common.PropertyItem("SourceMaterCode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _TargetMaterCode = new NBear.Common.PropertyItem("TargetMaterCode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _CurrentMaterCode = new NBear.Common.PropertyItem("CurrentMaterCode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _UsedWeigh = new NBear.Common.PropertyItem("UsedWeigh", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _UsedTime = new NBear.Common.PropertyItem("UsedTime", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _ShelfFlag = new NBear.Common.PropertyItem("ShelfFlag", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _ScanBarcode = new NBear.Common.PropertyItem("ScanBarcode", "Mesnac.Entity.PptBarBomData");
            
            protected NBear.Common.PropertyItem _ScanMaterCode = new NBear.Common.PropertyItem("ScanMaterCode", "Mesnac.Entity.PptBarBomData");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem SourceBarcode {
                get {
                    if ((aliasName == null)) {
                        return _SourceBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceBarcode", _SourceBarcode.EntityConfiguration, _SourceBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TargetBarcode {
                get {
                    if ((aliasName == null)) {
                        return _TargetBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TargetBarcode", _TargetBarcode.EntityConfiguration, _TargetBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CurrentBarcode {
                get {
                    if ((aliasName == null)) {
                        return _CurrentBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CurrentBarcode", _CurrentBarcode.EntityConfiguration, _CurrentBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceMaterCode {
                get {
                    if ((aliasName == null)) {
                        return _SourceMaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceMaterCode", _SourceMaterCode.EntityConfiguration, _SourceMaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TargetMaterCode {
                get {
                    if ((aliasName == null)) {
                        return _TargetMaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TargetMaterCode", _TargetMaterCode.EntityConfiguration, _TargetMaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CurrentMaterCode {
                get {
                    if ((aliasName == null)) {
                        return _CurrentMaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CurrentMaterCode", _CurrentMaterCode.EntityConfiguration, _CurrentMaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedWeigh {
                get {
                    if ((aliasName == null)) {
                        return _UsedWeigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedWeigh", _UsedWeigh.EntityConfiguration, _UsedWeigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedTime {
                get {
                    if ((aliasName == null)) {
                        return _UsedTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedTime", _UsedTime.EntityConfiguration, _UsedTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfFlag {
                get {
                    if ((aliasName == null)) {
                        return _ShelfFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfFlag", _ShelfFlag.EntityConfiguration, _ShelfFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ScanBarcode {
                get {
                    if ((aliasName == null)) {
                        return _ScanBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ScanBarcode", _ScanBarcode.EntityConfiguration, _ScanBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ScanMaterCode {
                get {
                    if ((aliasName == null)) {
                        return _ScanMaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ScanMaterCode", _ScanMaterCode.EntityConfiguration, _ScanMaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
