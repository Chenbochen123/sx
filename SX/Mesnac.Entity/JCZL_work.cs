//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class JCZL_workArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.JCZL_work> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.JCZL_work\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"JCZL_work\" batchSize=\"10\">\r\n  <Pro" +
        "perties>\r\n    <Property name=\"Work_num\" type=\"System.Int16\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Work_n" +
        "um\" mappingColumnType=\"System.Int16\" sqlType=\"smallint\" isPrimaryKey=\"true\" isNo" +
        "tNull=\"true\" />\r\n    <Property name=\"Work_name\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Work_name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Del_flag\" type=\"System.Nul" +
        "lable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Del_flag\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"ChanLiang_flag\" type=\"System.Nullable`1[System.Int32]" +
        "\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"ChanLiang_flag\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Worktype\" type=\"System.Nullable`1[System.Int32]\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Worktype\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OrderNum\" type=" +
        "\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"OrderNum\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class JCZL_work : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _JCZL_workEntityConfiguration;
        
        protected short _Work_num;
        
        protected string _Work_name;
        
        protected global::System.Int32? _Del_flag;
        
        protected string _Remark;
        
        protected global::System.Int32? _ChanLiang_flag;
        
        protected global::System.Int32? _Worktype;
        
        protected global::System.Int32? _OrderNum;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.JCZL_work left, global::Mesnac.Entity.JCZL_work right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.JCZL_work left, global::Mesnac.Entity.JCZL_work right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public short Work_num {
            get {
                return this._Work_num;
            }
            set {
                this.OnPropertyChanged("Work_num", this._Work_num, value);
                this._Work_num = value;
            }
        }
        
        public string Work_name {
            get {
                return this._Work_name;
            }
            set {
                this.OnPropertyChanged("Work_name", this._Work_name, value);
                this._Work_name = value;
            }
        }
        
        public global::System.Int32? Del_flag {
            get {
                return this._Del_flag;
            }
            set {
                this.OnPropertyChanged("Del_flag", this._Del_flag, value);
                this._Del_flag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.Int32? ChanLiang_flag {
            get {
                return this._ChanLiang_flag;
            }
            set {
                this.OnPropertyChanged("ChanLiang_flag", this._ChanLiang_flag, value);
                this._ChanLiang_flag = value;
            }
        }
        
        public global::System.Int32? Worktype {
            get {
                return this._Worktype;
            }
            set {
                this.OnPropertyChanged("Worktype", this._Worktype, value);
                this._Worktype = value;
            }
        }
        
        public global::System.Int32? OrderNum {
            get {
                return this._OrderNum;
            }
            set {
                this.OnPropertyChanged("OrderNum", this._OrderNum, value);
                this._OrderNum = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((JCZL_work._JCZL_workEntityConfiguration == null)) {
                JCZL_work._JCZL_workEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.JCZL_work");
            }
            return JCZL_work._JCZL_workEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Work_num,
                    this._Work_name,
                    this._Del_flag,
                    this._Remark,
                    this._ChanLiang_flag,
                    this._Worktype,
                    this._OrderNum};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Work_num = reader.GetInt16(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Work_name = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Del_flag = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Remark = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ChanLiang_flag = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Worktype = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._OrderNum = reader.GetInt32(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Work_num = ((short)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Work_name = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Del_flag = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Remark = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ChanLiang_flag = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Worktype = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._OrderNum = ((System.Nullable<int>)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.JCZL_work).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.JCZL_work)(obj)).isAttached) 
                        && (this.Work_num == ((global::Mesnac.Entity.JCZL_work)(obj)).Work_num));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Work_num = new NBear.Common.PropertyItem("Work_num", "Mesnac.Entity.JCZL_work");
            
            protected NBear.Common.PropertyItem _Work_name = new NBear.Common.PropertyItem("Work_name", "Mesnac.Entity.JCZL_work");
            
            protected NBear.Common.PropertyItem _Del_flag = new NBear.Common.PropertyItem("Del_flag", "Mesnac.Entity.JCZL_work");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.JCZL_work");
            
            protected NBear.Common.PropertyItem _ChanLiang_flag = new NBear.Common.PropertyItem("ChanLiang_flag", "Mesnac.Entity.JCZL_work");
            
            protected NBear.Common.PropertyItem _Worktype = new NBear.Common.PropertyItem("Worktype", "Mesnac.Entity.JCZL_work");
            
            protected NBear.Common.PropertyItem _OrderNum = new NBear.Common.PropertyItem("OrderNum", "Mesnac.Entity.JCZL_work");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Work_num {
                get {
                    if ((aliasName == null)) {
                        return _Work_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_num", _Work_num.EntityConfiguration, _Work_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_name {
                get {
                    if ((aliasName == null)) {
                        return _Work_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_name", _Work_name.EntityConfiguration, _Work_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Del_flag {
                get {
                    if ((aliasName == null)) {
                        return _Del_flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Del_flag", _Del_flag.EntityConfiguration, _Del_flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ChanLiang_flag {
                get {
                    if ((aliasName == null)) {
                        return _ChanLiang_flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ChanLiang_flag", _ChanLiang_flag.EntityConfiguration, _ChanLiang_flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Worktype {
                get {
                    if ((aliasName == null)) {
                        return _Worktype;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Worktype", _Worktype.EntityConfiguration, _Worktype.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderNum {
                get {
                    if ((aliasName == null)) {
                        return _OrderNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderNum", _OrderNum.EntityConfiguration, _OrderNum.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
