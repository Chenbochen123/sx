//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class EqmStopRecordArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmStopRecord>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.EqmStopRecord\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmStopRecord\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ob" +
        "jID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNul" +
        "l=\"true\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"E" +
        "quipCode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"ClassName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"ClassName\" mappingColumnType=" +
        "\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"StartTime\" type=\"System.DateTime\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StartTime\"" +
        " mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"EndTime\" type=\"System.Nullable`1[System.D" +
        "ateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"EndTime\" mappingColumnType=\"System.Nullable`1[System.Dat" +
        "eTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"FaultTypeID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Faul" +
        "tTypeID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StopTypeID\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"StopTypeID\" mappingColumnType=\"System.String\" sqlType=\"" +
        "char(3)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FaultID\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"FaultID\" mappingColumnType=\"System.String\" s" +
        "qlType=\"char(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "StopReason\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"StopReason\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"DealDesc\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DealDesc\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"ReportTime\" type=\"System.Nullable`1[System.D" +
        "ateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"ReportTime\" mappingColumnType=\"System.Nullable`1[System." +
        "DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"MaintainStartTime\" type=\"System.Nullable`1[System.DateTime]\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"MaintainStartTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]" +
        "\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"MaintainEndTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mai" +
        "ntainEndTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"da" +
        "tetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Maintaine" +
        "rs\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"Maintainers\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"UserID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UserID\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"varchar(8)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Handleflag\" type=\"System.Nullable`1[System.Int3" +
        "2]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Handleflag\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"IsStop\" type=\"System.Nullable`1[System.Int32]\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"IsStop\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IsReportMaintain\" typ" +
        "e=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsReportMaintain\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class EqmStopRecord : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _EqmStopRecordEntityConfiguration;

        protected int _ObjID;

        protected string _EquipCode;

        protected global::System.Int32? _ShiftID;

        protected string _ClassName;

        protected global::System.DateTime _StartTime;

        protected global::System.DateTime? _EndTime;

        protected global::System.Int32? _FaultTypeID;

        protected string _StopTypeID;

        protected string _FaultID;

        protected string _StopReason;

        protected string _DealDesc;

        protected global::System.DateTime? _ReportTime;

        protected global::System.DateTime? _MaintainStartTime;

        protected global::System.DateTime? _MaintainEndTime;

        protected string _Maintainers;

        protected string _UserID;

        protected string _Remark;

        protected global::System.Int32? _Handleflag;

        protected global::System.Int32? _IsStop;

        protected string _IsReportMaintain;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.EqmStopRecord left, global::Mesnac.Entity.EqmStopRecord right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.EqmStopRecord left, global::Mesnac.Entity.EqmStopRecord right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public global::System.Int32? ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public string ClassName
        {
            get
            {
                return this._ClassName;
            }
            set
            {
                this.OnPropertyChanged("ClassName", this._ClassName, value);
                this._ClassName = value;
            }
        }

        public global::System.DateTime StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                this.OnPropertyChanged("StartTime", this._StartTime, value);
                this._StartTime = value;
            }
        }

        public global::System.DateTime? EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                this.OnPropertyChanged("EndTime", this._EndTime, value);
                this._EndTime = value;
            }
        }

        public global::System.Int32? FaultTypeID
        {
            get
            {
                return this._FaultTypeID;
            }
            set
            {
                this.OnPropertyChanged("FaultTypeID", this._FaultTypeID, value);
                this._FaultTypeID = value;
            }
        }

        public string StopTypeID
        {
            get
            {
                return this._StopTypeID;
            }
            set
            {
                this.OnPropertyChanged("StopTypeID", this._StopTypeID, value);
                this._StopTypeID = value;
            }
        }

        public string FaultID
        {
            get
            {
                return this._FaultID;
            }
            set
            {
                this.OnPropertyChanged("FaultID", this._FaultID, value);
                this._FaultID = value;
            }
        }

        public string StopReason
        {
            get
            {
                return this._StopReason;
            }
            set
            {
                this.OnPropertyChanged("StopReason", this._StopReason, value);
                this._StopReason = value;
            }
        }

        public string DealDesc
        {
            get
            {
                return this._DealDesc;
            }
            set
            {
                this.OnPropertyChanged("DealDesc", this._DealDesc, value);
                this._DealDesc = value;
            }
        }

        public global::System.DateTime? ReportTime
        {
            get
            {
                return this._ReportTime;
            }
            set
            {
                this.OnPropertyChanged("ReportTime", this._ReportTime, value);
                this._ReportTime = value;
            }
        }

        public global::System.DateTime? MaintainStartTime
        {
            get
            {
                return this._MaintainStartTime;
            }
            set
            {
                this.OnPropertyChanged("MaintainStartTime", this._MaintainStartTime, value);
                this._MaintainStartTime = value;
            }
        }

        public global::System.DateTime? MaintainEndTime
        {
            get
            {
                return this._MaintainEndTime;
            }
            set
            {
                this.OnPropertyChanged("MaintainEndTime", this._MaintainEndTime, value);
                this._MaintainEndTime = value;
            }
        }

        public string Maintainers
        {
            get
            {
                return this._Maintainers;
            }
            set
            {
                this.OnPropertyChanged("Maintainers", this._Maintainers, value);
                this._Maintainers = value;
            }
        }

        public string UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public global::System.Int32? Handleflag
        {
            get
            {
                return this._Handleflag;
            }
            set
            {
                this.OnPropertyChanged("Handleflag", this._Handleflag, value);
                this._Handleflag = value;
            }
        }

        public global::System.Int32? IsStop
        {
            get
            {
                return this._IsStop;
            }
            set
            {
                this.OnPropertyChanged("IsStop", this._IsStop, value);
                this._IsStop = value;
            }
        }

        public string IsReportMaintain
        {
            get
            {
                return this._IsReportMaintain;
            }
            set
            {
                this.OnPropertyChanged("IsReportMaintain", this._IsReportMaintain, value);
                this._IsReportMaintain = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((EqmStopRecord._EqmStopRecordEntityConfiguration == null))
            {
                EqmStopRecord._EqmStopRecordEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmStopRecord");
            }
            return EqmStopRecord._EqmStopRecordEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._ObjID,
                    this._EquipCode,
                    this._ShiftID,
                    this._ClassName,
                    this._StartTime,
                    this._EndTime,
                    this._FaultTypeID,
                    this._StopTypeID,
                    this._FaultID,
                    this._StopReason,
                    this._DealDesc,
                    this._ReportTime,
                    this._MaintainStartTime,
                    this._MaintainEndTime,
                    this._Maintainers,
                    this._UserID,
                    this._Remark,
                    this._Handleflag,
                    this._IsStop,
                    this._IsReportMaintain};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ShiftID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ClassName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._StartTime = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._EndTime = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._FaultTypeID = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._StopTypeID = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._FaultID = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._StopReason = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._DealDesc = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._ReportTime = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._MaintainStartTime = this.GetDateTime(reader, 12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._MaintainEndTime = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._Maintainers = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._UserID = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._Remark = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._Handleflag = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._IsStop = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._IsReportMaintain = reader.GetString(19);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ShiftID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ClassName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._StartTime = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._EndTime = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6)))
            {
                this._FaultTypeID = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._StopTypeID = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._FaultID = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._StopReason = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._DealDesc = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._ReportTime = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12)))
            {
                this._MaintainStartTime = this.GetDateTime(row, 12);
            }
            if ((false == row.IsNull(13)))
            {
                this._MaintainEndTime = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._Maintainers = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._UserID = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._Remark = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._Handleflag = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._IsStop = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._IsReportMaintain = ((string)(row[19]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmStopRecord).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmStopRecord)(obj)).isAttached)
                        && (this.ObjID == ((global::Mesnac.Entity.EqmStopRecord)(obj)).ObjID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _ClassName = new NBear.Common.PropertyItem("ClassName", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _StartTime = new NBear.Common.PropertyItem("StartTime", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _EndTime = new NBear.Common.PropertyItem("EndTime", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _FaultTypeID = new NBear.Common.PropertyItem("FaultTypeID", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _StopTypeID = new NBear.Common.PropertyItem("StopTypeID", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _FaultID = new NBear.Common.PropertyItem("FaultID", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _StopReason = new NBear.Common.PropertyItem("StopReason", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _DealDesc = new NBear.Common.PropertyItem("DealDesc", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _ReportTime = new NBear.Common.PropertyItem("ReportTime", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _MaintainStartTime = new NBear.Common.PropertyItem("MaintainStartTime", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _MaintainEndTime = new NBear.Common.PropertyItem("MaintainEndTime", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _Maintainers = new NBear.Common.PropertyItem("Maintainers", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _UserID = new NBear.Common.PropertyItem("UserID", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _Handleflag = new NBear.Common.PropertyItem("Handleflag", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _IsStop = new NBear.Common.PropertyItem("IsStop", "Mesnac.Entity.EqmStopRecord");

            protected NBear.Common.PropertyItem _IsReportMaintain = new NBear.Common.PropertyItem("IsReportMaintain", "Mesnac.Entity.EqmStopRecord");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ClassName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ClassName;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ClassName", _ClassName.EntityConfiguration, _ClassName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StartTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StartTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StartTime", _StartTime.EntityConfiguration, _StartTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EndTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EndTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EndTime", _EndTime.EntityConfiguration, _EndTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FaultTypeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FaultTypeID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FaultTypeID", _FaultTypeID.EntityConfiguration, _FaultTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StopTypeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StopTypeID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StopTypeID", _StopTypeID.EntityConfiguration, _StopTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FaultID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FaultID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FaultID", _FaultID.EntityConfiguration, _FaultID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StopReason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StopReason;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StopReason", _StopReason.EntityConfiguration, _StopReason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealDesc
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealDesc;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealDesc", _DealDesc.EntityConfiguration, _DealDesc.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReportTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReportTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReportTime", _ReportTime.EntityConfiguration, _ReportTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaintainStartTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaintainStartTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaintainStartTime", _MaintainStartTime.EntityConfiguration, _MaintainStartTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaintainEndTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaintainEndTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaintainEndTime", _MaintainEndTime.EntityConfiguration, _MaintainEndTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Maintainers
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Maintainers;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Maintainers", _Maintainers.EntityConfiguration, _Maintainers.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem UserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Handleflag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Handleflag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Handleflag", _Handleflag.EntityConfiguration, _Handleflag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IsStop
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsStop;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IsStop", _IsStop.EntityConfiguration, _IsStop.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IsReportMaintain
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsReportMaintain;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IsReportMaintain", _IsReportMaintain.EntityConfiguration, _IsReportMaintain.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
