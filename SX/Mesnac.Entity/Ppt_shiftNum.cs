//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_shiftNumArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_shiftNum> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_shiftNum\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_shiftNum\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Objid\" type=\"System.Int32\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Obji" +
        "d\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=" +
        "\"true\" />\r\n    <Property name=\"Equip_Code\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Eq" +
        "uip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_Class\" type=\"System.Nullable`" +
        "1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Shift_Class\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Shift_num\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shi" +
        "ft_num\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Ppt_shiftNum : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_shiftNumEntityConfiguration;
        
        protected int _Objid;
        
        protected string _Equip_Code;
        
        protected global::System.Int32? _Shift_Class;
        
        protected global::System.Int32? _Shift_num;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_shiftNum left, global::Mesnac.Entity.Ppt_shiftNum right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_shiftNum left, global::Mesnac.Entity.Ppt_shiftNum right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Objid {
            get {
                return this._Objid;
            }
            set {
                this.OnPropertyChanged("Objid", this._Objid, value);
                this._Objid = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public global::System.Int32? Shift_Class {
            get {
                return this._Shift_Class;
            }
            set {
                this.OnPropertyChanged("Shift_Class", this._Shift_Class, value);
                this._Shift_Class = value;
            }
        }
        
        public global::System.Int32? Shift_num {
            get {
                return this._Shift_num;
            }
            set {
                this.OnPropertyChanged("Shift_num", this._Shift_num, value);
                this._Shift_num = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_shiftNum._Ppt_shiftNumEntityConfiguration == null)) {
                Ppt_shiftNum._Ppt_shiftNumEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_shiftNum");
            }
            return Ppt_shiftNum._Ppt_shiftNumEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Objid,
                    this._Equip_Code,
                    this._Shift_Class,
                    this._Shift_num};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Objid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_Code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Shift_Class = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Shift_num = reader.GetInt32(3);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Objid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_Code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Shift_Class = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Shift_num = ((System.Nullable<int>)(row[3]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_shiftNum).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_shiftNum)(obj)).isAttached) 
                        && (this.Objid == ((global::Mesnac.Entity.Ppt_shiftNum)(obj)).Objid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Objid = new NBear.Common.PropertyItem("Objid", "Mesnac.Entity.Ppt_shiftNum");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Ppt_shiftNum");
            
            protected NBear.Common.PropertyItem _Shift_Class = new NBear.Common.PropertyItem("Shift_Class", "Mesnac.Entity.Ppt_shiftNum");
            
            protected NBear.Common.PropertyItem _Shift_num = new NBear.Common.PropertyItem("Shift_num", "Mesnac.Entity.Ppt_shiftNum");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Objid {
                get {
                    if ((aliasName == null)) {
                        return _Objid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Objid", _Objid.EntityConfiguration, _Objid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Class", _Shift_Class.EntityConfiguration, _Shift_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_num {
                get {
                    if ((aliasName == null)) {
                        return _Shift_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_num", _Shift_num.EntityConfiguration, _Shift_num.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
