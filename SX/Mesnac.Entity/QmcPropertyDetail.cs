//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmcPropertyDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmcPropertyDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmcPropertyDetail\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmcPropertyDetail\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"DetailId\" type=\"System.Int32\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"DetailId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=" +
        "\"true\" isNotNull=\"true\" />\r\n    <Property name=\"CheckId\" type=\"System.Int32\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"CheckId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PropertyId\" type=\"System.Int32" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"PropertyId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PropertyValue\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"PropertyValue\" mappingColumnType=\"System.String\" sql" +
        "Type=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n" +
        "</EntityConfiguration>")]
    public partial class QmcPropertyDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmcPropertyDetailEntityConfiguration;
        
        protected int _DetailId;
        
        protected int _CheckId;
        
        protected int _PropertyId;
        
        protected string _PropertyValue;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmcPropertyDetail left, global::Mesnac.Entity.QmcPropertyDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmcPropertyDetail left, global::Mesnac.Entity.QmcPropertyDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int DetailId {
            get {
                return this._DetailId;
            }
            set {
                this.OnPropertyChanged("DetailId", this._DetailId, value);
                this._DetailId = value;
            }
        }
        
        public int CheckId {
            get {
                return this._CheckId;
            }
            set {
                this.OnPropertyChanged("CheckId", this._CheckId, value);
                this._CheckId = value;
            }
        }
        
        public int PropertyId {
            get {
                return this._PropertyId;
            }
            set {
                this.OnPropertyChanged("PropertyId", this._PropertyId, value);
                this._PropertyId = value;
            }
        }
        
        public string PropertyValue {
            get {
                return this._PropertyValue;
            }
            set {
                this.OnPropertyChanged("PropertyValue", this._PropertyValue, value);
                this._PropertyValue = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmcPropertyDetail._QmcPropertyDetailEntityConfiguration == null)) {
                QmcPropertyDetail._QmcPropertyDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmcPropertyDetail");
            }
            return QmcPropertyDetail._QmcPropertyDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._DetailId,
                    this._CheckId,
                    this._PropertyId,
                    this._PropertyValue};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._DetailId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._CheckId = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._PropertyId = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._PropertyValue = reader.GetString(3);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._DetailId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._CheckId = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._PropertyId = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._PropertyValue = ((string)(row[3]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmcPropertyDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmcPropertyDetail)(obj)).isAttached) 
                        && (this.DetailId == ((global::Mesnac.Entity.QmcPropertyDetail)(obj)).DetailId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _DetailId = new NBear.Common.PropertyItem("DetailId", "Mesnac.Entity.QmcPropertyDetail");
            
            protected NBear.Common.PropertyItem _CheckId = new NBear.Common.PropertyItem("CheckId", "Mesnac.Entity.QmcPropertyDetail");
            
            protected NBear.Common.PropertyItem _PropertyId = new NBear.Common.PropertyItem("PropertyId", "Mesnac.Entity.QmcPropertyDetail");
            
            protected NBear.Common.PropertyItem _PropertyValue = new NBear.Common.PropertyItem("PropertyValue", "Mesnac.Entity.QmcPropertyDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem DetailId {
                get {
                    if ((aliasName == null)) {
                        return _DetailId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DetailId", _DetailId.EntityConfiguration, _DetailId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckId {
                get {
                    if ((aliasName == null)) {
                        return _CheckId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckId", _CheckId.EntityConfiguration, _CheckId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PropertyId {
                get {
                    if ((aliasName == null)) {
                        return _PropertyId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PropertyId", _PropertyId.EntityConfiguration, _PropertyId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PropertyValue {
                get {
                    if ((aliasName == null)) {
                        return _PropertyValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PropertyValue", _PropertyValue.EntityConfiguration, _PropertyValue.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
