//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_pmdownrecordArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_pmdownrecord> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_pmdownrecord\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_pmdownrecord\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"Serial_id\" type=\"System.Int64\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Serial_id\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKe" +
        "y=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Equip_code\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"Equip_code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_id\" type=\"" +
        "System.Nullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"Shift_id\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Mp_startdate\" type=\"System.Nullable`1[System.Date" +
        "Time]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Mp_startdate\" mappingColumnType=\"System.Nullable`1[System.D" +
        "ateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"Mp_enddate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"f" +
        "alse\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Mp_enddate\" mappingColumnType=\"System.Nullable`1[System.Da" +
        "teTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Mp_code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_code\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Mp_mkindcode\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_mkindcode" +
        "\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Mp_ikindcode\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Mp_ikindcode\" mappingColumnType=\"System.String\" sqlType=\"char(3)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Handle_flag\" type=\"System" +
        ".String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Handle_flag\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Mp_ComCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_ComCode\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Handle_detail\" type=\"System.String\" isInherited=\"fals" +
        "e\" sqlDefaultValue=\"\'\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Handle_detail\" mappingColumnType=\"System.String\" sqlType=\"nvar" +
        "char(255)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_Des" +
        "cribe\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'\'\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_Describe\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"nvarchar(255)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Mp_Analyse\" type=\"System.String\" isInherite" +
        "d=\"false\" sqlDefaultValue=\"\'\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Mp_Analyse\" mappingColumnType=\"System.String\" sqlType=\"" +
        "nvarchar(255)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ma" +
        "intain_StartTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mainta" +
        "in_StartTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"da" +
        "tetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Maintain_" +
        "EndTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Maintain_EndTim" +
        "e\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Handle_name\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Handle_name\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Main" +
        "tain_Person\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Maintain_Person\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Shift_Class\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shift_Class\"" +
        " mappingColumnType=\"System.String\" sqlType=\"nvarchar(2)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"YanZhong\" type=\"System.Nullable`1[System" +
        ".Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"YanZhong\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"FaSheng\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FaSheng\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"TanCe\" type=\"System.Nullable`1[System." +
        "Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"TanCe\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Fe" +
        "ngxian\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fengxian\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"StopType\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"StopType\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Xianxiang\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Xianxiang\" mappingColumnType=\"System.String\" sqlType=\"varchar(50" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"YuanYin\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"YuanYin\" mappingColumnType=\"System.String\" sqlType" +
        "=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Se" +
        "ndHour\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultVal" +
        "ue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"SendHour\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration" +
        ">")]
    public partial class Ppt_pmdownrecord : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_pmdownrecordEntityConfiguration;
        
        protected long _Serial_id;
        
        protected string _Equip_code;
        
        protected global::System.Int16? _Shift_id;
        
        protected global::System.DateTime? _Mp_startdate;
        
        protected global::System.DateTime? _Mp_enddate;
        
        protected string _Mp_code;
        
        protected string _Mp_mkindcode;
        
        protected string _Mp_ikindcode;
        
        protected string _Handle_flag;
        
        protected string _Mp_ComCode;
        
        protected string _Handle_detail;
        
        protected string _Mp_Describe;
        
        protected string _Mp_Analyse;
        
        protected global::System.DateTime? _Maintain_StartTime;
        
        protected global::System.DateTime? _Maintain_EndTime;
        
        protected string _Handle_name;
        
        protected string _Maintain_Person;
        
        protected string _Shift_Class;
        
        protected global::System.Int32? _YanZhong;
        
        protected global::System.Int32? _FaSheng;
        
        protected global::System.Int32? _TanCe;
        
        protected global::System.Int32? _Fengxian;
        
        protected string _StopType;
        
        protected string _Xianxiang;
        
        protected string _YuanYin;
        
        protected global::System.Int32? _SendHour;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_pmdownrecord left, global::Mesnac.Entity.Ppt_pmdownrecord right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_pmdownrecord left, global::Mesnac.Entity.Ppt_pmdownrecord right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long Serial_id {
            get {
                return this._Serial_id;
            }
            set {
                this.OnPropertyChanged("Serial_id", this._Serial_id, value);
                this._Serial_id = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public global::System.Int16? Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public global::System.DateTime? Mp_startdate {
            get {
                return this._Mp_startdate;
            }
            set {
                this.OnPropertyChanged("Mp_startdate", this._Mp_startdate, value);
                this._Mp_startdate = value;
            }
        }
        
        public global::System.DateTime? Mp_enddate {
            get {
                return this._Mp_enddate;
            }
            set {
                this.OnPropertyChanged("Mp_enddate", this._Mp_enddate, value);
                this._Mp_enddate = value;
            }
        }
        
        public string Mp_code {
            get {
                return this._Mp_code;
            }
            set {
                this.OnPropertyChanged("Mp_code", this._Mp_code, value);
                this._Mp_code = value;
            }
        }
        
        public string Mp_mkindcode {
            get {
                return this._Mp_mkindcode;
            }
            set {
                this.OnPropertyChanged("Mp_mkindcode", this._Mp_mkindcode, value);
                this._Mp_mkindcode = value;
            }
        }
        
        public string Mp_ikindcode {
            get {
                return this._Mp_ikindcode;
            }
            set {
                this.OnPropertyChanged("Mp_ikindcode", this._Mp_ikindcode, value);
                this._Mp_ikindcode = value;
            }
        }
        
        public string Handle_flag {
            get {
                return this._Handle_flag;
            }
            set {
                this.OnPropertyChanged("Handle_flag", this._Handle_flag, value);
                this._Handle_flag = value;
            }
        }
        
        public string Mp_ComCode {
            get {
                return this._Mp_ComCode;
            }
            set {
                this.OnPropertyChanged("Mp_ComCode", this._Mp_ComCode, value);
                this._Mp_ComCode = value;
            }
        }
        
        public string Handle_detail {
            get {
                return this._Handle_detail;
            }
            set {
                this.OnPropertyChanged("Handle_detail", this._Handle_detail, value);
                this._Handle_detail = value;
            }
        }
        
        public string Mp_Describe {
            get {
                return this._Mp_Describe;
            }
            set {
                this.OnPropertyChanged("Mp_Describe", this._Mp_Describe, value);
                this._Mp_Describe = value;
            }
        }
        
        public string Mp_Analyse {
            get {
                return this._Mp_Analyse;
            }
            set {
                this.OnPropertyChanged("Mp_Analyse", this._Mp_Analyse, value);
                this._Mp_Analyse = value;
            }
        }
        
        public global::System.DateTime? Maintain_StartTime {
            get {
                return this._Maintain_StartTime;
            }
            set {
                this.OnPropertyChanged("Maintain_StartTime", this._Maintain_StartTime, value);
                this._Maintain_StartTime = value;
            }
        }
        
        public global::System.DateTime? Maintain_EndTime {
            get {
                return this._Maintain_EndTime;
            }
            set {
                this.OnPropertyChanged("Maintain_EndTime", this._Maintain_EndTime, value);
                this._Maintain_EndTime = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string Maintain_Person {
            get {
                return this._Maintain_Person;
            }
            set {
                this.OnPropertyChanged("Maintain_Person", this._Maintain_Person, value);
                this._Maintain_Person = value;
            }
        }
        
        public string Shift_Class {
            get {
                return this._Shift_Class;
            }
            set {
                this.OnPropertyChanged("Shift_Class", this._Shift_Class, value);
                this._Shift_Class = value;
            }
        }
        
        public global::System.Int32? YanZhong {
            get {
                return this._YanZhong;
            }
            set {
                this.OnPropertyChanged("YanZhong", this._YanZhong, value);
                this._YanZhong = value;
            }
        }
        
        public global::System.Int32? FaSheng {
            get {
                return this._FaSheng;
            }
            set {
                this.OnPropertyChanged("FaSheng", this._FaSheng, value);
                this._FaSheng = value;
            }
        }
        
        public global::System.Int32? TanCe {
            get {
                return this._TanCe;
            }
            set {
                this.OnPropertyChanged("TanCe", this._TanCe, value);
                this._TanCe = value;
            }
        }
        
        public global::System.Int32? Fengxian {
            get {
                return this._Fengxian;
            }
            set {
                this.OnPropertyChanged("Fengxian", this._Fengxian, value);
                this._Fengxian = value;
            }
        }
        
        public string StopType {
            get {
                return this._StopType;
            }
            set {
                this.OnPropertyChanged("StopType", this._StopType, value);
                this._StopType = value;
            }
        }
        
        public string Xianxiang {
            get {
                return this._Xianxiang;
            }
            set {
                this.OnPropertyChanged("Xianxiang", this._Xianxiang, value);
                this._Xianxiang = value;
            }
        }
        
        public string YuanYin {
            get {
                return this._YuanYin;
            }
            set {
                this.OnPropertyChanged("YuanYin", this._YuanYin, value);
                this._YuanYin = value;
            }
        }
        
        public global::System.Int32? SendHour {
            get {
                return this._SendHour;
            }
            set {
                this.OnPropertyChanged("SendHour", this._SendHour, value);
                this._SendHour = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_pmdownrecord._Ppt_pmdownrecordEntityConfiguration == null)) {
                Ppt_pmdownrecord._Ppt_pmdownrecordEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_pmdownrecord");
            }
            return Ppt_pmdownrecord._Ppt_pmdownrecordEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serial_id,
                    this._Equip_code,
                    this._Shift_id,
                    this._Mp_startdate,
                    this._Mp_enddate,
                    this._Mp_code,
                    this._Mp_mkindcode,
                    this._Mp_ikindcode,
                    this._Handle_flag,
                    this._Mp_ComCode,
                    this._Handle_detail,
                    this._Mp_Describe,
                    this._Mp_Analyse,
                    this._Maintain_StartTime,
                    this._Maintain_EndTime,
                    this._Handle_name,
                    this._Maintain_Person,
                    this._Shift_Class,
                    this._YanZhong,
                    this._FaSheng,
                    this._TanCe,
                    this._Fengxian,
                    this._StopType,
                    this._Xianxiang,
                    this._YuanYin,
                    this._SendHour};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serial_id = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Shift_id = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mp_startdate = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mp_enddate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mp_code = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mp_mkindcode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Mp_ikindcode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Handle_flag = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Mp_ComCode = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Handle_detail = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Mp_Describe = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Mp_Analyse = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Maintain_StartTime = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Maintain_EndTime = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Handle_name = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Maintain_Person = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Shift_Class = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._YanZhong = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._FaSheng = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._TanCe = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Fengxian = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._StopType = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Xianxiang = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._YuanYin = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._SendHour = reader.GetInt32(25);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serial_id = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Shift_id = ((System.Nullable<short>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mp_startdate = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4))) {
                this._Mp_enddate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5))) {
                this._Mp_code = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Mp_mkindcode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Mp_ikindcode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Handle_flag = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Mp_ComCode = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Handle_detail = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Mp_Describe = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Mp_Analyse = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Maintain_StartTime = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14))) {
                this._Maintain_EndTime = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15))) {
                this._Handle_name = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Maintain_Person = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Shift_Class = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._YanZhong = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._FaSheng = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._TanCe = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Fengxian = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._StopType = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Xianxiang = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._YuanYin = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._SendHour = ((System.Nullable<int>)(row[25]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_pmdownrecord).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_pmdownrecord)(obj)).isAttached) 
                        && (this.Serial_id == ((global::Mesnac.Entity.Ppt_pmdownrecord)(obj)).Serial_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serial_id = new NBear.Common.PropertyItem("Serial_id", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_startdate = new NBear.Common.PropertyItem("Mp_startdate", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_enddate = new NBear.Common.PropertyItem("Mp_enddate", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_code = new NBear.Common.PropertyItem("Mp_code", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_mkindcode = new NBear.Common.PropertyItem("Mp_mkindcode", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_ikindcode = new NBear.Common.PropertyItem("Mp_ikindcode", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Handle_flag = new NBear.Common.PropertyItem("Handle_flag", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_ComCode = new NBear.Common.PropertyItem("Mp_ComCode", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Handle_detail = new NBear.Common.PropertyItem("Handle_detail", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_Describe = new NBear.Common.PropertyItem("Mp_Describe", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Mp_Analyse = new NBear.Common.PropertyItem("Mp_Analyse", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Maintain_StartTime = new NBear.Common.PropertyItem("Maintain_StartTime", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Maintain_EndTime = new NBear.Common.PropertyItem("Maintain_EndTime", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Maintain_Person = new NBear.Common.PropertyItem("Maintain_Person", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Shift_Class = new NBear.Common.PropertyItem("Shift_Class", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _YanZhong = new NBear.Common.PropertyItem("YanZhong", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _FaSheng = new NBear.Common.PropertyItem("FaSheng", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _TanCe = new NBear.Common.PropertyItem("TanCe", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Fengxian = new NBear.Common.PropertyItem("Fengxian", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _StopType = new NBear.Common.PropertyItem("StopType", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _Xianxiang = new NBear.Common.PropertyItem("Xianxiang", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _YuanYin = new NBear.Common.PropertyItem("YuanYin", "Mesnac.Entity.Ppt_pmdownrecord");
            
            protected NBear.Common.PropertyItem _SendHour = new NBear.Common.PropertyItem("SendHour", "Mesnac.Entity.Ppt_pmdownrecord");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serial_id {
                get {
                    if ((aliasName == null)) {
                        return _Serial_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_id", _Serial_id.EntityConfiguration, _Serial_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_startdate {
                get {
                    if ((aliasName == null)) {
                        return _Mp_startdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_startdate", _Mp_startdate.EntityConfiguration, _Mp_startdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_enddate {
                get {
                    if ((aliasName == null)) {
                        return _Mp_enddate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_enddate", _Mp_enddate.EntityConfiguration, _Mp_enddate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_code", _Mp_code.EntityConfiguration, _Mp_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_mkindcode {
                get {
                    if ((aliasName == null)) {
                        return _Mp_mkindcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_mkindcode", _Mp_mkindcode.EntityConfiguration, _Mp_mkindcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_ikindcode {
                get {
                    if ((aliasName == null)) {
                        return _Mp_ikindcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_ikindcode", _Mp_ikindcode.EntityConfiguration, _Mp_ikindcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_flag {
                get {
                    if ((aliasName == null)) {
                        return _Handle_flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_flag", _Handle_flag.EntityConfiguration, _Handle_flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_ComCode {
                get {
                    if ((aliasName == null)) {
                        return _Mp_ComCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_ComCode", _Mp_ComCode.EntityConfiguration, _Mp_ComCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_detail {
                get {
                    if ((aliasName == null)) {
                        return _Handle_detail;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_detail", _Handle_detail.EntityConfiguration, _Handle_detail.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_Describe {
                get {
                    if ((aliasName == null)) {
                        return _Mp_Describe;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_Describe", _Mp_Describe.EntityConfiguration, _Mp_Describe.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_Analyse {
                get {
                    if ((aliasName == null)) {
                        return _Mp_Analyse;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_Analyse", _Mp_Analyse.EntityConfiguration, _Mp_Analyse.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Maintain_StartTime {
                get {
                    if ((aliasName == null)) {
                        return _Maintain_StartTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Maintain_StartTime", _Maintain_StartTime.EntityConfiguration, _Maintain_StartTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Maintain_EndTime {
                get {
                    if ((aliasName == null)) {
                        return _Maintain_EndTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Maintain_EndTime", _Maintain_EndTime.EntityConfiguration, _Maintain_EndTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Maintain_Person {
                get {
                    if ((aliasName == null)) {
                        return _Maintain_Person;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Maintain_Person", _Maintain_Person.EntityConfiguration, _Maintain_Person.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Class", _Shift_Class.EntityConfiguration, _Shift_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem YanZhong {
                get {
                    if ((aliasName == null)) {
                        return _YanZhong;
                    }
                    else {
                        return new NBear.Common.PropertyItem("YanZhong", _YanZhong.EntityConfiguration, _YanZhong.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FaSheng {
                get {
                    if ((aliasName == null)) {
                        return _FaSheng;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FaSheng", _FaSheng.EntityConfiguration, _FaSheng.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TanCe {
                get {
                    if ((aliasName == null)) {
                        return _TanCe;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TanCe", _TanCe.EntityConfiguration, _TanCe.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fengxian {
                get {
                    if ((aliasName == null)) {
                        return _Fengxian;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fengxian", _Fengxian.EntityConfiguration, _Fengxian.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StopType {
                get {
                    if ((aliasName == null)) {
                        return _StopType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StopType", _StopType.EntityConfiguration, _StopType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Xianxiang {
                get {
                    if ((aliasName == null)) {
                        return _Xianxiang;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Xianxiang", _Xianxiang.EntityConfiguration, _Xianxiang.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem YuanYin {
                get {
                    if ((aliasName == null)) {
                        return _YuanYin;
                    }
                    else {
                        return new NBear.Common.PropertyItem("YuanYin", _YuanYin.EntityConfiguration, _YuanYin.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendHour {
                get {
                    if ((aliasName == null)) {
                        return _SendHour;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendHour", _SendHour.EntityConfiguration, _SendHour.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
