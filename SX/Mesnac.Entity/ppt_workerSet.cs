//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class ppt_workerSetArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.ppt_workerSet> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.ppt_workerSet\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"ppt_workerSet\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"plan_date\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"plan_date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey" +
        "=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"shift_id\" type=\"System.Int32\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"shift_id\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryK" +
        "ey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"workshop\" type=\"System.Int32\"" +
        " isInherited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"workshop\" mappingColumnType=\"System.Int32\" " +
        "sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"shift" +
        "name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"shiftname\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"workshopName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"workshopName\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"setNum\" type=\"System.Nullable`1[System.Int32]\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"setNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTyp" +
        "e=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConf" +
        "iguration>")]
    public partial class ppt_workerSet : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _ppt_workerSetEntityConfiguration;
        
        protected string _plan_date;
        
        protected int _shift_id;
        
        protected int _workshop;
        
        protected string _shiftname;
        
        protected string _workshopName;
        
        protected global::System.Int32? _setNum;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.ppt_workerSet left, global::Mesnac.Entity.ppt_workerSet right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.ppt_workerSet left, global::Mesnac.Entity.ppt_workerSet right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string plan_date {
            get {
                return this._plan_date;
            }
            set {
                this.OnPropertyChanged("plan_date", this._plan_date, value);
                this._plan_date = value;
            }
        }
        
        public int shift_id {
            get {
                return this._shift_id;
            }
            set {
                this.OnPropertyChanged("shift_id", this._shift_id, value);
                this._shift_id = value;
            }
        }
        
        public int workshop {
            get {
                return this._workshop;
            }
            set {
                this.OnPropertyChanged("workshop", this._workshop, value);
                this._workshop = value;
            }
        }
        
        public string shiftname {
            get {
                return this._shiftname;
            }
            set {
                this.OnPropertyChanged("shiftname", this._shiftname, value);
                this._shiftname = value;
            }
        }
        
        public string workshopName {
            get {
                return this._workshopName;
            }
            set {
                this.OnPropertyChanged("workshopName", this._workshopName, value);
                this._workshopName = value;
            }
        }
        
        public global::System.Int32? setNum {
            get {
                return this._setNum;
            }
            set {
                this.OnPropertyChanged("setNum", this._setNum, value);
                this._setNum = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((ppt_workerSet._ppt_workerSetEntityConfiguration == null)) {
                ppt_workerSet._ppt_workerSetEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.ppt_workerSet");
            }
            return ppt_workerSet._ppt_workerSetEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._plan_date,
                    this._shift_id,
                    this._workshop,
                    this._shiftname,
                    this._workshopName,
                    this._setNum};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._plan_date = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._shift_id = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._workshop = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._shiftname = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._workshopName = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._setNum = reader.GetInt32(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._plan_date = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._shift_id = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._workshop = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._shiftname = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._workshopName = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._setNum = ((System.Nullable<int>)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.ppt_workerSet).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.ppt_workerSet)(obj)).isAttached) 
                        && (this.plan_date == ((global::Mesnac.Entity.ppt_workerSet)(obj)).plan_date)) 
                        && (this.shift_id == ((global::Mesnac.Entity.ppt_workerSet)(obj)).shift_id)) 
                        && (this.workshop == ((global::Mesnac.Entity.ppt_workerSet)(obj)).workshop));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _plan_date = new NBear.Common.PropertyItem("plan_date", "Mesnac.Entity.ppt_workerSet");
            
            protected NBear.Common.PropertyItem _shift_id = new NBear.Common.PropertyItem("shift_id", "Mesnac.Entity.ppt_workerSet");
            
            protected NBear.Common.PropertyItem _workshop = new NBear.Common.PropertyItem("workshop", "Mesnac.Entity.ppt_workerSet");
            
            protected NBear.Common.PropertyItem _shiftname = new NBear.Common.PropertyItem("shiftname", "Mesnac.Entity.ppt_workerSet");
            
            protected NBear.Common.PropertyItem _workshopName = new NBear.Common.PropertyItem("workshopName", "Mesnac.Entity.ppt_workerSet");
            
            protected NBear.Common.PropertyItem _setNum = new NBear.Common.PropertyItem("setNum", "Mesnac.Entity.ppt_workerSet");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem plan_date {
                get {
                    if ((aliasName == null)) {
                        return _plan_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("plan_date", _plan_date.EntityConfiguration, _plan_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem shift_id {
                get {
                    if ((aliasName == null)) {
                        return _shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("shift_id", _shift_id.EntityConfiguration, _shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem workshop {
                get {
                    if ((aliasName == null)) {
                        return _workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("workshop", _workshop.EntityConfiguration, _workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem shiftname {
                get {
                    if ((aliasName == null)) {
                        return _shiftname;
                    }
                    else {
                        return new NBear.Common.PropertyItem("shiftname", _shiftname.EntityConfiguration, _shiftname.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem workshopName {
                get {
                    if ((aliasName == null)) {
                        return _workshopName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("workshopName", _workshopName.EntityConfiguration, _workshopName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem setNum {
                get {
                    if ((aliasName == null)) {
                        return _setNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("setNum", _setNum.EntityConfiguration, _setNum.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
