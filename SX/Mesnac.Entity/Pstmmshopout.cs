//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstmmshopoutArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Pstmmshopout>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.Pstmmshopout\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Pstmmshopout\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"ShopOutid\" type=\"System.Int64\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "ShopOutid\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\"" +
        " isNotNull=\"true\" />\r\n    <Property name=\"PlanDate\" type=\"System.Nullable`1[Syst" +
        "em.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"PlanDate\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"CostCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CostCode\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mate" +
        "rCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"S" +
        "ystem.Nullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System" +
        ".Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"ShiftClassID\" type=\"System.Nullable`1[System.Int16]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"ShiftClassID\" mappingColumnType=\"System.Nullable`1[System.Int16]" +
        "\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"ConsumeQty\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sql" +
        "DefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"ConsumeQty\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" s" +
        "qlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "BalanceQty\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BalanceQty\" m" +
        "appingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ConsQty\" type=\"System.Null" +
        "able`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ConsQty\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"SurPlus\" type=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"SurPlus\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"HandFlag\" type=\"System.String\" isInherited=\"fa" +
        "lse\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"HandFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealNum\" type=" +
        "\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"RealNum\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"PlanID\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanID\" map" +
        "pingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"RecordDate\" type=\"System.Nullable`1[System." +
        "DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"RecordDate\" mappingColumnType=\"System.Nullable`1[System" +
        ".DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultVal" +
        "ue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SourceStorageID\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"SourceStorageID\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"S" +
        "ourceStoragePlaceID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SourceStoragePlaceID\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"SourceBarcode\" type=\"System.String\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"SourceBarcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguratio" +
        "n>")]
    public partial class Pstmmshopout : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstmmshopoutEntityConfiguration;

        protected long _ShopOutid;

        protected global::System.DateTime? _PlanDate;

        protected string _CostCode;

        protected string _MaterCode;

        protected string _EquipCode;

        protected global::System.Int16? _ShiftID;

        protected global::System.Int16? _ShiftClassID;

        protected global::System.Decimal? _ConsumeQty;

        protected global::System.Decimal? _BalanceQty;

        protected global::System.Decimal? _ConsQty;

        protected global::System.Decimal? _SurPlus;

        protected string _HandFlag;

        protected global::System.Int32? _RealNum;

        protected string _PlanID;

        protected global::System.DateTime? _RecordDate;

        protected string _DeleteFlag;

        protected string _SourceStorageID;

        protected string _SourceStoragePlaceID;

        protected string _SourceBarcode;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.Pstmmshopout left, global::Mesnac.Entity.Pstmmshopout right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.Pstmmshopout left, global::Mesnac.Entity.Pstmmshopout right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public long ShopOutid
        {
            get
            {
                return this._ShopOutid;
            }
            set
            {
                this.OnPropertyChanged("ShopOutid", this._ShopOutid, value);
                this._ShopOutid = value;
            }
        }

        public global::System.DateTime? PlanDate
        {
            get
            {
                return this._PlanDate;
            }
            set
            {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }

        public string CostCode
        {
            get
            {
                return this._CostCode;
            }
            set
            {
                this.OnPropertyChanged("CostCode", this._CostCode, value);
                this._CostCode = value;
            }
        }

        public string MaterCode
        {
            get
            {
                return this._MaterCode;
            }
            set
            {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public global::System.Int16? ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public global::System.Int16? ShiftClassID
        {
            get
            {
                return this._ShiftClassID;
            }
            set
            {
                this.OnPropertyChanged("ShiftClassID", this._ShiftClassID, value);
                this._ShiftClassID = value;
            }
        }

        public global::System.Decimal? ConsumeQty
        {
            get
            {
                return this._ConsumeQty;
            }
            set
            {
                this.OnPropertyChanged("ConsumeQty", this._ConsumeQty, value);
                this._ConsumeQty = value;
            }
        }

        public global::System.Decimal? BalanceQty
        {
            get
            {
                return this._BalanceQty;
            }
            set
            {
                this.OnPropertyChanged("BalanceQty", this._BalanceQty, value);
                this._BalanceQty = value;
            }
        }

        public global::System.Decimal? ConsQty
        {
            get
            {
                return this._ConsQty;
            }
            set
            {
                this.OnPropertyChanged("ConsQty", this._ConsQty, value);
                this._ConsQty = value;
            }
        }

        public global::System.Decimal? SurPlus
        {
            get
            {
                return this._SurPlus;
            }
            set
            {
                this.OnPropertyChanged("SurPlus", this._SurPlus, value);
                this._SurPlus = value;
            }
        }

        public string HandFlag
        {
            get
            {
                return this._HandFlag;
            }
            set
            {
                this.OnPropertyChanged("HandFlag", this._HandFlag, value);
                this._HandFlag = value;
            }
        }

        public global::System.Int32? RealNum
        {
            get
            {
                return this._RealNum;
            }
            set
            {
                this.OnPropertyChanged("RealNum", this._RealNum, value);
                this._RealNum = value;
            }
        }

        public string PlanID
        {
            get
            {
                return this._PlanID;
            }
            set
            {
                this.OnPropertyChanged("PlanID", this._PlanID, value);
                this._PlanID = value;
            }
        }

        public global::System.DateTime? RecordDate
        {
            get
            {
                return this._RecordDate;
            }
            set
            {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string SourceStorageID
        {
            get
            {
                return this._SourceStorageID;
            }
            set
            {
                this.OnPropertyChanged("SourceStorageID", this._SourceStorageID, value);
                this._SourceStorageID = value;
            }
        }

        public string SourceStoragePlaceID
        {
            get
            {
                return this._SourceStoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("SourceStoragePlaceID", this._SourceStoragePlaceID, value);
                this._SourceStoragePlaceID = value;
            }
        }

        public string SourceBarcode
        {
            get
            {
                return this._SourceBarcode;
            }
            set
            {
                this.OnPropertyChanged("SourceBarcode", this._SourceBarcode, value);
                this._SourceBarcode = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Pstmmshopout._PstmmshopoutEntityConfiguration == null))
            {
                Pstmmshopout._PstmmshopoutEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Pstmmshopout");
            }
            return Pstmmshopout._PstmmshopoutEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._ShopOutid,
                    this._PlanDate,
                    this._CostCode,
                    this._MaterCode,
                    this._EquipCode,
                    this._ShiftID,
                    this._ShiftClassID,
                    this._ConsumeQty,
                    this._BalanceQty,
                    this._ConsQty,
                    this._SurPlus,
                    this._HandFlag,
                    this._RealNum,
                    this._PlanID,
                    this._RecordDate,
                    this._DeleteFlag,
                    this._SourceStorageID,
                    this._SourceStoragePlaceID,
                    this._SourceBarcode};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ShopOutid = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._PlanDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._CostCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._MaterCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._EquipCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._ShiftID = reader.GetInt16(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ShiftClassID = reader.GetInt16(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ConsumeQty = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._BalanceQty = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ConsQty = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._SurPlus = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._HandFlag = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._RealNum = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._PlanID = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._RecordDate = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._DeleteFlag = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._SourceStorageID = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._SourceStoragePlaceID = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._SourceBarcode = reader.GetString(18);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ShopOutid = ((long)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._PlanDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2)))
            {
                this._CostCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._MaterCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._EquipCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._ShiftID = ((System.Nullable<short>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ShiftClassID = ((System.Nullable<short>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ConsumeQty = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._BalanceQty = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._ConsQty = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._SurPlus = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._HandFlag = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._RealNum = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._PlanID = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._RecordDate = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15)))
            {
                this._DeleteFlag = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._SourceStorageID = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._SourceStoragePlaceID = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._SourceBarcode = ((string)(row[18]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Pstmmshopout).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Pstmmshopout)(obj)).isAttached)
                        && (this.ShopOutid == ((global::Mesnac.Entity.Pstmmshopout)(obj)).ShopOutid));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _ShopOutid = new NBear.Common.PropertyItem("ShopOutid", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _CostCode = new NBear.Common.PropertyItem("CostCode", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _ShiftClassID = new NBear.Common.PropertyItem("ShiftClassID", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _ConsumeQty = new NBear.Common.PropertyItem("ConsumeQty", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _BalanceQty = new NBear.Common.PropertyItem("BalanceQty", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _ConsQty = new NBear.Common.PropertyItem("ConsQty", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _SurPlus = new NBear.Common.PropertyItem("SurPlus", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _HandFlag = new NBear.Common.PropertyItem("HandFlag", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _RealNum = new NBear.Common.PropertyItem("RealNum", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _PlanID = new NBear.Common.PropertyItem("PlanID", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _SourceStorageID = new NBear.Common.PropertyItem("SourceStorageID", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _SourceStoragePlaceID = new NBear.Common.PropertyItem("SourceStoragePlaceID", "Mesnac.Entity.Pstmmshopout");

            protected NBear.Common.PropertyItem _SourceBarcode = new NBear.Common.PropertyItem("SourceBarcode", "Mesnac.Entity.Pstmmshopout");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem ShopOutid
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShopOutid;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShopOutid", _ShopOutid.EntityConfiguration, _ShopOutid.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CostCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CostCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CostCode", _CostCode.EntityConfiguration, _CostCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftClassID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftClassID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftClassID", _ShiftClassID.EntityConfiguration, _ShiftClassID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ConsumeQty
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ConsumeQty;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ConsumeQty", _ConsumeQty.EntityConfiguration, _ConsumeQty.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BalanceQty
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BalanceQty;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BalanceQty", _BalanceQty.EntityConfiguration, _BalanceQty.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ConsQty
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ConsQty;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ConsQty", _ConsQty.EntityConfiguration, _ConsQty.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SurPlus
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SurPlus;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SurPlus", _SurPlus.EntityConfiguration, _SurPlus.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem HandFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HandFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("HandFlag", _HandFlag.EntityConfiguration, _HandFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealNum", _RealNum.EntityConfiguration, _RealNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanID", _PlanID.EntityConfiguration, _PlanID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RecordDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RecordDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceStorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceStorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceStorageID", _SourceStorageID.EntityConfiguration, _SourceStorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceStoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceStoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceStoragePlaceID", _SourceStoragePlaceID.EntityConfiguration, _SourceStoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceBarcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceBarcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceBarcode", _SourceBarcode.EntityConfiguration, _SourceBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
