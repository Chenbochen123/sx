//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasWorkCoefficientArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasWorkCoefficient> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasWorkCoefficient\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"BasWorkCoefficient\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"tru" +
        "e\" isNotNull=\"true\" />\r\n    <Property name=\"WorkID\" type=\"System.Nullable`1[Syst" +
        "em.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"WorkID\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Coefficient\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Coefficien" +
        "t\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecordTime\" type=\"Syst" +
        "em.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Record" +
        "Time\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecordWorkBarcode" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"RecordWorkBarcode\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultV" +
        "alue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigurati" +
        "on>")]
    public partial class BasWorkCoefficient : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasWorkCoefficientEntityConfiguration;
        
        protected int _ObjID;
        
        protected global::System.Int32? _WorkID;
        
        protected global::System.Decimal? _Coefficient;
        
        protected global::System.DateTime? _RecordTime;
        
        protected string _RecordWorkBarcode;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasWorkCoefficient left, global::Mesnac.Entity.BasWorkCoefficient right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasWorkCoefficient left, global::Mesnac.Entity.BasWorkCoefficient right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.Int32? WorkID {
            get {
                return this._WorkID;
            }
            set {
                this.OnPropertyChanged("WorkID", this._WorkID, value);
                this._WorkID = value;
            }
        }
        
        public global::System.Decimal? Coefficient {
            get {
                return this._Coefficient;
            }
            set {
                this.OnPropertyChanged("Coefficient", this._Coefficient, value);
                this._Coefficient = value;
            }
        }
        
        public global::System.DateTime? RecordTime {
            get {
                return this._RecordTime;
            }
            set {
                this.OnPropertyChanged("RecordTime", this._RecordTime, value);
                this._RecordTime = value;
            }
        }
        
        public string RecordWorkBarcode {
            get {
                return this._RecordWorkBarcode;
            }
            set {
                this.OnPropertyChanged("RecordWorkBarcode", this._RecordWorkBarcode, value);
                this._RecordWorkBarcode = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasWorkCoefficient._BasWorkCoefficientEntityConfiguration == null)) {
                BasWorkCoefficient._BasWorkCoefficientEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasWorkCoefficient");
            }
            return BasWorkCoefficient._BasWorkCoefficientEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._WorkID,
                    this._Coefficient,
                    this._RecordTime,
                    this._RecordWorkBarcode,
                    this._DeleteFlag,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._WorkID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Coefficient = reader.GetDecimal(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RecordTime = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RecordWorkBarcode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._DeleteFlag = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Remark = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._WorkID = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Coefficient = ((System.Nullable<decimal>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RecordTime = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4))) {
                this._RecordWorkBarcode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._DeleteFlag = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Remark = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasWorkCoefficient).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasWorkCoefficient)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.BasWorkCoefficient)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasWorkCoefficient");
            
            protected NBear.Common.PropertyItem _WorkID = new NBear.Common.PropertyItem("WorkID", "Mesnac.Entity.BasWorkCoefficient");
            
            protected NBear.Common.PropertyItem _Coefficient = new NBear.Common.PropertyItem("Coefficient", "Mesnac.Entity.BasWorkCoefficient");
            
            protected NBear.Common.PropertyItem _RecordTime = new NBear.Common.PropertyItem("RecordTime", "Mesnac.Entity.BasWorkCoefficient");
            
            protected NBear.Common.PropertyItem _RecordWorkBarcode = new NBear.Common.PropertyItem("RecordWorkBarcode", "Mesnac.Entity.BasWorkCoefficient");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasWorkCoefficient");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasWorkCoefficient");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkID {
                get {
                    if ((aliasName == null)) {
                        return _WorkID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkID", _WorkID.EntityConfiguration, _WorkID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Coefficient {
                get {
                    if ((aliasName == null)) {
                        return _Coefficient;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Coefficient", _Coefficient.EntityConfiguration, _Coefficient.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordTime {
                get {
                    if ((aliasName == null)) {
                        return _RecordTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordTime", _RecordTime.EntityConfiguration, _RecordTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordWorkBarcode {
                get {
                    if ((aliasName == null)) {
                        return _RecordWorkBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordWorkBarcode", _RecordWorkBarcode.EntityConfiguration, _RecordWorkBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
