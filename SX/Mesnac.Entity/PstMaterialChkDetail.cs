//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PstMaterialChkDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstMaterialChkDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PstMaterialChkDetail\" isReadOnly=\"false\" isAutoPreLoad=\"fals" +
        "e\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstMaterialChkDetail\" b" +
        "atchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"BillNo\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isP" +
        "rimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Barcode\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"OrderID\" ty" +
        "pe=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"OrderID\" mappingColumnType=\"System.Int32\" sqlTyp" +
        "e=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"NoticeNo\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"NoticeNo\" mappingColumnType=\"System.String\" sq" +
        "lType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"SeqNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"SeqNo\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"ProductNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ProductNo\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater" +
        "Code\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"ProcDate\" type=\"System.Nullable`1[" +
        "System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"ProcDate\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"SendNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"SendNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PieceWeight\" type=\"Sy" +
        "stem.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"PieceWeight\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"SendWeight\" type=\"System.Nullable`1[System.De" +
        "cimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"SendWeight\" mappingColumnType=\"System.Nullable`1[System.De" +
        "cimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"RecordDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Rec" +
        "ordDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetim" +
        "e\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ChkDate\" type=" +
        "\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"ChkDate\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"ChkResultFlag\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"ChkResultFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PassNum\" type=\"System.N" +
        "ullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"PassNum\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"PassWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"PassWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"d" +
        "ecimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ChkPerson" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"ChkPerson\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"SendChkFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(" +
        "0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Se" +
        "ndChkFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"SendChkDate\" type=\"System.Nullable" +
        "`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"SendChkDate\" mappingColumnType=\"System.Nullab" +
        "le`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"SendPerson\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SendPers" +
        "on\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"StoreInNum\" type=\"System.Nullable`1[" +
        "System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"StoreInNum\" mappingColumnType" +
        "=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"StoreInWeight\" type=\"System.Nullable`1[System.De" +
        "cimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"StoreInWeight\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"" +
        "false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"IsFirstRecive\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsFirs" +
        "tRecive\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"LLBarcode\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"LLBarcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FacBatch\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"FacBatch\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LLB" +
        "arcode2\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"LLBarcode2\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"TBflag\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TBf" +
        "lag\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PstMaterialChkDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PstMaterialChkDetailEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _BillNo;
        
        protected string _Barcode;
        
        protected int _OrderID;
        
        protected string _NoticeNo;
        
        protected string _SeqNo;
        
        protected string _ProductNo;
        
        protected string _MaterCode;
        
        protected global::System.DateTime? _ProcDate;
        
        protected global::System.Int32? _SendNum;
        
        protected global::System.Decimal? _PieceWeight;
        
        protected global::System.Decimal? _SendWeight;
        
        protected global::System.DateTime? _RecordDate;
        
        protected global::System.DateTime? _ChkDate;
        
        protected string _ChkResultFlag;
        
        protected global::System.Int32? _PassNum;
        
        protected global::System.Decimal? _PassWeight;
        
        protected string _ChkPerson;
        
        protected string _SendChkFlag;
        
        protected global::System.DateTime? _SendChkDate;
        
        protected string _SendPerson;
        
        protected global::System.Int32? _StoreInNum;
        
        protected global::System.Decimal? _StoreInWeight;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _IsFirstRecive;
        
        protected string _LLBarcode;
        
        protected string _FacBatch;
        
        protected string _LLBarcode2;
        
        protected global::System.Int32? _TBflag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PstMaterialChkDetail left, global::Mesnac.Entity.PstMaterialChkDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PstMaterialChkDetail left, global::Mesnac.Entity.PstMaterialChkDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string BillNo {
            get {
                return this._BillNo;
            }
            set {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public string NoticeNo {
            get {
                return this._NoticeNo;
            }
            set {
                this.OnPropertyChanged("NoticeNo", this._NoticeNo, value);
                this._NoticeNo = value;
            }
        }
        
        public string SeqNo {
            get {
                return this._SeqNo;
            }
            set {
                this.OnPropertyChanged("SeqNo", this._SeqNo, value);
                this._SeqNo = value;
            }
        }
        
        public string ProductNo {
            get {
                return this._ProductNo;
            }
            set {
                this.OnPropertyChanged("ProductNo", this._ProductNo, value);
                this._ProductNo = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.DateTime? ProcDate {
            get {
                return this._ProcDate;
            }
            set {
                this.OnPropertyChanged("ProcDate", this._ProcDate, value);
                this._ProcDate = value;
            }
        }
        
        public global::System.Int32? SendNum {
            get {
                return this._SendNum;
            }
            set {
                this.OnPropertyChanged("SendNum", this._SendNum, value);
                this._SendNum = value;
            }
        }
        
        public global::System.Decimal? PieceWeight {
            get {
                return this._PieceWeight;
            }
            set {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }
        
        public global::System.Decimal? SendWeight {
            get {
                return this._SendWeight;
            }
            set {
                this.OnPropertyChanged("SendWeight", this._SendWeight, value);
                this._SendWeight = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public global::System.DateTime? ChkDate {
            get {
                return this._ChkDate;
            }
            set {
                this.OnPropertyChanged("ChkDate", this._ChkDate, value);
                this._ChkDate = value;
            }
        }
        
        public string ChkResultFlag {
            get {
                return this._ChkResultFlag;
            }
            set {
                this.OnPropertyChanged("ChkResultFlag", this._ChkResultFlag, value);
                this._ChkResultFlag = value;
            }
        }
        
        public global::System.Int32? PassNum {
            get {
                return this._PassNum;
            }
            set {
                this.OnPropertyChanged("PassNum", this._PassNum, value);
                this._PassNum = value;
            }
        }
        
        public global::System.Decimal? PassWeight {
            get {
                return this._PassWeight;
            }
            set {
                this.OnPropertyChanged("PassWeight", this._PassWeight, value);
                this._PassWeight = value;
            }
        }
        
        public string ChkPerson {
            get {
                return this._ChkPerson;
            }
            set {
                this.OnPropertyChanged("ChkPerson", this._ChkPerson, value);
                this._ChkPerson = value;
            }
        }
        
        public string SendChkFlag {
            get {
                return this._SendChkFlag;
            }
            set {
                this.OnPropertyChanged("SendChkFlag", this._SendChkFlag, value);
                this._SendChkFlag = value;
            }
        }
        
        public global::System.DateTime? SendChkDate {
            get {
                return this._SendChkDate;
            }
            set {
                this.OnPropertyChanged("SendChkDate", this._SendChkDate, value);
                this._SendChkDate = value;
            }
        }
        
        public string SendPerson {
            get {
                return this._SendPerson;
            }
            set {
                this.OnPropertyChanged("SendPerson", this._SendPerson, value);
                this._SendPerson = value;
            }
        }
        
        public global::System.Int32? StoreInNum {
            get {
                return this._StoreInNum;
            }
            set {
                this.OnPropertyChanged("StoreInNum", this._StoreInNum, value);
                this._StoreInNum = value;
            }
        }
        
        public global::System.Decimal? StoreInWeight {
            get {
                return this._StoreInWeight;
            }
            set {
                this.OnPropertyChanged("StoreInWeight", this._StoreInWeight, value);
                this._StoreInWeight = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string IsFirstRecive {
            get {
                return this._IsFirstRecive;
            }
            set {
                this.OnPropertyChanged("IsFirstRecive", this._IsFirstRecive, value);
                this._IsFirstRecive = value;
            }
        }
        
        public string LLBarcode {
            get {
                return this._LLBarcode;
            }
            set {
                this.OnPropertyChanged("LLBarcode", this._LLBarcode, value);
                this._LLBarcode = value;
            }
        }
        
        public string FacBatch {
            get {
                return this._FacBatch;
            }
            set {
                this.OnPropertyChanged("FacBatch", this._FacBatch, value);
                this._FacBatch = value;
            }
        }
        
        public string LLBarcode2 {
            get {
                return this._LLBarcode2;
            }
            set {
                this.OnPropertyChanged("LLBarcode2", this._LLBarcode2, value);
                this._LLBarcode2 = value;
            }
        }
        
        public global::System.Int32? TBflag {
            get {
                return this._TBflag;
            }
            set {
                this.OnPropertyChanged("TBflag", this._TBflag, value);
                this._TBflag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PstMaterialChkDetail._PstMaterialChkDetailEntityConfiguration == null)) {
                PstMaterialChkDetail._PstMaterialChkDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstMaterialChkDetail");
            }
            return PstMaterialChkDetail._PstMaterialChkDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._BillNo,
                    this._Barcode,
                    this._OrderID,
                    this._NoticeNo,
                    this._SeqNo,
                    this._ProductNo,
                    this._MaterCode,
                    this._ProcDate,
                    this._SendNum,
                    this._PieceWeight,
                    this._SendWeight,
                    this._RecordDate,
                    this._ChkDate,
                    this._ChkResultFlag,
                    this._PassNum,
                    this._PassWeight,
                    this._ChkPerson,
                    this._SendChkFlag,
                    this._SendChkDate,
                    this._SendPerson,
                    this._StoreInNum,
                    this._StoreInWeight,
                    this._DeleteFlag,
                    this._Remark,
                    this._IsFirstRecive,
                    this._LLBarcode,
                    this._FacBatch,
                    this._LLBarcode2,
                    this._TBflag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._BillNo = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Barcode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._OrderID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._NoticeNo = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._SeqNo = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ProductNo = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._MaterCode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ProcDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._SendNum = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._PieceWeight = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._SendWeight = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._RecordDate = this.GetDateTime(reader, 12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._ChkDate = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._ChkResultFlag = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._PassNum = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._PassWeight = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._ChkPerson = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._SendChkFlag = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._SendChkDate = this.GetDateTime(reader, 19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._SendPerson = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._StoreInNum = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._StoreInWeight = reader.GetDecimal(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._DeleteFlag = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Remark = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._IsFirstRecive = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._LLBarcode = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._FacBatch = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._LLBarcode2 = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._TBflag = reader.GetInt32(29);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._BillNo = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Barcode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._OrderID = ((int)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._NoticeNo = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._SeqNo = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ProductNo = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._MaterCode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ProcDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9))) {
                this._SendNum = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._PieceWeight = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._SendWeight = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._RecordDate = this.GetDateTime(row, 12);
            }
            if ((false == row.IsNull(13))) {
                this._ChkDate = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14))) {
                this._ChkResultFlag = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._PassNum = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._PassWeight = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._ChkPerson = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._SendChkFlag = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._SendChkDate = this.GetDateTime(row, 19);
            }
            if ((false == row.IsNull(20))) {
                this._SendPerson = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._StoreInNum = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._StoreInWeight = ((System.Nullable<decimal>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._DeleteFlag = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Remark = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._IsFirstRecive = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._LLBarcode = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._FacBatch = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._LLBarcode2 = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._TBflag = ((System.Nullable<int>)(row[29]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstMaterialChkDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PstMaterialChkDetail)(obj)).isAttached) 
                        && (this.BillNo == ((global::Mesnac.Entity.PstMaterialChkDetail)(obj)).BillNo)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PstMaterialChkDetail)(obj)).Barcode)) 
                        && (this.OrderID == ((global::Mesnac.Entity.PstMaterialChkDetail)(obj)).OrderID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _NoticeNo = new NBear.Common.PropertyItem("NoticeNo", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _SeqNo = new NBear.Common.PropertyItem("SeqNo", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _ProductNo = new NBear.Common.PropertyItem("ProductNo", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _ProcDate = new NBear.Common.PropertyItem("ProcDate", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _SendNum = new NBear.Common.PropertyItem("SendNum", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _SendWeight = new NBear.Common.PropertyItem("SendWeight", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _ChkDate = new NBear.Common.PropertyItem("ChkDate", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _ChkResultFlag = new NBear.Common.PropertyItem("ChkResultFlag", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _PassNum = new NBear.Common.PropertyItem("PassNum", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _PassWeight = new NBear.Common.PropertyItem("PassWeight", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _ChkPerson = new NBear.Common.PropertyItem("ChkPerson", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _SendChkFlag = new NBear.Common.PropertyItem("SendChkFlag", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _SendChkDate = new NBear.Common.PropertyItem("SendChkDate", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _SendPerson = new NBear.Common.PropertyItem("SendPerson", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _StoreInNum = new NBear.Common.PropertyItem("StoreInNum", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _StoreInWeight = new NBear.Common.PropertyItem("StoreInWeight", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _IsFirstRecive = new NBear.Common.PropertyItem("IsFirstRecive", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _LLBarcode = new NBear.Common.PropertyItem("LLBarcode", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _FacBatch = new NBear.Common.PropertyItem("FacBatch", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _LLBarcode2 = new NBear.Common.PropertyItem("LLBarcode2", "Mesnac.Entity.PstMaterialChkDetail");
            
            protected NBear.Common.PropertyItem _TBflag = new NBear.Common.PropertyItem("TBflag", "Mesnac.Entity.PstMaterialChkDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BillNo {
                get {
                    if ((aliasName == null)) {
                        return _BillNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NoticeNo {
                get {
                    if ((aliasName == null)) {
                        return _NoticeNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NoticeNo", _NoticeNo.EntityConfiguration, _NoticeNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeqNo {
                get {
                    if ((aliasName == null)) {
                        return _SeqNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqNo", _SeqNo.EntityConfiguration, _SeqNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProductNo {
                get {
                    if ((aliasName == null)) {
                        return _ProductNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProductNo", _ProductNo.EntityConfiguration, _ProductNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProcDate {
                get {
                    if ((aliasName == null)) {
                        return _ProcDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProcDate", _ProcDate.EntityConfiguration, _ProcDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendNum {
                get {
                    if ((aliasName == null)) {
                        return _SendNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendNum", _SendNum.EntityConfiguration, _SendNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PieceWeight {
                get {
                    if ((aliasName == null)) {
                        return _PieceWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendWeight {
                get {
                    if ((aliasName == null)) {
                        return _SendWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendWeight", _SendWeight.EntityConfiguration, _SendWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ChkDate {
                get {
                    if ((aliasName == null)) {
                        return _ChkDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ChkDate", _ChkDate.EntityConfiguration, _ChkDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ChkResultFlag {
                get {
                    if ((aliasName == null)) {
                        return _ChkResultFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ChkResultFlag", _ChkResultFlag.EntityConfiguration, _ChkResultFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PassNum {
                get {
                    if ((aliasName == null)) {
                        return _PassNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PassNum", _PassNum.EntityConfiguration, _PassNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PassWeight {
                get {
                    if ((aliasName == null)) {
                        return _PassWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PassWeight", _PassWeight.EntityConfiguration, _PassWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ChkPerson {
                get {
                    if ((aliasName == null)) {
                        return _ChkPerson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ChkPerson", _ChkPerson.EntityConfiguration, _ChkPerson.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendChkFlag {
                get {
                    if ((aliasName == null)) {
                        return _SendChkFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendChkFlag", _SendChkFlag.EntityConfiguration, _SendChkFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendChkDate {
                get {
                    if ((aliasName == null)) {
                        return _SendChkDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendChkDate", _SendChkDate.EntityConfiguration, _SendChkDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendPerson {
                get {
                    if ((aliasName == null)) {
                        return _SendPerson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendPerson", _SendPerson.EntityConfiguration, _SendPerson.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoreInNum {
                get {
                    if ((aliasName == null)) {
                        return _StoreInNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoreInNum", _StoreInNum.EntityConfiguration, _StoreInNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoreInWeight {
                get {
                    if ((aliasName == null)) {
                        return _StoreInWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoreInWeight", _StoreInWeight.EntityConfiguration, _StoreInWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsFirstRecive {
                get {
                    if ((aliasName == null)) {
                        return _IsFirstRecive;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsFirstRecive", _IsFirstRecive.EntityConfiguration, _IsFirstRecive.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLBarcode {
                get {
                    if ((aliasName == null)) {
                        return _LLBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLBarcode", _LLBarcode.EntityConfiguration, _LLBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FacBatch {
                get {
                    if ((aliasName == null)) {
                        return _FacBatch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FacBatch", _FacBatch.EntityConfiguration, _FacBatch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLBarcode2 {
                get {
                    if ((aliasName == null)) {
                        return _LLBarcode2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLBarcode2", _LLBarcode2.EntityConfiguration, _LLBarcode2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TBflag {
                get {
                    if ((aliasName == null)) {
                        return _TBflag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TBflag", _TBflag.EntityConfiguration, _TBflag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
