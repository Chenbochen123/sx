//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstPlanGetMaterArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstPlanGetMater>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PstPlanGetMater\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstPlanGetMater\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int64\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"ObjID\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"PlanDate\" type=\"System.DateTime\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"PlanDate\" mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StorageID\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarc" +
        "har(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCod" +
        "e\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"MaterialCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterialCode\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"TotalWeight\" type=\"System.Decimal\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"TotalWeight\" mappingColumnType=\"System.Decimal\" sqlType=\"decimal\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.Strin" +
        "g\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"UserID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"UserID\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"SourcePlace\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SourcePlace\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PstPlanGetMater : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstPlanGetMaterEntityConfiguration;

        protected long _ObjID;

        protected global::System.DateTime _PlanDate;

        protected string _StorageID;

        protected string _EquipCode;

        protected string _MaterialCode;

        protected decimal _TotalWeight;

        protected string _DeleteFlag;

        protected string _UserID;

        protected string _SourcePlace;

        protected string _Remark;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PstPlanGetMater left, global::Mesnac.Entity.PstPlanGetMater right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PstPlanGetMater left, global::Mesnac.Entity.PstPlanGetMater right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public long ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public global::System.DateTime PlanDate
        {
            get
            {
                return this._PlanDate;
            }
            set
            {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }

        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public string MaterialCode
        {
            get
            {
                return this._MaterialCode;
            }
            set
            {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }

        public decimal TotalWeight
        {
            get
            {
                return this._TotalWeight;
            }
            set
            {
                this.OnPropertyChanged("TotalWeight", this._TotalWeight, value);
                this._TotalWeight = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }

        public string SourcePlace
        {
            get
            {
                return this._SourcePlace;
            }
            set
            {
                this.OnPropertyChanged("SourcePlace", this._SourcePlace, value);
                this._SourcePlace = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PstPlanGetMater._PstPlanGetMaterEntityConfiguration == null))
            {
                PstPlanGetMater._PstPlanGetMaterEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstPlanGetMater");
            }
            return PstPlanGetMater._PstPlanGetMaterEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._ObjID,
                    this._PlanDate,
                    this._StorageID,
                    this._EquipCode,
                    this._MaterialCode,
                    this._TotalWeight,
                    this._DeleteFlag,
                    this._UserID,
                    this._SourcePlace,
                    this._Remark};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ObjID = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._PlanDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._StorageID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._EquipCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._MaterialCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._TotalWeight = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._DeleteFlag = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._UserID = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._SourcePlace = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Remark = reader.GetString(9);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ObjID = ((long)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._PlanDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2)))
            {
                this._StorageID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._EquipCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._MaterialCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._TotalWeight = ((decimal)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._DeleteFlag = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._UserID = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._SourcePlace = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Remark = ((string)(row[9]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstPlanGetMater).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PstPlanGetMater)(obj)).isAttached)
                        && (this.ObjID == ((global::Mesnac.Entity.PstPlanGetMater)(obj)).ObjID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _TotalWeight = new NBear.Common.PropertyItem("TotalWeight", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _UserID = new NBear.Common.PropertyItem("UserID", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _SourcePlace = new NBear.Common.PropertyItem("SourcePlace", "Mesnac.Entity.PstPlanGetMater");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstPlanGetMater");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterialCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem TotalWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TotalWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TotalWeight", _TotalWeight.EntityConfiguration, _TotalWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem UserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourcePlace
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourcePlace;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourcePlace", _SourcePlace.EntityConfiguration, _SourcePlace.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
