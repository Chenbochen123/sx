//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_ImportantBJArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_ImportantBJ> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_ImportantBJ\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_ImportantBJ\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"INO\" type=\"System.Int32\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"INO\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNu" +
        "ll=\"true\" />\r\n    <Property name=\"Workshop\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"W" +
        "orkshop\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"EquipName\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"EquipName\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BJName\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"BJName\" mappingColumnType=\"System.String\" sqlType=\"va" +
        "rchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BJCode" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"BJCode\" mappingColumnType=\"System.String\" s" +
        "qlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"ChangeBJ\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"ChangeBJ\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"WorkTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"WorkTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BeginDate\" type=\"Sys" +
        "tem.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"BeginDate\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Lastdate\" type=\"System.Nullable`1[System.Date" +
        "Time]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Lastdate\" mappingColumnType=\"System.Nullable`1[System.DateT" +
        "ime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Memo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Memo\" mappingColumnType=\"System" +
        ".String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Reson\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Reson\" mappingColumnType" +
        "=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_ImportantBJ : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_ImportantBJEntityConfiguration;
        
        protected int _INO;
        
        protected string _Workshop;
        
        protected string _EquipName;
        
        protected string _BJName;
        
        protected string _BJCode;
        
        protected string _ChangeBJ;
        
        protected global::System.Int32? _WorkTime;
        
        protected global::System.DateTime? _BeginDate;
        
        protected global::System.DateTime? _Lastdate;
        
        protected string _Memo;
        
        protected string _Reson;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_ImportantBJ left, global::Mesnac.Entity.Eqm_ImportantBJ right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_ImportantBJ left, global::Mesnac.Entity.Eqm_ImportantBJ right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int INO {
            get {
                return this._INO;
            }
            set {
                this.OnPropertyChanged("INO", this._INO, value);
                this._INO = value;
            }
        }
        
        public string Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public string EquipName {
            get {
                return this._EquipName;
            }
            set {
                this.OnPropertyChanged("EquipName", this._EquipName, value);
                this._EquipName = value;
            }
        }
        
        public string BJName {
            get {
                return this._BJName;
            }
            set {
                this.OnPropertyChanged("BJName", this._BJName, value);
                this._BJName = value;
            }
        }
        
        public string BJCode {
            get {
                return this._BJCode;
            }
            set {
                this.OnPropertyChanged("BJCode", this._BJCode, value);
                this._BJCode = value;
            }
        }
        
        public string ChangeBJ {
            get {
                return this._ChangeBJ;
            }
            set {
                this.OnPropertyChanged("ChangeBJ", this._ChangeBJ, value);
                this._ChangeBJ = value;
            }
        }
        
        public global::System.Int32? WorkTime {
            get {
                return this._WorkTime;
            }
            set {
                this.OnPropertyChanged("WorkTime", this._WorkTime, value);
                this._WorkTime = value;
            }
        }
        
        public global::System.DateTime? BeginDate {
            get {
                return this._BeginDate;
            }
            set {
                this.OnPropertyChanged("BeginDate", this._BeginDate, value);
                this._BeginDate = value;
            }
        }
        
        public global::System.DateTime? Lastdate {
            get {
                return this._Lastdate;
            }
            set {
                this.OnPropertyChanged("Lastdate", this._Lastdate, value);
                this._Lastdate = value;
            }
        }
        
        public string Memo {
            get {
                return this._Memo;
            }
            set {
                this.OnPropertyChanged("Memo", this._Memo, value);
                this._Memo = value;
            }
        }
        
        public string Reson {
            get {
                return this._Reson;
            }
            set {
                this.OnPropertyChanged("Reson", this._Reson, value);
                this._Reson = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_ImportantBJ._Eqm_ImportantBJEntityConfiguration == null)) {
                Eqm_ImportantBJ._Eqm_ImportantBJEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_ImportantBJ");
            }
            return Eqm_ImportantBJ._Eqm_ImportantBJEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._INO,
                    this._Workshop,
                    this._EquipName,
                    this._BJName,
                    this._BJCode,
                    this._ChangeBJ,
                    this._WorkTime,
                    this._BeginDate,
                    this._Lastdate,
                    this._Memo,
                    this._Reson};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._INO = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Workshop = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EquipName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._BJName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._BJCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._ChangeBJ = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._WorkTime = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._BeginDate = this.GetDateTime(reader, 7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Lastdate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Memo = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Reson = reader.GetString(10);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._INO = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Workshop = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._EquipName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._BJName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._BJCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._ChangeBJ = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._WorkTime = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._BeginDate = this.GetDateTime(row, 7);
            }
            if ((false == row.IsNull(8))) {
                this._Lastdate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9))) {
                this._Memo = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Reson = ((string)(row[10]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_ImportantBJ).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_ImportantBJ)(obj)).isAttached) 
                        && (this.INO == ((global::Mesnac.Entity.Eqm_ImportantBJ)(obj)).INO));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _INO = new NBear.Common.PropertyItem("INO", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _EquipName = new NBear.Common.PropertyItem("EquipName", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _BJName = new NBear.Common.PropertyItem("BJName", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _BJCode = new NBear.Common.PropertyItem("BJCode", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _ChangeBJ = new NBear.Common.PropertyItem("ChangeBJ", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _WorkTime = new NBear.Common.PropertyItem("WorkTime", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _BeginDate = new NBear.Common.PropertyItem("BeginDate", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _Lastdate = new NBear.Common.PropertyItem("Lastdate", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _Memo = new NBear.Common.PropertyItem("Memo", "Mesnac.Entity.Eqm_ImportantBJ");
            
            protected NBear.Common.PropertyItem _Reson = new NBear.Common.PropertyItem("Reson", "Mesnac.Entity.Eqm_ImportantBJ");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem INO {
                get {
                    if ((aliasName == null)) {
                        return _INO;
                    }
                    else {
                        return new NBear.Common.PropertyItem("INO", _INO.EntityConfiguration, _INO.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipName {
                get {
                    if ((aliasName == null)) {
                        return _EquipName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipName", _EquipName.EntityConfiguration, _EquipName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJName {
                get {
                    if ((aliasName == null)) {
                        return _BJName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJName", _BJName.EntityConfiguration, _BJName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJCode {
                get {
                    if ((aliasName == null)) {
                        return _BJCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJCode", _BJCode.EntityConfiguration, _BJCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ChangeBJ {
                get {
                    if ((aliasName == null)) {
                        return _ChangeBJ;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ChangeBJ", _ChangeBJ.EntityConfiguration, _ChangeBJ.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkTime {
                get {
                    if ((aliasName == null)) {
                        return _WorkTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkTime", _WorkTime.EntityConfiguration, _WorkTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BeginDate {
                get {
                    if ((aliasName == null)) {
                        return _BeginDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BeginDate", _BeginDate.EntityConfiguration, _BeginDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lastdate {
                get {
                    if ((aliasName == null)) {
                        return _Lastdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lastdate", _Lastdate.EntityConfiguration, _Lastdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo {
                get {
                    if ((aliasName == null)) {
                        return _Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo", _Memo.EntityConfiguration, _Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Reson {
                get {
                    if ((aliasName == null)) {
                        return _Reson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Reson", _Reson.EntityConfiguration, _Reson.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
