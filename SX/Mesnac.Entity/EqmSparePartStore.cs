//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class EqmSparePartStoreArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmSparePartStore> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.EqmSparePartStore\" isReadOnly=\"true\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmSparePartStore\" batchSiz" +
        "e=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"SparePartCode\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"SparePartCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MajorType\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"MajorType\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mi" +
        "norType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"MinorType\" mappingColumnType=\"System." +
        "String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"Standards\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Standards\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"CurrentStoreNum\" type=\"System.Nullable`1[System.Decima" +
        "l]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"CurrentStoreNum\" mappingColumnType=\"System.Nullable`1[System.De" +
        "cimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"MaxStoreNum\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaxS" +
        "toreNum\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinStoreNum\" typ" +
        "e=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"MinStoreNum\" mappingColumnTyp" +
        "e=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"PosStoragePlaceID\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"PosStoragePlaceID\" mappingColumnType=\"System.String\" sqlType=\"varcha" +
        "r(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UseStorageP" +
        "laceID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"UseStoragePlaceID\" mappingColumnType=\"" +
        "System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" map" +
        "pingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Rem" +
        "ark\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Ext_1\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Ext_1\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"Ext_2\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Ext_2\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ext_3\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Ext_3\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ext_4\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Ext_4\" mappingColumnType=\"System.String\" sqlType=\"varchar(" +
        "1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dep_Code\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Dep_Code\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Check_year\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Check_year\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Check_month\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Check_month\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"Batch_Code\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Batch_" +
        "Code\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"BJ_code\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"BJ_code\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BJ_specType\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"BJ_specType\" mappingColumnType=\"System.String\" sqlType=\"nvar" +
        "char(255)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BJ_tpC" +
        "ode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"BJ_tpCode\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"In_settle_mark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"tr" +
        "ue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"In_settle_mark\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Last_num\" type=\"System.Nullable`1[System.Decimal]\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"Last_num\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sq" +
        "lType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"L" +
        "ast_price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Last_price\" map" +
        "pingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"In_num\" type=\"System.Nullabl" +
        "e`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"In_num\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"In_price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"In_price\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decima" +
        "l\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Out_num\" type=" +
        "\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Out_num\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Out_price\" type=\"System.Nullable`1[System.Decim" +
        "al]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Out_price\" mappingColumnType=\"System.Nullable`1[System.Decimal" +
        "]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"Stock_num\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRe" +
        "adOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stock_num\" " +
        "mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Stock_Price\" type=\"System" +
        ".Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"Stock_Price\" mappingColumnType=\"System" +
        ".Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Real_num\" type=\"System.Nullable`1[System.Decimal]\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"Real_num\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sq" +
        "lType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"R" +
        "eal_price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Real_price\" map" +
        "pingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Check_date\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Check_date\" mappingColumnType=\"System.String\" sqlType=\"char(10" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigura" +
        "tion>")]
    public partial class EqmSparePartStore : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _EqmSparePartStoreEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _SparePartCode;
        
        protected string _MajorType;
        
        protected string _MinorType;
        
        protected string _Standards;
        
        protected global::System.Decimal? _CurrentStoreNum;
        
        protected global::System.Decimal? _MaxStoreNum;
        
        protected global::System.Decimal? _MinStoreNum;
        
        protected string _PosStoragePlaceID;
        
        protected string _UseStoragePlaceID;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _Ext_1;
        
        protected string _Ext_2;
        
        protected string _Ext_3;
        
        protected string _Ext_4;
        
        protected string _Dep_Code;
        
        protected string _Check_year;
        
        protected string _Check_month;
        
        protected string _Batch_Code;
        
        protected string _BJ_code;
        
        protected string _BJ_specType;
        
        protected string _BJ_tpCode;
        
        protected string _In_settle_mark;
        
        protected global::System.Decimal? _Last_num;
        
        protected global::System.Decimal? _Last_price;
        
        protected global::System.Decimal? _In_num;
        
        protected global::System.Decimal? _In_price;
        
        protected global::System.Decimal? _Out_num;
        
        protected global::System.Decimal? _Out_price;
        
        protected global::System.Decimal? _Stock_num;
        
        protected global::System.Decimal? _Stock_Price;
        
        protected global::System.Decimal? _Real_num;
        
        protected global::System.Decimal? _Real_price;
        
        protected string _Check_date;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.EqmSparePartStore left, global::Mesnac.Entity.EqmSparePartStore right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.EqmSparePartStore left, global::Mesnac.Entity.EqmSparePartStore right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string SparePartCode {
            get {
                return this._SparePartCode;
            }
            set {
                this.OnPropertyChanged("SparePartCode", this._SparePartCode, value);
                this._SparePartCode = value;
            }
        }
        
        public string MajorType {
            get {
                return this._MajorType;
            }
            set {
                this.OnPropertyChanged("MajorType", this._MajorType, value);
                this._MajorType = value;
            }
        }
        
        public string MinorType {
            get {
                return this._MinorType;
            }
            set {
                this.OnPropertyChanged("MinorType", this._MinorType, value);
                this._MinorType = value;
            }
        }
        
        public string Standards {
            get {
                return this._Standards;
            }
            set {
                this.OnPropertyChanged("Standards", this._Standards, value);
                this._Standards = value;
            }
        }
        
        public global::System.Decimal? CurrentStoreNum {
            get {
                return this._CurrentStoreNum;
            }
            set {
                this.OnPropertyChanged("CurrentStoreNum", this._CurrentStoreNum, value);
                this._CurrentStoreNum = value;
            }
        }
        
        public global::System.Decimal? MaxStoreNum {
            get {
                return this._MaxStoreNum;
            }
            set {
                this.OnPropertyChanged("MaxStoreNum", this._MaxStoreNum, value);
                this._MaxStoreNum = value;
            }
        }
        
        public global::System.Decimal? MinStoreNum {
            get {
                return this._MinStoreNum;
            }
            set {
                this.OnPropertyChanged("MinStoreNum", this._MinStoreNum, value);
                this._MinStoreNum = value;
            }
        }
        
        public string PosStoragePlaceID {
            get {
                return this._PosStoragePlaceID;
            }
            set {
                this.OnPropertyChanged("PosStoragePlaceID", this._PosStoragePlaceID, value);
                this._PosStoragePlaceID = value;
            }
        }
        
        public string UseStoragePlaceID {
            get {
                return this._UseStoragePlaceID;
            }
            set {
                this.OnPropertyChanged("UseStoragePlaceID", this._UseStoragePlaceID, value);
                this._UseStoragePlaceID = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Ext_1 {
            get {
                return this._Ext_1;
            }
            set {
                this.OnPropertyChanged("Ext_1", this._Ext_1, value);
                this._Ext_1 = value;
            }
        }
        
        public string Ext_2 {
            get {
                return this._Ext_2;
            }
            set {
                this.OnPropertyChanged("Ext_2", this._Ext_2, value);
                this._Ext_2 = value;
            }
        }
        
        public string Ext_3 {
            get {
                return this._Ext_3;
            }
            set {
                this.OnPropertyChanged("Ext_3", this._Ext_3, value);
                this._Ext_3 = value;
            }
        }
        
        public string Ext_4 {
            get {
                return this._Ext_4;
            }
            set {
                this.OnPropertyChanged("Ext_4", this._Ext_4, value);
                this._Ext_4 = value;
            }
        }
        
        public string Dep_Code {
            get {
                return this._Dep_Code;
            }
            set {
                this.OnPropertyChanged("Dep_Code", this._Dep_Code, value);
                this._Dep_Code = value;
            }
        }
        
        public string Check_year {
            get {
                return this._Check_year;
            }
            set {
                this.OnPropertyChanged("Check_year", this._Check_year, value);
                this._Check_year = value;
            }
        }
        
        public string Check_month {
            get {
                return this._Check_month;
            }
            set {
                this.OnPropertyChanged("Check_month", this._Check_month, value);
                this._Check_month = value;
            }
        }
        
        public string Batch_Code {
            get {
                return this._Batch_Code;
            }
            set {
                this.OnPropertyChanged("Batch_Code", this._Batch_Code, value);
                this._Batch_Code = value;
            }
        }
        
        public string BJ_code {
            get {
                return this._BJ_code;
            }
            set {
                this.OnPropertyChanged("BJ_code", this._BJ_code, value);
                this._BJ_code = value;
            }
        }
        
        public string BJ_specType {
            get {
                return this._BJ_specType;
            }
            set {
                this.OnPropertyChanged("BJ_specType", this._BJ_specType, value);
                this._BJ_specType = value;
            }
        }
        
        public string BJ_tpCode {
            get {
                return this._BJ_tpCode;
            }
            set {
                this.OnPropertyChanged("BJ_tpCode", this._BJ_tpCode, value);
                this._BJ_tpCode = value;
            }
        }
        
        public string In_settle_mark {
            get {
                return this._In_settle_mark;
            }
            set {
                this.OnPropertyChanged("In_settle_mark", this._In_settle_mark, value);
                this._In_settle_mark = value;
            }
        }
        
        public global::System.Decimal? Last_num {
            get {
                return this._Last_num;
            }
            set {
                this.OnPropertyChanged("Last_num", this._Last_num, value);
                this._Last_num = value;
            }
        }
        
        public global::System.Decimal? Last_price {
            get {
                return this._Last_price;
            }
            set {
                this.OnPropertyChanged("Last_price", this._Last_price, value);
                this._Last_price = value;
            }
        }
        
        public global::System.Decimal? In_num {
            get {
                return this._In_num;
            }
            set {
                this.OnPropertyChanged("In_num", this._In_num, value);
                this._In_num = value;
            }
        }
        
        public global::System.Decimal? In_price {
            get {
                return this._In_price;
            }
            set {
                this.OnPropertyChanged("In_price", this._In_price, value);
                this._In_price = value;
            }
        }
        
        public global::System.Decimal? Out_num {
            get {
                return this._Out_num;
            }
            set {
                this.OnPropertyChanged("Out_num", this._Out_num, value);
                this._Out_num = value;
            }
        }
        
        public global::System.Decimal? Out_price {
            get {
                return this._Out_price;
            }
            set {
                this.OnPropertyChanged("Out_price", this._Out_price, value);
                this._Out_price = value;
            }
        }
        
        public global::System.Decimal? Stock_num {
            get {
                return this._Stock_num;
            }
            set {
                this.OnPropertyChanged("Stock_num", this._Stock_num, value);
                this._Stock_num = value;
            }
        }
        
        public global::System.Decimal? Stock_Price {
            get {
                return this._Stock_Price;
            }
            set {
                this.OnPropertyChanged("Stock_Price", this._Stock_Price, value);
                this._Stock_Price = value;
            }
        }
        
        public global::System.Decimal? Real_num {
            get {
                return this._Real_num;
            }
            set {
                this.OnPropertyChanged("Real_num", this._Real_num, value);
                this._Real_num = value;
            }
        }
        
        public global::System.Decimal? Real_price {
            get {
                return this._Real_price;
            }
            set {
                this.OnPropertyChanged("Real_price", this._Real_price, value);
                this._Real_price = value;
            }
        }
        
        public string Check_date {
            get {
                return this._Check_date;
            }
            set {
                this.OnPropertyChanged("Check_date", this._Check_date, value);
                this._Check_date = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((EqmSparePartStore._EqmSparePartStoreEntityConfiguration == null)) {
                EqmSparePartStore._EqmSparePartStoreEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmSparePartStore");
            }
            return EqmSparePartStore._EqmSparePartStoreEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._SparePartCode,
                    this._MajorType,
                    this._MinorType,
                    this._Standards,
                    this._CurrentStoreNum,
                    this._MaxStoreNum,
                    this._MinStoreNum,
                    this._PosStoragePlaceID,
                    this._UseStoragePlaceID,
                    this._DeleteFlag,
                    this._Remark,
                    this._Ext_1,
                    this._Ext_2,
                    this._Ext_3,
                    this._Ext_4,
                    this._Dep_Code,
                    this._Check_year,
                    this._Check_month,
                    this._Batch_Code,
                    this._BJ_code,
                    this._BJ_specType,
                    this._BJ_tpCode,
                    this._In_settle_mark,
                    this._Last_num,
                    this._Last_price,
                    this._In_num,
                    this._In_price,
                    this._Out_num,
                    this._Out_price,
                    this._Stock_num,
                    this._Stock_Price,
                    this._Real_num,
                    this._Real_price,
                    this._Check_date};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._SparePartCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MajorType = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MinorType = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Standards = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._CurrentStoreNum = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaxStoreNum = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._MinStoreNum = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._PosStoragePlaceID = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._UseStoragePlaceID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._DeleteFlag = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Remark = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Ext_1 = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Ext_2 = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Ext_3 = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Ext_4 = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Dep_Code = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Check_year = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Check_month = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Batch_Code = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._BJ_code = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._BJ_specType = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._BJ_tpCode = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._In_settle_mark = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Last_num = reader.GetDecimal(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Last_price = reader.GetDecimal(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._In_num = reader.GetDecimal(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._In_price = reader.GetDecimal(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Out_num = reader.GetDecimal(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._Out_price = reader.GetDecimal(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._Stock_num = reader.GetDecimal(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._Stock_Price = reader.GetDecimal(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._Real_num = reader.GetDecimal(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._Real_price = reader.GetDecimal(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._Check_date = reader.GetString(34);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._SparePartCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MajorType = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MinorType = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Standards = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._CurrentStoreNum = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaxStoreNum = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._MinStoreNum = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._PosStoragePlaceID = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._UseStoragePlaceID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._DeleteFlag = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Remark = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Ext_1 = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Ext_2 = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Ext_3 = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Ext_4 = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Dep_Code = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Check_year = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Check_month = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Batch_Code = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._BJ_code = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._BJ_specType = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._BJ_tpCode = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._In_settle_mark = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Last_num = ((System.Nullable<decimal>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Last_price = ((System.Nullable<decimal>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._In_num = ((System.Nullable<decimal>)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._In_price = ((System.Nullable<decimal>)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._Out_num = ((System.Nullable<decimal>)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._Out_price = ((System.Nullable<decimal>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._Stock_num = ((System.Nullable<decimal>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._Stock_Price = ((System.Nullable<decimal>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._Real_num = ((System.Nullable<decimal>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._Real_price = ((System.Nullable<decimal>)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._Check_date = ((string)(row[34]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmSparePartStore).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmSparePartStore)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _SparePartCode = new NBear.Common.PropertyItem("SparePartCode", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _MajorType = new NBear.Common.PropertyItem("MajorType", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _MinorType = new NBear.Common.PropertyItem("MinorType", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Standards = new NBear.Common.PropertyItem("Standards", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _CurrentStoreNum = new NBear.Common.PropertyItem("CurrentStoreNum", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _MaxStoreNum = new NBear.Common.PropertyItem("MaxStoreNum", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _MinStoreNum = new NBear.Common.PropertyItem("MinStoreNum", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _PosStoragePlaceID = new NBear.Common.PropertyItem("PosStoragePlaceID", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _UseStoragePlaceID = new NBear.Common.PropertyItem("UseStoragePlaceID", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Ext_1 = new NBear.Common.PropertyItem("Ext_1", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Ext_2 = new NBear.Common.PropertyItem("Ext_2", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Ext_3 = new NBear.Common.PropertyItem("Ext_3", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Ext_4 = new NBear.Common.PropertyItem("Ext_4", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Dep_Code = new NBear.Common.PropertyItem("Dep_Code", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Check_year = new NBear.Common.PropertyItem("Check_year", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Check_month = new NBear.Common.PropertyItem("Check_month", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Batch_Code = new NBear.Common.PropertyItem("Batch_Code", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _BJ_code = new NBear.Common.PropertyItem("BJ_code", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _BJ_specType = new NBear.Common.PropertyItem("BJ_specType", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _BJ_tpCode = new NBear.Common.PropertyItem("BJ_tpCode", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _In_settle_mark = new NBear.Common.PropertyItem("In_settle_mark", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Last_num = new NBear.Common.PropertyItem("Last_num", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Last_price = new NBear.Common.PropertyItem("Last_price", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _In_num = new NBear.Common.PropertyItem("In_num", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _In_price = new NBear.Common.PropertyItem("In_price", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Out_num = new NBear.Common.PropertyItem("Out_num", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Out_price = new NBear.Common.PropertyItem("Out_price", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Stock_num = new NBear.Common.PropertyItem("Stock_num", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Stock_Price = new NBear.Common.PropertyItem("Stock_Price", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Real_num = new NBear.Common.PropertyItem("Real_num", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Real_price = new NBear.Common.PropertyItem("Real_price", "Mesnac.Entity.EqmSparePartStore");
            
            protected NBear.Common.PropertyItem _Check_date = new NBear.Common.PropertyItem("Check_date", "Mesnac.Entity.EqmSparePartStore");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartCode {
                get {
                    if ((aliasName == null)) {
                        return _SparePartCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartCode", _SparePartCode.EntityConfiguration, _SparePartCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MajorType {
                get {
                    if ((aliasName == null)) {
                        return _MajorType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MajorType", _MajorType.EntityConfiguration, _MajorType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinorType {
                get {
                    if ((aliasName == null)) {
                        return _MinorType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinorType", _MinorType.EntityConfiguration, _MinorType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Standards {
                get {
                    if ((aliasName == null)) {
                        return _Standards;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Standards", _Standards.EntityConfiguration, _Standards.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CurrentStoreNum {
                get {
                    if ((aliasName == null)) {
                        return _CurrentStoreNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CurrentStoreNum", _CurrentStoreNum.EntityConfiguration, _CurrentStoreNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxStoreNum {
                get {
                    if ((aliasName == null)) {
                        return _MaxStoreNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxStoreNum", _MaxStoreNum.EntityConfiguration, _MaxStoreNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinStoreNum {
                get {
                    if ((aliasName == null)) {
                        return _MinStoreNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinStoreNum", _MinStoreNum.EntityConfiguration, _MinStoreNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PosStoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _PosStoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PosStoragePlaceID", _PosStoragePlaceID.EntityConfiguration, _PosStoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UseStoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _UseStoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UseStoragePlaceID", _UseStoragePlaceID.EntityConfiguration, _UseStoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_1 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_1", _Ext_1.EntityConfiguration, _Ext_1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_2 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_2", _Ext_2.EntityConfiguration, _Ext_2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_3 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_3", _Ext_3.EntityConfiguration, _Ext_3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_4 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_4;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_4", _Ext_4.EntityConfiguration, _Ext_4.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dep_Code {
                get {
                    if ((aliasName == null)) {
                        return _Dep_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dep_Code", _Dep_Code.EntityConfiguration, _Dep_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_year {
                get {
                    if ((aliasName == null)) {
                        return _Check_year;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_year", _Check_year.EntityConfiguration, _Check_year.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_month {
                get {
                    if ((aliasName == null)) {
                        return _Check_month;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_month", _Check_month.EntityConfiguration, _Check_month.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Batch_Code {
                get {
                    if ((aliasName == null)) {
                        return _Batch_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Batch_Code", _Batch_Code.EntityConfiguration, _Batch_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_code {
                get {
                    if ((aliasName == null)) {
                        return _BJ_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_code", _BJ_code.EntityConfiguration, _BJ_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_specType {
                get {
                    if ((aliasName == null)) {
                        return _BJ_specType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_specType", _BJ_specType.EntityConfiguration, _BJ_specType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_tpCode {
                get {
                    if ((aliasName == null)) {
                        return _BJ_tpCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_tpCode", _BJ_tpCode.EntityConfiguration, _BJ_tpCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_settle_mark {
                get {
                    if ((aliasName == null)) {
                        return _In_settle_mark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_settle_mark", _In_settle_mark.EntityConfiguration, _In_settle_mark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Last_num {
                get {
                    if ((aliasName == null)) {
                        return _Last_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Last_num", _Last_num.EntityConfiguration, _Last_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Last_price {
                get {
                    if ((aliasName == null)) {
                        return _Last_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Last_price", _Last_price.EntityConfiguration, _Last_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_num {
                get {
                    if ((aliasName == null)) {
                        return _In_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_num", _In_num.EntityConfiguration, _In_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_price {
                get {
                    if ((aliasName == null)) {
                        return _In_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_price", _In_price.EntityConfiguration, _In_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Out_num {
                get {
                    if ((aliasName == null)) {
                        return _Out_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Out_num", _Out_num.EntityConfiguration, _Out_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Out_price {
                get {
                    if ((aliasName == null)) {
                        return _Out_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Out_price", _Out_price.EntityConfiguration, _Out_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_num {
                get {
                    if ((aliasName == null)) {
                        return _Stock_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_num", _Stock_num.EntityConfiguration, _Stock_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_Price {
                get {
                    if ((aliasName == null)) {
                        return _Stock_Price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_Price", _Stock_Price.EntityConfiguration, _Stock_Price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_num {
                get {
                    if ((aliasName == null)) {
                        return _Real_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_num", _Real_num.EntityConfiguration, _Real_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_price {
                get {
                    if ((aliasName == null)) {
                        return _Real_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_price", _Real_price.EntityConfiguration, _Real_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_date {
                get {
                    if ((aliasName == null)) {
                        return _Check_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_date", _Check_date.EntityConfiguration, _Check_date.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
