//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PstStorgaeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstStorgae> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstStorgae\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"PstStorgae\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"ID\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ID\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNul" +
        "l=\"true\" />\r\n    <Property name=\"StorageID\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S" +
        "torageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StoragePlaceID\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"System.String\" sqlType=\"" +
        "nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Bar" +
        "code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"nvarchar(18)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"RealWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Rea" +
        "lWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Entit" +
        "yConfiguration>")]
    public partial class PstStorgae : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PstStorgaeEntityConfiguration;
        
        protected string _ID;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected string _Barcode;
        
        protected global::System.Decimal? _RealWeight;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PstStorgae left, global::Mesnac.Entity.PstStorgae right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PstStorgae left, global::Mesnac.Entity.PstStorgae right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string ID {
            get {
                return this._ID;
            }
            set {
                this.OnPropertyChanged("ID", this._ID, value);
                this._ID = value;
            }
        }
        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PstStorgae._PstStorgaeEntityConfiguration == null)) {
                PstStorgae._PstStorgaeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstStorgae");
            }
            return PstStorgae._PstStorgaeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ID,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._Barcode,
                    this._RealWeight,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._StorageID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._StoragePlaceID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Barcode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RealWeight = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Remark = reader.GetString(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._StorageID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._StoragePlaceID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Barcode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Remark = ((string)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstStorgae).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PstStorgae)(obj)).isAttached) 
                        && (this.ID == ((global::Mesnac.Entity.PstStorgae)(obj)).ID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ID = new NBear.Common.PropertyItem("ID", "Mesnac.Entity.PstStorgae");
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstStorgae");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PstStorgae");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PstStorgae");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PstStorgae");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstStorgae");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ID {
                get {
                    if ((aliasName == null)) {
                        return _ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ID", _ID.EntityConfiguration, _ID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
