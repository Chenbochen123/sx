//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Pmt_WeightArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Pmt_Weight> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Pmt_Weight\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"Pmt_Weight\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"Recipe_Code\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Recipe_Code\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"" +
        "true\" isNotNull=\"true\" />\r\n    <Property name=\"Weight_ID\" type=\"System.Int32\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Weight_ID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryK" +
        "ey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Equip_Code\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Equip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)" +
        "\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Edt_Code\" type=\"S" +
        "ystem.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Edt_Code\" mappingColumnType=\"System.Int32\" sqlType=\"i" +
        "nt\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Weight_Type\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Weight_Type\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(1)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"S" +
        "cale_Code\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Scale_Code\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Act_Code\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Act_Code\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_Code\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Mater_Code\" mappingColumnType=\"System.String\" sqlType=\"cha" +
        "r(13)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mater_Name\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Mater_Name\" mappingColumnType=\"System.String\"" +
        " sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Set_Weight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Set_We" +
        "ight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Error_Allow\" type=\"" +
        "System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Error_Allow\" mappingColumnType=" +
        "\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Father_code\" type=\"System.String\" isInherit" +
        "ed=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Father_code\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Unit" +
        "_name\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Unit_name\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"varchar(6)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Child_code\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Child_code\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"If_usebat\" type=\"System.String\" " +
        "isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"If_usebat\" mappingColumnType=\"System.String\"" +
        " sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Maxrate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Maxrate\" mappingColumnType=\"System" +
        ".String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" mappingColumnType=" +
        "\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"RecipeObjID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Re" +
        "cipeObjID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Pmt_Weight : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Pmt_WeightEntityConfiguration;
        
        protected string _Recipe_Code;
        
        protected int _Weight_ID;
        
        protected string _Equip_Code;
        
        protected int _Edt_Code;
        
        protected string _Weight_Type;
        
        protected global::System.Int32? _Scale_Code;
        
        protected string _Act_Code;
        
        protected string _Mater_Code;
        
        protected string _Mater_Name;
        
        protected global::System.Decimal? _Set_Weight;
        
        protected global::System.Decimal? _Error_Allow;
        
        protected string _Father_code;
        
        protected string _Unit_name;
        
        protected string _Child_code;
        
        protected string _If_usebat;
        
        protected string _Maxrate;
        
        protected int _ObjID;
        
        protected global::System.Int32? _RecipeObjID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Pmt_Weight left, global::Mesnac.Entity.Pmt_Weight right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Pmt_Weight left, global::Mesnac.Entity.Pmt_Weight right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Recipe_Code {
            get {
                return this._Recipe_Code;
            }
            set {
                this.OnPropertyChanged("Recipe_Code", this._Recipe_Code, value);
                this._Recipe_Code = value;
            }
        }
        
        public int Weight_ID {
            get {
                return this._Weight_ID;
            }
            set {
                this.OnPropertyChanged("Weight_ID", this._Weight_ID, value);
                this._Weight_ID = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public int Edt_Code {
            get {
                return this._Edt_Code;
            }
            set {
                this.OnPropertyChanged("Edt_Code", this._Edt_Code, value);
                this._Edt_Code = value;
            }
        }
        
        public string Weight_Type {
            get {
                return this._Weight_Type;
            }
            set {
                this.OnPropertyChanged("Weight_Type", this._Weight_Type, value);
                this._Weight_Type = value;
            }
        }
        
        public global::System.Int32? Scale_Code {
            get {
                return this._Scale_Code;
            }
            set {
                this.OnPropertyChanged("Scale_Code", this._Scale_Code, value);
                this._Scale_Code = value;
            }
        }
        
        public string Act_Code {
            get {
                return this._Act_Code;
            }
            set {
                this.OnPropertyChanged("Act_Code", this._Act_Code, value);
                this._Act_Code = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public string Mater_Name {
            get {
                return this._Mater_Name;
            }
            set {
                this.OnPropertyChanged("Mater_Name", this._Mater_Name, value);
                this._Mater_Name = value;
            }
        }
        
        public global::System.Decimal? Set_Weight {
            get {
                return this._Set_Weight;
            }
            set {
                this.OnPropertyChanged("Set_Weight", this._Set_Weight, value);
                this._Set_Weight = value;
            }
        }
        
        public global::System.Decimal? Error_Allow {
            get {
                return this._Error_Allow;
            }
            set {
                this.OnPropertyChanged("Error_Allow", this._Error_Allow, value);
                this._Error_Allow = value;
            }
        }
        
        public string Father_code {
            get {
                return this._Father_code;
            }
            set {
                this.OnPropertyChanged("Father_code", this._Father_code, value);
                this._Father_code = value;
            }
        }
        
        public string Unit_name {
            get {
                return this._Unit_name;
            }
            set {
                this.OnPropertyChanged("Unit_name", this._Unit_name, value);
                this._Unit_name = value;
            }
        }
        
        public string Child_code {
            get {
                return this._Child_code;
            }
            set {
                this.OnPropertyChanged("Child_code", this._Child_code, value);
                this._Child_code = value;
            }
        }
        
        public string If_usebat {
            get {
                return this._If_usebat;
            }
            set {
                this.OnPropertyChanged("If_usebat", this._If_usebat, value);
                this._If_usebat = value;
            }
        }
        
        public string Maxrate {
            get {
                return this._Maxrate;
            }
            set {
                this.OnPropertyChanged("Maxrate", this._Maxrate, value);
                this._Maxrate = value;
            }
        }
        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.Int32? RecipeObjID {
            get {
                return this._RecipeObjID;
            }
            set {
                this.OnPropertyChanged("RecipeObjID", this._RecipeObjID, value);
                this._RecipeObjID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Pmt_Weight._Pmt_WeightEntityConfiguration == null)) {
                Pmt_Weight._Pmt_WeightEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Pmt_Weight");
            }
            return Pmt_Weight._Pmt_WeightEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Recipe_Code,
                    this._Weight_ID,
                    this._Equip_Code,
                    this._Edt_Code,
                    this._Weight_Type,
                    this._Scale_Code,
                    this._Act_Code,
                    this._Mater_Code,
                    this._Mater_Name,
                    this._Set_Weight,
                    this._Error_Allow,
                    this._Father_code,
                    this._Unit_name,
                    this._Child_code,
                    this._If_usebat,
                    this._Maxrate,
                    this._ObjID,
                    this._RecipeObjID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Recipe_Code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Weight_ID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Edt_Code = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Weight_Type = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Scale_Code = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Act_Code = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Mater_Code = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Mater_Name = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Set_Weight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Error_Allow = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Father_code = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Unit_name = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Child_code = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._If_usebat = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Maxrate = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._ObjID = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._RecipeObjID = reader.GetInt32(17);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Recipe_Code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Weight_ID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Edt_Code = ((int)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Weight_Type = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Scale_Code = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Act_Code = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Mater_Code = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Mater_Name = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Set_Weight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Error_Allow = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Father_code = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Unit_name = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Child_code = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._If_usebat = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Maxrate = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._ObjID = ((int)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._RecipeObjID = ((System.Nullable<int>)(row[17]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Pmt_Weight).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((((((this.isAttached && ((global::Mesnac.Entity.Pmt_Weight)(obj)).isAttached) 
                        && (this.Recipe_Code == ((global::Mesnac.Entity.Pmt_Weight)(obj)).Recipe_Code)) 
                        && (this.Weight_ID == ((global::Mesnac.Entity.Pmt_Weight)(obj)).Weight_ID)) 
                        && (this.Equip_Code == ((global::Mesnac.Entity.Pmt_Weight)(obj)).Equip_Code)) 
                        && (this.Edt_Code == ((global::Mesnac.Entity.Pmt_Weight)(obj)).Edt_Code)) 
                        && (this.Weight_Type == ((global::Mesnac.Entity.Pmt_Weight)(obj)).Weight_Type)) 
                        && (this.Mater_Code == ((global::Mesnac.Entity.Pmt_Weight)(obj)).Mater_Code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Recipe_Code = new NBear.Common.PropertyItem("Recipe_Code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Weight_ID = new NBear.Common.PropertyItem("Weight_ID", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Edt_Code = new NBear.Common.PropertyItem("Edt_Code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Weight_Type = new NBear.Common.PropertyItem("Weight_Type", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Scale_Code = new NBear.Common.PropertyItem("Scale_Code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Act_Code = new NBear.Common.PropertyItem("Act_Code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Mater_Name = new NBear.Common.PropertyItem("Mater_Name", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Set_Weight = new NBear.Common.PropertyItem("Set_Weight", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Error_Allow = new NBear.Common.PropertyItem("Error_Allow", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Father_code = new NBear.Common.PropertyItem("Father_code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Unit_name = new NBear.Common.PropertyItem("Unit_name", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Child_code = new NBear.Common.PropertyItem("Child_code", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _If_usebat = new NBear.Common.PropertyItem("If_usebat", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _Maxrate = new NBear.Common.PropertyItem("Maxrate", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.Pmt_Weight");
            
            protected NBear.Common.PropertyItem _RecipeObjID = new NBear.Common.PropertyItem("RecipeObjID", "Mesnac.Entity.Pmt_Weight");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Recipe_Code {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_Code", _Recipe_Code.EntityConfiguration, _Recipe_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight_ID {
                get {
                    if ((aliasName == null)) {
                        return _Weight_ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight_ID", _Weight_ID.EntityConfiguration, _Weight_ID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Edt_Code {
                get {
                    if ((aliasName == null)) {
                        return _Edt_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Edt_Code", _Edt_Code.EntityConfiguration, _Edt_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight_Type {
                get {
                    if ((aliasName == null)) {
                        return _Weight_Type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight_Type", _Weight_Type.EntityConfiguration, _Weight_Type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Scale_Code {
                get {
                    if ((aliasName == null)) {
                        return _Scale_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Scale_Code", _Scale_Code.EntityConfiguration, _Scale_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Act_Code {
                get {
                    if ((aliasName == null)) {
                        return _Act_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Act_Code", _Act_Code.EntityConfiguration, _Act_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Name", _Mater_Name.EntityConfiguration, _Mater_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Set_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_Weight", _Set_Weight.EntityConfiguration, _Set_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Error_Allow {
                get {
                    if ((aliasName == null)) {
                        return _Error_Allow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Error_Allow", _Error_Allow.EntityConfiguration, _Error_Allow.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Father_code {
                get {
                    if ((aliasName == null)) {
                        return _Father_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Father_code", _Father_code.EntityConfiguration, _Father_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Unit_name {
                get {
                    if ((aliasName == null)) {
                        return _Unit_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Unit_name", _Unit_name.EntityConfiguration, _Unit_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Child_code {
                get {
                    if ((aliasName == null)) {
                        return _Child_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Child_code", _Child_code.EntityConfiguration, _Child_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem If_usebat {
                get {
                    if ((aliasName == null)) {
                        return _If_usebat;
                    }
                    else {
                        return new NBear.Common.PropertyItem("If_usebat", _If_usebat.EntityConfiguration, _If_usebat.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Maxrate {
                get {
                    if ((aliasName == null)) {
                        return _Maxrate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Maxrate", _Maxrate.EntityConfiguration, _Maxrate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeObjID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeObjID", _RecipeObjID.EntityConfiguration, _RecipeObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
