//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class TblMixArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.TblMix>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
    "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
    "name=\"Mesnac.Entity.TblMix\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUpda" +
    "te=\"false\" isRelation=\"false\" mappingName=\"TblMix\" batchSize=\"10\">\r\n  <Propertie" +
    "s>\r\n    <Property name=\"Equip_code\" type=\"System.String\" isInherited=\"false\" isR" +
    "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
    "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
    "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_cod" +
    "e\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"true\" isNot" +
    "Null=\"true\" />\r\n    <Property name=\"Mater_code\" type=\"System.String\" isInherited" +
    "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
    "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
    "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
    "e=\"Mater_code\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimary" +
    "Key=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Edt_code\" type=\"System.Int32" +
    "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
    "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
    "e\" mappingName=\"Edt_code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrima" +
    "ryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mix_id\" type=\"System.Int32" +
    "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
    "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
    " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
    "e\" mappingName=\"Mix_id\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimary" +
    "Key=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Act_Code\" type=\"System.Nulla" +
    "ble`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
    "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
    "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
    "izationIgnore=\"false\" mappingName=\"Act_Code\" mappingColumnType=\"System.Nullable`" +
    "1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
    "roperty name=\"Term_Code\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fal" +
    "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
    "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Te" +
    "rm_Code\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPri" +
    "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_time\" type=\"System" +
    ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
    "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
    "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
    "SerializationIgnore=\"false\" mappingName=\"Set_time\" mappingColumnType=\"System.Nul" +
    "lable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
    "    <Property name=\"Set_temp\" type=\"System.Nullable`1[System.Decimal]\" isInherit" +
    "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
    "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
    "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
    "ame=\"Set_temp\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"de" +
    "cimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_power\"" +
    " type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\"" +
    " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
    "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
    "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Set_power\" mappingColumn" +
    "Type=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" " +
    "isNotNull=\"false\" />\r\n    <Property name=\"Set_ener\" type=\"System.Nullable`1[Syst" +
    "em.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
    "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
    "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
    "gnore=\"false\" mappingName=\"Set_ener\" mappingColumnType=\"System.Nullable`1[System" +
    ".Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
    "perty name=\"Set_Press\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fal" +
    "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
    "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Se" +
    "t_Press\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\"" +
    " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_Rota\" type=\"" +
    "System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
    "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
    "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
    "alse\" isSerializationIgnore=\"false\" mappingName=\"Set_Rota\" mappingColumnType=\"Sy" +
    "stem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNul" +
    "l=\"false\" />\r\n    <Property name=\"Modify_Flag\" type=\"System.String\" isInherited=" +
    "\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
    "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
    "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
    "re=\"false\" mappingName=\"Modify_Flag\" mappingColumnType=\"System.String\" sqlType=\"" +
    "char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Flag\" ty" +
    "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
    " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
    "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
    "ationIgnore=\"false\" mappingName=\"Flag\" mappingColumnType=\"System.String\" sqlType" +
    "=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ObjID\"" +
    " type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false" +
    "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
    "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
    "zationIgnore=\"false\" mappingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlTyp" +
    "e=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"B_Version" +
    "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
    "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
    "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
    "alizationIgnore=\"false\" mappingName=\"B_Version\" mappingColumnType=\"System.String" +
    "\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
    " name=\"R_Version\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" is" +
    "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
    "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
    "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"R_Version\" mappingColumnTyp" +
    "e=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
    ">\r\n    <Property name=\"S_Factory\" type=\"System.String\" isInherited=\"false\" isRea" +
    "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
    "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
    "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S_Factory\" " +
    "mappingColumnType=\"System.String\" sqlType=\"varchar(5)\" isPrimaryKey=\"true\" isNot" +
    "Null=\"true\" />\r\n    <Property name=\"Recipe_type\" type=\"System.String\" isInherite" +
    "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
    "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
    "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
    "me=\"Recipe_type\" mappingColumnType=\"System.String\" sqlType=\"varchar(5)\" isPrimar" +
    "yKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"OpenEquip_ID\" type=\"System." +
    "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
    "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
    "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
    "=\"false\" mappingName=\"OpenEquip_ID\" mappingColumnType=\"System.String\" sqlType=\"c" +
    "har(5)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"CoolSpeed_M" +
    "ix\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"fal" +
    "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
    "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
    "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CoolSpeed_Mix\" mappin" +
    "gColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"" +
    "false\" isNotNull=\"false\" />\r\n    <Property name=\"OpenMixSpeed_Mix\" type=\"System." +
    "Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
    "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
    "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
    "sSerializationIgnore=\"false\" mappingName=\"OpenMixSpeed_Mix\" mappingColumnType=\"S" +
    "ystem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNu" +
    "ll=\"false\" />\r\n    <Property name=\"Rollor_Mix\" type=\"System.Nullable`1[System.De" +
    "cimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
    "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
    "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
    "=\"false\" mappingName=\"Rollor_Mix\" mappingColumnType=\"System.Nullable`1[System.De" +
    "cimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
    "ty name=\"WatrTemp_Mix\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fal" +
    "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
    "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
    "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Wa" +
    "trTemp_Mix\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decim" +
    "al\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RubTemp_Mix\" " +
    "type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" " +
    "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
    "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
    "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RubTemp_Mix\" mappingColum" +
    "nType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\"" +
    " isNotNull=\"false\" />\r\n    <Property name=\"SpeedDiff_Mix\" type=\"System.Nullable`" +
    "1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
    " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
    "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
    "ationIgnore=\"false\" mappingName=\"SpeedDiff_Mix\" mappingColumnType=\"System.Nullab" +
    "le`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
    ">\r\n    <Property name=\"Routing_type\" type=\"System.Int32\" isInherited=\"false\" isR" +
    "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
    "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
    "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Routing_t" +
    "ype\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNul" +
    "l=\"true\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class TblMix : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _TblMixEntityConfiguration;

        protected string _Equip_code;

        protected string _Mater_code;

        protected int _Edt_code;

        protected int _Mix_id;

        protected global::System.Int32? _Act_Code;

        protected global::System.Int32? _Term_Code;

        protected global::System.Int32? _Set_time;

        protected global::System.Decimal? _Set_temp;

        protected global::System.Decimal? _Set_power;

        protected global::System.Decimal? _Set_ener;

        protected global::System.Decimal? _Set_Press;

        protected global::System.Decimal? _Set_Rota;

        protected string _Modify_Flag;

        protected string _Flag;

        protected int _ObjID;

        protected string _B_Version;

        protected string _R_Version;

        protected string _S_Factory;

        protected string _Recipe_type;

        protected string _OpenEquip_ID;

        protected global::System.Decimal? _CoolSpeed_Mix;

        protected global::System.Decimal? _OpenMixSpeed_Mix;

        protected global::System.Decimal? _Rollor_Mix;

        protected global::System.Decimal? _WatrTemp_Mix;

        protected global::System.Decimal? _RubTemp_Mix;

        protected global::System.Decimal? _SpeedDiff_Mix;

        protected int _Routing_type;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.TblMix left, global::Mesnac.Entity.TblMix right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.TblMix left, global::Mesnac.Entity.TblMix right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string Equip_code
        {
            get
            {
                return this._Equip_code;
            }
            set
            {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }

        public string Mater_code
        {
            get
            {
                return this._Mater_code;
            }
            set
            {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }

        public int Edt_code
        {
            get
            {
                return this._Edt_code;
            }
            set
            {
                this.OnPropertyChanged("Edt_code", this._Edt_code, value);
                this._Edt_code = value;
            }
        }

        public int Mix_id
        {
            get
            {
                return this._Mix_id;
            }
            set
            {
                this.OnPropertyChanged("Mix_id", this._Mix_id, value);
                this._Mix_id = value;
            }
        }

        public global::System.Int32? Act_Code
        {
            get
            {
                return this._Act_Code;
            }
            set
            {
                this.OnPropertyChanged("Act_Code", this._Act_Code, value);
                this._Act_Code = value;
            }
        }

        public global::System.Int32? Term_Code
        {
            get
            {
                return this._Term_Code;
            }
            set
            {
                this.OnPropertyChanged("Term_Code", this._Term_Code, value);
                this._Term_Code = value;
            }
        }

        public global::System.Int32? Set_time
        {
            get
            {
                return this._Set_time;
            }
            set
            {
                this.OnPropertyChanged("Set_time", this._Set_time, value);
                this._Set_time = value;
            }
        }

        public global::System.Decimal? Set_temp
        {
            get
            {
                return this._Set_temp;
            }
            set
            {
                this.OnPropertyChanged("Set_temp", this._Set_temp, value);
                this._Set_temp = value;
            }
        }

        public global::System.Decimal? Set_power
        {
            get
            {
                return this._Set_power;
            }
            set
            {
                this.OnPropertyChanged("Set_power", this._Set_power, value);
                this._Set_power = value;
            }
        }

        public global::System.Decimal? Set_ener
        {
            get
            {
                return this._Set_ener;
            }
            set
            {
                this.OnPropertyChanged("Set_ener", this._Set_ener, value);
                this._Set_ener = value;
            }
        }

        public global::System.Decimal? Set_Press
        {
            get
            {
                return this._Set_Press;
            }
            set
            {
                this.OnPropertyChanged("Set_Press", this._Set_Press, value);
                this._Set_Press = value;
            }
        }

        public global::System.Decimal? Set_Rota
        {
            get
            {
                return this._Set_Rota;
            }
            set
            {
                this.OnPropertyChanged("Set_Rota", this._Set_Rota, value);
                this._Set_Rota = value;
            }
        }

        public string Modify_Flag
        {
            get
            {
                return this._Modify_Flag;
            }
            set
            {
                this.OnPropertyChanged("Modify_Flag", this._Modify_Flag, value);
                this._Modify_Flag = value;
            }
        }

        public string Flag
        {
            get
            {
                return this._Flag;
            }
            set
            {
                this.OnPropertyChanged("Flag", this._Flag, value);
                this._Flag = value;
            }
        }

        public int ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public string B_Version
        {
            get
            {
                return this._B_Version;
            }
            set
            {
                this.OnPropertyChanged("B_Version", this._B_Version, value);
                this._B_Version = value;
            }
        }

        public string R_Version
        {
            get
            {
                return this._R_Version;
            }
            set
            {
                this.OnPropertyChanged("R_Version", this._R_Version, value);
                this._R_Version = value;
            }
        }

        public string S_Factory
        {
            get
            {
                return this._S_Factory;
            }
            set
            {
                this.OnPropertyChanged("S_Factory", this._S_Factory, value);
                this._S_Factory = value;
            }
        }

        public string Recipe_type
        {
            get
            {
                return this._Recipe_type;
            }
            set
            {
                this.OnPropertyChanged("Recipe_type", this._Recipe_type, value);
                this._Recipe_type = value;
            }
        }

        public string OpenEquip_ID
        {
            get
            {
                return this._OpenEquip_ID;
            }
            set
            {
                this.OnPropertyChanged("OpenEquip_ID", this._OpenEquip_ID, value);
                this._OpenEquip_ID = value;
            }
        }

        public global::System.Decimal? CoolSpeed_Mix
        {
            get
            {
                return this._CoolSpeed_Mix;
            }
            set
            {
                this.OnPropertyChanged("CoolSpeed_Mix", this._CoolSpeed_Mix, value);
                this._CoolSpeed_Mix = value;
            }
        }

        public global::System.Decimal? OpenMixSpeed_Mix
        {
            get
            {
                return this._OpenMixSpeed_Mix;
            }
            set
            {
                this.OnPropertyChanged("OpenMixSpeed_Mix", this._OpenMixSpeed_Mix, value);
                this._OpenMixSpeed_Mix = value;
            }
        }

        public global::System.Decimal? Rollor_Mix
        {
            get
            {
                return this._Rollor_Mix;
            }
            set
            {
                this.OnPropertyChanged("Rollor_Mix", this._Rollor_Mix, value);
                this._Rollor_Mix = value;
            }
        }

        public global::System.Decimal? WatrTemp_Mix
        {
            get
            {
                return this._WatrTemp_Mix;
            }
            set
            {
                this.OnPropertyChanged("WatrTemp_Mix", this._WatrTemp_Mix, value);
                this._WatrTemp_Mix = value;
            }
        }

        public global::System.Decimal? RubTemp_Mix
        {
            get
            {
                return this._RubTemp_Mix;
            }
            set
            {
                this.OnPropertyChanged("RubTemp_Mix", this._RubTemp_Mix, value);
                this._RubTemp_Mix = value;
            }
        }

        public global::System.Decimal? SpeedDiff_Mix
        {
            get
            {
                return this._SpeedDiff_Mix;
            }
            set
            {
                this.OnPropertyChanged("SpeedDiff_Mix", this._SpeedDiff_Mix, value);
                this._SpeedDiff_Mix = value;
            }
        }

        public int Routing_type
        {
            get
            {
                return this._Routing_type;
            }
            set
            {
                this.OnPropertyChanged("Routing_type", this._Routing_type, value);
                this._Routing_type = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((TblMix._TblMixEntityConfiguration == null))
            {
                TblMix._TblMixEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.TblMix");
            }
            return TblMix._TblMixEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                        this._Equip_code,
                        this._Mater_code,
                        this._Edt_code,
                        this._Mix_id,
                        this._Act_Code,
                        this._Term_Code,
                        this._Set_time,
                        this._Set_temp,
                        this._Set_power,
                        this._Set_ener,
                        this._Set_Press,
                        this._Set_Rota,
                        this._Modify_Flag,
                        this._Flag,
                        this._ObjID,
                        this._B_Version,
                        this._R_Version,
                        this._S_Factory,
                        this._Recipe_type,
                        this._OpenEquip_ID,
                        this._CoolSpeed_Mix,
                        this._OpenMixSpeed_Mix,
                        this._Rollor_Mix,
                        this._WatrTemp_Mix,
                        this._RubTemp_Mix,
                        this._SpeedDiff_Mix,
                        this._Routing_type};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._Equip_code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Mater_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._Edt_code = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._Mix_id = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Act_Code = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._Term_Code = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Set_time = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._Set_temp = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Set_power = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._Set_ener = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._Set_Press = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Set_Rota = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Modify_Flag = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Flag = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._ObjID = reader.GetInt32(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._B_Version = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._R_Version = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._S_Factory = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._Recipe_type = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._OpenEquip_ID = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._CoolSpeed_Mix = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._OpenMixSpeed_Mix = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._Rollor_Mix = reader.GetDecimal(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._WatrTemp_Mix = reader.GetDecimal(23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._RubTemp_Mix = reader.GetDecimal(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._SpeedDiff_Mix = reader.GetDecimal(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._Routing_type = reader.GetInt32(26);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._Equip_code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Mater_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._Edt_code = ((int)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._Mix_id = ((int)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Act_Code = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._Term_Code = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Set_time = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._Set_temp = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Set_power = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._Set_ener = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._Set_Press = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Set_Rota = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Modify_Flag = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Flag = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._ObjID = ((int)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._B_Version = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._R_Version = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._S_Factory = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._Recipe_type = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._OpenEquip_ID = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._CoolSpeed_Mix = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._OpenMixSpeed_Mix = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._Rollor_Mix = ((System.Nullable<decimal>)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._WatrTemp_Mix = ((System.Nullable<decimal>)(row[23]));
            }
            if ((false == row.IsNull(24)))
            {
                this._RubTemp_Mix = ((System.Nullable<decimal>)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._SpeedDiff_Mix = ((System.Nullable<decimal>)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._Routing_type = ((int)(row[26]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.TblMix).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return (((((((((this.isAttached && ((global::Mesnac.Entity.TblMix)(obj)).isAttached)
                        && (this.Equip_code == ((global::Mesnac.Entity.TblMix)(obj)).Equip_code))
                        && (this.Mater_code == ((global::Mesnac.Entity.TblMix)(obj)).Mater_code))
                        && (this.Edt_code == ((global::Mesnac.Entity.TblMix)(obj)).Edt_code))
                        && (this.Mix_id == ((global::Mesnac.Entity.TblMix)(obj)).Mix_id))
                        && (this.S_Factory == ((global::Mesnac.Entity.TblMix)(obj)).S_Factory))
                        && (this.Recipe_type == ((global::Mesnac.Entity.TblMix)(obj)).Recipe_type))
                        && (this.OpenEquip_ID == ((global::Mesnac.Entity.TblMix)(obj)).OpenEquip_ID))
                        && (this.Routing_type == ((global::Mesnac.Entity.TblMix)(obj)).Routing_type));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Edt_code = new NBear.Common.PropertyItem("Edt_code", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Mix_id = new NBear.Common.PropertyItem("Mix_id", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Act_Code = new NBear.Common.PropertyItem("Act_Code", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Term_Code = new NBear.Common.PropertyItem("Term_Code", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Set_time = new NBear.Common.PropertyItem("Set_time", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Set_temp = new NBear.Common.PropertyItem("Set_temp", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Set_power = new NBear.Common.PropertyItem("Set_power", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Set_ener = new NBear.Common.PropertyItem("Set_ener", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Set_Press = new NBear.Common.PropertyItem("Set_Press", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Set_Rota = new NBear.Common.PropertyItem("Set_Rota", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Modify_Flag = new NBear.Common.PropertyItem("Modify_Flag", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Flag = new NBear.Common.PropertyItem("Flag", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _B_Version = new NBear.Common.PropertyItem("B_Version", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _R_Version = new NBear.Common.PropertyItem("R_Version", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _S_Factory = new NBear.Common.PropertyItem("S_Factory", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Recipe_type = new NBear.Common.PropertyItem("Recipe_type", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _OpenEquip_ID = new NBear.Common.PropertyItem("OpenEquip_ID", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _CoolSpeed_Mix = new NBear.Common.PropertyItem("CoolSpeed_Mix", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _OpenMixSpeed_Mix = new NBear.Common.PropertyItem("OpenMixSpeed_Mix", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Rollor_Mix = new NBear.Common.PropertyItem("Rollor_Mix", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _WatrTemp_Mix = new NBear.Common.PropertyItem("WatrTemp_Mix", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _RubTemp_Mix = new NBear.Common.PropertyItem("RubTemp_Mix", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _SpeedDiff_Mix = new NBear.Common.PropertyItem("SpeedDiff_Mix", "Mesnac.Entity.TblMix");

            protected NBear.Common.PropertyItem _Routing_type = new NBear.Common.PropertyItem("Routing_type", "Mesnac.Entity.TblMix");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem Equip_code
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Equip_code;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Mater_code
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mater_code;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Edt_code
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Edt_code;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Edt_code", _Edt_code.EntityConfiguration, _Edt_code.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Mix_id
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Mix_id;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Mix_id", _Mix_id.EntityConfiguration, _Mix_id.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Act_Code
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Act_Code;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Act_Code", _Act_Code.EntityConfiguration, _Act_Code.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Term_Code
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Term_Code;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Term_Code", _Term_Code.EntityConfiguration, _Term_Code.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Set_time
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Set_time;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Set_time", _Set_time.EntityConfiguration, _Set_time.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Set_temp
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Set_temp;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Set_temp", _Set_temp.EntityConfiguration, _Set_temp.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Set_power
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Set_power;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Set_power", _Set_power.EntityConfiguration, _Set_power.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Set_ener
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Set_ener;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Set_ener", _Set_ener.EntityConfiguration, _Set_ener.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Set_Press
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Set_Press;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Set_Press", _Set_Press.EntityConfiguration, _Set_Press.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Set_Rota
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Set_Rota;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Set_Rota", _Set_Rota.EntityConfiguration, _Set_Rota.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Modify_Flag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Modify_Flag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Modify_Flag", _Modify_Flag.EntityConfiguration, _Modify_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Flag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Flag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Flag", _Flag.EntityConfiguration, _Flag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem B_Version
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _B_Version;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("B_Version", _B_Version.EntityConfiguration, _B_Version.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem R_Version
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _R_Version;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("R_Version", _R_Version.EntityConfiguration, _R_Version.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem S_Factory
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _S_Factory;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("S_Factory", _S_Factory.EntityConfiguration, _S_Factory.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Recipe_type
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Recipe_type;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Recipe_type", _Recipe_type.EntityConfiguration, _Recipe_type.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OpenEquip_ID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OpenEquip_ID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OpenEquip_ID", _OpenEquip_ID.EntityConfiguration, _OpenEquip_ID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CoolSpeed_Mix
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CoolSpeed_Mix;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CoolSpeed_Mix", _CoolSpeed_Mix.EntityConfiguration, _CoolSpeed_Mix.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OpenMixSpeed_Mix
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OpenMixSpeed_Mix;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OpenMixSpeed_Mix", _OpenMixSpeed_Mix.EntityConfiguration, _OpenMixSpeed_Mix.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Rollor_Mix
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Rollor_Mix;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Rollor_Mix", _Rollor_Mix.EntityConfiguration, _Rollor_Mix.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem WatrTemp_Mix
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _WatrTemp_Mix;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("WatrTemp_Mix", _WatrTemp_Mix.EntityConfiguration, _WatrTemp_Mix.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RubTemp_Mix
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RubTemp_Mix;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RubTemp_Mix", _RubTemp_Mix.EntityConfiguration, _RubTemp_Mix.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SpeedDiff_Mix
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SpeedDiff_Mix;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SpeedDiff_Mix", _SpeedDiff_Mix.EntityConfiguration, _SpeedDiff_Mix.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Routing_type
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Routing_type;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Routing_type", _Routing_type.EntityConfiguration, _Routing_type.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
