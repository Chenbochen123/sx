//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmtCheckLotArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmtCheckLot> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmtCheckLot\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatc" +
        "hUpdate=\"false\" isRelation=\"false\" mappingName=\"QmtCheckLot\" batchSize=\"10\">\r\n  " +
        "<Properties>\r\n    <Property name=\"CheckCode\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "CheckCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(13)\" isPrimaryKey=" +
        "\"true\" isNotNull=\"true\" />\r\n    <Property name=\"SerialId\" type=\"System.Int32\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"SerialId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKe" +
        "y=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"IfCheckNum\" type=\"System.Int32" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"IfCheckNum\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPri" +
        "maryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"IfLast\" type=\"System.Nul" +
        "lable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"IfLast\" mappingColumnType=\"System.Nullable`" +
        "1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"JudgeResult\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JudgeResult\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"DealCode\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"DealCode\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Grade\" t" +
        "ype=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"Grade\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"CardMark\" type=\"System.Byte[]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CardMar" +
        "k\" mappingColumnType=\"System.Byte[]\" sqlType=\"image\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"DrawMark\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"DrawMark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JudgeMemo\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"JudgeMemo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(" +
        "255)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CardMark2\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"CardMark2\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"WXGrade\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"WXGrade\" map" +
        "pingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"SFSign\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"SFSign\" mappingColumnType=\"System.Nullable`1[System.I" +
        "nt32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"GBGrade\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"GBGrade\" mappi" +
        "ngColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"BarCode\" type=\"System.String\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"BarCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PrintSign\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"PrintSign\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"CheckDateMN\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckDateMN\"" +
        " mappingColumnType=\"System.String\" sqlType=\"varchar(19)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"CheckDateLB\" type=\"System.String\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"CheckDateLB\" mappingColumnType=\"System.String\" sqlType=\"varchar(19)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckEnd\" type=\"Syst" +
        "em.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"CheckEnd\" mappingColumnType=\"System.N" +
        "ullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"SulfTime\" type=\"System.Nullable`1[System.Int32]\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"SulfTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckDateMD\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"CheckDateMD\" mappingColumnType=\"System.String\" s" +
        "qlType=\"varchar(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"CheckDateYD\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckDateYD\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"varchar(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"CheckDateGB\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckDat" +
        "eGB\" mappingColumnType=\"System.String\" sqlType=\"varchar(19)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"CheckDateWX\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"CheckDateWX\" mappingColumnType=\"System.String\" sqlType=\"varchar(19)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LLSerialID\" type" +
        "=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"LLSerialID\" mappingColumnType=\"System.Int32\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"LLBarCode\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"LLBarCode\" mappingColumnType=\"System.String\"" +
        " sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"NotQuaCompute\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'" +
        "0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"No" +
        "tQuaCompute\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class QmtCheckLot : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmtCheckLotEntityConfiguration;
        
        protected string _CheckCode;
        
        protected int _SerialId;
        
        protected int _IfCheckNum;
        
        protected global::System.Int32? _IfLast;
        
        protected string _JudgeResult;
        
        protected global::System.Int32? _DealCode;
        
        protected global::System.Int32? _Grade;
        
        protected byte[] _CardMark;
        
        protected string _DrawMark;
        
        protected string _JudgeMemo;
        
        protected string _CardMark2;
        
        protected global::System.Int32? _WXGrade;
        
        protected global::System.Int32? _SFSign;
        
        protected global::System.Int32? _GBGrade;
        
        protected string _BarCode;
        
        protected global::System.Int32? _PrintSign;
        
        protected string _CheckDateMN;
        
        protected string _CheckDateLB;
        
        protected global::System.Int32? _CheckEnd;
        
        protected global::System.Int32? _SulfTime;
        
        protected string _CheckDateMD;
        
        protected string _CheckDateYD;
        
        protected string _CheckDateGB;
        
        protected string _CheckDateWX;
        
        protected int _LLSerialID;
        
        protected string _LLBarCode;
        
        protected string _NotQuaCompute;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmtCheckLot left, global::Mesnac.Entity.QmtCheckLot right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmtCheckLot left, global::Mesnac.Entity.QmtCheckLot right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string CheckCode {
            get {
                return this._CheckCode;
            }
            set {
                this.OnPropertyChanged("CheckCode", this._CheckCode, value);
                this._CheckCode = value;
            }
        }
        
        public int SerialId {
            get {
                return this._SerialId;
            }
            set {
                this.OnPropertyChanged("SerialId", this._SerialId, value);
                this._SerialId = value;
            }
        }
        
        public int IfCheckNum {
            get {
                return this._IfCheckNum;
            }
            set {
                this.OnPropertyChanged("IfCheckNum", this._IfCheckNum, value);
                this._IfCheckNum = value;
            }
        }
        
        public global::System.Int32? IfLast {
            get {
                return this._IfLast;
            }
            set {
                this.OnPropertyChanged("IfLast", this._IfLast, value);
                this._IfLast = value;
            }
        }
        
        public string JudgeResult {
            get {
                return this._JudgeResult;
            }
            set {
                this.OnPropertyChanged("JudgeResult", this._JudgeResult, value);
                this._JudgeResult = value;
            }
        }
        
        public global::System.Int32? DealCode {
            get {
                return this._DealCode;
            }
            set {
                this.OnPropertyChanged("DealCode", this._DealCode, value);
                this._DealCode = value;
            }
        }
        
        public global::System.Int32? Grade {
            get {
                return this._Grade;
            }
            set {
                this.OnPropertyChanged("Grade", this._Grade, value);
                this._Grade = value;
            }
        }
        
        public byte[] CardMark {
            get {
                return this._CardMark;
            }
            set {
                this.OnPropertyChanged("CardMark", this._CardMark, value);
                this._CardMark = value;
            }
        }
        
        public string DrawMark {
            get {
                return this._DrawMark;
            }
            set {
                this.OnPropertyChanged("DrawMark", this._DrawMark, value);
                this._DrawMark = value;
            }
        }
        
        public string JudgeMemo {
            get {
                return this._JudgeMemo;
            }
            set {
                this.OnPropertyChanged("JudgeMemo", this._JudgeMemo, value);
                this._JudgeMemo = value;
            }
        }
        
        public string CardMark2 {
            get {
                return this._CardMark2;
            }
            set {
                this.OnPropertyChanged("CardMark2", this._CardMark2, value);
                this._CardMark2 = value;
            }
        }
        
        public global::System.Int32? WXGrade {
            get {
                return this._WXGrade;
            }
            set {
                this.OnPropertyChanged("WXGrade", this._WXGrade, value);
                this._WXGrade = value;
            }
        }
        
        public global::System.Int32? SFSign {
            get {
                return this._SFSign;
            }
            set {
                this.OnPropertyChanged("SFSign", this._SFSign, value);
                this._SFSign = value;
            }
        }
        
        public global::System.Int32? GBGrade {
            get {
                return this._GBGrade;
            }
            set {
                this.OnPropertyChanged("GBGrade", this._GBGrade, value);
                this._GBGrade = value;
            }
        }
        
        public string BarCode {
            get {
                return this._BarCode;
            }
            set {
                this.OnPropertyChanged("BarCode", this._BarCode, value);
                this._BarCode = value;
            }
        }
        
        public global::System.Int32? PrintSign {
            get {
                return this._PrintSign;
            }
            set {
                this.OnPropertyChanged("PrintSign", this._PrintSign, value);
                this._PrintSign = value;
            }
        }
        
        public string CheckDateMN {
            get {
                return this._CheckDateMN;
            }
            set {
                this.OnPropertyChanged("CheckDateMN", this._CheckDateMN, value);
                this._CheckDateMN = value;
            }
        }
        
        public string CheckDateLB {
            get {
                return this._CheckDateLB;
            }
            set {
                this.OnPropertyChanged("CheckDateLB", this._CheckDateLB, value);
                this._CheckDateLB = value;
            }
        }
        
        public global::System.Int32? CheckEnd {
            get {
                return this._CheckEnd;
            }
            set {
                this.OnPropertyChanged("CheckEnd", this._CheckEnd, value);
                this._CheckEnd = value;
            }
        }
        
        public global::System.Int32? SulfTime {
            get {
                return this._SulfTime;
            }
            set {
                this.OnPropertyChanged("SulfTime", this._SulfTime, value);
                this._SulfTime = value;
            }
        }
        
        public string CheckDateMD {
            get {
                return this._CheckDateMD;
            }
            set {
                this.OnPropertyChanged("CheckDateMD", this._CheckDateMD, value);
                this._CheckDateMD = value;
            }
        }
        
        public string CheckDateYD {
            get {
                return this._CheckDateYD;
            }
            set {
                this.OnPropertyChanged("CheckDateYD", this._CheckDateYD, value);
                this._CheckDateYD = value;
            }
        }
        
        public string CheckDateGB {
            get {
                return this._CheckDateGB;
            }
            set {
                this.OnPropertyChanged("CheckDateGB", this._CheckDateGB, value);
                this._CheckDateGB = value;
            }
        }
        
        public string CheckDateWX {
            get {
                return this._CheckDateWX;
            }
            set {
                this.OnPropertyChanged("CheckDateWX", this._CheckDateWX, value);
                this._CheckDateWX = value;
            }
        }
        
        public int LLSerialID {
            get {
                return this._LLSerialID;
            }
            set {
                this.OnPropertyChanged("LLSerialID", this._LLSerialID, value);
                this._LLSerialID = value;
            }
        }
        
        public string LLBarCode {
            get {
                return this._LLBarCode;
            }
            set {
                this.OnPropertyChanged("LLBarCode", this._LLBarCode, value);
                this._LLBarCode = value;
            }
        }
        
        public string NotQuaCompute {
            get {
                return this._NotQuaCompute;
            }
            set {
                this.OnPropertyChanged("NotQuaCompute", this._NotQuaCompute, value);
                this._NotQuaCompute = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmtCheckLot._QmtCheckLotEntityConfiguration == null)) {
                QmtCheckLot._QmtCheckLotEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmtCheckLot");
            }
            return QmtCheckLot._QmtCheckLotEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._CheckCode,
                    this._SerialId,
                    this._IfCheckNum,
                    this._IfLast,
                    this._JudgeResult,
                    this._DealCode,
                    this._Grade,
                    this._CardMark,
                    this._DrawMark,
                    this._JudgeMemo,
                    this._CardMark2,
                    this._WXGrade,
                    this._SFSign,
                    this._GBGrade,
                    this._BarCode,
                    this._PrintSign,
                    this._CheckDateMN,
                    this._CheckDateLB,
                    this._CheckEnd,
                    this._SulfTime,
                    this._CheckDateMD,
                    this._CheckDateYD,
                    this._CheckDateGB,
                    this._CheckDateWX,
                    this._LLSerialID,
                    this._LLBarCode,
                    this._NotQuaCompute};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._CheckCode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._SerialId = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._IfCheckNum = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._IfLast = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._JudgeResult = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._DealCode = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Grade = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._CardMark = ((byte[])(reader.GetValue(7)));
            }
            if ((false == reader.IsDBNull(8))) {
                this._DrawMark = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._JudgeMemo = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._CardMark2 = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._WXGrade = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._SFSign = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._GBGrade = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._BarCode = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._PrintSign = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._CheckDateMN = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._CheckDateLB = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._CheckEnd = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._SulfTime = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._CheckDateMD = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._CheckDateYD = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._CheckDateGB = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._CheckDateWX = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._LLSerialID = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._LLBarCode = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._NotQuaCompute = reader.GetString(26);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._CheckCode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._SerialId = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._IfCheckNum = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._IfLast = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._JudgeResult = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._DealCode = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Grade = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._CardMark = ((byte[])(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._DrawMark = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._JudgeMemo = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._CardMark2 = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._WXGrade = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._SFSign = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._GBGrade = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._BarCode = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._PrintSign = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._CheckDateMN = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._CheckDateLB = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._CheckEnd = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._SulfTime = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._CheckDateMD = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._CheckDateYD = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._CheckDateGB = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._CheckDateWX = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._LLSerialID = ((int)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._LLBarCode = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._NotQuaCompute = ((string)(row[26]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmtCheckLot).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((((this.isAttached && ((global::Mesnac.Entity.QmtCheckLot)(obj)).isAttached) 
                        && (this.CheckCode == ((global::Mesnac.Entity.QmtCheckLot)(obj)).CheckCode)) 
                        && (this.SerialId == ((global::Mesnac.Entity.QmtCheckLot)(obj)).SerialId)) 
                        && (this.IfCheckNum == ((global::Mesnac.Entity.QmtCheckLot)(obj)).IfCheckNum)) 
                        && (this.LLSerialID == ((global::Mesnac.Entity.QmtCheckLot)(obj)).LLSerialID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _CheckCode = new NBear.Common.PropertyItem("CheckCode", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _SerialId = new NBear.Common.PropertyItem("SerialId", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _IfCheckNum = new NBear.Common.PropertyItem("IfCheckNum", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _IfLast = new NBear.Common.PropertyItem("IfLast", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _JudgeResult = new NBear.Common.PropertyItem("JudgeResult", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _DealCode = new NBear.Common.PropertyItem("DealCode", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _Grade = new NBear.Common.PropertyItem("Grade", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CardMark = new NBear.Common.PropertyItem("CardMark", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _DrawMark = new NBear.Common.PropertyItem("DrawMark", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _JudgeMemo = new NBear.Common.PropertyItem("JudgeMemo", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CardMark2 = new NBear.Common.PropertyItem("CardMark2", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _WXGrade = new NBear.Common.PropertyItem("WXGrade", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _SFSign = new NBear.Common.PropertyItem("SFSign", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _GBGrade = new NBear.Common.PropertyItem("GBGrade", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _BarCode = new NBear.Common.PropertyItem("BarCode", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _PrintSign = new NBear.Common.PropertyItem("PrintSign", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckDateMN = new NBear.Common.PropertyItem("CheckDateMN", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckDateLB = new NBear.Common.PropertyItem("CheckDateLB", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckEnd = new NBear.Common.PropertyItem("CheckEnd", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _SulfTime = new NBear.Common.PropertyItem("SulfTime", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckDateMD = new NBear.Common.PropertyItem("CheckDateMD", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckDateYD = new NBear.Common.PropertyItem("CheckDateYD", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckDateGB = new NBear.Common.PropertyItem("CheckDateGB", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _CheckDateWX = new NBear.Common.PropertyItem("CheckDateWX", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _LLSerialID = new NBear.Common.PropertyItem("LLSerialID", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _LLBarCode = new NBear.Common.PropertyItem("LLBarCode", "Mesnac.Entity.QmtCheckLot");
            
            protected NBear.Common.PropertyItem _NotQuaCompute = new NBear.Common.PropertyItem("NotQuaCompute", "Mesnac.Entity.QmtCheckLot");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem CheckCode {
                get {
                    if ((aliasName == null)) {
                        return _CheckCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckCode", _CheckCode.EntityConfiguration, _CheckCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialId {
                get {
                    if ((aliasName == null)) {
                        return _SerialId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialId", _SerialId.EntityConfiguration, _SerialId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IfCheckNum {
                get {
                    if ((aliasName == null)) {
                        return _IfCheckNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IfCheckNum", _IfCheckNum.EntityConfiguration, _IfCheckNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IfLast {
                get {
                    if ((aliasName == null)) {
                        return _IfLast;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IfLast", _IfLast.EntityConfiguration, _IfLast.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JudgeResult {
                get {
                    if ((aliasName == null)) {
                        return _JudgeResult;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JudgeResult", _JudgeResult.EntityConfiguration, _JudgeResult.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DealCode {
                get {
                    if ((aliasName == null)) {
                        return _DealCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DealCode", _DealCode.EntityConfiguration, _DealCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Grade {
                get {
                    if ((aliasName == null)) {
                        return _Grade;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Grade", _Grade.EntityConfiguration, _Grade.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CardMark {
                get {
                    if ((aliasName == null)) {
                        return _CardMark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CardMark", _CardMark.EntityConfiguration, _CardMark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DrawMark {
                get {
                    if ((aliasName == null)) {
                        return _DrawMark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DrawMark", _DrawMark.EntityConfiguration, _DrawMark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JudgeMemo {
                get {
                    if ((aliasName == null)) {
                        return _JudgeMemo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JudgeMemo", _JudgeMemo.EntityConfiguration, _JudgeMemo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CardMark2 {
                get {
                    if ((aliasName == null)) {
                        return _CardMark2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CardMark2", _CardMark2.EntityConfiguration, _CardMark2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WXGrade {
                get {
                    if ((aliasName == null)) {
                        return _WXGrade;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WXGrade", _WXGrade.EntityConfiguration, _WXGrade.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SFSign {
                get {
                    if ((aliasName == null)) {
                        return _SFSign;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SFSign", _SFSign.EntityConfiguration, _SFSign.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GBGrade {
                get {
                    if ((aliasName == null)) {
                        return _GBGrade;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GBGrade", _GBGrade.EntityConfiguration, _GBGrade.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarCode {
                get {
                    if ((aliasName == null)) {
                        return _BarCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarCode", _BarCode.EntityConfiguration, _BarCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrintSign {
                get {
                    if ((aliasName == null)) {
                        return _PrintSign;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrintSign", _PrintSign.EntityConfiguration, _PrintSign.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDateMN {
                get {
                    if ((aliasName == null)) {
                        return _CheckDateMN;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDateMN", _CheckDateMN.EntityConfiguration, _CheckDateMN.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDateLB {
                get {
                    if ((aliasName == null)) {
                        return _CheckDateLB;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDateLB", _CheckDateLB.EntityConfiguration, _CheckDateLB.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckEnd {
                get {
                    if ((aliasName == null)) {
                        return _CheckEnd;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckEnd", _CheckEnd.EntityConfiguration, _CheckEnd.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SulfTime {
                get {
                    if ((aliasName == null)) {
                        return _SulfTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SulfTime", _SulfTime.EntityConfiguration, _SulfTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDateMD {
                get {
                    if ((aliasName == null)) {
                        return _CheckDateMD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDateMD", _CheckDateMD.EntityConfiguration, _CheckDateMD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDateYD {
                get {
                    if ((aliasName == null)) {
                        return _CheckDateYD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDateYD", _CheckDateYD.EntityConfiguration, _CheckDateYD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDateGB {
                get {
                    if ((aliasName == null)) {
                        return _CheckDateGB;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDateGB", _CheckDateGB.EntityConfiguration, _CheckDateGB.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDateWX {
                get {
                    if ((aliasName == null)) {
                        return _CheckDateWX;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDateWX", _CheckDateWX.EntityConfiguration, _CheckDateWX.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLSerialID {
                get {
                    if ((aliasName == null)) {
                        return _LLSerialID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLSerialID", _LLSerialID.EntityConfiguration, _LLSerialID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLBarCode {
                get {
                    if ((aliasName == null)) {
                        return _LLBarCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLBarCode", _LLBarCode.EntityConfiguration, _LLBarCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NotQuaCompute {
                get {
                    if ((aliasName == null)) {
                        return _NotQuaCompute;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NotQuaCompute", _NotQuaCompute.EntityConfiguration, _NotQuaCompute.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
