//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstShopStorageDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstShopStorageDetail>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PstShopStorageDetail\" isReadOnly=\"false\" isAutoPreLoad=\"fals" +
        "e\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstShopStorageDetail\" b" +
        "atchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"Barcode\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)" +
        "\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StorageID\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"St" +
        "oragePlaceID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" /" +
        ">\r\n    <Property name=\"OrderID\" type=\"System.Int32\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OrderID\" mappi" +
        "ngColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" /" +
        ">\r\n    <Property name=\"StoreInOut\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoreInOut" +
        "\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"RecordDate\" type=\"System.Nullable`1[System." +
        "DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"RecordDate\" mappingColumnType=\"System.Nullable`1[System" +
        ".DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Num\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Num\" map" +
        "pingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"PieceWeight\" type=\"System.Nullable" +
        "`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"PieceWeight\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"Weight\" type=\"System.Nullable`1[System.Decimal]\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"Weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"deci" +
        "mal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InaccountDur" +
        "ation\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"InaccountDuration\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"InaccountDate\" type=\"System.Nullable`1[System.DateTime]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"InaccountDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\"" +
        " sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"BillType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"BillType\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"nvarchar(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"SourceBillNo\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SourceBillNo\" " +
        "mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"SourceOrderID\" type=\"System.Nullable`1[S" +
        "ystem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"SourceOrderID\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"StorageType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StorageType\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"ShiftClassID\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shi" +
        "ftClassID\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"ShiftID\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StorageID_Bak\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"StorageID_Bak\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"S" +
        "toragePlaceID_Bak\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoragePlaceID_Bak\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"PlanDate\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"P" +
        "lanDate\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OperType\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"OperType\" mappingColumnType=\"System.String\" sqlType" +
        "=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Op" +
        "erCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"OperCode\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"BoxCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BoxCode\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PstShopStorageDetail : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstShopStorageDetailEntityConfiguration;

        protected string _Barcode;

        protected string _StorageID;

        protected string _StoragePlaceID;

        protected int _OrderID;

        protected string _StoreInOut;

        protected global::System.DateTime? _RecordDate;

        protected global::System.Int32? _Num;

        protected global::System.Decimal? _PieceWeight;

        protected global::System.Decimal? _Weight;

        protected string _InaccountDuration;

        protected global::System.DateTime? _InaccountDate;

        protected string _BillType;

        protected string _SourceBillNo;

        protected global::System.Int32? _SourceOrderID;

        protected string _StorageType;

        protected string _ShiftClassID;

        protected string _ShiftID;

        protected string _StorageID_Bak;

        protected string _StoragePlaceID_Bak;

        protected string _PlanDate;

        protected string _EquipCode;

        protected string _OperType;

        protected string _OperCode;

        protected string _BoxCode;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PstShopStorageDetail left, global::Mesnac.Entity.PstShopStorageDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PstShopStorageDetail left, global::Mesnac.Entity.PstShopStorageDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string Barcode
        {
            get
            {
                return this._Barcode;
            }
            set
            {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }

        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public string StoragePlaceID
        {
            get
            {
                return this._StoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }

        public int OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }

        public string StoreInOut
        {
            get
            {
                return this._StoreInOut;
            }
            set
            {
                this.OnPropertyChanged("StoreInOut", this._StoreInOut, value);
                this._StoreInOut = value;
            }
        }

        public global::System.DateTime? RecordDate
        {
            get
            {
                return this._RecordDate;
            }
            set
            {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }

        public global::System.Int32? Num
        {
            get
            {
                return this._Num;
            }
            set
            {
                this.OnPropertyChanged("Num", this._Num, value);
                this._Num = value;
            }
        }

        public global::System.Decimal? PieceWeight
        {
            get
            {
                return this._PieceWeight;
            }
            set
            {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }

        public global::System.Decimal? Weight
        {
            get
            {
                return this._Weight;
            }
            set
            {
                this.OnPropertyChanged("Weight", this._Weight, value);
                this._Weight = value;
            }
        }

        public string InaccountDuration
        {
            get
            {
                return this._InaccountDuration;
            }
            set
            {
                this.OnPropertyChanged("InaccountDuration", this._InaccountDuration, value);
                this._InaccountDuration = value;
            }
        }

        public global::System.DateTime? InaccountDate
        {
            get
            {
                return this._InaccountDate;
            }
            set
            {
                this.OnPropertyChanged("InaccountDate", this._InaccountDate, value);
                this._InaccountDate = value;
            }
        }

        public string BillType
        {
            get
            {
                return this._BillType;
            }
            set
            {
                this.OnPropertyChanged("BillType", this._BillType, value);
                this._BillType = value;
            }
        }

        public string SourceBillNo
        {
            get
            {
                return this._SourceBillNo;
            }
            set
            {
                this.OnPropertyChanged("SourceBillNo", this._SourceBillNo, value);
                this._SourceBillNo = value;
            }
        }

        public global::System.Int32? SourceOrderID
        {
            get
            {
                return this._SourceOrderID;
            }
            set
            {
                this.OnPropertyChanged("SourceOrderID", this._SourceOrderID, value);
                this._SourceOrderID = value;
            }
        }

        public string StorageType
        {
            get
            {
                return this._StorageType;
            }
            set
            {
                this.OnPropertyChanged("StorageType", this._StorageType, value);
                this._StorageType = value;
            }
        }

        public string ShiftClassID
        {
            get
            {
                return this._ShiftClassID;
            }
            set
            {
                this.OnPropertyChanged("ShiftClassID", this._ShiftClassID, value);
                this._ShiftClassID = value;
            }
        }

        public string ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public string StorageID_Bak
        {
            get
            {
                return this._StorageID_Bak;
            }
            set
            {
                this.OnPropertyChanged("StorageID_Bak", this._StorageID_Bak, value);
                this._StorageID_Bak = value;
            }
        }

        public string StoragePlaceID_Bak
        {
            get
            {
                return this._StoragePlaceID_Bak;
            }
            set
            {
                this.OnPropertyChanged("StoragePlaceID_Bak", this._StoragePlaceID_Bak, value);
                this._StoragePlaceID_Bak = value;
            }
        }

        public string PlanDate
        {
            get
            {
                return this._PlanDate;
            }
            set
            {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public string OperType
        {
            get
            {
                return this._OperType;
            }
            set
            {
                this.OnPropertyChanged("OperType", this._OperType, value);
                this._OperType = value;
            }
        }

        public string OperCode
        {
            get
            {
                return this._OperCode;
            }
            set
            {
                this.OnPropertyChanged("OperCode", this._OperCode, value);
                this._OperCode = value;
            }
        }

        public string BoxCode
        {
            get
            {
                return this._BoxCode;
            }
            set
            {
                this.OnPropertyChanged("BoxCode", this._BoxCode, value);
                this._BoxCode = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PstShopStorageDetail._PstShopStorageDetailEntityConfiguration == null))
            {
                PstShopStorageDetail._PstShopStorageDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstShopStorageDetail");
            }
            return PstShopStorageDetail._PstShopStorageDetailEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._Barcode,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._OrderID,
                    this._StoreInOut,
                    this._RecordDate,
                    this._Num,
                    this._PieceWeight,
                    this._Weight,
                    this._InaccountDuration,
                    this._InaccountDate,
                    this._BillType,
                    this._SourceBillNo,
                    this._SourceOrderID,
                    this._StorageType,
                    this._ShiftClassID,
                    this._ShiftID,
                    this._StorageID_Bak,
                    this._StoragePlaceID_Bak,
                    this._PlanDate,
                    this._EquipCode,
                    this._OperType,
                    this._OperCode,
                    this._BoxCode};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._StorageID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._StoragePlaceID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._OrderID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._StoreInOut = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._RecordDate = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Num = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._PieceWeight = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._Weight = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._InaccountDuration = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._InaccountDate = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._BillType = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._SourceBillNo = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._SourceOrderID = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._StorageType = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._ShiftClassID = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._ShiftID = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._StorageID_Bak = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._StoragePlaceID_Bak = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._PlanDate = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._EquipCode = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._OperType = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._OperCode = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._BoxCode = reader.GetString(23);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._StorageID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._StoragePlaceID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._OrderID = ((int)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._StoreInOut = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._RecordDate = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6)))
            {
                this._Num = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._PieceWeight = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._Weight = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._InaccountDuration = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._InaccountDate = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11)))
            {
                this._BillType = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._SourceBillNo = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._SourceOrderID = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._StorageType = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._ShiftClassID = ((string)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._ShiftID = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._StorageID_Bak = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._StoragePlaceID_Bak = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._PlanDate = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._EquipCode = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._OperType = ((string)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._OperCode = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._BoxCode = ((string)(row[23]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstShopStorageDetail).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return (((((this.isAttached && ((global::Mesnac.Entity.PstShopStorageDetail)(obj)).isAttached)
                        && (this.Barcode == ((global::Mesnac.Entity.PstShopStorageDetail)(obj)).Barcode))
                        && (this.StorageID == ((global::Mesnac.Entity.PstShopStorageDetail)(obj)).StorageID))
                        && (this.StoragePlaceID == ((global::Mesnac.Entity.PstShopStorageDetail)(obj)).StoragePlaceID))
                        && (this.OrderID == ((global::Mesnac.Entity.PstShopStorageDetail)(obj)).OrderID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _StoreInOut = new NBear.Common.PropertyItem("StoreInOut", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _Num = new NBear.Common.PropertyItem("Num", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _Weight = new NBear.Common.PropertyItem("Weight", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _InaccountDuration = new NBear.Common.PropertyItem("InaccountDuration", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _InaccountDate = new NBear.Common.PropertyItem("InaccountDate", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _BillType = new NBear.Common.PropertyItem("BillType", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _SourceBillNo = new NBear.Common.PropertyItem("SourceBillNo", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _SourceOrderID = new NBear.Common.PropertyItem("SourceOrderID", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _StorageType = new NBear.Common.PropertyItem("StorageType", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _ShiftClassID = new NBear.Common.PropertyItem("ShiftClassID", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _StorageID_Bak = new NBear.Common.PropertyItem("StorageID_Bak", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _StoragePlaceID_Bak = new NBear.Common.PropertyItem("StoragePlaceID_Bak", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _OperType = new NBear.Common.PropertyItem("OperType", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _OperCode = new NBear.Common.PropertyItem("OperCode", "Mesnac.Entity.PstShopStorageDetail");

            protected NBear.Common.PropertyItem _BoxCode = new NBear.Common.PropertyItem("BoxCode", "Mesnac.Entity.PstShopStorageDetail");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem Barcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Barcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OrderID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OrderID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoreInOut
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoreInOut;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoreInOut", _StoreInOut.EntityConfiguration, _StoreInOut.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RecordDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RecordDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Num
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Num;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Num", _Num.EntityConfiguration, _Num.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PieceWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PieceWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Weight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Weight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Weight", _Weight.EntityConfiguration, _Weight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InaccountDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InaccountDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InaccountDuration", _InaccountDuration.EntityConfiguration, _InaccountDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InaccountDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InaccountDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InaccountDate", _InaccountDate.EntityConfiguration, _InaccountDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BillType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillType;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillType", _BillType.EntityConfiguration, _BillType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceBillNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceBillNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceBillNo", _SourceBillNo.EntityConfiguration, _SourceBillNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceOrderID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceOrderID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceOrderID", _SourceOrderID.EntityConfiguration, _SourceOrderID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageType;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageType", _StorageType.EntityConfiguration, _StorageType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftClassID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftClassID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftClassID", _ShiftClassID.EntityConfiguration, _ShiftClassID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID_Bak
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID_Bak;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID_Bak", _StorageID_Bak.EntityConfiguration, _StorageID_Bak.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoragePlaceID_Bak
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoragePlaceID_Bak;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoragePlaceID_Bak", _StoragePlaceID_Bak.EntityConfiguration, _StoragePlaceID_Bak.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OperType
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperType;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OperType", _OperType.EntityConfiguration, _OperType.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OperCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OperCode", _OperCode.EntityConfiguration, _OperCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BoxCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BoxCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BoxCode", _BoxCode.EntityConfiguration, _BoxCode.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
