//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_lubeStandArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_lubeStand> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_lubeStand\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_lubeStand\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"Lube_standId\" type=\"System.Int32\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"Lube_standId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"" +
        "true\" isNotNull=\"true\" />\r\n    <Property name=\"Lube_code\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Lube_code\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Oil_code\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Oil_code\" mappingColumnType=\"System.String\" sqlType=\"cha" +
        "r(3)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OilName\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"OilName\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Equip_code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Equip_code\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"EquipName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipName\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Equip_class\" type=\"System.String\" isInherited=\"f" +
        "alse\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Equip_class\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipClass" +
        "Name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"EquipClassName\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Lube_name\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lube_name\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Mp_period\" type=\"System.Nullable`1[System.Decim" +
        "al]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Mp_period\" mappingColumnType=\"System.Nullable`1[System.Decima" +
        "l]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Lube_num\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lube_num\" " +
        "mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Unit_name\" type=\"System.S" +
        "tring\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Unit_name\" mappingColumnType=\"System." +
        "String\" sqlType=\"varchar(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"Mp_date\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_date\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Lube_stand\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lube_stand\" " +
        "mappingColumnType=\"System.String\" sqlType=\"varchar(255)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"In_date\" type=\"System.Nullable`1[System." +
        "DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"In_date\" mappingColumnType=\"System.Nullable`1[System.Da" +
        "teTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Worker_barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Worker_barcode\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Mem_note\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Me" +
        "m_note\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"StopTime\" type=\"System.Nullable`1" +
        "[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"StopTime\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Next_Date\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Next" +
        "_Date\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Workshop\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Workshop\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"U" +
        "seday\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValu" +
        "e=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Useday\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_lubeStand : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_lubeStandEntityConfiguration;
        
        protected int _Lube_standId;
        
        protected string _Lube_code;
        
        protected string _Oil_code;
        
        protected string _OilName;
        
        protected string _Equip_code;
        
        protected string _EquipName;
        
        protected string _Equip_class;
        
        protected string _EquipClassName;
        
        protected string _Lube_name;
        
        protected global::System.Decimal? _Mp_period;
        
        protected global::System.Decimal? _Lube_num;
        
        protected string _Unit_name;
        
        protected string _Mp_date;
        
        protected string _Lube_stand;
        
        protected global::System.DateTime? _In_date;
        
        protected string _Worker_barcode;
        
        protected string _Mem_note;
        
        protected global::System.Int32? _StopTime;
        
        protected global::System.DateTime? _Next_Date;
        
        protected string _Workshop;
        
        protected global::System.Int32? _Useday;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_lubeStand left, global::Mesnac.Entity.Eqm_lubeStand right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_lubeStand left, global::Mesnac.Entity.Eqm_lubeStand right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Lube_standId {
            get {
                return this._Lube_standId;
            }
            set {
                this.OnPropertyChanged("Lube_standId", this._Lube_standId, value);
                this._Lube_standId = value;
            }
        }
        
        public string Lube_code {
            get {
                return this._Lube_code;
            }
            set {
                this.OnPropertyChanged("Lube_code", this._Lube_code, value);
                this._Lube_code = value;
            }
        }
        
        public string Oil_code {
            get {
                return this._Oil_code;
            }
            set {
                this.OnPropertyChanged("Oil_code", this._Oil_code, value);
                this._Oil_code = value;
            }
        }
        
        public string OilName {
            get {
                return this._OilName;
            }
            set {
                this.OnPropertyChanged("OilName", this._OilName, value);
                this._OilName = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public string EquipName {
            get {
                return this._EquipName;
            }
            set {
                this.OnPropertyChanged("EquipName", this._EquipName, value);
                this._EquipName = value;
            }
        }
        
        public string Equip_class {
            get {
                return this._Equip_class;
            }
            set {
                this.OnPropertyChanged("Equip_class", this._Equip_class, value);
                this._Equip_class = value;
            }
        }
        
        public string EquipClassName {
            get {
                return this._EquipClassName;
            }
            set {
                this.OnPropertyChanged("EquipClassName", this._EquipClassName, value);
                this._EquipClassName = value;
            }
        }
        
        public string Lube_name {
            get {
                return this._Lube_name;
            }
            set {
                this.OnPropertyChanged("Lube_name", this._Lube_name, value);
                this._Lube_name = value;
            }
        }
        
        public global::System.Decimal? Mp_period {
            get {
                return this._Mp_period;
            }
            set {
                this.OnPropertyChanged("Mp_period", this._Mp_period, value);
                this._Mp_period = value;
            }
        }
        
        public global::System.Decimal? Lube_num {
            get {
                return this._Lube_num;
            }
            set {
                this.OnPropertyChanged("Lube_num", this._Lube_num, value);
                this._Lube_num = value;
            }
        }
        
        public string Unit_name {
            get {
                return this._Unit_name;
            }
            set {
                this.OnPropertyChanged("Unit_name", this._Unit_name, value);
                this._Unit_name = value;
            }
        }
        
        public string Mp_date {
            get {
                return this._Mp_date;
            }
            set {
                this.OnPropertyChanged("Mp_date", this._Mp_date, value);
                this._Mp_date = value;
            }
        }
        
        public string Lube_stand {
            get {
                return this._Lube_stand;
            }
            set {
                this.OnPropertyChanged("Lube_stand", this._Lube_stand, value);
                this._Lube_stand = value;
            }
        }
        
        public global::System.DateTime? In_date {
            get {
                return this._In_date;
            }
            set {
                this.OnPropertyChanged("In_date", this._In_date, value);
                this._In_date = value;
            }
        }
        
        public string Worker_barcode {
            get {
                return this._Worker_barcode;
            }
            set {
                this.OnPropertyChanged("Worker_barcode", this._Worker_barcode, value);
                this._Worker_barcode = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public global::System.Int32? StopTime {
            get {
                return this._StopTime;
            }
            set {
                this.OnPropertyChanged("StopTime", this._StopTime, value);
                this._StopTime = value;
            }
        }
        
        public global::System.DateTime? Next_Date {
            get {
                return this._Next_Date;
            }
            set {
                this.OnPropertyChanged("Next_Date", this._Next_Date, value);
                this._Next_Date = value;
            }
        }
        
        public string Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public global::System.Int32? Useday {
            get {
                return this._Useday;
            }
            set {
                this.OnPropertyChanged("Useday", this._Useday, value);
                this._Useday = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_lubeStand._Eqm_lubeStandEntityConfiguration == null)) {
                Eqm_lubeStand._Eqm_lubeStandEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_lubeStand");
            }
            return Eqm_lubeStand._Eqm_lubeStandEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Lube_standId,
                    this._Lube_code,
                    this._Oil_code,
                    this._OilName,
                    this._Equip_code,
                    this._EquipName,
                    this._Equip_class,
                    this._EquipClassName,
                    this._Lube_name,
                    this._Mp_period,
                    this._Lube_num,
                    this._Unit_name,
                    this._Mp_date,
                    this._Lube_stand,
                    this._In_date,
                    this._Worker_barcode,
                    this._Mem_note,
                    this._StopTime,
                    this._Next_Date,
                    this._Workshop,
                    this._Useday};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Lube_standId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Lube_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Oil_code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._OilName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._EquipName = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Equip_class = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._EquipClassName = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Lube_name = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Mp_period = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Lube_num = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Unit_name = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Mp_date = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Lube_stand = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._In_date = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Worker_barcode = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Mem_note = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._StopTime = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Next_Date = this.GetDateTime(reader, 18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Workshop = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Useday = reader.GetInt32(20);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Lube_standId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Lube_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Oil_code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._OilName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._EquipName = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Equip_class = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._EquipClassName = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Lube_name = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Mp_period = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Lube_num = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Unit_name = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Mp_date = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Lube_stand = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._In_date = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15))) {
                this._Worker_barcode = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Mem_note = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._StopTime = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Next_Date = this.GetDateTime(row, 18);
            }
            if ((false == row.IsNull(19))) {
                this._Workshop = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Useday = ((System.Nullable<int>)(row[20]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_lubeStand).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_lubeStand)(obj)).isAttached) 
                        && (this.Lube_standId == ((global::Mesnac.Entity.Eqm_lubeStand)(obj)).Lube_standId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Lube_standId = new NBear.Common.PropertyItem("Lube_standId", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Lube_code = new NBear.Common.PropertyItem("Lube_code", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Oil_code = new NBear.Common.PropertyItem("Oil_code", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _OilName = new NBear.Common.PropertyItem("OilName", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _EquipName = new NBear.Common.PropertyItem("EquipName", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Equip_class = new NBear.Common.PropertyItem("Equip_class", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _EquipClassName = new NBear.Common.PropertyItem("EquipClassName", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Lube_name = new NBear.Common.PropertyItem("Lube_name", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Mp_period = new NBear.Common.PropertyItem("Mp_period", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Lube_num = new NBear.Common.PropertyItem("Lube_num", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Unit_name = new NBear.Common.PropertyItem("Unit_name", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Mp_date = new NBear.Common.PropertyItem("Mp_date", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Lube_stand = new NBear.Common.PropertyItem("Lube_stand", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _In_date = new NBear.Common.PropertyItem("In_date", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Worker_barcode = new NBear.Common.PropertyItem("Worker_barcode", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _StopTime = new NBear.Common.PropertyItem("StopTime", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Next_Date = new NBear.Common.PropertyItem("Next_Date", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Eqm_lubeStand");
            
            protected NBear.Common.PropertyItem _Useday = new NBear.Common.PropertyItem("Useday", "Mesnac.Entity.Eqm_lubeStand");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Lube_standId {
                get {
                    if ((aliasName == null)) {
                        return _Lube_standId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_standId", _Lube_standId.EntityConfiguration, _Lube_standId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_code {
                get {
                    if ((aliasName == null)) {
                        return _Lube_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_code", _Lube_code.EntityConfiguration, _Lube_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oil_code {
                get {
                    if ((aliasName == null)) {
                        return _Oil_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oil_code", _Oil_code.EntityConfiguration, _Oil_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OilName {
                get {
                    if ((aliasName == null)) {
                        return _OilName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OilName", _OilName.EntityConfiguration, _OilName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipName {
                get {
                    if ((aliasName == null)) {
                        return _EquipName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipName", _EquipName.EntityConfiguration, _EquipName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_class {
                get {
                    if ((aliasName == null)) {
                        return _Equip_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_class", _Equip_class.EntityConfiguration, _Equip_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipClassName {
                get {
                    if ((aliasName == null)) {
                        return _EquipClassName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipClassName", _EquipClassName.EntityConfiguration, _EquipClassName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_name {
                get {
                    if ((aliasName == null)) {
                        return _Lube_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_name", _Lube_name.EntityConfiguration, _Lube_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_period {
                get {
                    if ((aliasName == null)) {
                        return _Mp_period;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_period", _Mp_period.EntityConfiguration, _Mp_period.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_num {
                get {
                    if ((aliasName == null)) {
                        return _Lube_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_num", _Lube_num.EntityConfiguration, _Lube_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Unit_name {
                get {
                    if ((aliasName == null)) {
                        return _Unit_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Unit_name", _Unit_name.EntityConfiguration, _Unit_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_date {
                get {
                    if ((aliasName == null)) {
                        return _Mp_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_date", _Mp_date.EntityConfiguration, _Mp_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_stand {
                get {
                    if ((aliasName == null)) {
                        return _Lube_stand;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_stand", _Lube_stand.EntityConfiguration, _Lube_stand.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_date {
                get {
                    if ((aliasName == null)) {
                        return _In_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_date", _In_date.EntityConfiguration, _In_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Worker_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Worker_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Worker_barcode", _Worker_barcode.EntityConfiguration, _Worker_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StopTime {
                get {
                    if ((aliasName == null)) {
                        return _StopTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StopTime", _StopTime.EntityConfiguration, _StopTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Next_Date {
                get {
                    if ((aliasName == null)) {
                        return _Next_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Next_Date", _Next_Date.EntityConfiguration, _Next_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Useday {
                get {
                    if ((aliasName == null)) {
                        return _Useday;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Useday", _Useday.EntityConfiguration, _Useday.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
