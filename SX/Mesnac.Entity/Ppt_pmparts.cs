//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_pmpartsArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_pmparts> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_pmparts\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatc" +
        "hUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_pmparts\" batchSize=\"10\">\r\n  " +
        "<Properties>\r\n    <Property name=\"Mp_code\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp" +
        "_code\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"Equip_code\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Equip_code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimary" +
        "Key=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Equip_class\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Equip_class\" mappingColumnType=\"System.String\" sqlType=\"char" +
        "(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_name\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"Mp_name\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Mp_lastdate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Mp_lastdate\" mappingColumnType=" +
        "\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"Mp_Memo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_Memo\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Equip_ip\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equi" +
        "p_ip\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Ppt_pmparts : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_pmpartsEntityConfiguration;
        
        protected string _Mp_code;
        
        protected string _Equip_code;
        
        protected string _Equip_class;
        
        protected string _Mp_name;
        
        protected string _Mp_lastdate;
        
        protected string _Mp_Memo;
        
        protected string _Equip_ip;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_pmparts left, global::Mesnac.Entity.Ppt_pmparts right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_pmparts left, global::Mesnac.Entity.Ppt_pmparts right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mp_code {
            get {
                return this._Mp_code;
            }
            set {
                this.OnPropertyChanged("Mp_code", this._Mp_code, value);
                this._Mp_code = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public string Equip_class {
            get {
                return this._Equip_class;
            }
            set {
                this.OnPropertyChanged("Equip_class", this._Equip_class, value);
                this._Equip_class = value;
            }
        }
        
        public string Mp_name {
            get {
                return this._Mp_name;
            }
            set {
                this.OnPropertyChanged("Mp_name", this._Mp_name, value);
                this._Mp_name = value;
            }
        }
        
        public string Mp_lastdate {
            get {
                return this._Mp_lastdate;
            }
            set {
                this.OnPropertyChanged("Mp_lastdate", this._Mp_lastdate, value);
                this._Mp_lastdate = value;
            }
        }
        
        public string Mp_Memo {
            get {
                return this._Mp_Memo;
            }
            set {
                this.OnPropertyChanged("Mp_Memo", this._Mp_Memo, value);
                this._Mp_Memo = value;
            }
        }
        
        public string Equip_ip {
            get {
                return this._Equip_ip;
            }
            set {
                this.OnPropertyChanged("Equip_ip", this._Equip_ip, value);
                this._Equip_ip = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_pmparts._Ppt_pmpartsEntityConfiguration == null)) {
                Ppt_pmparts._Ppt_pmpartsEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_pmparts");
            }
            return Ppt_pmparts._Ppt_pmpartsEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_code,
                    this._Equip_code,
                    this._Equip_class,
                    this._Mp_name,
                    this._Mp_lastdate,
                    this._Mp_Memo,
                    this._Equip_ip};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_class = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mp_name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mp_lastdate = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mp_Memo = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Equip_ip = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_class = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mp_name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Mp_lastdate = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mp_Memo = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Equip_ip = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_pmparts).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((this.isAttached && ((global::Mesnac.Entity.Ppt_pmparts)(obj)).isAttached) 
                        && (this.Mp_code == ((global::Mesnac.Entity.Ppt_pmparts)(obj)).Mp_code)) 
                        && (this.Equip_code == ((global::Mesnac.Entity.Ppt_pmparts)(obj)).Equip_code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_code = new NBear.Common.PropertyItem("Mp_code", "Mesnac.Entity.Ppt_pmparts");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Ppt_pmparts");
            
            protected NBear.Common.PropertyItem _Equip_class = new NBear.Common.PropertyItem("Equip_class", "Mesnac.Entity.Ppt_pmparts");
            
            protected NBear.Common.PropertyItem _Mp_name = new NBear.Common.PropertyItem("Mp_name", "Mesnac.Entity.Ppt_pmparts");
            
            protected NBear.Common.PropertyItem _Mp_lastdate = new NBear.Common.PropertyItem("Mp_lastdate", "Mesnac.Entity.Ppt_pmparts");
            
            protected NBear.Common.PropertyItem _Mp_Memo = new NBear.Common.PropertyItem("Mp_Memo", "Mesnac.Entity.Ppt_pmparts");
            
            protected NBear.Common.PropertyItem _Equip_ip = new NBear.Common.PropertyItem("Equip_ip", "Mesnac.Entity.Ppt_pmparts");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_code", _Mp_code.EntityConfiguration, _Mp_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_class {
                get {
                    if ((aliasName == null)) {
                        return _Equip_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_class", _Equip_class.EntityConfiguration, _Equip_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_name {
                get {
                    if ((aliasName == null)) {
                        return _Mp_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_name", _Mp_name.EntityConfiguration, _Mp_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_lastdate {
                get {
                    if ((aliasName == null)) {
                        return _Mp_lastdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_lastdate", _Mp_lastdate.EntityConfiguration, _Mp_lastdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_Memo {
                get {
                    if ((aliasName == null)) {
                        return _Mp_Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_Memo", _Mp_Memo.EntityConfiguration, _Mp_Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_ip {
                get {
                    if ((aliasName == null)) {
                        return _Equip_ip;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_ip", _Equip_ip.EntityConfiguration, _Equip_ip.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
