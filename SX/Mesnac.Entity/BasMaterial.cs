//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasMaterialArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasMaterial> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasMaterial\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"BasMaterial\" batchSize=\"10\">\r\n  <" +
        "Properties>\r\n    <Property name=\"ObjID\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"ObjID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"" +
        "int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialCode" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"MaterialCode\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"MajorTypeID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MajorType" +
        "ID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinorTypeID\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"MinorTypeID\" mappingColumnType=\"System.String\" sqlType=\"char" +
        "(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RubCode\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"RubCode\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "MaterialName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"MaterialName\" mappingColumnType=" +
        "\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"MaterialOtherName\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater" +
        "ialOtherName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialSimpleName\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"MaterialSimpleName\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"ProductMaterialCode\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ProductMaterialCo" +
        "de\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"MaterialLevel\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"MaterialLevel\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialGroup\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"MaterialGroup\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"UserCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"UserCode\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"PlanPrice\" type=\"System.Nullable`1[System.Decimal]\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"PlanPrice\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"d" +
        "ecimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ProductAr" +
        "ea\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"ProductArea\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"MinStock\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MinStoc" +
        "k\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaxStock\" type=\"System" +
        ".Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"MaxStock\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"UnitID\" type=\"System.Nullable`1[System.Int32]\" isInhe" +
        "rited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"UnitID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StaticUnitID\" ty" +
        "pe=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"StaticUnitID\" mappingColumnTyp" +
        "e=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"StaticUnitCoefficient\" type=\"System.Nullable`1[" +
        "System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"StaticUnitCoefficient\" mappingColumnType=\"System.N" +
        "ullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"CheckPermitError\" type=\"System.Nullable`1[System.Dec" +
        "imal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"CheckPermitError\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"MaxParkTime\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "MaxParkTime\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"deci" +
        "mal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinParkTime\"" +
        " type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MinParkTime\" mappingColum" +
        "nType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"DefineDate\" type=\"System.Nullable`1[S" +
        "ystem.DateTime]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"DefineDate\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"StandardCode\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StandardCode\"" +
        " mappingColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"StaticClass\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"StaticClass\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"IsEqualMaterial\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"tr" +
        "ue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsEqualMaterial\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"IsPutJar\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsPut" +
        "Jar\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"IsQualityRateCount\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"IsQualityRateCount\" mappingColumnType=\"System.String\" sqlType=\"var" +
        "char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ERPCode\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"ERPCode\" mappingColumnType=\"System.String\" sq" +
        "lType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"ValidDate\" type=\"System.Nullable`1[System.Decimal]\" " +
        "isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"ValidDate\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sq" +
        "lType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"S" +
        "APMaterialCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"SAPMaterialCode\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"SAPMaterialShortCode\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"SAPMaterialShortCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ERPCode_Bak\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"ERPCode_Bak\" mappingColumnType=\"System.String\" sql" +
        "Type=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"OperSourceTemp\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"OperSourceTemp\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"IsQualityrateCountBak\" type=\"System.Nullable`1[System.I" +
        "nt32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"IsQualityrateCountBak\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"MaterialAttribution\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterialAttri" +
        "bution\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"CMaterialGroup\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"CMaterialGroup\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CMaterialL" +
        "evel\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"CMaterialLevel\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"XBStock\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"XBStock\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"HFCode\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"HFCode\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class BasMaterial : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasMaterialEntityConfiguration;
        
        protected global::System.Int32? _ObjID;
        
        protected string _MaterialCode;
        
        protected global::System.Int32? _MajorTypeID;
        
        protected string _MinorTypeID;
        
        protected string _RubCode;
        
        protected string _MaterialName;
        
        protected string _MaterialOtherName;
        
        protected string _MaterialSimpleName;
        
        protected string _ProductMaterialCode;
        
        protected string _MaterialLevel;
        
        protected string _MaterialGroup;
        
        protected string _UserCode;
        
        protected global::System.Decimal? _PlanPrice;
        
        protected string _ProductArea;
        
        protected global::System.Decimal? _MinStock;
        
        protected global::System.Decimal? _MaxStock;
        
        protected global::System.Int32? _UnitID;
        
        protected global::System.Int32? _StaticUnitID;
        
        protected global::System.Decimal? _StaticUnitCoefficient;
        
        protected global::System.Decimal? _CheckPermitError;
        
        protected global::System.Decimal? _MaxParkTime;
        
        protected global::System.Decimal? _MinParkTime;
        
        protected global::System.DateTime? _DefineDate;
        
        protected string _StandardCode;
        
        protected global::System.Int32? _StaticClass;
        
        protected string _IsEqualMaterial;
        
        protected string _IsPutJar;
        
        protected string _IsQualityRateCount;
        
        protected string _ERPCode;
        
        protected string _Remark;
        
        protected string _DeleteFlag;
        
        protected global::System.Decimal? _ValidDate;
        
        protected string _SAPMaterialCode;
        
        protected string _SAPMaterialShortCode;
        
        protected string _ERPCode_Bak;
        
        protected string _OperSourceTemp;
        
        protected global::System.Int32? _IsQualityrateCountBak;
        
        protected string _MaterialAttribution;
        
        protected string _CMaterialGroup;
        
        protected string _CMaterialLevel;
        
        protected string _XBStock;
        
        protected string _HFCode;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasMaterial left, global::Mesnac.Entity.BasMaterial right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasMaterial left, global::Mesnac.Entity.BasMaterial right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public global::System.Int32? ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public global::System.Int32? MajorTypeID {
            get {
                return this._MajorTypeID;
            }
            set {
                this.OnPropertyChanged("MajorTypeID", this._MajorTypeID, value);
                this._MajorTypeID = value;
            }
        }
        
        public string MinorTypeID {
            get {
                return this._MinorTypeID;
            }
            set {
                this.OnPropertyChanged("MinorTypeID", this._MinorTypeID, value);
                this._MinorTypeID = value;
            }
        }
        
        public string RubCode {
            get {
                return this._RubCode;
            }
            set {
                this.OnPropertyChanged("RubCode", this._RubCode, value);
                this._RubCode = value;
            }
        }
        
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }
        
        public string MaterialOtherName {
            get {
                return this._MaterialOtherName;
            }
            set {
                this.OnPropertyChanged("MaterialOtherName", this._MaterialOtherName, value);
                this._MaterialOtherName = value;
            }
        }
        
        public string MaterialSimpleName {
            get {
                return this._MaterialSimpleName;
            }
            set {
                this.OnPropertyChanged("MaterialSimpleName", this._MaterialSimpleName, value);
                this._MaterialSimpleName = value;
            }
        }
        
        public string ProductMaterialCode {
            get {
                return this._ProductMaterialCode;
            }
            set {
                this.OnPropertyChanged("ProductMaterialCode", this._ProductMaterialCode, value);
                this._ProductMaterialCode = value;
            }
        }
        
        public string MaterialLevel {
            get {
                return this._MaterialLevel;
            }
            set {
                this.OnPropertyChanged("MaterialLevel", this._MaterialLevel, value);
                this._MaterialLevel = value;
            }
        }
        
        public string MaterialGroup {
            get {
                return this._MaterialGroup;
            }
            set {
                this.OnPropertyChanged("MaterialGroup", this._MaterialGroup, value);
                this._MaterialGroup = value;
            }
        }
        
        public string UserCode {
            get {
                return this._UserCode;
            }
            set {
                this.OnPropertyChanged("UserCode", this._UserCode, value);
                this._UserCode = value;
            }
        }
        
        public global::System.Decimal? PlanPrice {
            get {
                return this._PlanPrice;
            }
            set {
                this.OnPropertyChanged("PlanPrice", this._PlanPrice, value);
                this._PlanPrice = value;
            }
        }
        
        public string ProductArea {
            get {
                return this._ProductArea;
            }
            set {
                this.OnPropertyChanged("ProductArea", this._ProductArea, value);
                this._ProductArea = value;
            }
        }
        
        public global::System.Decimal? MinStock {
            get {
                return this._MinStock;
            }
            set {
                this.OnPropertyChanged("MinStock", this._MinStock, value);
                this._MinStock = value;
            }
        }
        
        public global::System.Decimal? MaxStock {
            get {
                return this._MaxStock;
            }
            set {
                this.OnPropertyChanged("MaxStock", this._MaxStock, value);
                this._MaxStock = value;
            }
        }
        
        public global::System.Int32? UnitID {
            get {
                return this._UnitID;
            }
            set {
                this.OnPropertyChanged("UnitID", this._UnitID, value);
                this._UnitID = value;
            }
        }
        
        public global::System.Int32? StaticUnitID {
            get {
                return this._StaticUnitID;
            }
            set {
                this.OnPropertyChanged("StaticUnitID", this._StaticUnitID, value);
                this._StaticUnitID = value;
            }
        }
        
        public global::System.Decimal? StaticUnitCoefficient {
            get {
                return this._StaticUnitCoefficient;
            }
            set {
                this.OnPropertyChanged("StaticUnitCoefficient", this._StaticUnitCoefficient, value);
                this._StaticUnitCoefficient = value;
            }
        }
        
        public global::System.Decimal? CheckPermitError {
            get {
                return this._CheckPermitError;
            }
            set {
                this.OnPropertyChanged("CheckPermitError", this._CheckPermitError, value);
                this._CheckPermitError = value;
            }
        }
        
        public global::System.Decimal? MaxParkTime {
            get {
                return this._MaxParkTime;
            }
            set {
                this.OnPropertyChanged("MaxParkTime", this._MaxParkTime, value);
                this._MaxParkTime = value;
            }
        }
        
        public global::System.Decimal? MinParkTime {
            get {
                return this._MinParkTime;
            }
            set {
                this.OnPropertyChanged("MinParkTime", this._MinParkTime, value);
                this._MinParkTime = value;
            }
        }
        
        public global::System.DateTime? DefineDate {
            get {
                return this._DefineDate;
            }
            set {
                this.OnPropertyChanged("DefineDate", this._DefineDate, value);
                this._DefineDate = value;
            }
        }
        
        public string StandardCode {
            get {
                return this._StandardCode;
            }
            set {
                this.OnPropertyChanged("StandardCode", this._StandardCode, value);
                this._StandardCode = value;
            }
        }
        
        public global::System.Int32? StaticClass {
            get {
                return this._StaticClass;
            }
            set {
                this.OnPropertyChanged("StaticClass", this._StaticClass, value);
                this._StaticClass = value;
            }
        }
        
        public string IsEqualMaterial {
            get {
                return this._IsEqualMaterial;
            }
            set {
                this.OnPropertyChanged("IsEqualMaterial", this._IsEqualMaterial, value);
                this._IsEqualMaterial = value;
            }
        }
        
        public string IsPutJar {
            get {
                return this._IsPutJar;
            }
            set {
                this.OnPropertyChanged("IsPutJar", this._IsPutJar, value);
                this._IsPutJar = value;
            }
        }
        
        public string IsQualityRateCount {
            get {
                return this._IsQualityRateCount;
            }
            set {
                this.OnPropertyChanged("IsQualityRateCount", this._IsQualityRateCount, value);
                this._IsQualityRateCount = value;
            }
        }
        
        public string ERPCode {
            get {
                return this._ERPCode;
            }
            set {
                this.OnPropertyChanged("ERPCode", this._ERPCode, value);
                this._ERPCode = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public global::System.Decimal? ValidDate {
            get {
                return this._ValidDate;
            }
            set {
                this.OnPropertyChanged("ValidDate", this._ValidDate, value);
                this._ValidDate = value;
            }
        }
        
        public string SAPMaterialCode {
            get {
                return this._SAPMaterialCode;
            }
            set {
                this.OnPropertyChanged("SAPMaterialCode", this._SAPMaterialCode, value);
                this._SAPMaterialCode = value;
            }
        }
        
        public string SAPMaterialShortCode {
            get {
                return this._SAPMaterialShortCode;
            }
            set {
                this.OnPropertyChanged("SAPMaterialShortCode", this._SAPMaterialShortCode, value);
                this._SAPMaterialShortCode = value;
            }
        }
        
        public string ERPCode_Bak {
            get {
                return this._ERPCode_Bak;
            }
            set {
                this.OnPropertyChanged("ERPCode_Bak", this._ERPCode_Bak, value);
                this._ERPCode_Bak = value;
            }
        }
        
        public string OperSourceTemp {
            get {
                return this._OperSourceTemp;
            }
            set {
                this.OnPropertyChanged("OperSourceTemp", this._OperSourceTemp, value);
                this._OperSourceTemp = value;
            }
        }
        
        public global::System.Int32? IsQualityrateCountBak {
            get {
                return this._IsQualityrateCountBak;
            }
            set {
                this.OnPropertyChanged("IsQualityrateCountBak", this._IsQualityrateCountBak, value);
                this._IsQualityrateCountBak = value;
            }
        }
        
        public string MaterialAttribution {
            get {
                return this._MaterialAttribution;
            }
            set {
                this.OnPropertyChanged("MaterialAttribution", this._MaterialAttribution, value);
                this._MaterialAttribution = value;
            }
        }
        
        public string CMaterialGroup {
            get {
                return this._CMaterialGroup;
            }
            set {
                this.OnPropertyChanged("CMaterialGroup", this._CMaterialGroup, value);
                this._CMaterialGroup = value;
            }
        }
        
        public string CMaterialLevel {
            get {
                return this._CMaterialLevel;
            }
            set {
                this.OnPropertyChanged("CMaterialLevel", this._CMaterialLevel, value);
                this._CMaterialLevel = value;
            }
        }
        
        public string XBStock {
            get {
                return this._XBStock;
            }
            set {
                this.OnPropertyChanged("XBStock", this._XBStock, value);
                this._XBStock = value;
            }
        }
        
        public string HFCode {
            get {
                return this._HFCode;
            }
            set {
                this.OnPropertyChanged("HFCode", this._HFCode, value);
                this._HFCode = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasMaterial._BasMaterialEntityConfiguration == null)) {
                BasMaterial._BasMaterialEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasMaterial");
            }
            return BasMaterial._BasMaterialEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._MaterialCode,
                    this._MajorTypeID,
                    this._MinorTypeID,
                    this._RubCode,
                    this._MaterialName,
                    this._MaterialOtherName,
                    this._MaterialSimpleName,
                    this._ProductMaterialCode,
                    this._MaterialLevel,
                    this._MaterialGroup,
                    this._UserCode,
                    this._PlanPrice,
                    this._ProductArea,
                    this._MinStock,
                    this._MaxStock,
                    this._UnitID,
                    this._StaticUnitID,
                    this._StaticUnitCoefficient,
                    this._CheckPermitError,
                    this._MaxParkTime,
                    this._MinParkTime,
                    this._DefineDate,
                    this._StandardCode,
                    this._StaticClass,
                    this._IsEqualMaterial,
                    this._IsPutJar,
                    this._IsQualityRateCount,
                    this._ERPCode,
                    this._Remark,
                    this._DeleteFlag,
                    this._ValidDate,
                    this._SAPMaterialCode,
                    this._SAPMaterialShortCode,
                    this._ERPCode_Bak,
                    this._OperSourceTemp,
                    this._IsQualityrateCountBak,
                    this._MaterialAttribution,
                    this._CMaterialGroup,
                    this._CMaterialLevel,
                    this._XBStock,
                    this._HFCode};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MaterialCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MajorTypeID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MinorTypeID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RubCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterialName = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterialOtherName = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._MaterialSimpleName = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ProductMaterialCode = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._MaterialLevel = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._MaterialGroup = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._UserCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._PlanPrice = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._ProductArea = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._MinStock = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._MaxStock = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._UnitID = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._StaticUnitID = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._StaticUnitCoefficient = reader.GetDecimal(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._CheckPermitError = reader.GetDecimal(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._MaxParkTime = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._MinParkTime = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._DefineDate = this.GetDateTime(reader, 22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._StandardCode = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._StaticClass = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._IsEqualMaterial = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._IsPutJar = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._IsQualityRateCount = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._ERPCode = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._Remark = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._DeleteFlag = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._ValidDate = reader.GetDecimal(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._SAPMaterialCode = reader.GetString(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._SAPMaterialShortCode = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._ERPCode_Bak = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._OperSourceTemp = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._IsQualityrateCountBak = reader.GetInt32(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._MaterialAttribution = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._CMaterialGroup = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._CMaterialLevel = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._XBStock = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._HFCode = reader.GetString(41);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((System.Nullable<int>)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MaterialCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MajorTypeID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MinorTypeID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._RubCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterialName = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaterialOtherName = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._MaterialSimpleName = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ProductMaterialCode = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._MaterialLevel = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._MaterialGroup = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._UserCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._PlanPrice = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._ProductArea = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._MinStock = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._MaxStock = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._UnitID = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._StaticUnitID = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._StaticUnitCoefficient = ((System.Nullable<decimal>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._CheckPermitError = ((System.Nullable<decimal>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._MaxParkTime = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._MinParkTime = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._DefineDate = this.GetDateTime(row, 22);
            }
            if ((false == row.IsNull(23))) {
                this._StandardCode = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._StaticClass = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._IsEqualMaterial = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._IsPutJar = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._IsQualityRateCount = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._ERPCode = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._Remark = ((string)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._DeleteFlag = ((string)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._ValidDate = ((System.Nullable<decimal>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._SAPMaterialCode = ((string)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._SAPMaterialShortCode = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._ERPCode_Bak = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._OperSourceTemp = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._IsQualityrateCountBak = ((System.Nullable<int>)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._MaterialAttribution = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._CMaterialGroup = ((string)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._CMaterialLevel = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._XBStock = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._HFCode = ((string)(row[41]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasMaterial).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasMaterial)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MajorTypeID = new NBear.Common.PropertyItem("MajorTypeID", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MinorTypeID = new NBear.Common.PropertyItem("MinorTypeID", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _RubCode = new NBear.Common.PropertyItem("RubCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialName = new NBear.Common.PropertyItem("MaterialName", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialOtherName = new NBear.Common.PropertyItem("MaterialOtherName", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialSimpleName = new NBear.Common.PropertyItem("MaterialSimpleName", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _ProductMaterialCode = new NBear.Common.PropertyItem("ProductMaterialCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialLevel = new NBear.Common.PropertyItem("MaterialLevel", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialGroup = new NBear.Common.PropertyItem("MaterialGroup", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _UserCode = new NBear.Common.PropertyItem("UserCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _PlanPrice = new NBear.Common.PropertyItem("PlanPrice", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _ProductArea = new NBear.Common.PropertyItem("ProductArea", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MinStock = new NBear.Common.PropertyItem("MinStock", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaxStock = new NBear.Common.PropertyItem("MaxStock", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _UnitID = new NBear.Common.PropertyItem("UnitID", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _StaticUnitID = new NBear.Common.PropertyItem("StaticUnitID", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _StaticUnitCoefficient = new NBear.Common.PropertyItem("StaticUnitCoefficient", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _CheckPermitError = new NBear.Common.PropertyItem("CheckPermitError", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaxParkTime = new NBear.Common.PropertyItem("MaxParkTime", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MinParkTime = new NBear.Common.PropertyItem("MinParkTime", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _DefineDate = new NBear.Common.PropertyItem("DefineDate", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _StandardCode = new NBear.Common.PropertyItem("StandardCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _StaticClass = new NBear.Common.PropertyItem("StaticClass", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _IsEqualMaterial = new NBear.Common.PropertyItem("IsEqualMaterial", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _IsPutJar = new NBear.Common.PropertyItem("IsPutJar", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _IsQualityRateCount = new NBear.Common.PropertyItem("IsQualityRateCount", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _ERPCode = new NBear.Common.PropertyItem("ERPCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _ValidDate = new NBear.Common.PropertyItem("ValidDate", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _SAPMaterialCode = new NBear.Common.PropertyItem("SAPMaterialCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _SAPMaterialShortCode = new NBear.Common.PropertyItem("SAPMaterialShortCode", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _ERPCode_Bak = new NBear.Common.PropertyItem("ERPCode_Bak", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _OperSourceTemp = new NBear.Common.PropertyItem("OperSourceTemp", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _IsQualityrateCountBak = new NBear.Common.PropertyItem("IsQualityrateCountBak", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _MaterialAttribution = new NBear.Common.PropertyItem("MaterialAttribution", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _CMaterialGroup = new NBear.Common.PropertyItem("CMaterialGroup", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _CMaterialLevel = new NBear.Common.PropertyItem("CMaterialLevel", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _XBStock = new NBear.Common.PropertyItem("XBStock", "Mesnac.Entity.BasMaterial");
            
            protected NBear.Common.PropertyItem _HFCode = new NBear.Common.PropertyItem("HFCode", "Mesnac.Entity.BasMaterial");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MajorTypeID {
                get {
                    if ((aliasName == null)) {
                        return _MajorTypeID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MajorTypeID", _MajorTypeID.EntityConfiguration, _MajorTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinorTypeID {
                get {
                    if ((aliasName == null)) {
                        return _MinorTypeID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinorTypeID", _MinorTypeID.EntityConfiguration, _MinorTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RubCode {
                get {
                    if ((aliasName == null)) {
                        return _RubCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RubCode", _RubCode.EntityConfiguration, _RubCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialOtherName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialOtherName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialOtherName", _MaterialOtherName.EntityConfiguration, _MaterialOtherName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialSimpleName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialSimpleName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialSimpleName", _MaterialSimpleName.EntityConfiguration, _MaterialSimpleName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProductMaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _ProductMaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProductMaterialCode", _ProductMaterialCode.EntityConfiguration, _ProductMaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialLevel {
                get {
                    if ((aliasName == null)) {
                        return _MaterialLevel;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialLevel", _MaterialLevel.EntityConfiguration, _MaterialLevel.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialGroup {
                get {
                    if ((aliasName == null)) {
                        return _MaterialGroup;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialGroup", _MaterialGroup.EntityConfiguration, _MaterialGroup.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserCode {
                get {
                    if ((aliasName == null)) {
                        return _UserCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserCode", _UserCode.EntityConfiguration, _UserCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanPrice {
                get {
                    if ((aliasName == null)) {
                        return _PlanPrice;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanPrice", _PlanPrice.EntityConfiguration, _PlanPrice.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProductArea {
                get {
                    if ((aliasName == null)) {
                        return _ProductArea;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProductArea", _ProductArea.EntityConfiguration, _ProductArea.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinStock {
                get {
                    if ((aliasName == null)) {
                        return _MinStock;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinStock", _MinStock.EntityConfiguration, _MinStock.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxStock {
                get {
                    if ((aliasName == null)) {
                        return _MaxStock;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxStock", _MaxStock.EntityConfiguration, _MaxStock.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UnitID {
                get {
                    if ((aliasName == null)) {
                        return _UnitID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UnitID", _UnitID.EntityConfiguration, _UnitID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StaticUnitID {
                get {
                    if ((aliasName == null)) {
                        return _StaticUnitID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StaticUnitID", _StaticUnitID.EntityConfiguration, _StaticUnitID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StaticUnitCoefficient {
                get {
                    if ((aliasName == null)) {
                        return _StaticUnitCoefficient;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StaticUnitCoefficient", _StaticUnitCoefficient.EntityConfiguration, _StaticUnitCoefficient.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckPermitError {
                get {
                    if ((aliasName == null)) {
                        return _CheckPermitError;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckPermitError", _CheckPermitError.EntityConfiguration, _CheckPermitError.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxParkTime {
                get {
                    if ((aliasName == null)) {
                        return _MaxParkTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxParkTime", _MaxParkTime.EntityConfiguration, _MaxParkTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinParkTime {
                get {
                    if ((aliasName == null)) {
                        return _MinParkTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinParkTime", _MinParkTime.EntityConfiguration, _MinParkTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DefineDate {
                get {
                    if ((aliasName == null)) {
                        return _DefineDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DefineDate", _DefineDate.EntityConfiguration, _DefineDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandardCode {
                get {
                    if ((aliasName == null)) {
                        return _StandardCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandardCode", _StandardCode.EntityConfiguration, _StandardCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StaticClass {
                get {
                    if ((aliasName == null)) {
                        return _StaticClass;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StaticClass", _StaticClass.EntityConfiguration, _StaticClass.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsEqualMaterial {
                get {
                    if ((aliasName == null)) {
                        return _IsEqualMaterial;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsEqualMaterial", _IsEqualMaterial.EntityConfiguration, _IsEqualMaterial.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsPutJar {
                get {
                    if ((aliasName == null)) {
                        return _IsPutJar;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsPutJar", _IsPutJar.EntityConfiguration, _IsPutJar.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsQualityRateCount {
                get {
                    if ((aliasName == null)) {
                        return _IsQualityRateCount;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsQualityRateCount", _IsQualityRateCount.EntityConfiguration, _IsQualityRateCount.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode", _ERPCode.EntityConfiguration, _ERPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ValidDate {
                get {
                    if ((aliasName == null)) {
                        return _ValidDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ValidDate", _ValidDate.EntityConfiguration, _ValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPMaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _SAPMaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPMaterialCode", _SAPMaterialCode.EntityConfiguration, _SAPMaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPMaterialShortCode {
                get {
                    if ((aliasName == null)) {
                        return _SAPMaterialShortCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPMaterialShortCode", _SAPMaterialShortCode.EntityConfiguration, _SAPMaterialShortCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode_Bak {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode_Bak;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode_Bak", _ERPCode_Bak.EntityConfiguration, _ERPCode_Bak.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperSourceTemp {
                get {
                    if ((aliasName == null)) {
                        return _OperSourceTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperSourceTemp", _OperSourceTemp.EntityConfiguration, _OperSourceTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsQualityrateCountBak {
                get {
                    if ((aliasName == null)) {
                        return _IsQualityrateCountBak;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsQualityrateCountBak", _IsQualityrateCountBak.EntityConfiguration, _IsQualityrateCountBak.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialAttribution {
                get {
                    if ((aliasName == null)) {
                        return _MaterialAttribution;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialAttribution", _MaterialAttribution.EntityConfiguration, _MaterialAttribution.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CMaterialGroup {
                get {
                    if ((aliasName == null)) {
                        return _CMaterialGroup;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CMaterialGroup", _CMaterialGroup.EntityConfiguration, _CMaterialGroup.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CMaterialLevel {
                get {
                    if ((aliasName == null)) {
                        return _CMaterialLevel;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CMaterialLevel", _CMaterialLevel.EntityConfiguration, _CMaterialLevel.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem XBStock {
                get {
                    if ((aliasName == null)) {
                        return _XBStock;
                    }
                    else {
                        return new NBear.Common.PropertyItem("XBStock", _XBStock.EntityConfiguration, _XBStock.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HFCode {
                get {
                    if ((aliasName == null)) {
                        return _HFCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HFCode", _HFCode.EntityConfiguration, _HFCode.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
