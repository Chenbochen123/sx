//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptLotDataArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptLotData> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PptLotData\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"PptLotData\" batchSize=\"10\">\r\n  <Pr" +
        "operties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Barcod" +
        "e\" mappingColumnType=\"System.String\" sqlType=\"char(18)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"PlanDate\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"PlanDate\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterName\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"MaterName\" mappingColumnType=\"System.String\" sqlType=\"" +
        "nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equ" +
        "ipCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"SerialID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isR" +
        "eadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SerialID\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"System.Nullable`" +
        "1[System.Int16]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"ClassID\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\"" +
        " isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ClassI" +
        "D\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EdtCode\" type=\"System.N" +
        "ullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"EdtCode\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"PlanID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanID\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"StartDatetime\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StartDate" +
        "time\" mappingColumnType=\"System.String\" sqlType=\"char(19)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"DoneRtime\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"DoneRtime\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"DoneAllRtime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DoneAllRt" +
        "ime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BwbTime\" type=\"System.Null" +
        "able`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"BwbTime\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"SetWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Se" +
        "tWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealWeight\" type" +
        "=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"RealWeight\" mappingColumnType=" +
        "\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"ErrorSgn\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"ErrorSgn\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"ShelfBarcode\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"ShelfBarcode\" mappingColumnType=\"System.String\" sqlType=\"char(18)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShelfUpdate\" typ" +
        "e=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"ShelfUpdate\" mappingColumnType=" +
        "\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"TestResult\" type=\"System.Nullable`1[System.Int32]" +
        "\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"TestResult\" mappingColumnType=\"System.Nullable`1[System.Int32]\" s" +
        "qlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PjTe" +
        "mp\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PjTemp\" mappingColumnT" +
        "ype=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"PjPower\" type=\"System.Nullable`1[System" +
        ".Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"PjPower\" mappingColumnType=\"System.Nullable`1[System.Dec" +
        "imal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"PjEner\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isR" +
        "eadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PjEner\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PjStatus\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"PjStatus\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MixStatus\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"MixStatus\" mappingColumnType=\"System.String\" sqlType=" +
        "\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PolyDis" +
        "Time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PolyDisTime\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"CBDisTime\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"CBDisTime\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"OilDisTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRead" +
        "Only=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OilDisTime\" m" +
        "appingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"PowderDisTime\" type=\"System.Null" +
        "able`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"PowderDisTime\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"SerialBatchID\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"SerialBatchID\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CB" +
        "Batch\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"tr" +
        "ue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CBBatch\" mappingColum" +
        "nType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"OilBatch\" type=\"System.Nullable`1[System.In" +
        "t32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"OilBatch\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Po" +
        "lyBatch\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"" +
        "true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PolyBatch\" mappingC" +
        "olumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"PowderBatch\" type=\"System.Nullable`1[Sy" +
        "stem.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"PowderBatch\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"SmallBatch\" type=\"System.Nullable`1[System.Decimal]\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"SmallBatch\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"dec" +
        "imal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedFlag\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"UsedFlag\" mappingColumnType=\"System.String\" sql" +
        "Type=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Us" +
        "edDatetime\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"UsedDatetime\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"UsedPlanid\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UsedPlanid\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Workerbarcode\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"W" +
        "orkerbarcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MemNote\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"MemNote\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WarningSgn\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"WarningSgn\" mappingColumnType=\"System.String\" sq" +
        "lType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"S" +
        "helfnum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"" +
        "true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shelfnum\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"LimitTime\" type=\"System.Nullable`1[Syste" +
        "m.DateTime]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"LimitTime\" mappingColumnType=\"System.Nullable`1[System" +
        ".DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Maxtime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ma" +
        "xtime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LotEnergy\" type=" +
        "\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"LotEnergy\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"SDSTime\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"SDSTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sql" +
        "Type=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ZJSID\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"ZJSID\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</E" +
        "ntityConfiguration>")]
    public partial class PptLotData : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptLotDataEntityConfiguration;
        
        protected string _Barcode;
        
        protected string _PlanDate;
        
        protected string _MaterCode;
        
        protected string _MaterName;
        
        protected string _EquipCode;
        
        protected global::System.Int32? _SerialID;
        
        protected global::System.Int16? _ShiftID;
        
        protected global::System.Int16? _ClassID;
        
        protected global::System.Int32? _EdtCode;
        
        protected string _PlanID;
        
        protected string _StartDatetime;
        
        protected global::System.Int32? _DoneRtime;
        
        protected global::System.Int32? _DoneAllRtime;
        
        protected global::System.Int32? _BwbTime;
        
        protected global::System.Decimal? _SetWeight;
        
        protected global::System.Decimal? _RealWeight;
        
        protected string _ErrorSgn;
        
        protected string _ShelfBarcode;
        
        protected global::System.Int32? _ShelfUpdate;
        
        protected global::System.Int32? _TestResult;
        
        protected global::System.Decimal? _PjTemp;
        
        protected global::System.Decimal? _PjPower;
        
        protected global::System.Decimal? _PjEner;
        
        protected string _PjStatus;
        
        protected string _MixStatus;
        
        protected global::System.Int32? _PolyDisTime;
        
        protected global::System.Int32? _CBDisTime;
        
        protected global::System.Int32? _OilDisTime;
        
        protected global::System.Decimal? _PowderDisTime;
        
        protected global::System.Int32? _SerialBatchID;
        
        protected global::System.Int32? _CBBatch;
        
        protected global::System.Int32? _OilBatch;
        
        protected global::System.Int32? _PolyBatch;
        
        protected global::System.Decimal? _PowderBatch;
        
        protected global::System.Decimal? _SmallBatch;
        
        protected string _UsedFlag;
        
        protected string _UsedDatetime;
        
        protected string _UsedPlanid;
        
        protected string _Workerbarcode;
        
        protected string _MemNote;
        
        protected string _WarningSgn;
        
        protected global::System.Int32? _Shelfnum;
        
        protected global::System.DateTime? _LimitTime;
        
        protected global::System.DateTime? _Maxtime;
        
        protected global::System.Decimal? _LotEnergy;
        
        protected global::System.Int32? _SDSTime;
        
        protected string _ZJSID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptLotData left, global::Mesnac.Entity.PptLotData right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptLotData left, global::Mesnac.Entity.PptLotData right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public string PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public string MaterName {
            get {
                return this._MaterName;
            }
            set {
                this.OnPropertyChanged("MaterName", this._MaterName, value);
                this._MaterName = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public global::System.Int32? SerialID {
            get {
                return this._SerialID;
            }
            set {
                this.OnPropertyChanged("SerialID", this._SerialID, value);
                this._SerialID = value;
            }
        }
        
        public global::System.Int16? ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public global::System.Int16? ClassID {
            get {
                return this._ClassID;
            }
            set {
                this.OnPropertyChanged("ClassID", this._ClassID, value);
                this._ClassID = value;
            }
        }
        
        public global::System.Int32? EdtCode {
            get {
                return this._EdtCode;
            }
            set {
                this.OnPropertyChanged("EdtCode", this._EdtCode, value);
                this._EdtCode = value;
            }
        }
        
        public string PlanID {
            get {
                return this._PlanID;
            }
            set {
                this.OnPropertyChanged("PlanID", this._PlanID, value);
                this._PlanID = value;
            }
        }
        
        public string StartDatetime {
            get {
                return this._StartDatetime;
            }
            set {
                this.OnPropertyChanged("StartDatetime", this._StartDatetime, value);
                this._StartDatetime = value;
            }
        }
        
        public global::System.Int32? DoneRtime {
            get {
                return this._DoneRtime;
            }
            set {
                this.OnPropertyChanged("DoneRtime", this._DoneRtime, value);
                this._DoneRtime = value;
            }
        }
        
        public global::System.Int32? DoneAllRtime {
            get {
                return this._DoneAllRtime;
            }
            set {
                this.OnPropertyChanged("DoneAllRtime", this._DoneAllRtime, value);
                this._DoneAllRtime = value;
            }
        }
        
        public global::System.Int32? BwbTime {
            get {
                return this._BwbTime;
            }
            set {
                this.OnPropertyChanged("BwbTime", this._BwbTime, value);
                this._BwbTime = value;
            }
        }
        
        public global::System.Decimal? SetWeight {
            get {
                return this._SetWeight;
            }
            set {
                this.OnPropertyChanged("SetWeight", this._SetWeight, value);
                this._SetWeight = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public string ErrorSgn {
            get {
                return this._ErrorSgn;
            }
            set {
                this.OnPropertyChanged("ErrorSgn", this._ErrorSgn, value);
                this._ErrorSgn = value;
            }
        }
        
        public string ShelfBarcode {
            get {
                return this._ShelfBarcode;
            }
            set {
                this.OnPropertyChanged("ShelfBarcode", this._ShelfBarcode, value);
                this._ShelfBarcode = value;
            }
        }
        
        public global::System.Int32? ShelfUpdate {
            get {
                return this._ShelfUpdate;
            }
            set {
                this.OnPropertyChanged("ShelfUpdate", this._ShelfUpdate, value);
                this._ShelfUpdate = value;
            }
        }
        
        public global::System.Int32? TestResult {
            get {
                return this._TestResult;
            }
            set {
                this.OnPropertyChanged("TestResult", this._TestResult, value);
                this._TestResult = value;
            }
        }
        
        public global::System.Decimal? PjTemp {
            get {
                return this._PjTemp;
            }
            set {
                this.OnPropertyChanged("PjTemp", this._PjTemp, value);
                this._PjTemp = value;
            }
        }
        
        public global::System.Decimal? PjPower {
            get {
                return this._PjPower;
            }
            set {
                this.OnPropertyChanged("PjPower", this._PjPower, value);
                this._PjPower = value;
            }
        }
        
        public global::System.Decimal? PjEner {
            get {
                return this._PjEner;
            }
            set {
                this.OnPropertyChanged("PjEner", this._PjEner, value);
                this._PjEner = value;
            }
        }
        
        public string PjStatus {
            get {
                return this._PjStatus;
            }
            set {
                this.OnPropertyChanged("PjStatus", this._PjStatus, value);
                this._PjStatus = value;
            }
        }
        
        public string MixStatus {
            get {
                return this._MixStatus;
            }
            set {
                this.OnPropertyChanged("MixStatus", this._MixStatus, value);
                this._MixStatus = value;
            }
        }
        
        public global::System.Int32? PolyDisTime {
            get {
                return this._PolyDisTime;
            }
            set {
                this.OnPropertyChanged("PolyDisTime", this._PolyDisTime, value);
                this._PolyDisTime = value;
            }
        }
        
        public global::System.Int32? CBDisTime {
            get {
                return this._CBDisTime;
            }
            set {
                this.OnPropertyChanged("CBDisTime", this._CBDisTime, value);
                this._CBDisTime = value;
            }
        }
        
        public global::System.Int32? OilDisTime {
            get {
                return this._OilDisTime;
            }
            set {
                this.OnPropertyChanged("OilDisTime", this._OilDisTime, value);
                this._OilDisTime = value;
            }
        }
        
        public global::System.Decimal? PowderDisTime {
            get {
                return this._PowderDisTime;
            }
            set {
                this.OnPropertyChanged("PowderDisTime", this._PowderDisTime, value);
                this._PowderDisTime = value;
            }
        }
        
        public global::System.Int32? SerialBatchID {
            get {
                return this._SerialBatchID;
            }
            set {
                this.OnPropertyChanged("SerialBatchID", this._SerialBatchID, value);
                this._SerialBatchID = value;
            }
        }
        
        public global::System.Int32? CBBatch {
            get {
                return this._CBBatch;
            }
            set {
                this.OnPropertyChanged("CBBatch", this._CBBatch, value);
                this._CBBatch = value;
            }
        }
        
        public global::System.Int32? OilBatch {
            get {
                return this._OilBatch;
            }
            set {
                this.OnPropertyChanged("OilBatch", this._OilBatch, value);
                this._OilBatch = value;
            }
        }
        
        public global::System.Int32? PolyBatch {
            get {
                return this._PolyBatch;
            }
            set {
                this.OnPropertyChanged("PolyBatch", this._PolyBatch, value);
                this._PolyBatch = value;
            }
        }
        
        public global::System.Decimal? PowderBatch {
            get {
                return this._PowderBatch;
            }
            set {
                this.OnPropertyChanged("PowderBatch", this._PowderBatch, value);
                this._PowderBatch = value;
            }
        }
        
        public global::System.Decimal? SmallBatch {
            get {
                return this._SmallBatch;
            }
            set {
                this.OnPropertyChanged("SmallBatch", this._SmallBatch, value);
                this._SmallBatch = value;
            }
        }
        
        public string UsedFlag {
            get {
                return this._UsedFlag;
            }
            set {
                this.OnPropertyChanged("UsedFlag", this._UsedFlag, value);
                this._UsedFlag = value;
            }
        }
        
        public string UsedDatetime {
            get {
                return this._UsedDatetime;
            }
            set {
                this.OnPropertyChanged("UsedDatetime", this._UsedDatetime, value);
                this._UsedDatetime = value;
            }
        }
        
        public string UsedPlanid {
            get {
                return this._UsedPlanid;
            }
            set {
                this.OnPropertyChanged("UsedPlanid", this._UsedPlanid, value);
                this._UsedPlanid = value;
            }
        }
        
        public string Workerbarcode {
            get {
                return this._Workerbarcode;
            }
            set {
                this.OnPropertyChanged("Workerbarcode", this._Workerbarcode, value);
                this._Workerbarcode = value;
            }
        }
        
        public string MemNote {
            get {
                return this._MemNote;
            }
            set {
                this.OnPropertyChanged("MemNote", this._MemNote, value);
                this._MemNote = value;
            }
        }
        
        public string WarningSgn {
            get {
                return this._WarningSgn;
            }
            set {
                this.OnPropertyChanged("WarningSgn", this._WarningSgn, value);
                this._WarningSgn = value;
            }
        }
        
        public global::System.Int32? Shelfnum {
            get {
                return this._Shelfnum;
            }
            set {
                this.OnPropertyChanged("Shelfnum", this._Shelfnum, value);
                this._Shelfnum = value;
            }
        }
        
        public global::System.DateTime? LimitTime {
            get {
                return this._LimitTime;
            }
            set {
                this.OnPropertyChanged("LimitTime", this._LimitTime, value);
                this._LimitTime = value;
            }
        }
        
        public global::System.DateTime? Maxtime {
            get {
                return this._Maxtime;
            }
            set {
                this.OnPropertyChanged("Maxtime", this._Maxtime, value);
                this._Maxtime = value;
            }
        }
        
        public global::System.Decimal? LotEnergy {
            get {
                return this._LotEnergy;
            }
            set {
                this.OnPropertyChanged("LotEnergy", this._LotEnergy, value);
                this._LotEnergy = value;
            }
        }
        
        public global::System.Int32? SDSTime {
            get {
                return this._SDSTime;
            }
            set {
                this.OnPropertyChanged("SDSTime", this._SDSTime, value);
                this._SDSTime = value;
            }
        }
        
        public string ZJSID {
            get {
                return this._ZJSID;
            }
            set {
                this.OnPropertyChanged("ZJSID", this._ZJSID, value);
                this._ZJSID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptLotData._PptLotDataEntityConfiguration == null)) {
                PptLotData._PptLotDataEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptLotData");
            }
            return PptLotData._PptLotDataEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._PlanDate,
                    this._MaterCode,
                    this._MaterName,
                    this._EquipCode,
                    this._SerialID,
                    this._ShiftID,
                    this._ClassID,
                    this._EdtCode,
                    this._PlanID,
                    this._StartDatetime,
                    this._DoneRtime,
                    this._DoneAllRtime,
                    this._BwbTime,
                    this._SetWeight,
                    this._RealWeight,
                    this._ErrorSgn,
                    this._ShelfBarcode,
                    this._ShelfUpdate,
                    this._TestResult,
                    this._PjTemp,
                    this._PjPower,
                    this._PjEner,
                    this._PjStatus,
                    this._MixStatus,
                    this._PolyDisTime,
                    this._CBDisTime,
                    this._OilDisTime,
                    this._PowderDisTime,
                    this._SerialBatchID,
                    this._CBBatch,
                    this._OilBatch,
                    this._PolyBatch,
                    this._PowderBatch,
                    this._SmallBatch,
                    this._UsedFlag,
                    this._UsedDatetime,
                    this._UsedPlanid,
                    this._Workerbarcode,
                    this._MemNote,
                    this._WarningSgn,
                    this._Shelfnum,
                    this._LimitTime,
                    this._Maxtime,
                    this._LotEnergy,
                    this._SDSTime,
                    this._ZJSID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PlanDate = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MaterCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MaterName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._EquipCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._SerialID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ShiftID = reader.GetInt16(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._ClassID = reader.GetInt16(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._EdtCode = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._PlanID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._StartDatetime = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._DoneRtime = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._DoneAllRtime = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._BwbTime = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._SetWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._RealWeight = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._ErrorSgn = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._ShelfBarcode = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._ShelfUpdate = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._TestResult = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._PjTemp = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._PjPower = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._PjEner = reader.GetDecimal(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._PjStatus = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._MixStatus = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._PolyDisTime = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._CBDisTime = reader.GetInt32(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._OilDisTime = reader.GetInt32(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._PowderDisTime = reader.GetDecimal(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._SerialBatchID = reader.GetInt32(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._CBBatch = reader.GetInt32(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._OilBatch = reader.GetInt32(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._PolyBatch = reader.GetInt32(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._PowderBatch = reader.GetDecimal(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._SmallBatch = reader.GetDecimal(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._UsedFlag = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._UsedDatetime = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._UsedPlanid = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._Workerbarcode = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._MemNote = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._WarningSgn = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._Shelfnum = reader.GetInt32(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._LimitTime = this.GetDateTime(reader, 42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._Maxtime = this.GetDateTime(reader, 43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._LotEnergy = reader.GetDecimal(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._SDSTime = reader.GetInt32(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._ZJSID = reader.GetString(46);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PlanDate = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MaterCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MaterName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._EquipCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._SerialID = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ShiftID = ((System.Nullable<short>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._ClassID = ((System.Nullable<short>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._EdtCode = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._PlanID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._StartDatetime = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._DoneRtime = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._DoneAllRtime = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._BwbTime = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._SetWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._ErrorSgn = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._ShelfBarcode = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._ShelfUpdate = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._TestResult = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._PjTemp = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._PjPower = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._PjEner = ((System.Nullable<decimal>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._PjStatus = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._MixStatus = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._PolyDisTime = ((System.Nullable<int>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._CBDisTime = ((System.Nullable<int>)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._OilDisTime = ((System.Nullable<int>)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._PowderDisTime = ((System.Nullable<decimal>)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._SerialBatchID = ((System.Nullable<int>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._CBBatch = ((System.Nullable<int>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._OilBatch = ((System.Nullable<int>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._PolyBatch = ((System.Nullable<int>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._PowderBatch = ((System.Nullable<decimal>)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._SmallBatch = ((System.Nullable<decimal>)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._UsedFlag = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._UsedDatetime = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._UsedPlanid = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._Workerbarcode = ((string)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._MemNote = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._WarningSgn = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._Shelfnum = ((System.Nullable<int>)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._LimitTime = this.GetDateTime(row, 42);
            }
            if ((false == row.IsNull(43))) {
                this._Maxtime = this.GetDateTime(row, 43);
            }
            if ((false == row.IsNull(44))) {
                this._LotEnergy = ((System.Nullable<decimal>)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._SDSTime = ((System.Nullable<int>)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._ZJSID = ((string)(row[46]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptLotData).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptLotData)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _MaterName = new NBear.Common.PropertyItem("MaterName", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _SerialID = new NBear.Common.PropertyItem("SerialID", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _ClassID = new NBear.Common.PropertyItem("ClassID", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _EdtCode = new NBear.Common.PropertyItem("EdtCode", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PlanID = new NBear.Common.PropertyItem("PlanID", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _StartDatetime = new NBear.Common.PropertyItem("StartDatetime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _DoneRtime = new NBear.Common.PropertyItem("DoneRtime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _DoneAllRtime = new NBear.Common.PropertyItem("DoneAllRtime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _BwbTime = new NBear.Common.PropertyItem("BwbTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _SetWeight = new NBear.Common.PropertyItem("SetWeight", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _ErrorSgn = new NBear.Common.PropertyItem("ErrorSgn", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _ShelfBarcode = new NBear.Common.PropertyItem("ShelfBarcode", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _ShelfUpdate = new NBear.Common.PropertyItem("ShelfUpdate", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _TestResult = new NBear.Common.PropertyItem("TestResult", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PjTemp = new NBear.Common.PropertyItem("PjTemp", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PjPower = new NBear.Common.PropertyItem("PjPower", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PjEner = new NBear.Common.PropertyItem("PjEner", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PjStatus = new NBear.Common.PropertyItem("PjStatus", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _MixStatus = new NBear.Common.PropertyItem("MixStatus", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PolyDisTime = new NBear.Common.PropertyItem("PolyDisTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _CBDisTime = new NBear.Common.PropertyItem("CBDisTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _OilDisTime = new NBear.Common.PropertyItem("OilDisTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PowderDisTime = new NBear.Common.PropertyItem("PowderDisTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _SerialBatchID = new NBear.Common.PropertyItem("SerialBatchID", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _CBBatch = new NBear.Common.PropertyItem("CBBatch", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _OilBatch = new NBear.Common.PropertyItem("OilBatch", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PolyBatch = new NBear.Common.PropertyItem("PolyBatch", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _PowderBatch = new NBear.Common.PropertyItem("PowderBatch", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _SmallBatch = new NBear.Common.PropertyItem("SmallBatch", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _UsedFlag = new NBear.Common.PropertyItem("UsedFlag", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _UsedDatetime = new NBear.Common.PropertyItem("UsedDatetime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _UsedPlanid = new NBear.Common.PropertyItem("UsedPlanid", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _Workerbarcode = new NBear.Common.PropertyItem("Workerbarcode", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _MemNote = new NBear.Common.PropertyItem("MemNote", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _WarningSgn = new NBear.Common.PropertyItem("WarningSgn", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _Shelfnum = new NBear.Common.PropertyItem("Shelfnum", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _LimitTime = new NBear.Common.PropertyItem("LimitTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _Maxtime = new NBear.Common.PropertyItem("Maxtime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _LotEnergy = new NBear.Common.PropertyItem("LotEnergy", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _SDSTime = new NBear.Common.PropertyItem("SDSTime", "Mesnac.Entity.PptLotData");
            
            protected NBear.Common.PropertyItem _ZJSID = new NBear.Common.PropertyItem("ZJSID", "Mesnac.Entity.PptLotData");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterName {
                get {
                    if ((aliasName == null)) {
                        return _MaterName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterName", _MaterName.EntityConfiguration, _MaterName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialID {
                get {
                    if ((aliasName == null)) {
                        return _SerialID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialID", _SerialID.EntityConfiguration, _SerialID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ClassID {
                get {
                    if ((aliasName == null)) {
                        return _ClassID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ClassID", _ClassID.EntityConfiguration, _ClassID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EdtCode {
                get {
                    if ((aliasName == null)) {
                        return _EdtCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EdtCode", _EdtCode.EntityConfiguration, _EdtCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanID {
                get {
                    if ((aliasName == null)) {
                        return _PlanID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanID", _PlanID.EntityConfiguration, _PlanID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StartDatetime {
                get {
                    if ((aliasName == null)) {
                        return _StartDatetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StartDatetime", _StartDatetime.EntityConfiguration, _StartDatetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DoneRtime {
                get {
                    if ((aliasName == null)) {
                        return _DoneRtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DoneRtime", _DoneRtime.EntityConfiguration, _DoneRtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DoneAllRtime {
                get {
                    if ((aliasName == null)) {
                        return _DoneAllRtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DoneAllRtime", _DoneAllRtime.EntityConfiguration, _DoneAllRtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BwbTime {
                get {
                    if ((aliasName == null)) {
                        return _BwbTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BwbTime", _BwbTime.EntityConfiguration, _BwbTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetWeight {
                get {
                    if ((aliasName == null)) {
                        return _SetWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetWeight", _SetWeight.EntityConfiguration, _SetWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErrorSgn {
                get {
                    if ((aliasName == null)) {
                        return _ErrorSgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErrorSgn", _ErrorSgn.EntityConfiguration, _ErrorSgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfBarcode {
                get {
                    if ((aliasName == null)) {
                        return _ShelfBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfBarcode", _ShelfBarcode.EntityConfiguration, _ShelfBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfUpdate {
                get {
                    if ((aliasName == null)) {
                        return _ShelfUpdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfUpdate", _ShelfUpdate.EntityConfiguration, _ShelfUpdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TestResult {
                get {
                    if ((aliasName == null)) {
                        return _TestResult;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TestResult", _TestResult.EntityConfiguration, _TestResult.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PjTemp {
                get {
                    if ((aliasName == null)) {
                        return _PjTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PjTemp", _PjTemp.EntityConfiguration, _PjTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PjPower {
                get {
                    if ((aliasName == null)) {
                        return _PjPower;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PjPower", _PjPower.EntityConfiguration, _PjPower.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PjEner {
                get {
                    if ((aliasName == null)) {
                        return _PjEner;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PjEner", _PjEner.EntityConfiguration, _PjEner.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PjStatus {
                get {
                    if ((aliasName == null)) {
                        return _PjStatus;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PjStatus", _PjStatus.EntityConfiguration, _PjStatus.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MixStatus {
                get {
                    if ((aliasName == null)) {
                        return _MixStatus;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MixStatus", _MixStatus.EntityConfiguration, _MixStatus.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PolyDisTime {
                get {
                    if ((aliasName == null)) {
                        return _PolyDisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PolyDisTime", _PolyDisTime.EntityConfiguration, _PolyDisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CBDisTime {
                get {
                    if ((aliasName == null)) {
                        return _CBDisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CBDisTime", _CBDisTime.EntityConfiguration, _CBDisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OilDisTime {
                get {
                    if ((aliasName == null)) {
                        return _OilDisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OilDisTime", _OilDisTime.EntityConfiguration, _OilDisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PowderDisTime {
                get {
                    if ((aliasName == null)) {
                        return _PowderDisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PowderDisTime", _PowderDisTime.EntityConfiguration, _PowderDisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialBatchID {
                get {
                    if ((aliasName == null)) {
                        return _SerialBatchID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialBatchID", _SerialBatchID.EntityConfiguration, _SerialBatchID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CBBatch {
                get {
                    if ((aliasName == null)) {
                        return _CBBatch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CBBatch", _CBBatch.EntityConfiguration, _CBBatch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OilBatch {
                get {
                    if ((aliasName == null)) {
                        return _OilBatch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OilBatch", _OilBatch.EntityConfiguration, _OilBatch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PolyBatch {
                get {
                    if ((aliasName == null)) {
                        return _PolyBatch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PolyBatch", _PolyBatch.EntityConfiguration, _PolyBatch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PowderBatch {
                get {
                    if ((aliasName == null)) {
                        return _PowderBatch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PowderBatch", _PowderBatch.EntityConfiguration, _PowderBatch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SmallBatch {
                get {
                    if ((aliasName == null)) {
                        return _SmallBatch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SmallBatch", _SmallBatch.EntityConfiguration, _SmallBatch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedFlag {
                get {
                    if ((aliasName == null)) {
                        return _UsedFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedFlag", _UsedFlag.EntityConfiguration, _UsedFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedDatetime {
                get {
                    if ((aliasName == null)) {
                        return _UsedDatetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedDatetime", _UsedDatetime.EntityConfiguration, _UsedDatetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UsedPlanid {
                get {
                    if ((aliasName == null)) {
                        return _UsedPlanid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UsedPlanid", _UsedPlanid.EntityConfiguration, _UsedPlanid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workerbarcode {
                get {
                    if ((aliasName == null)) {
                        return _Workerbarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workerbarcode", _Workerbarcode.EntityConfiguration, _Workerbarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MemNote {
                get {
                    if ((aliasName == null)) {
                        return _MemNote;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MemNote", _MemNote.EntityConfiguration, _MemNote.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WarningSgn {
                get {
                    if ((aliasName == null)) {
                        return _WarningSgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WarningSgn", _WarningSgn.EntityConfiguration, _WarningSgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelfnum {
                get {
                    if ((aliasName == null)) {
                        return _Shelfnum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelfnum", _Shelfnum.EntityConfiguration, _Shelfnum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LimitTime {
                get {
                    if ((aliasName == null)) {
                        return _LimitTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LimitTime", _LimitTime.EntityConfiguration, _LimitTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Maxtime {
                get {
                    if ((aliasName == null)) {
                        return _Maxtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Maxtime", _Maxtime.EntityConfiguration, _Maxtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LotEnergy {
                get {
                    if ((aliasName == null)) {
                        return _LotEnergy;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LotEnergy", _LotEnergy.EntityConfiguration, _LotEnergy.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SDSTime {
                get {
                    if ((aliasName == null)) {
                        return _SDSTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SDSTime", _SDSTime.EntityConfiguration, _SDSTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ZJSID {
                get {
                    if ((aliasName == null)) {
                        return _ZJSID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ZJSID", _ZJSID.EntityConfiguration, _ZJSID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
