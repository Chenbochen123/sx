//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmtCheckItemArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmtCheckItem> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmtCheckItem\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"QmtCheckItem\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Obj" +
        "ID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull" +
        "=\"true\" />\r\n    <Property name=\"TypeID\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TypeI" +
        "D\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"ItemCode\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"ItemCode\" mappingColumnType=\"System.String\" sqlType=\"char(3)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"ItemName\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"ItemName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ItemEnvir\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"ItemEnvir\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(255)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class QmtCheckItem : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmtCheckItemEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _TypeID;
        
        protected string _ItemCode;
        
        protected string _ItemName;
        
        protected string _ItemEnvir;
        
        protected string _Remark;
        
        protected string _DeleteFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmtCheckItem left, global::Mesnac.Entity.QmtCheckItem right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmtCheckItem left, global::Mesnac.Entity.QmtCheckItem right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string TypeID {
            get {
                return this._TypeID;
            }
            set {
                this.OnPropertyChanged("TypeID", this._TypeID, value);
                this._TypeID = value;
            }
        }
        
        public string ItemCode {
            get {
                return this._ItemCode;
            }
            set {
                this.OnPropertyChanged("ItemCode", this._ItemCode, value);
                this._ItemCode = value;
            }
        }
        
        public string ItemName {
            get {
                return this._ItemName;
            }
            set {
                this.OnPropertyChanged("ItemName", this._ItemName, value);
                this._ItemName = value;
            }
        }
        
        public string ItemEnvir {
            get {
                return this._ItemEnvir;
            }
            set {
                this.OnPropertyChanged("ItemEnvir", this._ItemEnvir, value);
                this._ItemEnvir = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmtCheckItem._QmtCheckItemEntityConfiguration == null)) {
                QmtCheckItem._QmtCheckItemEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmtCheckItem");
            }
            return QmtCheckItem._QmtCheckItemEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._TypeID,
                    this._ItemCode,
                    this._ItemName,
                    this._ItemEnvir,
                    this._Remark,
                    this._DeleteFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._TypeID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ItemCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ItemName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ItemEnvir = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Remark = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._DeleteFlag = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._TypeID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ItemCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ItemName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ItemEnvir = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Remark = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._DeleteFlag = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmtCheckItem).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmtCheckItem)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.QmtCheckItem)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.QmtCheckItem");
            
            protected NBear.Common.PropertyItem _TypeID = new NBear.Common.PropertyItem("TypeID", "Mesnac.Entity.QmtCheckItem");
            
            protected NBear.Common.PropertyItem _ItemCode = new NBear.Common.PropertyItem("ItemCode", "Mesnac.Entity.QmtCheckItem");
            
            protected NBear.Common.PropertyItem _ItemName = new NBear.Common.PropertyItem("ItemName", "Mesnac.Entity.QmtCheckItem");
            
            protected NBear.Common.PropertyItem _ItemEnvir = new NBear.Common.PropertyItem("ItemEnvir", "Mesnac.Entity.QmtCheckItem");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.QmtCheckItem");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmtCheckItem");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TypeID {
                get {
                    if ((aliasName == null)) {
                        return _TypeID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TypeID", _TypeID.EntityConfiguration, _TypeID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemCode {
                get {
                    if ((aliasName == null)) {
                        return _ItemCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemCode", _ItemCode.EntityConfiguration, _ItemCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemName {
                get {
                    if ((aliasName == null)) {
                        return _ItemName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemName", _ItemName.EntityConfiguration, _ItemName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemEnvir {
                get {
                    if ((aliasName == null)) {
                        return _ItemEnvir;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemEnvir", _ItemEnvir.EntityConfiguration, _ItemEnvir.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
