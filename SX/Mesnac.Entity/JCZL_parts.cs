//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class JCZL_partsArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.JCZL_parts> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.JCZL_parts\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"JCZL_parts\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"Mp_code\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_c" +
        "ode\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"true\" isN" +
        "otNull=\"true\" />\r\n    <Property name=\"Mp_name\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Mp_name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(80)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_class\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Equip_class\" mappingColumnType=\"System.String\" sqlType=\"char(" +
        "2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Memo\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Memo\" mappingColumnType=\"System.String\" sqlType=\"nva" +
        "rchar(80)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityC" +
        "onfiguration>")]
    public partial class JCZL_parts : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _JCZL_partsEntityConfiguration;
        
        protected string _Mp_code;
        
        protected string _Mp_name;
        
        protected string _Equip_class;
        
        protected string _Memo;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.JCZL_parts left, global::Mesnac.Entity.JCZL_parts right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.JCZL_parts left, global::Mesnac.Entity.JCZL_parts right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mp_code {
            get {
                return this._Mp_code;
            }
            set {
                this.OnPropertyChanged("Mp_code", this._Mp_code, value);
                this._Mp_code = value;
            }
        }
        
        public string Mp_name {
            get {
                return this._Mp_name;
            }
            set {
                this.OnPropertyChanged("Mp_name", this._Mp_name, value);
                this._Mp_name = value;
            }
        }
        
        public string Equip_class {
            get {
                return this._Equip_class;
            }
            set {
                this.OnPropertyChanged("Equip_class", this._Equip_class, value);
                this._Equip_class = value;
            }
        }
        
        public string Memo {
            get {
                return this._Memo;
            }
            set {
                this.OnPropertyChanged("Memo", this._Memo, value);
                this._Memo = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((JCZL_parts._JCZL_partsEntityConfiguration == null)) {
                JCZL_parts._JCZL_partsEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.JCZL_parts");
            }
            return JCZL_parts._JCZL_partsEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_code,
                    this._Mp_name,
                    this._Equip_class,
                    this._Memo};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mp_name = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_class = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Memo = reader.GetString(3);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mp_name = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_class = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Memo = ((string)(row[3]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.JCZL_parts).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.JCZL_parts)(obj)).isAttached) 
                        && (this.Mp_code == ((global::Mesnac.Entity.JCZL_parts)(obj)).Mp_code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_code = new NBear.Common.PropertyItem("Mp_code", "Mesnac.Entity.JCZL_parts");
            
            protected NBear.Common.PropertyItem _Mp_name = new NBear.Common.PropertyItem("Mp_name", "Mesnac.Entity.JCZL_parts");
            
            protected NBear.Common.PropertyItem _Equip_class = new NBear.Common.PropertyItem("Equip_class", "Mesnac.Entity.JCZL_parts");
            
            protected NBear.Common.PropertyItem _Memo = new NBear.Common.PropertyItem("Memo", "Mesnac.Entity.JCZL_parts");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_code", _Mp_code.EntityConfiguration, _Mp_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_name {
                get {
                    if ((aliasName == null)) {
                        return _Mp_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_name", _Mp_name.EntityConfiguration, _Mp_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_class {
                get {
                    if ((aliasName == null)) {
                        return _Equip_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_class", _Equip_class.EntityConfiguration, _Equip_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo {
                get {
                    if ((aliasName == null)) {
                        return _Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo", _Memo.EntityConfiguration, _Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
