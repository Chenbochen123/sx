//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmRubberInventoryDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmRubberInventoryDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmRubberInventoryDetail\" isReadOnly=\"false\" isAutoPreLoad=\"" +
        "false\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmRubberInventoryD" +
        "etail\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StorageID\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property na" +
        "me=\"StoragePlaceID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"t" +
        "rue\" />\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Barcode" +
        "\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(18)\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"OrderID\" type=\"System.Int32\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"OrderID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"ProductNo\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"ProductNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(18)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"nva" +
        "rchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Storag" +
        "eNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StorageNum\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"StorageWeight\" type=\"System.Nullable`1[S" +
        "ystem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"StorageWeight\" mappingColumnType=\"System.Nullable`" +
        "1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"PieceWeight\" type=\"System.Nullable`1[System.Decimal]\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"PieceWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlTy" +
        "pe=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Inve" +
        "ntoryWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"InventoryWei" +
        "ght\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InventoryNum\" type=\"" +
        "System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"InventoryNum\" mappingColumnType=\"" +
        "System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"ProfitLossFlag\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"ProfitLossFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DiffNum\" type=\"System.Nullab" +
        "le`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"DiffNum\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"DiffWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"D" +
        "iffWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decima" +
        "l\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecordDate\" ty" +
        "pe=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecordDate\" mappingColumnT" +
        "ype=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PpmRubberInventoryDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmRubberInventoryDetailEntityConfiguration;
        
        protected string _BillNo;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected string _Barcode;
        
        protected int _OrderID;
        
        protected string _ProductNo;
        
        protected string _MaterCode;
        
        protected global::System.Int32? _StorageNum;
        
        protected global::System.Decimal? _StorageWeight;
        
        protected global::System.Decimal? _PieceWeight;
        
        protected global::System.Decimal? _InventoryWeight;
        
        protected global::System.Int32? _InventoryNum;
        
        protected string _ProfitLossFlag;
        
        protected global::System.Int32? _DiffNum;
        
        protected global::System.Decimal? _DiffWeight;
        
        protected global::System.DateTime? _RecordDate;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmRubberInventoryDetail left, global::Mesnac.Entity.PpmRubberInventoryDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmRubberInventoryDetail left, global::Mesnac.Entity.PpmRubberInventoryDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string BillNo {
            get {
                return this._BillNo;
            }
            set {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }
        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public string ProductNo {
            get {
                return this._ProductNo;
            }
            set {
                this.OnPropertyChanged("ProductNo", this._ProductNo, value);
                this._ProductNo = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.Int32? StorageNum {
            get {
                return this._StorageNum;
            }
            set {
                this.OnPropertyChanged("StorageNum", this._StorageNum, value);
                this._StorageNum = value;
            }
        }
        
        public global::System.Decimal? StorageWeight {
            get {
                return this._StorageWeight;
            }
            set {
                this.OnPropertyChanged("StorageWeight", this._StorageWeight, value);
                this._StorageWeight = value;
            }
        }
        
        public global::System.Decimal? PieceWeight {
            get {
                return this._PieceWeight;
            }
            set {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }
        
        public global::System.Decimal? InventoryWeight {
            get {
                return this._InventoryWeight;
            }
            set {
                this.OnPropertyChanged("InventoryWeight", this._InventoryWeight, value);
                this._InventoryWeight = value;
            }
        }
        
        public global::System.Int32? InventoryNum {
            get {
                return this._InventoryNum;
            }
            set {
                this.OnPropertyChanged("InventoryNum", this._InventoryNum, value);
                this._InventoryNum = value;
            }
        }
        
        public string ProfitLossFlag {
            get {
                return this._ProfitLossFlag;
            }
            set {
                this.OnPropertyChanged("ProfitLossFlag", this._ProfitLossFlag, value);
                this._ProfitLossFlag = value;
            }
        }
        
        public global::System.Int32? DiffNum {
            get {
                return this._DiffNum;
            }
            set {
                this.OnPropertyChanged("DiffNum", this._DiffNum, value);
                this._DiffNum = value;
            }
        }
        
        public global::System.Decimal? DiffWeight {
            get {
                return this._DiffWeight;
            }
            set {
                this.OnPropertyChanged("DiffWeight", this._DiffWeight, value);
                this._DiffWeight = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmRubberInventoryDetail._PpmRubberInventoryDetailEntityConfiguration == null)) {
                PpmRubberInventoryDetail._PpmRubberInventoryDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmRubberInventoryDetail");
            }
            return PpmRubberInventoryDetail._PpmRubberInventoryDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._BillNo,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._Barcode,
                    this._OrderID,
                    this._ProductNo,
                    this._MaterCode,
                    this._StorageNum,
                    this._StorageWeight,
                    this._PieceWeight,
                    this._InventoryWeight,
                    this._InventoryNum,
                    this._ProfitLossFlag,
                    this._DiffNum,
                    this._DiffWeight,
                    this._RecordDate,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._StorageID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._StoragePlaceID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Barcode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._OrderID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._ProductNo = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._StorageNum = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._StorageWeight = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._PieceWeight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._InventoryWeight = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._InventoryNum = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._ProfitLossFlag = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._DiffNum = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._DiffWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._RecordDate = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Remark = reader.GetString(16);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._StorageID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._StoragePlaceID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Barcode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._OrderID = ((int)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._ProductNo = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaterCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._StorageNum = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._StorageWeight = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._PieceWeight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._InventoryWeight = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._InventoryNum = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._ProfitLossFlag = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._DiffNum = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._DiffWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._RecordDate = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16))) {
                this._Remark = ((string)(row[16]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmRubberInventoryDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((((this.isAttached && ((global::Mesnac.Entity.PpmRubberInventoryDetail)(obj)).isAttached) 
                        && (this.BillNo == ((global::Mesnac.Entity.PpmRubberInventoryDetail)(obj)).BillNo)) 
                        && (this.StorageID == ((global::Mesnac.Entity.PpmRubberInventoryDetail)(obj)).StorageID)) 
                        && (this.StoragePlaceID == ((global::Mesnac.Entity.PpmRubberInventoryDetail)(obj)).StoragePlaceID)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PpmRubberInventoryDetail)(obj)).Barcode)) 
                        && (this.OrderID == ((global::Mesnac.Entity.PpmRubberInventoryDetail)(obj)).OrderID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _ProductNo = new NBear.Common.PropertyItem("ProductNo", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _StorageNum = new NBear.Common.PropertyItem("StorageNum", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _StorageWeight = new NBear.Common.PropertyItem("StorageWeight", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _InventoryWeight = new NBear.Common.PropertyItem("InventoryWeight", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _InventoryNum = new NBear.Common.PropertyItem("InventoryNum", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _ProfitLossFlag = new NBear.Common.PropertyItem("ProfitLossFlag", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _DiffNum = new NBear.Common.PropertyItem("DiffNum", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _DiffWeight = new NBear.Common.PropertyItem("DiffWeight", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PpmRubberInventoryDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem BillNo {
                get {
                    if ((aliasName == null)) {
                        return _BillNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProductNo {
                get {
                    if ((aliasName == null)) {
                        return _ProductNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProductNo", _ProductNo.EntityConfiguration, _ProductNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageNum {
                get {
                    if ((aliasName == null)) {
                        return _StorageNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageNum", _StorageNum.EntityConfiguration, _StorageNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageWeight {
                get {
                    if ((aliasName == null)) {
                        return _StorageWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageWeight", _StorageWeight.EntityConfiguration, _StorageWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PieceWeight {
                get {
                    if ((aliasName == null)) {
                        return _PieceWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InventoryWeight {
                get {
                    if ((aliasName == null)) {
                        return _InventoryWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InventoryWeight", _InventoryWeight.EntityConfiguration, _InventoryWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InventoryNum {
                get {
                    if ((aliasName == null)) {
                        return _InventoryNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InventoryNum", _InventoryNum.EntityConfiguration, _InventoryNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProfitLossFlag {
                get {
                    if ((aliasName == null)) {
                        return _ProfitLossFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProfitLossFlag", _ProfitLossFlag.EntityConfiguration, _ProfitLossFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DiffNum {
                get {
                    if ((aliasName == null)) {
                        return _DiffNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DiffNum", _DiffNum.EntityConfiguration, _DiffNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DiffWeight {
                get {
                    if ((aliasName == null)) {
                        return _DiffWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DiffWeight", _DiffWeight.EntityConfiguration, _DiffWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
