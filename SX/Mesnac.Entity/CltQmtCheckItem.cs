//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class CltQmtCheckItemArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.CltQmtCheckItem> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.CltQmtCheckItem\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"CltQmtCheckItem\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"FIDDtl\" type=\"System.Int32\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"FIDDtl\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"CheckCode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"CheckCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrim" +
        "aryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"ItemCD\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"ItemCD\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)" +
        "\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"ItemType\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"ItemType\" mappingColumnType=\"System.String\" sqlType=" +
        "\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ite" +
        "mCount\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ItemCount\" mappingC" +
        "olumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"TotalValue\" type=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"TotalValue\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"HGCount\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"HGC" +
        "ount\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"NHGCount\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"NHGCount\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  <" +
        "/Properties>\r\n</EntityConfiguration>")]
    public partial class CltQmtCheckItem : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _CltQmtCheckItemEntityConfiguration;
        
        protected int _FIDDtl;
        
        protected string _CheckCode;
        
        protected string _ItemCD;
        
        protected string _ItemType;
        
        protected global::System.Int32? _ItemCount;
        
        protected global::System.Decimal? _TotalValue;
        
        protected global::System.Int32? _HGCount;
        
        protected global::System.Int32? _NHGCount;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.CltQmtCheckItem left, global::Mesnac.Entity.CltQmtCheckItem right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.CltQmtCheckItem left, global::Mesnac.Entity.CltQmtCheckItem right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int FIDDtl {
            get {
                return this._FIDDtl;
            }
            set {
                this.OnPropertyChanged("FIDDtl", this._FIDDtl, value);
                this._FIDDtl = value;
            }
        }
        
        public string CheckCode {
            get {
                return this._CheckCode;
            }
            set {
                this.OnPropertyChanged("CheckCode", this._CheckCode, value);
                this._CheckCode = value;
            }
        }
        
        public string ItemCD {
            get {
                return this._ItemCD;
            }
            set {
                this.OnPropertyChanged("ItemCD", this._ItemCD, value);
                this._ItemCD = value;
            }
        }
        
        public string ItemType {
            get {
                return this._ItemType;
            }
            set {
                this.OnPropertyChanged("ItemType", this._ItemType, value);
                this._ItemType = value;
            }
        }
        
        public global::System.Int32? ItemCount {
            get {
                return this._ItemCount;
            }
            set {
                this.OnPropertyChanged("ItemCount", this._ItemCount, value);
                this._ItemCount = value;
            }
        }
        
        public global::System.Decimal? TotalValue {
            get {
                return this._TotalValue;
            }
            set {
                this.OnPropertyChanged("TotalValue", this._TotalValue, value);
                this._TotalValue = value;
            }
        }
        
        public global::System.Int32? HGCount {
            get {
                return this._HGCount;
            }
            set {
                this.OnPropertyChanged("HGCount", this._HGCount, value);
                this._HGCount = value;
            }
        }
        
        public global::System.Int32? NHGCount {
            get {
                return this._NHGCount;
            }
            set {
                this.OnPropertyChanged("NHGCount", this._NHGCount, value);
                this._NHGCount = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((CltQmtCheckItem._CltQmtCheckItemEntityConfiguration == null)) {
                CltQmtCheckItem._CltQmtCheckItemEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.CltQmtCheckItem");
            }
            return CltQmtCheckItem._CltQmtCheckItemEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._FIDDtl,
                    this._CheckCode,
                    this._ItemCD,
                    this._ItemType,
                    this._ItemCount,
                    this._TotalValue,
                    this._HGCount,
                    this._NHGCount};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._FIDDtl = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._CheckCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ItemCD = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ItemType = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ItemCount = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._TotalValue = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._HGCount = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._NHGCount = reader.GetInt32(7);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._FIDDtl = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._CheckCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ItemCD = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ItemType = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ItemCount = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._TotalValue = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._HGCount = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._NHGCount = ((System.Nullable<int>)(row[7]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.CltQmtCheckItem).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((this.isAttached && ((global::Mesnac.Entity.CltQmtCheckItem)(obj)).isAttached) 
                        && (this.CheckCode == ((global::Mesnac.Entity.CltQmtCheckItem)(obj)).CheckCode)) 
                        && (this.ItemCD == ((global::Mesnac.Entity.CltQmtCheckItem)(obj)).ItemCD));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _FIDDtl = new NBear.Common.PropertyItem("FIDDtl", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _CheckCode = new NBear.Common.PropertyItem("CheckCode", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _ItemCD = new NBear.Common.PropertyItem("ItemCD", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _ItemType = new NBear.Common.PropertyItem("ItemType", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _ItemCount = new NBear.Common.PropertyItem("ItemCount", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _TotalValue = new NBear.Common.PropertyItem("TotalValue", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _HGCount = new NBear.Common.PropertyItem("HGCount", "Mesnac.Entity.CltQmtCheckItem");
            
            protected NBear.Common.PropertyItem _NHGCount = new NBear.Common.PropertyItem("NHGCount", "Mesnac.Entity.CltQmtCheckItem");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem FIDDtl {
                get {
                    if ((aliasName == null)) {
                        return _FIDDtl;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FIDDtl", _FIDDtl.EntityConfiguration, _FIDDtl.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckCode {
                get {
                    if ((aliasName == null)) {
                        return _CheckCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckCode", _CheckCode.EntityConfiguration, _CheckCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemCD {
                get {
                    if ((aliasName == null)) {
                        return _ItemCD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemCD", _ItemCD.EntityConfiguration, _ItemCD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemType {
                get {
                    if ((aliasName == null)) {
                        return _ItemType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemType", _ItemType.EntityConfiguration, _ItemType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemCount {
                get {
                    if ((aliasName == null)) {
                        return _ItemCount;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemCount", _ItemCount.EntityConfiguration, _ItemCount.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TotalValue {
                get {
                    if ((aliasName == null)) {
                        return _TotalValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TotalValue", _TotalValue.EntityConfiguration, _TotalValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HGCount {
                get {
                    if ((aliasName == null)) {
                        return _HGCount;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HGCount", _HGCount.EntityConfiguration, _HGCount.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NHGCount {
                get {
                    if ((aliasName == null)) {
                        return _NHGCount;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NHGCount", _NHGCount.EntityConfiguration, _NHGCount.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
