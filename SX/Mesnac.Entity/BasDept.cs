//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasDeptArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasDept> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasDept\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatchUpda" +
        "te=\"false\" isRelation=\"false\" mappingName=\"BasDept\" batchSize=\"10\">\r\n  <Properti" +
        "es>\r\n    <Property name=\"ObjID\" type=\"System.Nullable`1[System.Int32]\" isInherit" +
        "ed=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"ObjID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DepCode\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"DepCode\" mappingColumnType=\"System.String\" sqlType=\"nvarc" +
        "har(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DepName\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"DepName\" mappingColumnType=\"System.String\" sq" +
        "lType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"DepLevel\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DepLevel\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"ParentNum\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"ParentNum\" mappingColumnType=\"System.String\" sqlType=\"char(2)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ERPCode\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"ERPCode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"HR" +
        "Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"HRCode\" mappingColumnType=\"System.String" +
        "\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"DisplayId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRe" +
        "adOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DisplayId\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration" +
        ">")]
    public partial class BasDept : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasDeptEntityConfiguration;
        
        protected global::System.Int32? _ObjID;
        
        protected string _DepCode;
        
        protected string _DepName;
        
        protected global::System.Int32? _DepLevel;
        
        protected string _ParentNum;
        
        protected string _Remark;
        
        protected string _ERPCode;
        
        protected string _HRCode;
        
        protected global::System.Int32? _DisplayId;
        
        protected string _DeleteFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasDept left, global::Mesnac.Entity.BasDept right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasDept left, global::Mesnac.Entity.BasDept right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public global::System.Int32? ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string DepCode {
            get {
                return this._DepCode;
            }
            set {
                this.OnPropertyChanged("DepCode", this._DepCode, value);
                this._DepCode = value;
            }
        }
        
        public string DepName {
            get {
                return this._DepName;
            }
            set {
                this.OnPropertyChanged("DepName", this._DepName, value);
                this._DepName = value;
            }
        }
        
        public global::System.Int32? DepLevel {
            get {
                return this._DepLevel;
            }
            set {
                this.OnPropertyChanged("DepLevel", this._DepLevel, value);
                this._DepLevel = value;
            }
        }
        
        public string ParentNum {
            get {
                return this._ParentNum;
            }
            set {
                this.OnPropertyChanged("ParentNum", this._ParentNum, value);
                this._ParentNum = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string ERPCode {
            get {
                return this._ERPCode;
            }
            set {
                this.OnPropertyChanged("ERPCode", this._ERPCode, value);
                this._ERPCode = value;
            }
        }
        
        public string HRCode {
            get {
                return this._HRCode;
            }
            set {
                this.OnPropertyChanged("HRCode", this._HRCode, value);
                this._HRCode = value;
            }
        }
        
        public global::System.Int32? DisplayId {
            get {
                return this._DisplayId;
            }
            set {
                this.OnPropertyChanged("DisplayId", this._DisplayId, value);
                this._DisplayId = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasDept._BasDeptEntityConfiguration == null)) {
                BasDept._BasDeptEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasDept");
            }
            return BasDept._BasDeptEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._DepCode,
                    this._DepName,
                    this._DepLevel,
                    this._ParentNum,
                    this._Remark,
                    this._ERPCode,
                    this._HRCode,
                    this._DisplayId,
                    this._DeleteFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._DepCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._DepName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._DepLevel = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ParentNum = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Remark = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ERPCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._HRCode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._DisplayId = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._DeleteFlag = reader.GetString(9);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((System.Nullable<int>)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._DepCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._DepName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._DepLevel = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ParentNum = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Remark = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ERPCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._HRCode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._DisplayId = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._DeleteFlag = ((string)(row[9]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasDept).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasDept)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _DepCode = new NBear.Common.PropertyItem("DepCode", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _DepName = new NBear.Common.PropertyItem("DepName", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _DepLevel = new NBear.Common.PropertyItem("DepLevel", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _ParentNum = new NBear.Common.PropertyItem("ParentNum", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _ERPCode = new NBear.Common.PropertyItem("ERPCode", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _HRCode = new NBear.Common.PropertyItem("HRCode", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _DisplayId = new NBear.Common.PropertyItem("DisplayId", "Mesnac.Entity.BasDept");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasDept");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DepCode {
                get {
                    if ((aliasName == null)) {
                        return _DepCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DepCode", _DepCode.EntityConfiguration, _DepCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DepName {
                get {
                    if ((aliasName == null)) {
                        return _DepName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DepName", _DepName.EntityConfiguration, _DepName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DepLevel {
                get {
                    if ((aliasName == null)) {
                        return _DepLevel;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DepLevel", _DepLevel.EntityConfiguration, _DepLevel.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ParentNum {
                get {
                    if ((aliasName == null)) {
                        return _ParentNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ParentNum", _ParentNum.EntityConfiguration, _ParentNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode", _ERPCode.EntityConfiguration, _ERPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HRCode {
                get {
                    if ((aliasName == null)) {
                        return _HRCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HRCode", _HRCode.EntityConfiguration, _HRCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DisplayId {
                get {
                    if ((aliasName == null)) {
                        return _DisplayId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DisplayId", _DisplayId.EntityConfiguration, _DisplayId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
