//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmcLedgerKeyValueArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmcLedgerKeyValue> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmcLedgerKeyValue\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmcLedgerKeyValue\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"ValueId\" type=\"System.Int32\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"ValueId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"t" +
        "rue\" isNotNull=\"true\" />\r\n    <Property name=\"KeyId\" type=\"System.Int32\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"KeyId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"KeyValue\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"KeyValue\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarcha" +
        "r(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r" +
        "\n</EntityConfiguration>")]
    public partial class QmcLedgerKeyValue : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmcLedgerKeyValueEntityConfiguration;
        
        protected int _ValueId;
        
        protected int _KeyId;
        
        protected string _KeyValue;
        
        protected string _Remark;
        
        protected string _DeleteFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmcLedgerKeyValue left, global::Mesnac.Entity.QmcLedgerKeyValue right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmcLedgerKeyValue left, global::Mesnac.Entity.QmcLedgerKeyValue right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ValueId {
            get {
                return this._ValueId;
            }
            set {
                this.OnPropertyChanged("ValueId", this._ValueId, value);
                this._ValueId = value;
            }
        }
        
        public int KeyId {
            get {
                return this._KeyId;
            }
            set {
                this.OnPropertyChanged("KeyId", this._KeyId, value);
                this._KeyId = value;
            }
        }
        
        public string KeyValue {
            get {
                return this._KeyValue;
            }
            set {
                this.OnPropertyChanged("KeyValue", this._KeyValue, value);
                this._KeyValue = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmcLedgerKeyValue._QmcLedgerKeyValueEntityConfiguration == null)) {
                QmcLedgerKeyValue._QmcLedgerKeyValueEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmcLedgerKeyValue");
            }
            return QmcLedgerKeyValue._QmcLedgerKeyValueEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ValueId,
                    this._KeyId,
                    this._KeyValue,
                    this._Remark,
                    this._DeleteFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ValueId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._KeyId = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._KeyValue = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Remark = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._DeleteFlag = reader.GetString(4);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ValueId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._KeyId = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._KeyValue = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Remark = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._DeleteFlag = ((string)(row[4]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmcLedgerKeyValue).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmcLedgerKeyValue)(obj)).isAttached) 
                        && (this.ValueId == ((global::Mesnac.Entity.QmcLedgerKeyValue)(obj)).ValueId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ValueId = new NBear.Common.PropertyItem("ValueId", "Mesnac.Entity.QmcLedgerKeyValue");
            
            protected NBear.Common.PropertyItem _KeyId = new NBear.Common.PropertyItem("KeyId", "Mesnac.Entity.QmcLedgerKeyValue");
            
            protected NBear.Common.PropertyItem _KeyValue = new NBear.Common.PropertyItem("KeyValue", "Mesnac.Entity.QmcLedgerKeyValue");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.QmcLedgerKeyValue");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmcLedgerKeyValue");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ValueId {
                get {
                    if ((aliasName == null)) {
                        return _ValueId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ValueId", _ValueId.EntityConfiguration, _ValueId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem KeyId {
                get {
                    if ((aliasName == null)) {
                        return _KeyId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("KeyId", _KeyId.EntityConfiguration, _KeyId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem KeyValue {
                get {
                    if ((aliasName == null)) {
                        return _KeyValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("KeyValue", _KeyValue.EntityConfiguration, _KeyValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
