//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasFactoryInfoArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasFactoryInfo> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasFactoryInfo\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"BasFactoryInfo\" batchSize=\"10\"" +
        ">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Nullable`1[System.Int" +
        "32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"ObjID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sql" +
        "Type=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FacTyp" +
        "e\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FacType\" mappingColumnTyp" +
        "e=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"FacName\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FacN" +
        "ame\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"FacSimpleName\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"FacSimpleName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar" +
        "(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FacAddress\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"FacAddress\" mappingColumnType=\"System.String\"" +
        " sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"FacPostCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FacPostCode\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(16)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Corporation\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Corpor" +
        "ation\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"ContactTel\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"ContactTel\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ContactMan\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"ContactMan\" mappingColumnType=\"System.String\" sql" +
        "Type=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"DutyMan\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"DutyMan\" mappingColumnType=\"System" +
        ".String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Email\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Email\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"HRCode\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"HRCode\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"ERPCode\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ERPCode\"" +
        " mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"DisplayId\" type=\"System.Nullable`1[System" +
        ".Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"DisplayId\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"SAPFacCode\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SAPFacCo" +
        "de\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"ERPCode_Bak\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"ERPCode_Bak\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class BasFactoryInfo : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasFactoryInfoEntityConfiguration;
        
        protected global::System.Int32? _ObjID;
        
        protected global::System.Int32? _FacType;
        
        protected string _FacName;
        
        protected string _FacSimpleName;
        
        protected string _FacAddress;
        
        protected string _FacPostCode;
        
        protected string _Corporation;
        
        protected string _ContactTel;
        
        protected string _ContactMan;
        
        protected string _DutyMan;
        
        protected string _Email;
        
        protected string _HRCode;
        
        protected string _ERPCode;
        
        protected global::System.Int32? _DisplayId;
        
        protected string _Remark;
        
        protected string _DeleteFlag;
        
        protected string _SAPFacCode;
        
        protected string _ERPCode_Bak;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasFactoryInfo left, global::Mesnac.Entity.BasFactoryInfo right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasFactoryInfo left, global::Mesnac.Entity.BasFactoryInfo right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public global::System.Int32? ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.Int32? FacType {
            get {
                return this._FacType;
            }
            set {
                this.OnPropertyChanged("FacType", this._FacType, value);
                this._FacType = value;
            }
        }
        
        public string FacName {
            get {
                return this._FacName;
            }
            set {
                this.OnPropertyChanged("FacName", this._FacName, value);
                this._FacName = value;
            }
        }
        
        public string FacSimpleName {
            get {
                return this._FacSimpleName;
            }
            set {
                this.OnPropertyChanged("FacSimpleName", this._FacSimpleName, value);
                this._FacSimpleName = value;
            }
        }
        
        public string FacAddress {
            get {
                return this._FacAddress;
            }
            set {
                this.OnPropertyChanged("FacAddress", this._FacAddress, value);
                this._FacAddress = value;
            }
        }
        
        public string FacPostCode {
            get {
                return this._FacPostCode;
            }
            set {
                this.OnPropertyChanged("FacPostCode", this._FacPostCode, value);
                this._FacPostCode = value;
            }
        }
        
        public string Corporation {
            get {
                return this._Corporation;
            }
            set {
                this.OnPropertyChanged("Corporation", this._Corporation, value);
                this._Corporation = value;
            }
        }
        
        public string ContactTel {
            get {
                return this._ContactTel;
            }
            set {
                this.OnPropertyChanged("ContactTel", this._ContactTel, value);
                this._ContactTel = value;
            }
        }
        
        public string ContactMan {
            get {
                return this._ContactMan;
            }
            set {
                this.OnPropertyChanged("ContactMan", this._ContactMan, value);
                this._ContactMan = value;
            }
        }
        
        public string DutyMan {
            get {
                return this._DutyMan;
            }
            set {
                this.OnPropertyChanged("DutyMan", this._DutyMan, value);
                this._DutyMan = value;
            }
        }
        
        public string Email {
            get {
                return this._Email;
            }
            set {
                this.OnPropertyChanged("Email", this._Email, value);
                this._Email = value;
            }
        }
        
        public string HRCode {
            get {
                return this._HRCode;
            }
            set {
                this.OnPropertyChanged("HRCode", this._HRCode, value);
                this._HRCode = value;
            }
        }
        
        public string ERPCode {
            get {
                return this._ERPCode;
            }
            set {
                this.OnPropertyChanged("ERPCode", this._ERPCode, value);
                this._ERPCode = value;
            }
        }
        
        public global::System.Int32? DisplayId {
            get {
                return this._DisplayId;
            }
            set {
                this.OnPropertyChanged("DisplayId", this._DisplayId, value);
                this._DisplayId = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string SAPFacCode {
            get {
                return this._SAPFacCode;
            }
            set {
                this.OnPropertyChanged("SAPFacCode", this._SAPFacCode, value);
                this._SAPFacCode = value;
            }
        }
        
        public string ERPCode_Bak {
            get {
                return this._ERPCode_Bak;
            }
            set {
                this.OnPropertyChanged("ERPCode_Bak", this._ERPCode_Bak, value);
                this._ERPCode_Bak = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasFactoryInfo._BasFactoryInfoEntityConfiguration == null)) {
                BasFactoryInfo._BasFactoryInfoEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasFactoryInfo");
            }
            return BasFactoryInfo._BasFactoryInfoEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._FacType,
                    this._FacName,
                    this._FacSimpleName,
                    this._FacAddress,
                    this._FacPostCode,
                    this._Corporation,
                    this._ContactTel,
                    this._ContactMan,
                    this._DutyMan,
                    this._Email,
                    this._HRCode,
                    this._ERPCode,
                    this._DisplayId,
                    this._Remark,
                    this._DeleteFlag,
                    this._SAPFacCode,
                    this._ERPCode_Bak};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._FacType = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._FacName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._FacSimpleName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._FacAddress = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._FacPostCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Corporation = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._ContactTel = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ContactMan = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._DutyMan = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Email = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._HRCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._ERPCode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._DisplayId = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Remark = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._DeleteFlag = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._SAPFacCode = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._ERPCode_Bak = reader.GetString(17);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((System.Nullable<int>)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._FacType = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._FacName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._FacSimpleName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._FacAddress = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._FacPostCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Corporation = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._ContactTel = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ContactMan = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._DutyMan = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Email = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._HRCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._ERPCode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._DisplayId = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Remark = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._DeleteFlag = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._SAPFacCode = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._ERPCode_Bak = ((string)(row[17]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasFactoryInfo).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasFactoryInfo)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _FacType = new NBear.Common.PropertyItem("FacType", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _FacName = new NBear.Common.PropertyItem("FacName", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _FacSimpleName = new NBear.Common.PropertyItem("FacSimpleName", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _FacAddress = new NBear.Common.PropertyItem("FacAddress", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _FacPostCode = new NBear.Common.PropertyItem("FacPostCode", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _Corporation = new NBear.Common.PropertyItem("Corporation", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _ContactTel = new NBear.Common.PropertyItem("ContactTel", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _ContactMan = new NBear.Common.PropertyItem("ContactMan", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _DutyMan = new NBear.Common.PropertyItem("DutyMan", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _Email = new NBear.Common.PropertyItem("Email", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _HRCode = new NBear.Common.PropertyItem("HRCode", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _ERPCode = new NBear.Common.PropertyItem("ERPCode", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _DisplayId = new NBear.Common.PropertyItem("DisplayId", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _SAPFacCode = new NBear.Common.PropertyItem("SAPFacCode", "Mesnac.Entity.BasFactoryInfo");
            
            protected NBear.Common.PropertyItem _ERPCode_Bak = new NBear.Common.PropertyItem("ERPCode_Bak", "Mesnac.Entity.BasFactoryInfo");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FacType {
                get {
                    if ((aliasName == null)) {
                        return _FacType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FacType", _FacType.EntityConfiguration, _FacType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FacName {
                get {
                    if ((aliasName == null)) {
                        return _FacName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FacName", _FacName.EntityConfiguration, _FacName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FacSimpleName {
                get {
                    if ((aliasName == null)) {
                        return _FacSimpleName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FacSimpleName", _FacSimpleName.EntityConfiguration, _FacSimpleName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FacAddress {
                get {
                    if ((aliasName == null)) {
                        return _FacAddress;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FacAddress", _FacAddress.EntityConfiguration, _FacAddress.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FacPostCode {
                get {
                    if ((aliasName == null)) {
                        return _FacPostCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FacPostCode", _FacPostCode.EntityConfiguration, _FacPostCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Corporation {
                get {
                    if ((aliasName == null)) {
                        return _Corporation;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Corporation", _Corporation.EntityConfiguration, _Corporation.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ContactTel {
                get {
                    if ((aliasName == null)) {
                        return _ContactTel;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ContactTel", _ContactTel.EntityConfiguration, _ContactTel.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ContactMan {
                get {
                    if ((aliasName == null)) {
                        return _ContactMan;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ContactMan", _ContactMan.EntityConfiguration, _ContactMan.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DutyMan {
                get {
                    if ((aliasName == null)) {
                        return _DutyMan;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DutyMan", _DutyMan.EntityConfiguration, _DutyMan.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Email {
                get {
                    if ((aliasName == null)) {
                        return _Email;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Email", _Email.EntityConfiguration, _Email.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HRCode {
                get {
                    if ((aliasName == null)) {
                        return _HRCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HRCode", _HRCode.EntityConfiguration, _HRCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode", _ERPCode.EntityConfiguration, _ERPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DisplayId {
                get {
                    if ((aliasName == null)) {
                        return _DisplayId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DisplayId", _DisplayId.EntityConfiguration, _DisplayId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPFacCode {
                get {
                    if ((aliasName == null)) {
                        return _SAPFacCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPFacCode", _SAPFacCode.EntityConfiguration, _SAPFacCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode_Bak {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode_Bak;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode_Bak", _ERPCode_Bak.EntityConfiguration, _ERPCode_Bak.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
