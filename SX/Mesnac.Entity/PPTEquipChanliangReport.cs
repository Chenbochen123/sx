//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PPTEquipChanliangReportArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PPTEquipChanliangReport> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PPTEquipChanliangReport\" isReadOnly=\"false\" isAutoPreLoad=\"f" +
        "alse\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PPTEquipChanliangRep" +
        "ort\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"FID\" type=\"System.Int3" +
        "2\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"FID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey" +
        "=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"PlanDate\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"PlanDate\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"Sy" +
        "stem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipCode\" " +
        "mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"UserID\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"UserID\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RubCode\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"RubCode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mat" +
        "erType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"MaterType\" mappingColumnType=\"System." +
        "String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"RubTYPE\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RubTY" +
        "PE\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckSign\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"CheckSign\" mappingColumnType=\"System.String\" sqlType=\"varchar" +
        "(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeType\" " +
        "type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeType\" mappingColumnTy" +
        "pe=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"SetNum\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"SetNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SetWeigh" +
        "t\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SetWeight\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"RealNum\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"RealNum\" mappingColumnType=\"System.Nullable`1[System.I" +
        "nt32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"RealWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RealWeigh" +
        "t\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SelfNOHGNum\" type=\"Sys" +
        "tem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"SelfNOHGNum\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"SelfNHGWeight\" type=\"System.Nullable`1[System.Decimal]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"SelfNHGWeight\" mappingColumnType=\"System.Nullable`1[System.Decim" +
        "al]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"CheckHGNUM\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckHGNU" +
        "M\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckHGWeight\" type=\"System." +
        "Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"CheckHGWeight\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"CheckNHGNum\" type=\"System.Nullable`1[System.Int3" +
        "2]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"CheckNHGNum\" mappingColumnType=\"System.Nullable`1[System.Int32" +
        "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "CheckNHGWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckNHGW" +
        "eight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration" +
        ">")]
    public partial class PPTEquipChanliangReport : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PPTEquipChanliangReportEntityConfiguration;
        
        protected int _FID;
        
        protected string _PlanDate;
        
        protected global::System.Int32? _ShiftID;
        
        protected string _EquipCode;
        
        protected string _UserID;
        
        protected string _MaterCode;
        
        protected string _RubCode;
        
        protected string _MaterType;
        
        protected global::System.Int32? _RubTYPE;
        
        protected string _CheckSign;
        
        protected global::System.Int32? _RecipeType;
        
        protected global::System.Int32? _SetNum;
        
        protected global::System.Decimal? _SetWeight;
        
        protected global::System.Int32? _RealNum;
        
        protected global::System.Decimal? _RealWeight;
        
        protected global::System.Int32? _SelfNOHGNum;
        
        protected global::System.Decimal? _SelfNHGWeight;
        
        protected global::System.Int32? _CheckHGNUM;
        
        protected global::System.Decimal? _CheckHGWeight;
        
        protected global::System.Int32? _CheckNHGNum;
        
        protected global::System.Decimal? _CheckNHGWeight;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PPTEquipChanliangReport left, global::Mesnac.Entity.PPTEquipChanliangReport right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PPTEquipChanliangReport left, global::Mesnac.Entity.PPTEquipChanliangReport right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int FID {
            get {
                return this._FID;
            }
            set {
                this.OnPropertyChanged("FID", this._FID, value);
                this._FID = value;
            }
        }
        
        public string PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public global::System.Int32? ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string UserID {
            get {
                return this._UserID;
            }
            set {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public string RubCode {
            get {
                return this._RubCode;
            }
            set {
                this.OnPropertyChanged("RubCode", this._RubCode, value);
                this._RubCode = value;
            }
        }
        
        public string MaterType {
            get {
                return this._MaterType;
            }
            set {
                this.OnPropertyChanged("MaterType", this._MaterType, value);
                this._MaterType = value;
            }
        }
        
        public global::System.Int32? RubTYPE {
            get {
                return this._RubTYPE;
            }
            set {
                this.OnPropertyChanged("RubTYPE", this._RubTYPE, value);
                this._RubTYPE = value;
            }
        }
        
        public string CheckSign {
            get {
                return this._CheckSign;
            }
            set {
                this.OnPropertyChanged("CheckSign", this._CheckSign, value);
                this._CheckSign = value;
            }
        }
        
        public global::System.Int32? RecipeType {
            get {
                return this._RecipeType;
            }
            set {
                this.OnPropertyChanged("RecipeType", this._RecipeType, value);
                this._RecipeType = value;
            }
        }
        
        public global::System.Int32? SetNum {
            get {
                return this._SetNum;
            }
            set {
                this.OnPropertyChanged("SetNum", this._SetNum, value);
                this._SetNum = value;
            }
        }
        
        public global::System.Decimal? SetWeight {
            get {
                return this._SetWeight;
            }
            set {
                this.OnPropertyChanged("SetWeight", this._SetWeight, value);
                this._SetWeight = value;
            }
        }
        
        public global::System.Int32? RealNum {
            get {
                return this._RealNum;
            }
            set {
                this.OnPropertyChanged("RealNum", this._RealNum, value);
                this._RealNum = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public global::System.Int32? SelfNOHGNum {
            get {
                return this._SelfNOHGNum;
            }
            set {
                this.OnPropertyChanged("SelfNOHGNum", this._SelfNOHGNum, value);
                this._SelfNOHGNum = value;
            }
        }
        
        public global::System.Decimal? SelfNHGWeight {
            get {
                return this._SelfNHGWeight;
            }
            set {
                this.OnPropertyChanged("SelfNHGWeight", this._SelfNHGWeight, value);
                this._SelfNHGWeight = value;
            }
        }
        
        public global::System.Int32? CheckHGNUM {
            get {
                return this._CheckHGNUM;
            }
            set {
                this.OnPropertyChanged("CheckHGNUM", this._CheckHGNUM, value);
                this._CheckHGNUM = value;
            }
        }
        
        public global::System.Decimal? CheckHGWeight {
            get {
                return this._CheckHGWeight;
            }
            set {
                this.OnPropertyChanged("CheckHGWeight", this._CheckHGWeight, value);
                this._CheckHGWeight = value;
            }
        }
        
        public global::System.Int32? CheckNHGNum {
            get {
                return this._CheckNHGNum;
            }
            set {
                this.OnPropertyChanged("CheckNHGNum", this._CheckNHGNum, value);
                this._CheckNHGNum = value;
            }
        }
        
        public global::System.Decimal? CheckNHGWeight {
            get {
                return this._CheckNHGWeight;
            }
            set {
                this.OnPropertyChanged("CheckNHGWeight", this._CheckNHGWeight, value);
                this._CheckNHGWeight = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PPTEquipChanliangReport._PPTEquipChanliangReportEntityConfiguration == null)) {
                PPTEquipChanliangReport._PPTEquipChanliangReportEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PPTEquipChanliangReport");
            }
            return PPTEquipChanliangReport._PPTEquipChanliangReportEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._FID,
                    this._PlanDate,
                    this._ShiftID,
                    this._EquipCode,
                    this._UserID,
                    this._MaterCode,
                    this._RubCode,
                    this._MaterType,
                    this._RubTYPE,
                    this._CheckSign,
                    this._RecipeType,
                    this._SetNum,
                    this._SetWeight,
                    this._RealNum,
                    this._RealWeight,
                    this._SelfNOHGNum,
                    this._SelfNHGWeight,
                    this._CheckHGNUM,
                    this._CheckHGWeight,
                    this._CheckNHGNum,
                    this._CheckNHGWeight};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._FID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PlanDate = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ShiftID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._EquipCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._UserID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._RubCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._MaterType = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._RubTYPE = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._CheckSign = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._RecipeType = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._SetNum = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._SetWeight = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._RealNum = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._RealWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._SelfNOHGNum = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._SelfNHGWeight = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._CheckHGNUM = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._CheckHGWeight = reader.GetDecimal(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._CheckNHGNum = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._CheckNHGWeight = reader.GetDecimal(20);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._FID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PlanDate = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ShiftID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._EquipCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._UserID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._RubCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._MaterType = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._RubTYPE = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._CheckSign = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._RecipeType = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._SetNum = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._SetWeight = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._RealNum = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._SelfNOHGNum = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._SelfNHGWeight = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._CheckHGNUM = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._CheckHGWeight = ((System.Nullable<decimal>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._CheckNHGNum = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._CheckNHGWeight = ((System.Nullable<decimal>)(row[20]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PPTEquipChanliangReport).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PPTEquipChanliangReport)(obj)).isAttached) 
                        && (this.FID == ((global::Mesnac.Entity.PPTEquipChanliangReport)(obj)).FID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _FID = new NBear.Common.PropertyItem("FID", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _UserID = new NBear.Common.PropertyItem("UserID", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _RubCode = new NBear.Common.PropertyItem("RubCode", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _MaterType = new NBear.Common.PropertyItem("MaterType", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _RubTYPE = new NBear.Common.PropertyItem("RubTYPE", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _CheckSign = new NBear.Common.PropertyItem("CheckSign", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _RecipeType = new NBear.Common.PropertyItem("RecipeType", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _SetNum = new NBear.Common.PropertyItem("SetNum", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _SetWeight = new NBear.Common.PropertyItem("SetWeight", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _RealNum = new NBear.Common.PropertyItem("RealNum", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _SelfNOHGNum = new NBear.Common.PropertyItem("SelfNOHGNum", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _SelfNHGWeight = new NBear.Common.PropertyItem("SelfNHGWeight", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _CheckHGNUM = new NBear.Common.PropertyItem("CheckHGNUM", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _CheckHGWeight = new NBear.Common.PropertyItem("CheckHGWeight", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _CheckNHGNum = new NBear.Common.PropertyItem("CheckNHGNum", "Mesnac.Entity.PPTEquipChanliangReport");
            
            protected NBear.Common.PropertyItem _CheckNHGWeight = new NBear.Common.PropertyItem("CheckNHGWeight", "Mesnac.Entity.PPTEquipChanliangReport");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem FID {
                get {
                    if ((aliasName == null)) {
                        return _FID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FID", _FID.EntityConfiguration, _FID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserID {
                get {
                    if ((aliasName == null)) {
                        return _UserID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RubCode {
                get {
                    if ((aliasName == null)) {
                        return _RubCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RubCode", _RubCode.EntityConfiguration, _RubCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterType {
                get {
                    if ((aliasName == null)) {
                        return _MaterType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterType", _MaterType.EntityConfiguration, _MaterType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RubTYPE {
                get {
                    if ((aliasName == null)) {
                        return _RubTYPE;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RubTYPE", _RubTYPE.EntityConfiguration, _RubTYPE.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckSign {
                get {
                    if ((aliasName == null)) {
                        return _CheckSign;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckSign", _CheckSign.EntityConfiguration, _CheckSign.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeType {
                get {
                    if ((aliasName == null)) {
                        return _RecipeType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeType", _RecipeType.EntityConfiguration, _RecipeType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetNum {
                get {
                    if ((aliasName == null)) {
                        return _SetNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetNum", _SetNum.EntityConfiguration, _SetNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetWeight {
                get {
                    if ((aliasName == null)) {
                        return _SetWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetWeight", _SetWeight.EntityConfiguration, _SetWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealNum {
                get {
                    if ((aliasName == null)) {
                        return _RealNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealNum", _RealNum.EntityConfiguration, _RealNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SelfNOHGNum {
                get {
                    if ((aliasName == null)) {
                        return _SelfNOHGNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SelfNOHGNum", _SelfNOHGNum.EntityConfiguration, _SelfNOHGNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SelfNHGWeight {
                get {
                    if ((aliasName == null)) {
                        return _SelfNHGWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SelfNHGWeight", _SelfNHGWeight.EntityConfiguration, _SelfNHGWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckHGNUM {
                get {
                    if ((aliasName == null)) {
                        return _CheckHGNUM;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckHGNUM", _CheckHGNUM.EntityConfiguration, _CheckHGNUM.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckHGWeight {
                get {
                    if ((aliasName == null)) {
                        return _CheckHGWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckHGWeight", _CheckHGWeight.EntityConfiguration, _CheckHGWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckNHGNum {
                get {
                    if ((aliasName == null)) {
                        return _CheckNHGNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckNHGNum", _CheckNHGNum.EntityConfiguration, _CheckNHGNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckNHGWeight {
                get {
                    if ((aliasName == null)) {
                        return _CheckNHGWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckNHGWeight", _CheckNHGWeight.EntityConfiguration, _CheckNHGWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
