//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_MainStandArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_MainStand> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_MainStand\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_MainStand\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"Mp_StandId\" type=\"System.Int32\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Mp_StandId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"Mp_code\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Mp_code\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_code\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Equip_code\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Mp_type\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_type\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Mp_import\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_import\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Mp_period\" type=\"System.Nullable`1[System.Decimal]\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Mp_period\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sq" +
        "lType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"M" +
        "p_date\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_date\" mapping" +
        "ColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_stand\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Mp_stand\" mappingColumnType=\"System.String\" sqlType=\"varchar(200)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"In_date\" type=\"" +
        "System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"In_date\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Worker_barcode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Worker_barcode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mem_note\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Mem_note\" mappingColumnType=\"System.String\" sqlType=\"varc" +
        "har(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Smpdate\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Smpdate\" mappingColumnType=\"System.String\" s" +
        "qlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"SIndate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"SIndate\" mappingColumnType=\"System." +
        "String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"Workshop\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Workshop\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_MainStand : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_MainStandEntityConfiguration;
        
        protected int _Mp_StandId;
        
        protected string _Mp_code;
        
        protected string _Equip_code;
        
        protected string _Mp_type;
        
        protected string _Mp_import;
        
        protected global::System.Decimal? _Mp_period;
        
        protected global::System.DateTime? _Mp_date;
        
        protected string _Mp_stand;
        
        protected global::System.DateTime? _In_date;
        
        protected string _Worker_barcode;
        
        protected string _Mem_note;
        
        protected string _Smpdate;
        
        protected string _SIndate;
        
        protected string _Workshop;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_MainStand left, global::Mesnac.Entity.Eqm_MainStand right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_MainStand left, global::Mesnac.Entity.Eqm_MainStand right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Mp_StandId {
            get {
                return this._Mp_StandId;
            }
            set {
                this.OnPropertyChanged("Mp_StandId", this._Mp_StandId, value);
                this._Mp_StandId = value;
            }
        }
        
        public string Mp_code {
            get {
                return this._Mp_code;
            }
            set {
                this.OnPropertyChanged("Mp_code", this._Mp_code, value);
                this._Mp_code = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public string Mp_type {
            get {
                return this._Mp_type;
            }
            set {
                this.OnPropertyChanged("Mp_type", this._Mp_type, value);
                this._Mp_type = value;
            }
        }
        
        public string Mp_import {
            get {
                return this._Mp_import;
            }
            set {
                this.OnPropertyChanged("Mp_import", this._Mp_import, value);
                this._Mp_import = value;
            }
        }
        
        public global::System.Decimal? Mp_period {
            get {
                return this._Mp_period;
            }
            set {
                this.OnPropertyChanged("Mp_period", this._Mp_period, value);
                this._Mp_period = value;
            }
        }
        
        public global::System.DateTime? Mp_date {
            get {
                return this._Mp_date;
            }
            set {
                this.OnPropertyChanged("Mp_date", this._Mp_date, value);
                this._Mp_date = value;
            }
        }
        
        public string Mp_stand {
            get {
                return this._Mp_stand;
            }
            set {
                this.OnPropertyChanged("Mp_stand", this._Mp_stand, value);
                this._Mp_stand = value;
            }
        }
        
        public global::System.DateTime? In_date {
            get {
                return this._In_date;
            }
            set {
                this.OnPropertyChanged("In_date", this._In_date, value);
                this._In_date = value;
            }
        }
        
        public string Worker_barcode {
            get {
                return this._Worker_barcode;
            }
            set {
                this.OnPropertyChanged("Worker_barcode", this._Worker_barcode, value);
                this._Worker_barcode = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public string Smpdate {
            get {
                return this._Smpdate;
            }
            set {
                this.OnPropertyChanged("Smpdate", this._Smpdate, value);
                this._Smpdate = value;
            }
        }
        
        public string SIndate {
            get {
                return this._SIndate;
            }
            set {
                this.OnPropertyChanged("SIndate", this._SIndate, value);
                this._SIndate = value;
            }
        }
        
        public string Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_MainStand._Eqm_MainStandEntityConfiguration == null)) {
                Eqm_MainStand._Eqm_MainStandEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_MainStand");
            }
            return Eqm_MainStand._Eqm_MainStandEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_StandId,
                    this._Mp_code,
                    this._Equip_code,
                    this._Mp_type,
                    this._Mp_import,
                    this._Mp_period,
                    this._Mp_date,
                    this._Mp_stand,
                    this._In_date,
                    this._Worker_barcode,
                    this._Mem_note,
                    this._Smpdate,
                    this._SIndate,
                    this._Workshop};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_StandId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mp_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mp_type = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mp_import = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mp_period = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mp_date = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Mp_stand = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._In_date = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Worker_barcode = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Mem_note = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Smpdate = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._SIndate = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Workshop = reader.GetString(13);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_StandId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mp_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mp_type = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Mp_import = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mp_period = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Mp_date = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7))) {
                this._Mp_stand = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._In_date = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9))) {
                this._Worker_barcode = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Mem_note = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Smpdate = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._SIndate = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Workshop = ((string)(row[13]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_MainStand).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_MainStand)(obj)).isAttached) 
                        && (this.Mp_StandId == ((global::Mesnac.Entity.Eqm_MainStand)(obj)).Mp_StandId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_StandId = new NBear.Common.PropertyItem("Mp_StandId", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mp_code = new NBear.Common.PropertyItem("Mp_code", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mp_type = new NBear.Common.PropertyItem("Mp_type", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mp_import = new NBear.Common.PropertyItem("Mp_import", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mp_period = new NBear.Common.PropertyItem("Mp_period", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mp_date = new NBear.Common.PropertyItem("Mp_date", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mp_stand = new NBear.Common.PropertyItem("Mp_stand", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _In_date = new NBear.Common.PropertyItem("In_date", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Worker_barcode = new NBear.Common.PropertyItem("Worker_barcode", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Smpdate = new NBear.Common.PropertyItem("Smpdate", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _SIndate = new NBear.Common.PropertyItem("SIndate", "Mesnac.Entity.Eqm_MainStand");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Eqm_MainStand");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_StandId {
                get {
                    if ((aliasName == null)) {
                        return _Mp_StandId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_StandId", _Mp_StandId.EntityConfiguration, _Mp_StandId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_code", _Mp_code.EntityConfiguration, _Mp_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_type {
                get {
                    if ((aliasName == null)) {
                        return _Mp_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_type", _Mp_type.EntityConfiguration, _Mp_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_import {
                get {
                    if ((aliasName == null)) {
                        return _Mp_import;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_import", _Mp_import.EntityConfiguration, _Mp_import.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_period {
                get {
                    if ((aliasName == null)) {
                        return _Mp_period;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_period", _Mp_period.EntityConfiguration, _Mp_period.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_date {
                get {
                    if ((aliasName == null)) {
                        return _Mp_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_date", _Mp_date.EntityConfiguration, _Mp_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_stand {
                get {
                    if ((aliasName == null)) {
                        return _Mp_stand;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_stand", _Mp_stand.EntityConfiguration, _Mp_stand.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_date {
                get {
                    if ((aliasName == null)) {
                        return _In_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_date", _In_date.EntityConfiguration, _In_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Worker_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Worker_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Worker_barcode", _Worker_barcode.EntityConfiguration, _Worker_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Smpdate {
                get {
                    if ((aliasName == null)) {
                        return _Smpdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Smpdate", _Smpdate.EntityConfiguration, _Smpdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SIndate {
                get {
                    if ((aliasName == null)) {
                        return _SIndate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SIndate", _SIndate.EntityConfiguration, _SIndate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
