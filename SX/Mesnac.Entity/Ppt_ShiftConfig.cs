//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_ShiftConfigArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_ShiftConfig> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_ShiftConfig\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_ShiftConfig\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"" +
        "char(18)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Plan_date" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Plan_date\" mappingColumnType=\"System.String" +
        "\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"Equip_code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_c" +
        "ode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"Shift_id\" type=\"System.Nullable`1[System" +
        ".Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Shift_id\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Shift_class\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shift_c" +
        "lass\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_code\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Mater_code\" mappingColumnType=\"" +
        "System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Mater_Name\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater_Name\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Barcode_start\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Barcode_start\" mappingColumnType=\"" +
        "System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Barcode_end\" type=\"System.Nullable`1[System.Int32]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Barcode_end\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"To" +
        "tal_weight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlDefa" +
        "ultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Total_weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sql" +
        "Type=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sh" +
        "elf_num\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultVa" +
        "lue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Shelf_num\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Real_weight\" typ" +
        "e=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Real_w" +
        "eight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Barcode_use\" type=" +
        "\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Barcode_us" +
        "e\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Print_date\" type=\"System.Str" +
        "ing\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Print_date\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Oper_code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' " +
        "\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ope" +
        "r_code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Mem_note\" type=\"System.String\" isInhe" +
        "rited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Mem_note\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(1000)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Stock_Flag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stock_Flag" +
        "\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Check_Flag\" type=\"System.String\" isInherite" +
        "d=\"false\" sqlDefaultValue=\"\'1\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Check_Flag\" mappingColumnType=\"System.String\" sqlType=" +
        "\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Update_" +
        "Flag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Update_Flag\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Used_Num\" type=\"System.Nullable`1[System.Int32]\" " +
        "isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Used_Num\" mappingColumnType=\"System.Nullable" +
        "`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Used_weigh\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Used_weigh\" mappingColumnType=\"System.Nullable`1[System." +
        "Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Used_Flag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"" +
        "\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"U" +
        "sed_Flag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Used_Date\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Used_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Used_ShiftID\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Used_ShiftID\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Used" +
        "_Class\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Used_Class\" mappingColumnType=\"System" +
        ".String\" sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"Used_Equip\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Used_Equip\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"Ascend_Num\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ascend_Nu" +
        "m\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"OrgOrNot\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"OrgOrNot\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OrgBarcode\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"OrgBarcode\" mappingColumnType=\"System.String\" sqlType=\"char(1" +
        "8)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UP_ERP\" type=" +
        "\"System.Nullable`1[System.Boolean]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UP_ERP\" " +
        "mappingColumnType=\"System.Nullable`1[System.Boolean]\" sqlType=\"bit\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DiffTime\" type=\"System.Nullab" +
        "le`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"DiffTime\" mappingColumnType=\"System.Nullable" +
        "`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Mater_Code2\" type=\"System.String\" isInherited=\"false\" sqlDe" +
        "faultValue=\"\'\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Mater_Code2\" mappingColumnType=\"System.String\" sqlType=\"varchar(13)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_id\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Plan_id\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Position\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Position\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Seriallist\" type=\"System.String\" isInherited=\"fals" +
        "e\" sqlDefaultValue=\"\'\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Seriallist\" mappingColumnType=\"System.String\" sqlType=\"varchar" +
        "(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Inserttime" +
        "\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=" +
        "\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Inserttime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType" +
        "=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Prod_" +
        "Date\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"CONVERT([char](1" +
        "9),getdate(),(121))\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Prod_Date\" mappingColumnType=\"System.String\" sqlType=\"char(19)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Used_planid\" type=" +
        "\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'\'\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"Used_planid\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"IsFanlian\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"IsFanlian\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"EdtCD\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EdtCD\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"RecType\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"RecType\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"ChanYongFlag\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sq" +
        "lDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"ChanYongFlag\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
        "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Enti" +
        "tyConfiguration>")]
    public partial class Ppt_ShiftConfig : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_ShiftConfigEntityConfiguration;
        
        protected string _Barcode;
        
        protected string _Plan_date;
        
        protected string _Equip_code;
        
        protected global::System.Int16? _Shift_id;
        
        protected global::System.Int16? _Shift_class;
        
        protected string _Mater_code;
        
        protected string _Mater_Name;
        
        protected global::System.Int32? _Barcode_start;
        
        protected global::System.Int32? _Barcode_end;
        
        protected global::System.Decimal? _Total_weight;
        
        protected global::System.Int32? _Shelf_num;
        
        protected global::System.Decimal? _Real_weight;
        
        protected global::System.Int32? _Barcode_use;
        
        protected string _Print_date;
        
        protected string _Oper_code;
        
        protected string _Mem_note;
        
        protected string _Stock_Flag;
        
        protected string _Check_Flag;
        
        protected string _Update_Flag;
        
        protected global::System.Int32? _Used_Num;
        
        protected global::System.Decimal? _Used_weigh;
        
        protected string _Used_Flag;
        
        protected string _Used_Date;
        
        protected string _Used_ShiftID;
        
        protected string _Used_Class;
        
        protected string _Used_Equip;
        
        protected string _Ascend_Num;
        
        protected string _OrgOrNot;
        
        protected string _OrgBarcode;
        
        protected global::System.Boolean? _UP_ERP;
        
        protected global::System.Decimal? _DiffTime;
        
        protected string _Mater_Code2;
        
        protected string _Plan_id;
        
        protected string _Position;
        
        protected string _Seriallist;
        
        protected global::System.DateTime? _Inserttime;
        
        protected string _Prod_Date;
        
        protected string _Used_planid;
        
        protected global::System.Int32? _IsFanlian;
        
        protected global::System.Int32? _EdtCD;
        
        protected global::System.Int32? _RecType;
        
        protected global::System.Int32? _ChanYongFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_ShiftConfig left, global::Mesnac.Entity.Ppt_ShiftConfig right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_ShiftConfig left, global::Mesnac.Entity.Ppt_ShiftConfig right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public string Plan_date {
            get {
                return this._Plan_date;
            }
            set {
                this.OnPropertyChanged("Plan_date", this._Plan_date, value);
                this._Plan_date = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public global::System.Int16? Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public global::System.Int16? Shift_class {
            get {
                return this._Shift_class;
            }
            set {
                this.OnPropertyChanged("Shift_class", this._Shift_class, value);
                this._Shift_class = value;
            }
        }
        
        public string Mater_code {
            get {
                return this._Mater_code;
            }
            set {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }
        
        public string Mater_Name {
            get {
                return this._Mater_Name;
            }
            set {
                this.OnPropertyChanged("Mater_Name", this._Mater_Name, value);
                this._Mater_Name = value;
            }
        }
        
        public global::System.Int32? Barcode_start {
            get {
                return this._Barcode_start;
            }
            set {
                this.OnPropertyChanged("Barcode_start", this._Barcode_start, value);
                this._Barcode_start = value;
            }
        }
        
        public global::System.Int32? Barcode_end {
            get {
                return this._Barcode_end;
            }
            set {
                this.OnPropertyChanged("Barcode_end", this._Barcode_end, value);
                this._Barcode_end = value;
            }
        }
        
        public global::System.Decimal? Total_weight {
            get {
                return this._Total_weight;
            }
            set {
                this.OnPropertyChanged("Total_weight", this._Total_weight, value);
                this._Total_weight = value;
            }
        }
        
        public global::System.Int32? Shelf_num {
            get {
                return this._Shelf_num;
            }
            set {
                this.OnPropertyChanged("Shelf_num", this._Shelf_num, value);
                this._Shelf_num = value;
            }
        }
        
        public global::System.Decimal? Real_weight {
            get {
                return this._Real_weight;
            }
            set {
                this.OnPropertyChanged("Real_weight", this._Real_weight, value);
                this._Real_weight = value;
            }
        }
        
        public global::System.Int32? Barcode_use {
            get {
                return this._Barcode_use;
            }
            set {
                this.OnPropertyChanged("Barcode_use", this._Barcode_use, value);
                this._Barcode_use = value;
            }
        }
        
        public string Print_date {
            get {
                return this._Print_date;
            }
            set {
                this.OnPropertyChanged("Print_date", this._Print_date, value);
                this._Print_date = value;
            }
        }
        
        public string Oper_code {
            get {
                return this._Oper_code;
            }
            set {
                this.OnPropertyChanged("Oper_code", this._Oper_code, value);
                this._Oper_code = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public string Stock_Flag {
            get {
                return this._Stock_Flag;
            }
            set {
                this.OnPropertyChanged("Stock_Flag", this._Stock_Flag, value);
                this._Stock_Flag = value;
            }
        }
        
        public string Check_Flag {
            get {
                return this._Check_Flag;
            }
            set {
                this.OnPropertyChanged("Check_Flag", this._Check_Flag, value);
                this._Check_Flag = value;
            }
        }
        
        public string Update_Flag {
            get {
                return this._Update_Flag;
            }
            set {
                this.OnPropertyChanged("Update_Flag", this._Update_Flag, value);
                this._Update_Flag = value;
            }
        }
        
        public global::System.Int32? Used_Num {
            get {
                return this._Used_Num;
            }
            set {
                this.OnPropertyChanged("Used_Num", this._Used_Num, value);
                this._Used_Num = value;
            }
        }
        
        public global::System.Decimal? Used_weigh {
            get {
                return this._Used_weigh;
            }
            set {
                this.OnPropertyChanged("Used_weigh", this._Used_weigh, value);
                this._Used_weigh = value;
            }
        }
        
        public string Used_Flag {
            get {
                return this._Used_Flag;
            }
            set {
                this.OnPropertyChanged("Used_Flag", this._Used_Flag, value);
                this._Used_Flag = value;
            }
        }
        
        public string Used_Date {
            get {
                return this._Used_Date;
            }
            set {
                this.OnPropertyChanged("Used_Date", this._Used_Date, value);
                this._Used_Date = value;
            }
        }
        
        public string Used_ShiftID {
            get {
                return this._Used_ShiftID;
            }
            set {
                this.OnPropertyChanged("Used_ShiftID", this._Used_ShiftID, value);
                this._Used_ShiftID = value;
            }
        }
        
        public string Used_Class {
            get {
                return this._Used_Class;
            }
            set {
                this.OnPropertyChanged("Used_Class", this._Used_Class, value);
                this._Used_Class = value;
            }
        }
        
        public string Used_Equip {
            get {
                return this._Used_Equip;
            }
            set {
                this.OnPropertyChanged("Used_Equip", this._Used_Equip, value);
                this._Used_Equip = value;
            }
        }
        
        public string Ascend_Num {
            get {
                return this._Ascend_Num;
            }
            set {
                this.OnPropertyChanged("Ascend_Num", this._Ascend_Num, value);
                this._Ascend_Num = value;
            }
        }
        
        public string OrgOrNot {
            get {
                return this._OrgOrNot;
            }
            set {
                this.OnPropertyChanged("OrgOrNot", this._OrgOrNot, value);
                this._OrgOrNot = value;
            }
        }
        
        public string OrgBarcode {
            get {
                return this._OrgBarcode;
            }
            set {
                this.OnPropertyChanged("OrgBarcode", this._OrgBarcode, value);
                this._OrgBarcode = value;
            }
        }
        
        public global::System.Boolean? UP_ERP {
            get {
                return this._UP_ERP;
            }
            set {
                this.OnPropertyChanged("UP_ERP", this._UP_ERP, value);
                this._UP_ERP = value;
            }
        }
        
        public global::System.Decimal? DiffTime {
            get {
                return this._DiffTime;
            }
            set {
                this.OnPropertyChanged("DiffTime", this._DiffTime, value);
                this._DiffTime = value;
            }
        }
        
        public string Mater_Code2 {
            get {
                return this._Mater_Code2;
            }
            set {
                this.OnPropertyChanged("Mater_Code2", this._Mater_Code2, value);
                this._Mater_Code2 = value;
            }
        }
        
        public string Plan_id {
            get {
                return this._Plan_id;
            }
            set {
                this.OnPropertyChanged("Plan_id", this._Plan_id, value);
                this._Plan_id = value;
            }
        }
        
        public string Position {
            get {
                return this._Position;
            }
            set {
                this.OnPropertyChanged("Position", this._Position, value);
                this._Position = value;
            }
        }
        
        public string Seriallist {
            get {
                return this._Seriallist;
            }
            set {
                this.OnPropertyChanged("Seriallist", this._Seriallist, value);
                this._Seriallist = value;
            }
        }
        
        public global::System.DateTime? Inserttime {
            get {
                return this._Inserttime;
            }
            set {
                this.OnPropertyChanged("Inserttime", this._Inserttime, value);
                this._Inserttime = value;
            }
        }
        
        public string Prod_Date {
            get {
                return this._Prod_Date;
            }
            set {
                this.OnPropertyChanged("Prod_Date", this._Prod_Date, value);
                this._Prod_Date = value;
            }
        }
        
        public string Used_planid {
            get {
                return this._Used_planid;
            }
            set {
                this.OnPropertyChanged("Used_planid", this._Used_planid, value);
                this._Used_planid = value;
            }
        }
        
        public global::System.Int32? IsFanlian {
            get {
                return this._IsFanlian;
            }
            set {
                this.OnPropertyChanged("IsFanlian", this._IsFanlian, value);
                this._IsFanlian = value;
            }
        }
        
        public global::System.Int32? EdtCD {
            get {
                return this._EdtCD;
            }
            set {
                this.OnPropertyChanged("EdtCD", this._EdtCD, value);
                this._EdtCD = value;
            }
        }
        
        public global::System.Int32? RecType {
            get {
                return this._RecType;
            }
            set {
                this.OnPropertyChanged("RecType", this._RecType, value);
                this._RecType = value;
            }
        }
        
        public global::System.Int32? ChanYongFlag {
            get {
                return this._ChanYongFlag;
            }
            set {
                this.OnPropertyChanged("ChanYongFlag", this._ChanYongFlag, value);
                this._ChanYongFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_ShiftConfig._Ppt_ShiftConfigEntityConfiguration == null)) {
                Ppt_ShiftConfig._Ppt_ShiftConfigEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_ShiftConfig");
            }
            return Ppt_ShiftConfig._Ppt_ShiftConfigEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._Plan_date,
                    this._Equip_code,
                    this._Shift_id,
                    this._Shift_class,
                    this._Mater_code,
                    this._Mater_Name,
                    this._Barcode_start,
                    this._Barcode_end,
                    this._Total_weight,
                    this._Shelf_num,
                    this._Real_weight,
                    this._Barcode_use,
                    this._Print_date,
                    this._Oper_code,
                    this._Mem_note,
                    this._Stock_Flag,
                    this._Check_Flag,
                    this._Update_Flag,
                    this._Used_Num,
                    this._Used_weigh,
                    this._Used_Flag,
                    this._Used_Date,
                    this._Used_ShiftID,
                    this._Used_Class,
                    this._Used_Equip,
                    this._Ascend_Num,
                    this._OrgOrNot,
                    this._OrgBarcode,
                    this._UP_ERP,
                    this._DiffTime,
                    this._Mater_Code2,
                    this._Plan_id,
                    this._Position,
                    this._Seriallist,
                    this._Inserttime,
                    this._Prod_Date,
                    this._Used_planid,
                    this._IsFanlian,
                    this._EdtCD,
                    this._RecType,
                    this._ChanYongFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Plan_date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Shift_id = reader.GetInt16(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Shift_class = reader.GetInt16(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mater_code = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mater_Name = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Barcode_start = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Barcode_end = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Total_weight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Shelf_num = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Real_weight = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Barcode_use = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Print_date = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Oper_code = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Mem_note = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Stock_Flag = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Check_Flag = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Update_Flag = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Used_Num = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Used_weigh = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Used_Flag = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Used_Date = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Used_ShiftID = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Used_Class = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Used_Equip = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._Ascend_Num = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._OrgOrNot = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._OrgBarcode = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._UP_ERP = reader.GetBoolean(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._DiffTime = reader.GetDecimal(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._Mater_Code2 = reader.GetString(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._Plan_id = reader.GetString(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._Position = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._Seriallist = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._Inserttime = this.GetDateTime(reader, 35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._Prod_Date = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._Used_planid = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._IsFanlian = reader.GetInt32(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._EdtCD = reader.GetInt32(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._RecType = reader.GetInt32(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._ChanYongFlag = reader.GetInt32(41);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Plan_date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Shift_id = ((System.Nullable<short>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Shift_class = ((System.Nullable<short>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mater_code = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Mater_Name = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Barcode_start = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Barcode_end = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Total_weight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Shelf_num = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Real_weight = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Barcode_use = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Print_date = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Oper_code = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Mem_note = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Stock_Flag = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Check_Flag = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Update_Flag = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Used_Num = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Used_weigh = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Used_Flag = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Used_Date = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Used_ShiftID = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Used_Class = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Used_Equip = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._Ascend_Num = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._OrgOrNot = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._OrgBarcode = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._UP_ERP = ((System.Nullable<bool>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._DiffTime = ((System.Nullable<decimal>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._Mater_Code2 = ((string)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._Plan_id = ((string)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._Position = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._Seriallist = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._Inserttime = this.GetDateTime(row, 35);
            }
            if ((false == row.IsNull(36))) {
                this._Prod_Date = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._Used_planid = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._IsFanlian = ((System.Nullable<int>)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._EdtCD = ((System.Nullable<int>)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._RecType = ((System.Nullable<int>)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._ChanYongFlag = ((System.Nullable<int>)(row[41]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_ShiftConfig).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_ShiftConfig)(obj)).isAttached) 
                        && (this.Barcode == ((global::Mesnac.Entity.Ppt_ShiftConfig)(obj)).Barcode));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Plan_date = new NBear.Common.PropertyItem("Plan_date", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Shift_class = new NBear.Common.PropertyItem("Shift_class", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Mater_Name = new NBear.Common.PropertyItem("Mater_Name", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Barcode_start = new NBear.Common.PropertyItem("Barcode_start", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Barcode_end = new NBear.Common.PropertyItem("Barcode_end", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Total_weight = new NBear.Common.PropertyItem("Total_weight", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Shelf_num = new NBear.Common.PropertyItem("Shelf_num", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Real_weight = new NBear.Common.PropertyItem("Real_weight", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Barcode_use = new NBear.Common.PropertyItem("Barcode_use", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Print_date = new NBear.Common.PropertyItem("Print_date", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Oper_code = new NBear.Common.PropertyItem("Oper_code", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Stock_Flag = new NBear.Common.PropertyItem("Stock_Flag", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Check_Flag = new NBear.Common.PropertyItem("Check_Flag", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Update_Flag = new NBear.Common.PropertyItem("Update_Flag", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_Num = new NBear.Common.PropertyItem("Used_Num", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_weigh = new NBear.Common.PropertyItem("Used_weigh", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_Flag = new NBear.Common.PropertyItem("Used_Flag", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_Date = new NBear.Common.PropertyItem("Used_Date", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_ShiftID = new NBear.Common.PropertyItem("Used_ShiftID", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_Class = new NBear.Common.PropertyItem("Used_Class", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_Equip = new NBear.Common.PropertyItem("Used_Equip", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Ascend_Num = new NBear.Common.PropertyItem("Ascend_Num", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _OrgOrNot = new NBear.Common.PropertyItem("OrgOrNot", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _OrgBarcode = new NBear.Common.PropertyItem("OrgBarcode", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _UP_ERP = new NBear.Common.PropertyItem("UP_ERP", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _DiffTime = new NBear.Common.PropertyItem("DiffTime", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Mater_Code2 = new NBear.Common.PropertyItem("Mater_Code2", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Plan_id = new NBear.Common.PropertyItem("Plan_id", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Position = new NBear.Common.PropertyItem("Position", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Seriallist = new NBear.Common.PropertyItem("Seriallist", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Inserttime = new NBear.Common.PropertyItem("Inserttime", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Prod_Date = new NBear.Common.PropertyItem("Prod_Date", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _Used_planid = new NBear.Common.PropertyItem("Used_planid", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _IsFanlian = new NBear.Common.PropertyItem("IsFanlian", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _EdtCD = new NBear.Common.PropertyItem("EdtCD", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _RecType = new NBear.Common.PropertyItem("RecType", "Mesnac.Entity.Ppt_ShiftConfig");
            
            protected NBear.Common.PropertyItem _ChanYongFlag = new NBear.Common.PropertyItem("ChanYongFlag", "Mesnac.Entity.Ppt_ShiftConfig");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_date", _Plan_date.EntityConfiguration, _Plan_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_class", _Shift_class.EntityConfiguration, _Shift_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Name", _Mater_Name.EntityConfiguration, _Mater_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode_start {
                get {
                    if ((aliasName == null)) {
                        return _Barcode_start;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode_start", _Barcode_start.EntityConfiguration, _Barcode_start.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode_end {
                get {
                    if ((aliasName == null)) {
                        return _Barcode_end;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode_end", _Barcode_end.EntityConfiguration, _Barcode_end.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Total_weight {
                get {
                    if ((aliasName == null)) {
                        return _Total_weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Total_weight", _Total_weight.EntityConfiguration, _Total_weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelf_num {
                get {
                    if ((aliasName == null)) {
                        return _Shelf_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelf_num", _Shelf_num.EntityConfiguration, _Shelf_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_weight {
                get {
                    if ((aliasName == null)) {
                        return _Real_weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_weight", _Real_weight.EntityConfiguration, _Real_weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode_use {
                get {
                    if ((aliasName == null)) {
                        return _Barcode_use;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode_use", _Barcode_use.EntityConfiguration, _Barcode_use.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Print_date {
                get {
                    if ((aliasName == null)) {
                        return _Print_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Print_date", _Print_date.EntityConfiguration, _Print_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oper_code {
                get {
                    if ((aliasName == null)) {
                        return _Oper_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oper_code", _Oper_code.EntityConfiguration, _Oper_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Stock_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_Flag", _Stock_Flag.EntityConfiguration, _Stock_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Check_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_Flag", _Check_Flag.EntityConfiguration, _Check_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Update_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Update_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Update_Flag", _Update_Flag.EntityConfiguration, _Update_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Num {
                get {
                    if ((aliasName == null)) {
                        return _Used_Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Num", _Used_Num.EntityConfiguration, _Used_Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_weigh {
                get {
                    if ((aliasName == null)) {
                        return _Used_weigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_weigh", _Used_weigh.EntityConfiguration, _Used_weigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Used_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Flag", _Used_Flag.EntityConfiguration, _Used_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Date {
                get {
                    if ((aliasName == null)) {
                        return _Used_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Date", _Used_Date.EntityConfiguration, _Used_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _Used_ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_ShiftID", _Used_ShiftID.EntityConfiguration, _Used_ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Class {
                get {
                    if ((aliasName == null)) {
                        return _Used_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Class", _Used_Class.EntityConfiguration, _Used_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Equip {
                get {
                    if ((aliasName == null)) {
                        return _Used_Equip;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Equip", _Used_Equip.EntityConfiguration, _Used_Equip.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ascend_Num {
                get {
                    if ((aliasName == null)) {
                        return _Ascend_Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ascend_Num", _Ascend_Num.EntityConfiguration, _Ascend_Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrgOrNot {
                get {
                    if ((aliasName == null)) {
                        return _OrgOrNot;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrgOrNot", _OrgOrNot.EntityConfiguration, _OrgOrNot.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrgBarcode {
                get {
                    if ((aliasName == null)) {
                        return _OrgBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrgBarcode", _OrgBarcode.EntityConfiguration, _OrgBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UP_ERP {
                get {
                    if ((aliasName == null)) {
                        return _UP_ERP;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UP_ERP", _UP_ERP.EntityConfiguration, _UP_ERP.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DiffTime {
                get {
                    if ((aliasName == null)) {
                        return _DiffTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DiffTime", _DiffTime.EntityConfiguration, _DiffTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code2 {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code2", _Mater_Code2.EntityConfiguration, _Mater_Code2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_id {
                get {
                    if ((aliasName == null)) {
                        return _Plan_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_id", _Plan_id.EntityConfiguration, _Plan_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Position {
                get {
                    if ((aliasName == null)) {
                        return _Position;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Position", _Position.EntityConfiguration, _Position.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Seriallist {
                get {
                    if ((aliasName == null)) {
                        return _Seriallist;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Seriallist", _Seriallist.EntityConfiguration, _Seriallist.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Inserttime {
                get {
                    if ((aliasName == null)) {
                        return _Inserttime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Inserttime", _Inserttime.EntityConfiguration, _Inserttime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Prod_Date {
                get {
                    if ((aliasName == null)) {
                        return _Prod_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Prod_Date", _Prod_Date.EntityConfiguration, _Prod_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_planid {
                get {
                    if ((aliasName == null)) {
                        return _Used_planid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_planid", _Used_planid.EntityConfiguration, _Used_planid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsFanlian {
                get {
                    if ((aliasName == null)) {
                        return _IsFanlian;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsFanlian", _IsFanlian.EntityConfiguration, _IsFanlian.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EdtCD {
                get {
                    if ((aliasName == null)) {
                        return _EdtCD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EdtCD", _EdtCD.EntityConfiguration, _EdtCD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecType {
                get {
                    if ((aliasName == null)) {
                        return _RecType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecType", _RecType.EntityConfiguration, _RecType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ChanYongFlag {
                get {
                    if ((aliasName == null)) {
                        return _ChanYongFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ChanYongFlag", _ChanYongFlag.EntityConfiguration, _ChanYongFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
