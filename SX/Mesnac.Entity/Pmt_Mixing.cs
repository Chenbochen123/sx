//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Pmt_MixingArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Pmt_Mixing> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Pmt_Mixing\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"Pmt_Mixing\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"Recipe_Code\" type=\"System.String\" isInherited=\"f" +
        "alse\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Recipe_Code\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(13)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mix_Id\" typ" +
        "e=\"System.Int32\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mix_Id\" mappingColumnType=\"" +
        "System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Proper" +
        "ty name=\"Equip_Code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'" +
        " \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Eq" +
        "uip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"Edt_Code\" type=\"System.Int32\" isInher" +
        "ited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Edt_Code\" mappingColumnType=\"System.Int32\" sqlType=" +
        "\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Cond_Code\" ty" +
        "pe=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Cond_Code\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Mixing_Time\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Mixing_Time\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Mixing_Temp\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fa" +
        "lse\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Mixing_Temp\" mappingColumnType=\"System.Nullable`1[System.De" +
        "cimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Mixing_Energy\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fa" +
        "lse\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Mixing_Energy\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Mixing_Power\" type=\"System.Nullable`1[System.Decimal]\" isInherited" +
        "=\"false\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Mixing_Power\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Mixing_Press\" type=\"System.Nullable`1[System.Decimal]\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Mixing_Press\" mappingColumnType=\"System.Nullable`" +
        "1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Mixing_Speed\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Mixing_Speed\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"Act_Code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"" +
        "\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"A" +
        "ct_Code\" mappingColumnType=\"System.String\" sqlType=\"char(2)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Father_code\" type=\"System.String\" is" +
        "Inherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Father_code\" mappingColumnType=\"System.String\"" +
        " sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Child_code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Child_code\" mappingColumnType=" +
        "\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"Term_code\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Term_code\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(4)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Set_time\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Set_time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_temp" +
        "\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Set_temp\" mappingColumnTy" +
        "pe=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Set_ener\" type=\"System.Nullable`1[System.Decim" +
        "al]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Set_ener\" mappingColumnType=\"System.Nullable`1[System.Decimal" +
        "]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"Set_power\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Set_power\"" +
        " mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_pres\" type=\"System.N" +
        "ullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Set_pres\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Set_rota\" type=\"System.Nullable`1[System.Int32]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Set_rota\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"" +
        "int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Time_diff\" t" +
        "ype=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Time_d" +
        "iff\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Temp_diff\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Temp_diff\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"Ener_diff\" type=\"System.Nullable`1[Syste" +
        "m.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Ener_diff\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"RecipeObjID\" type=\"System.Nullable`1[System.In" +
        "t32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"RecipeObjID\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"ObjID\" mappingColumnType=\"System.Int32" +
        "\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</En" +
        "tityConfiguration>")]
    public partial class Pmt_Mixing : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Pmt_MixingEntityConfiguration;
        
        protected string _Recipe_Code;
        
        protected int _Mix_Id;
        
        protected string _Equip_Code;
        
        protected int _Edt_Code;
        
        protected string _Cond_Code;
        
        protected global::System.Int32? _Mixing_Time;
        
        protected global::System.Decimal? _Mixing_Temp;
        
        protected global::System.Decimal? _Mixing_Energy;
        
        protected global::System.Decimal? _Mixing_Power;
        
        protected global::System.Decimal? _Mixing_Press;
        
        protected global::System.Int32? _Mixing_Speed;
        
        protected string _Act_Code;
        
        protected string _Father_code;
        
        protected string _Child_code;
        
        protected string _Term_code;
        
        protected global::System.Int32? _Set_time;
        
        protected global::System.Int32? _Set_temp;
        
        protected global::System.Decimal? _Set_ener;
        
        protected global::System.Decimal? _Set_power;
        
        protected global::System.Decimal? _Set_pres;
        
        protected global::System.Int32? _Set_rota;
        
        protected global::System.Int32? _Time_diff;
        
        protected global::System.Int32? _Temp_diff;
        
        protected global::System.Decimal? _Ener_diff;
        
        protected global::System.Int32? _RecipeObjID;
        
        protected int _ObjID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Pmt_Mixing left, global::Mesnac.Entity.Pmt_Mixing right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Pmt_Mixing left, global::Mesnac.Entity.Pmt_Mixing right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Recipe_Code {
            get {
                return this._Recipe_Code;
            }
            set {
                this.OnPropertyChanged("Recipe_Code", this._Recipe_Code, value);
                this._Recipe_Code = value;
            }
        }
        
        public int Mix_Id {
            get {
                return this._Mix_Id;
            }
            set {
                this.OnPropertyChanged("Mix_Id", this._Mix_Id, value);
                this._Mix_Id = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public int Edt_Code {
            get {
                return this._Edt_Code;
            }
            set {
                this.OnPropertyChanged("Edt_Code", this._Edt_Code, value);
                this._Edt_Code = value;
            }
        }
        
        public string Cond_Code {
            get {
                return this._Cond_Code;
            }
            set {
                this.OnPropertyChanged("Cond_Code", this._Cond_Code, value);
                this._Cond_Code = value;
            }
        }
        
        public global::System.Int32? Mixing_Time {
            get {
                return this._Mixing_Time;
            }
            set {
                this.OnPropertyChanged("Mixing_Time", this._Mixing_Time, value);
                this._Mixing_Time = value;
            }
        }
        
        public global::System.Decimal? Mixing_Temp {
            get {
                return this._Mixing_Temp;
            }
            set {
                this.OnPropertyChanged("Mixing_Temp", this._Mixing_Temp, value);
                this._Mixing_Temp = value;
            }
        }
        
        public global::System.Decimal? Mixing_Energy {
            get {
                return this._Mixing_Energy;
            }
            set {
                this.OnPropertyChanged("Mixing_Energy", this._Mixing_Energy, value);
                this._Mixing_Energy = value;
            }
        }
        
        public global::System.Decimal? Mixing_Power {
            get {
                return this._Mixing_Power;
            }
            set {
                this.OnPropertyChanged("Mixing_Power", this._Mixing_Power, value);
                this._Mixing_Power = value;
            }
        }
        
        public global::System.Decimal? Mixing_Press {
            get {
                return this._Mixing_Press;
            }
            set {
                this.OnPropertyChanged("Mixing_Press", this._Mixing_Press, value);
                this._Mixing_Press = value;
            }
        }
        
        public global::System.Int32? Mixing_Speed {
            get {
                return this._Mixing_Speed;
            }
            set {
                this.OnPropertyChanged("Mixing_Speed", this._Mixing_Speed, value);
                this._Mixing_Speed = value;
            }
        }
        
        public string Act_Code {
            get {
                return this._Act_Code;
            }
            set {
                this.OnPropertyChanged("Act_Code", this._Act_Code, value);
                this._Act_Code = value;
            }
        }
        
        public string Father_code {
            get {
                return this._Father_code;
            }
            set {
                this.OnPropertyChanged("Father_code", this._Father_code, value);
                this._Father_code = value;
            }
        }
        
        public string Child_code {
            get {
                return this._Child_code;
            }
            set {
                this.OnPropertyChanged("Child_code", this._Child_code, value);
                this._Child_code = value;
            }
        }
        
        public string Term_code {
            get {
                return this._Term_code;
            }
            set {
                this.OnPropertyChanged("Term_code", this._Term_code, value);
                this._Term_code = value;
            }
        }
        
        public global::System.Int32? Set_time {
            get {
                return this._Set_time;
            }
            set {
                this.OnPropertyChanged("Set_time", this._Set_time, value);
                this._Set_time = value;
            }
        }
        
        public global::System.Int32? Set_temp {
            get {
                return this._Set_temp;
            }
            set {
                this.OnPropertyChanged("Set_temp", this._Set_temp, value);
                this._Set_temp = value;
            }
        }
        
        public global::System.Decimal? Set_ener {
            get {
                return this._Set_ener;
            }
            set {
                this.OnPropertyChanged("Set_ener", this._Set_ener, value);
                this._Set_ener = value;
            }
        }
        
        public global::System.Decimal? Set_power {
            get {
                return this._Set_power;
            }
            set {
                this.OnPropertyChanged("Set_power", this._Set_power, value);
                this._Set_power = value;
            }
        }
        
        public global::System.Decimal? Set_pres {
            get {
                return this._Set_pres;
            }
            set {
                this.OnPropertyChanged("Set_pres", this._Set_pres, value);
                this._Set_pres = value;
            }
        }
        
        public global::System.Int32? Set_rota {
            get {
                return this._Set_rota;
            }
            set {
                this.OnPropertyChanged("Set_rota", this._Set_rota, value);
                this._Set_rota = value;
            }
        }
        
        public global::System.Int32? Time_diff {
            get {
                return this._Time_diff;
            }
            set {
                this.OnPropertyChanged("Time_diff", this._Time_diff, value);
                this._Time_diff = value;
            }
        }
        
        public global::System.Int32? Temp_diff {
            get {
                return this._Temp_diff;
            }
            set {
                this.OnPropertyChanged("Temp_diff", this._Temp_diff, value);
                this._Temp_diff = value;
            }
        }
        
        public global::System.Decimal? Ener_diff {
            get {
                return this._Ener_diff;
            }
            set {
                this.OnPropertyChanged("Ener_diff", this._Ener_diff, value);
                this._Ener_diff = value;
            }
        }
        
        public global::System.Int32? RecipeObjID {
            get {
                return this._RecipeObjID;
            }
            set {
                this.OnPropertyChanged("RecipeObjID", this._RecipeObjID, value);
                this._RecipeObjID = value;
            }
        }
        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Pmt_Mixing._Pmt_MixingEntityConfiguration == null)) {
                Pmt_Mixing._Pmt_MixingEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Pmt_Mixing");
            }
            return Pmt_Mixing._Pmt_MixingEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Recipe_Code,
                    this._Mix_Id,
                    this._Equip_Code,
                    this._Edt_Code,
                    this._Cond_Code,
                    this._Mixing_Time,
                    this._Mixing_Temp,
                    this._Mixing_Energy,
                    this._Mixing_Power,
                    this._Mixing_Press,
                    this._Mixing_Speed,
                    this._Act_Code,
                    this._Father_code,
                    this._Child_code,
                    this._Term_code,
                    this._Set_time,
                    this._Set_temp,
                    this._Set_ener,
                    this._Set_power,
                    this._Set_pres,
                    this._Set_rota,
                    this._Time_diff,
                    this._Temp_diff,
                    this._Ener_diff,
                    this._RecipeObjID,
                    this._ObjID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Recipe_Code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mix_Id = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Edt_Code = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Cond_Code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mixing_Time = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mixing_Temp = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Mixing_Energy = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Mixing_Power = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Mixing_Press = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Mixing_Speed = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Act_Code = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Father_code = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Child_code = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Term_code = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Set_time = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Set_temp = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Set_ener = reader.GetDecimal(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Set_power = reader.GetDecimal(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Set_pres = reader.GetDecimal(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Set_rota = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Time_diff = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Temp_diff = reader.GetInt32(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Ener_diff = reader.GetDecimal(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._RecipeObjID = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._ObjID = reader.GetInt32(25);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Recipe_Code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mix_Id = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Edt_Code = ((int)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Cond_Code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mixing_Time = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Mixing_Temp = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Mixing_Energy = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Mixing_Power = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Mixing_Press = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Mixing_Speed = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Act_Code = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Father_code = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Child_code = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Term_code = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Set_time = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Set_temp = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Set_ener = ((System.Nullable<decimal>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Set_power = ((System.Nullable<decimal>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Set_pres = ((System.Nullable<decimal>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Set_rota = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Time_diff = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Temp_diff = ((System.Nullable<int>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Ener_diff = ((System.Nullable<decimal>)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._RecipeObjID = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._ObjID = ((int)(row[25]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Pmt_Mixing).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((((this.isAttached && ((global::Mesnac.Entity.Pmt_Mixing)(obj)).isAttached) 
                        && (this.Recipe_Code == ((global::Mesnac.Entity.Pmt_Mixing)(obj)).Recipe_Code)) 
                        && (this.Mix_Id == ((global::Mesnac.Entity.Pmt_Mixing)(obj)).Mix_Id)) 
                        && (this.Equip_Code == ((global::Mesnac.Entity.Pmt_Mixing)(obj)).Equip_Code)) 
                        && (this.Edt_Code == ((global::Mesnac.Entity.Pmt_Mixing)(obj)).Edt_Code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Recipe_Code = new NBear.Common.PropertyItem("Recipe_Code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mix_Id = new NBear.Common.PropertyItem("Mix_Id", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Edt_Code = new NBear.Common.PropertyItem("Edt_Code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Cond_Code = new NBear.Common.PropertyItem("Cond_Code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mixing_Time = new NBear.Common.PropertyItem("Mixing_Time", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mixing_Temp = new NBear.Common.PropertyItem("Mixing_Temp", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mixing_Energy = new NBear.Common.PropertyItem("Mixing_Energy", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mixing_Power = new NBear.Common.PropertyItem("Mixing_Power", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mixing_Press = new NBear.Common.PropertyItem("Mixing_Press", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Mixing_Speed = new NBear.Common.PropertyItem("Mixing_Speed", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Act_Code = new NBear.Common.PropertyItem("Act_Code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Father_code = new NBear.Common.PropertyItem("Father_code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Child_code = new NBear.Common.PropertyItem("Child_code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Term_code = new NBear.Common.PropertyItem("Term_code", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Set_time = new NBear.Common.PropertyItem("Set_time", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Set_temp = new NBear.Common.PropertyItem("Set_temp", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Set_ener = new NBear.Common.PropertyItem("Set_ener", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Set_power = new NBear.Common.PropertyItem("Set_power", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Set_pres = new NBear.Common.PropertyItem("Set_pres", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Set_rota = new NBear.Common.PropertyItem("Set_rota", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Time_diff = new NBear.Common.PropertyItem("Time_diff", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Temp_diff = new NBear.Common.PropertyItem("Temp_diff", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _Ener_diff = new NBear.Common.PropertyItem("Ener_diff", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _RecipeObjID = new NBear.Common.PropertyItem("RecipeObjID", "Mesnac.Entity.Pmt_Mixing");
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.Pmt_Mixing");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Recipe_Code {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_Code", _Recipe_Code.EntityConfiguration, _Recipe_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mix_Id {
                get {
                    if ((aliasName == null)) {
                        return _Mix_Id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mix_Id", _Mix_Id.EntityConfiguration, _Mix_Id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Edt_Code {
                get {
                    if ((aliasName == null)) {
                        return _Edt_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Edt_Code", _Edt_Code.EntityConfiguration, _Edt_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Cond_Code {
                get {
                    if ((aliasName == null)) {
                        return _Cond_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Cond_Code", _Cond_Code.EntityConfiguration, _Cond_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mixing_Time {
                get {
                    if ((aliasName == null)) {
                        return _Mixing_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mixing_Time", _Mixing_Time.EntityConfiguration, _Mixing_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mixing_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Mixing_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mixing_Temp", _Mixing_Temp.EntityConfiguration, _Mixing_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mixing_Energy {
                get {
                    if ((aliasName == null)) {
                        return _Mixing_Energy;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mixing_Energy", _Mixing_Energy.EntityConfiguration, _Mixing_Energy.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mixing_Power {
                get {
                    if ((aliasName == null)) {
                        return _Mixing_Power;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mixing_Power", _Mixing_Power.EntityConfiguration, _Mixing_Power.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mixing_Press {
                get {
                    if ((aliasName == null)) {
                        return _Mixing_Press;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mixing_Press", _Mixing_Press.EntityConfiguration, _Mixing_Press.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mixing_Speed {
                get {
                    if ((aliasName == null)) {
                        return _Mixing_Speed;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mixing_Speed", _Mixing_Speed.EntityConfiguration, _Mixing_Speed.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Act_Code {
                get {
                    if ((aliasName == null)) {
                        return _Act_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Act_Code", _Act_Code.EntityConfiguration, _Act_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Father_code {
                get {
                    if ((aliasName == null)) {
                        return _Father_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Father_code", _Father_code.EntityConfiguration, _Father_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Child_code {
                get {
                    if ((aliasName == null)) {
                        return _Child_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Child_code", _Child_code.EntityConfiguration, _Child_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Term_code {
                get {
                    if ((aliasName == null)) {
                        return _Term_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Term_code", _Term_code.EntityConfiguration, _Term_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_time {
                get {
                    if ((aliasName == null)) {
                        return _Set_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_time", _Set_time.EntityConfiguration, _Set_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_temp {
                get {
                    if ((aliasName == null)) {
                        return _Set_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_temp", _Set_temp.EntityConfiguration, _Set_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_ener {
                get {
                    if ((aliasName == null)) {
                        return _Set_ener;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_ener", _Set_ener.EntityConfiguration, _Set_ener.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_power {
                get {
                    if ((aliasName == null)) {
                        return _Set_power;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_power", _Set_power.EntityConfiguration, _Set_power.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_pres {
                get {
                    if ((aliasName == null)) {
                        return _Set_pres;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_pres", _Set_pres.EntityConfiguration, _Set_pres.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_rota {
                get {
                    if ((aliasName == null)) {
                        return _Set_rota;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_rota", _Set_rota.EntityConfiguration, _Set_rota.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Time_diff {
                get {
                    if ((aliasName == null)) {
                        return _Time_diff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Time_diff", _Time_diff.EntityConfiguration, _Time_diff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Temp_diff {
                get {
                    if ((aliasName == null)) {
                        return _Temp_diff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Temp_diff", _Temp_diff.EntityConfiguration, _Temp_diff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ener_diff {
                get {
                    if ((aliasName == null)) {
                        return _Ener_diff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ener_diff", _Ener_diff.EntityConfiguration, _Ener_diff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeObjID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeObjID", _RecipeObjID.EntityConfiguration, _RecipeObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
