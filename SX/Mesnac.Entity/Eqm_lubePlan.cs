//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_lubePlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_lubePlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_lubePlan\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_lubePlan\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Lube_planid\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Lube_planid\" mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryK" +
        "ey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Lube_code\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"Lube_code\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LubeName\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"LubeName\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Oi" +
        "l_code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Oil_code\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(3)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Equip_code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' " +
        "\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equ" +
        "ip_code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_class\" type=\"System.String\" is" +
        "Inherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Equip_class\" mappingColumnType=\"System.String\"" +
        " sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Lube_plandate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lube_plandate\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Lube_realdate\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lube_re" +
        "aldate\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Lube_planday\" type=\"System.Nullable`" +
        "1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Lube_planday\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"Lube_realday\" type=\"System.Nullable`1[System.Decimal]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Lube_realday\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" s" +
        "qlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Lube_standid\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Lube_standid\"" +
        " mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_state\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"Plan_state\" mappingColumnType=\"System.String\" sqlType=\"char(1)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_date\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Mp_date\" mappingColumnType=\"System.String\" sqlType=\"" +
        "char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Lube_re" +
        "sult\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Lube_result\" mappingColumnType=\"System." +
        "String\" sqlType=\"varchar(255)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Handle_name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Handle_name\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Mem_note\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"M" +
        "em_note\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_lubePlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_lubePlanEntityConfiguration;
        
        protected string _Lube_planid;
        
        protected string _Lube_code;
        
        protected string _LubeName;
        
        protected string _Oil_code;
        
        protected string _Equip_code;
        
        protected string _Equip_class;
        
        protected string _Lube_plandate;
        
        protected string _Lube_realdate;
        
        protected global::System.Decimal? _Lube_planday;
        
        protected global::System.Decimal? _Lube_realday;
        
        protected global::System.Int32? _Lube_standid;
        
        protected string _Plan_state;
        
        protected string _Mp_date;
        
        protected string _Lube_result;
        
        protected string _Handle_name;
        
        protected string _Mem_note;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_lubePlan left, global::Mesnac.Entity.Eqm_lubePlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_lubePlan left, global::Mesnac.Entity.Eqm_lubePlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Lube_planid {
            get {
                return this._Lube_planid;
            }
            set {
                this.OnPropertyChanged("Lube_planid", this._Lube_planid, value);
                this._Lube_planid = value;
            }
        }
        
        public string Lube_code {
            get {
                return this._Lube_code;
            }
            set {
                this.OnPropertyChanged("Lube_code", this._Lube_code, value);
                this._Lube_code = value;
            }
        }
        
        public string LubeName {
            get {
                return this._LubeName;
            }
            set {
                this.OnPropertyChanged("LubeName", this._LubeName, value);
                this._LubeName = value;
            }
        }
        
        public string Oil_code {
            get {
                return this._Oil_code;
            }
            set {
                this.OnPropertyChanged("Oil_code", this._Oil_code, value);
                this._Oil_code = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public string Equip_class {
            get {
                return this._Equip_class;
            }
            set {
                this.OnPropertyChanged("Equip_class", this._Equip_class, value);
                this._Equip_class = value;
            }
        }
        
        public string Lube_plandate {
            get {
                return this._Lube_plandate;
            }
            set {
                this.OnPropertyChanged("Lube_plandate", this._Lube_plandate, value);
                this._Lube_plandate = value;
            }
        }
        
        public string Lube_realdate {
            get {
                return this._Lube_realdate;
            }
            set {
                this.OnPropertyChanged("Lube_realdate", this._Lube_realdate, value);
                this._Lube_realdate = value;
            }
        }
        
        public global::System.Decimal? Lube_planday {
            get {
                return this._Lube_planday;
            }
            set {
                this.OnPropertyChanged("Lube_planday", this._Lube_planday, value);
                this._Lube_planday = value;
            }
        }
        
        public global::System.Decimal? Lube_realday {
            get {
                return this._Lube_realday;
            }
            set {
                this.OnPropertyChanged("Lube_realday", this._Lube_realday, value);
                this._Lube_realday = value;
            }
        }
        
        public global::System.Int32? Lube_standid {
            get {
                return this._Lube_standid;
            }
            set {
                this.OnPropertyChanged("Lube_standid", this._Lube_standid, value);
                this._Lube_standid = value;
            }
        }
        
        public string Plan_state {
            get {
                return this._Plan_state;
            }
            set {
                this.OnPropertyChanged("Plan_state", this._Plan_state, value);
                this._Plan_state = value;
            }
        }
        
        public string Mp_date {
            get {
                return this._Mp_date;
            }
            set {
                this.OnPropertyChanged("Mp_date", this._Mp_date, value);
                this._Mp_date = value;
            }
        }
        
        public string Lube_result {
            get {
                return this._Lube_result;
            }
            set {
                this.OnPropertyChanged("Lube_result", this._Lube_result, value);
                this._Lube_result = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_lubePlan._Eqm_lubePlanEntityConfiguration == null)) {
                Eqm_lubePlan._Eqm_lubePlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_lubePlan");
            }
            return Eqm_lubePlan._Eqm_lubePlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Lube_planid,
                    this._Lube_code,
                    this._LubeName,
                    this._Oil_code,
                    this._Equip_code,
                    this._Equip_class,
                    this._Lube_plandate,
                    this._Lube_realdate,
                    this._Lube_planday,
                    this._Lube_realday,
                    this._Lube_standid,
                    this._Plan_state,
                    this._Mp_date,
                    this._Lube_result,
                    this._Handle_name,
                    this._Mem_note};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Lube_planid = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Lube_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._LubeName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Oil_code = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Equip_class = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Lube_plandate = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Lube_realdate = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Lube_planday = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Lube_realday = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Lube_standid = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Plan_state = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Mp_date = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Lube_result = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Handle_name = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Mem_note = reader.GetString(15);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Lube_planid = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Lube_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._LubeName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Oil_code = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Equip_class = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Lube_plandate = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Lube_realdate = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Lube_planday = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Lube_realday = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Lube_standid = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Plan_state = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Mp_date = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Lube_result = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Handle_name = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Mem_note = ((string)(row[15]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_lubePlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_lubePlan)(obj)).isAttached) 
                        && (this.Lube_planid == ((global::Mesnac.Entity.Eqm_lubePlan)(obj)).Lube_planid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Lube_planid = new NBear.Common.PropertyItem("Lube_planid", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_code = new NBear.Common.PropertyItem("Lube_code", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _LubeName = new NBear.Common.PropertyItem("LubeName", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Oil_code = new NBear.Common.PropertyItem("Oil_code", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Equip_class = new NBear.Common.PropertyItem("Equip_class", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_plandate = new NBear.Common.PropertyItem("Lube_plandate", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_realdate = new NBear.Common.PropertyItem("Lube_realdate", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_planday = new NBear.Common.PropertyItem("Lube_planday", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_realday = new NBear.Common.PropertyItem("Lube_realday", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_standid = new NBear.Common.PropertyItem("Lube_standid", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Plan_state = new NBear.Common.PropertyItem("Plan_state", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Mp_date = new NBear.Common.PropertyItem("Mp_date", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Lube_result = new NBear.Common.PropertyItem("Lube_result", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Eqm_lubePlan");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.Eqm_lubePlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Lube_planid {
                get {
                    if ((aliasName == null)) {
                        return _Lube_planid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_planid", _Lube_planid.EntityConfiguration, _Lube_planid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_code {
                get {
                    if ((aliasName == null)) {
                        return _Lube_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_code", _Lube_code.EntityConfiguration, _Lube_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LubeName {
                get {
                    if ((aliasName == null)) {
                        return _LubeName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LubeName", _LubeName.EntityConfiguration, _LubeName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oil_code {
                get {
                    if ((aliasName == null)) {
                        return _Oil_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oil_code", _Oil_code.EntityConfiguration, _Oil_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_class {
                get {
                    if ((aliasName == null)) {
                        return _Equip_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_class", _Equip_class.EntityConfiguration, _Equip_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_plandate {
                get {
                    if ((aliasName == null)) {
                        return _Lube_plandate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_plandate", _Lube_plandate.EntityConfiguration, _Lube_plandate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_realdate {
                get {
                    if ((aliasName == null)) {
                        return _Lube_realdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_realdate", _Lube_realdate.EntityConfiguration, _Lube_realdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_planday {
                get {
                    if ((aliasName == null)) {
                        return _Lube_planday;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_planday", _Lube_planday.EntityConfiguration, _Lube_planday.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_realday {
                get {
                    if ((aliasName == null)) {
                        return _Lube_realday;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_realday", _Lube_realday.EntityConfiguration, _Lube_realday.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_standid {
                get {
                    if ((aliasName == null)) {
                        return _Lube_standid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_standid", _Lube_standid.EntityConfiguration, _Lube_standid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_state {
                get {
                    if ((aliasName == null)) {
                        return _Plan_state;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_state", _Plan_state.EntityConfiguration, _Plan_state.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_date {
                get {
                    if ((aliasName == null)) {
                        return _Mp_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_date", _Mp_date.EntityConfiguration, _Mp_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lube_result {
                get {
                    if ((aliasName == null)) {
                        return _Lube_result;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lube_result", _Lube_result.EntityConfiguration, _Lube_result.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
