//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptLotArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptLot> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PptLot\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatchUpdat" +
        "e=\"false\" isRelation=\"false\" mappingName=\"PptLot\" batchSize=\"10\">\r\n  <Properties" +
        ">\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Barcode\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(18)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Plan_Date\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Plan" +
        "_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Mater_Code\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Mater_Code\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_Name\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Mater_Name\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip" +
        "_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Equip_Code\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Serial_Id\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Serial_Id" +
        "\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_Id\" type=\"System.Nullab" +
        "le`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Shift_Id\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Shift_Class\" type=\"System.Nullable`1[System.Int16]\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Shift_Class\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"smal" +
        "lint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Edt_Code\" t" +
        "ype=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"Edt_Code\" mappingColumnType=\"" +
        "System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Plan_Id\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Plan_Id" +
        "\" mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Start_Datetime\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Start_Datetime\" mappingColumnType=\"System.String\" sqlType=\"char(19)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Done_Rtime\" type=\"Sy" +
        "stem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Done_Rtime\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"Done_AllRtime\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Done_AllRtime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" s" +
        "qlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Bwb_" +
        "Time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Bwb_Time\" mappingColum" +
        "nType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Set_Weight\" type=\"System.Nullable`1[System." +
        "Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Set_Weight\" mappingColumnType=\"System.Nullable`1[System.D" +
        "ecimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"Real_Weight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fal" +
        "se\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Rea" +
        "l_Weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Error_Sgn\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Error_Sgn\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shel" +
        "f_Barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Shelf_Barcode\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(18)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Shelf_Update\" type=\"System.Nullable`1[System.Int32]\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Shelf_Update\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Test_Result\" ty" +
        "pe=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Test_Result\" mappingColumnType" +
        "=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Pj_Temp\" type=\"System.Nullable`1[System.Decimal]" +
        "\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Pj_Temp\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sq" +
        "lType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"P" +
        "j_Power\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly" +
        "=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pj_Power\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Pj_Ener\" type=\"System.Nullable`1" +
        "[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Pj_Ener\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Pj_Status\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pj_Status\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Mix_Status\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mix_Stat" +
        "us\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Poly_DisTime\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Poly_DisTime\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"CB_DisTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CB_DisTi" +
        "me\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Oil_DisTime\" type=\"System.N" +
        "ullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Oil_DisTime\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Powder_DisTime\" type=\"System.Nullable`1[System.Int32]\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Powder_DisTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlT" +
        "ype=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Serial_" +
        "BatchId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"" +
        "true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Serial_BatchId\" map" +
        "pingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"CB_Batch\" type=\"System.Nullable`1[" +
        "System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"CB_Batch\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Oil_Batch\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isR" +
        "eadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Oil_Batch\"" +
        " mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Poly_Batch\" type=\"System.Nulla" +
        "ble`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Poly_Batch\" mappingColumnType=\"System.Nullable" +
        "`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Powder_Batch\" type=\"System.Nullable`1[System.Int32]\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Powder_Batch\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Small_Batch\" typ" +
        "e=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Small_Batch\" mappingColumnType=" +
        "\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Used_Flag\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Used" +
        "_Flag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Used_Datetime\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Used_Datetime\" mappingColumnType=\"System.String\" sqlType=\"char(19)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Used_Planid\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Used_Planid\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"char(12)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Wo" +
        "rker_barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Worker_barcode\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"Mem_Note\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mem_Note\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Warning_sgn\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"Warning_sgn\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shelf_num\" type=\"System.Nul" +
        "lable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Shelf_num\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Limit_Time\" type=\"System.Nullable`1[System.DateTime]\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Limit_Time\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"d" +
        "atetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Max_time" +
        "\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"true" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Max_time\" mappingColumn" +
        "Type=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Lot_Energy\" type=\"System.Nullable`1[" +
        "System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Lot_Energy\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"SDS_Time\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SDS_Time\" mappingCol" +
        "umnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"ZJSID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ZJSID\" mappingColum" +
        "nType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"LLSerialID\" type=\"System.Int32\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LLSeria" +
        "lID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Max_Press\" type=\"System.Nullable`1[System.Dec" +
        "imal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Max_Press\" mappingColumnType=\"System.Nullable`1[System.Decim" +
        "al]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Max_Energy\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Max_Ener" +
        "gy\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Max_Power\" type=\"Syst" +
        "em.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Max_Power\" mappingColumnType=\"System" +
        ".Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PptLot : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptLotEntityConfiguration;
        
        protected string _Barcode;
        
        protected string _Plan_Date;
        
        protected string _Mater_Code;
        
        protected string _Mater_Name;
        
        protected string _Equip_Code;
        
        protected global::System.Int32? _Serial_Id;
        
        protected global::System.Int16? _Shift_Id;
        
        protected global::System.Int16? _Shift_Class;
        
        protected global::System.Int32? _Edt_Code;
        
        protected string _Plan_Id;
        
        protected string _Start_Datetime;
        
        protected global::System.Int32? _Done_Rtime;
        
        protected global::System.Int32? _Done_AllRtime;
        
        protected global::System.Int32? _Bwb_Time;
        
        protected global::System.Decimal? _Set_Weight;
        
        protected global::System.Decimal? _Real_Weight;
        
        protected string _Error_Sgn;
        
        protected string _Shelf_Barcode;
        
        protected global::System.Int32? _Shelf_Update;
        
        protected global::System.Int32? _Test_Result;
        
        protected global::System.Decimal? _Pj_Temp;
        
        protected global::System.Decimal? _Pj_Power;
        
        protected global::System.Decimal? _Pj_Ener;
        
        protected string _Pj_Status;
        
        protected string _Mix_Status;
        
        protected global::System.Int32? _Poly_DisTime;
        
        protected global::System.Int32? _CB_DisTime;
        
        protected global::System.Int32? _Oil_DisTime;
        
        protected global::System.Int32? _Powder_DisTime;
        
        protected global::System.Int32? _Serial_BatchId;
        
        protected global::System.Int32? _CB_Batch;
        
        protected global::System.Int32? _Oil_Batch;
        
        protected global::System.Int32? _Poly_Batch;
        
        protected global::System.Int32? _Powder_Batch;
        
        protected global::System.Int32? _Small_Batch;
        
        protected string _Used_Flag;
        
        protected string _Used_Datetime;
        
        protected string _Used_Planid;
        
        protected string _Worker_barcode;
        
        protected string _Mem_Note;
        
        protected string _Warning_sgn;
        
        protected global::System.Int32? _Shelf_num;
        
        protected global::System.DateTime? _Limit_Time;
        
        protected global::System.DateTime? _Max_time;
        
        protected global::System.Decimal? _Lot_Energy;
        
        protected int _SDS_Time;
        
        protected string _ZJSID;
        
        protected int _LLSerialID;
        
        protected global::System.Decimal? _Max_Press;
        
        protected global::System.Decimal? _Max_Energy;
        
        protected global::System.Decimal? _Max_Power;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptLot left, global::Mesnac.Entity.PptLot right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptLot left, global::Mesnac.Entity.PptLot right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public string Plan_Date {
            get {
                return this._Plan_Date;
            }
            set {
                this.OnPropertyChanged("Plan_Date", this._Plan_Date, value);
                this._Plan_Date = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public string Mater_Name {
            get {
                return this._Mater_Name;
            }
            set {
                this.OnPropertyChanged("Mater_Name", this._Mater_Name, value);
                this._Mater_Name = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public global::System.Int32? Serial_Id {
            get {
                return this._Serial_Id;
            }
            set {
                this.OnPropertyChanged("Serial_Id", this._Serial_Id, value);
                this._Serial_Id = value;
            }
        }
        
        public global::System.Int16? Shift_Id {
            get {
                return this._Shift_Id;
            }
            set {
                this.OnPropertyChanged("Shift_Id", this._Shift_Id, value);
                this._Shift_Id = value;
            }
        }
        
        public global::System.Int16? Shift_Class {
            get {
                return this._Shift_Class;
            }
            set {
                this.OnPropertyChanged("Shift_Class", this._Shift_Class, value);
                this._Shift_Class = value;
            }
        }
        
        public global::System.Int32? Edt_Code {
            get {
                return this._Edt_Code;
            }
            set {
                this.OnPropertyChanged("Edt_Code", this._Edt_Code, value);
                this._Edt_Code = value;
            }
        }
        
        public string Plan_Id {
            get {
                return this._Plan_Id;
            }
            set {
                this.OnPropertyChanged("Plan_Id", this._Plan_Id, value);
                this._Plan_Id = value;
            }
        }
        
        public string Start_Datetime {
            get {
                return this._Start_Datetime;
            }
            set {
                this.OnPropertyChanged("Start_Datetime", this._Start_Datetime, value);
                this._Start_Datetime = value;
            }
        }
        
        public global::System.Int32? Done_Rtime {
            get {
                return this._Done_Rtime;
            }
            set {
                this.OnPropertyChanged("Done_Rtime", this._Done_Rtime, value);
                this._Done_Rtime = value;
            }
        }
        
        public global::System.Int32? Done_AllRtime {
            get {
                return this._Done_AllRtime;
            }
            set {
                this.OnPropertyChanged("Done_AllRtime", this._Done_AllRtime, value);
                this._Done_AllRtime = value;
            }
        }
        
        public global::System.Int32? Bwb_Time {
            get {
                return this._Bwb_Time;
            }
            set {
                this.OnPropertyChanged("Bwb_Time", this._Bwb_Time, value);
                this._Bwb_Time = value;
            }
        }
        
        public global::System.Decimal? Set_Weight {
            get {
                return this._Set_Weight;
            }
            set {
                this.OnPropertyChanged("Set_Weight", this._Set_Weight, value);
                this._Set_Weight = value;
            }
        }
        
        public global::System.Decimal? Real_Weight {
            get {
                return this._Real_Weight;
            }
            set {
                this.OnPropertyChanged("Real_Weight", this._Real_Weight, value);
                this._Real_Weight = value;
            }
        }
        
        public string Error_Sgn {
            get {
                return this._Error_Sgn;
            }
            set {
                this.OnPropertyChanged("Error_Sgn", this._Error_Sgn, value);
                this._Error_Sgn = value;
            }
        }
        
        public string Shelf_Barcode {
            get {
                return this._Shelf_Barcode;
            }
            set {
                this.OnPropertyChanged("Shelf_Barcode", this._Shelf_Barcode, value);
                this._Shelf_Barcode = value;
            }
        }
        
        public global::System.Int32? Shelf_Update {
            get {
                return this._Shelf_Update;
            }
            set {
                this.OnPropertyChanged("Shelf_Update", this._Shelf_Update, value);
                this._Shelf_Update = value;
            }
        }
        
        public global::System.Int32? Test_Result {
            get {
                return this._Test_Result;
            }
            set {
                this.OnPropertyChanged("Test_Result", this._Test_Result, value);
                this._Test_Result = value;
            }
        }
        
        public global::System.Decimal? Pj_Temp {
            get {
                return this._Pj_Temp;
            }
            set {
                this.OnPropertyChanged("Pj_Temp", this._Pj_Temp, value);
                this._Pj_Temp = value;
            }
        }
        
        public global::System.Decimal? Pj_Power {
            get {
                return this._Pj_Power;
            }
            set {
                this.OnPropertyChanged("Pj_Power", this._Pj_Power, value);
                this._Pj_Power = value;
            }
        }
        
        public global::System.Decimal? Pj_Ener {
            get {
                return this._Pj_Ener;
            }
            set {
                this.OnPropertyChanged("Pj_Ener", this._Pj_Ener, value);
                this._Pj_Ener = value;
            }
        }
        
        public string Pj_Status {
            get {
                return this._Pj_Status;
            }
            set {
                this.OnPropertyChanged("Pj_Status", this._Pj_Status, value);
                this._Pj_Status = value;
            }
        }
        
        public string Mix_Status {
            get {
                return this._Mix_Status;
            }
            set {
                this.OnPropertyChanged("Mix_Status", this._Mix_Status, value);
                this._Mix_Status = value;
            }
        }
        
        public global::System.Int32? Poly_DisTime {
            get {
                return this._Poly_DisTime;
            }
            set {
                this.OnPropertyChanged("Poly_DisTime", this._Poly_DisTime, value);
                this._Poly_DisTime = value;
            }
        }
        
        public global::System.Int32? CB_DisTime {
            get {
                return this._CB_DisTime;
            }
            set {
                this.OnPropertyChanged("CB_DisTime", this._CB_DisTime, value);
                this._CB_DisTime = value;
            }
        }
        
        public global::System.Int32? Oil_DisTime {
            get {
                return this._Oil_DisTime;
            }
            set {
                this.OnPropertyChanged("Oil_DisTime", this._Oil_DisTime, value);
                this._Oil_DisTime = value;
            }
        }
        
        public global::System.Int32? Powder_DisTime {
            get {
                return this._Powder_DisTime;
            }
            set {
                this.OnPropertyChanged("Powder_DisTime", this._Powder_DisTime, value);
                this._Powder_DisTime = value;
            }
        }
        
        public global::System.Int32? Serial_BatchId {
            get {
                return this._Serial_BatchId;
            }
            set {
                this.OnPropertyChanged("Serial_BatchId", this._Serial_BatchId, value);
                this._Serial_BatchId = value;
            }
        }
        
        public global::System.Int32? CB_Batch {
            get {
                return this._CB_Batch;
            }
            set {
                this.OnPropertyChanged("CB_Batch", this._CB_Batch, value);
                this._CB_Batch = value;
            }
        }
        
        public global::System.Int32? Oil_Batch {
            get {
                return this._Oil_Batch;
            }
            set {
                this.OnPropertyChanged("Oil_Batch", this._Oil_Batch, value);
                this._Oil_Batch = value;
            }
        }
        
        public global::System.Int32? Poly_Batch {
            get {
                return this._Poly_Batch;
            }
            set {
                this.OnPropertyChanged("Poly_Batch", this._Poly_Batch, value);
                this._Poly_Batch = value;
            }
        }
        
        public global::System.Int32? Powder_Batch {
            get {
                return this._Powder_Batch;
            }
            set {
                this.OnPropertyChanged("Powder_Batch", this._Powder_Batch, value);
                this._Powder_Batch = value;
            }
        }
        
        public global::System.Int32? Small_Batch {
            get {
                return this._Small_Batch;
            }
            set {
                this.OnPropertyChanged("Small_Batch", this._Small_Batch, value);
                this._Small_Batch = value;
            }
        }
        
        public string Used_Flag {
            get {
                return this._Used_Flag;
            }
            set {
                this.OnPropertyChanged("Used_Flag", this._Used_Flag, value);
                this._Used_Flag = value;
            }
        }
        
        public string Used_Datetime {
            get {
                return this._Used_Datetime;
            }
            set {
                this.OnPropertyChanged("Used_Datetime", this._Used_Datetime, value);
                this._Used_Datetime = value;
            }
        }
        
        public string Used_Planid {
            get {
                return this._Used_Planid;
            }
            set {
                this.OnPropertyChanged("Used_Planid", this._Used_Planid, value);
                this._Used_Planid = value;
            }
        }
        
        public string Worker_barcode {
            get {
                return this._Worker_barcode;
            }
            set {
                this.OnPropertyChanged("Worker_barcode", this._Worker_barcode, value);
                this._Worker_barcode = value;
            }
        }
        
        public string Mem_Note {
            get {
                return this._Mem_Note;
            }
            set {
                this.OnPropertyChanged("Mem_Note", this._Mem_Note, value);
                this._Mem_Note = value;
            }
        }
        
        public string Warning_sgn {
            get {
                return this._Warning_sgn;
            }
            set {
                this.OnPropertyChanged("Warning_sgn", this._Warning_sgn, value);
                this._Warning_sgn = value;
            }
        }
        
        public global::System.Int32? Shelf_num {
            get {
                return this._Shelf_num;
            }
            set {
                this.OnPropertyChanged("Shelf_num", this._Shelf_num, value);
                this._Shelf_num = value;
            }
        }
        
        public global::System.DateTime? Limit_Time {
            get {
                return this._Limit_Time;
            }
            set {
                this.OnPropertyChanged("Limit_Time", this._Limit_Time, value);
                this._Limit_Time = value;
            }
        }
        
        public global::System.DateTime? Max_time {
            get {
                return this._Max_time;
            }
            set {
                this.OnPropertyChanged("Max_time", this._Max_time, value);
                this._Max_time = value;
            }
        }
        
        public global::System.Decimal? Lot_Energy {
            get {
                return this._Lot_Energy;
            }
            set {
                this.OnPropertyChanged("Lot_Energy", this._Lot_Energy, value);
                this._Lot_Energy = value;
            }
        }
        
        public int SDS_Time {
            get {
                return this._SDS_Time;
            }
            set {
                this.OnPropertyChanged("SDS_Time", this._SDS_Time, value);
                this._SDS_Time = value;
            }
        }
        
        public string ZJSID {
            get {
                return this._ZJSID;
            }
            set {
                this.OnPropertyChanged("ZJSID", this._ZJSID, value);
                this._ZJSID = value;
            }
        }
        
        public int LLSerialID {
            get {
                return this._LLSerialID;
            }
            set {
                this.OnPropertyChanged("LLSerialID", this._LLSerialID, value);
                this._LLSerialID = value;
            }
        }
        
        public global::System.Decimal? Max_Press {
            get {
                return this._Max_Press;
            }
            set {
                this.OnPropertyChanged("Max_Press", this._Max_Press, value);
                this._Max_Press = value;
            }
        }
        
        public global::System.Decimal? Max_Energy {
            get {
                return this._Max_Energy;
            }
            set {
                this.OnPropertyChanged("Max_Energy", this._Max_Energy, value);
                this._Max_Energy = value;
            }
        }
        
        public global::System.Decimal? Max_Power {
            get {
                return this._Max_Power;
            }
            set {
                this.OnPropertyChanged("Max_Power", this._Max_Power, value);
                this._Max_Power = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptLot._PptLotEntityConfiguration == null)) {
                PptLot._PptLotEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptLot");
            }
            return PptLot._PptLotEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._Plan_Date,
                    this._Mater_Code,
                    this._Mater_Name,
                    this._Equip_Code,
                    this._Serial_Id,
                    this._Shift_Id,
                    this._Shift_Class,
                    this._Edt_Code,
                    this._Plan_Id,
                    this._Start_Datetime,
                    this._Done_Rtime,
                    this._Done_AllRtime,
                    this._Bwb_Time,
                    this._Set_Weight,
                    this._Real_Weight,
                    this._Error_Sgn,
                    this._Shelf_Barcode,
                    this._Shelf_Update,
                    this._Test_Result,
                    this._Pj_Temp,
                    this._Pj_Power,
                    this._Pj_Ener,
                    this._Pj_Status,
                    this._Mix_Status,
                    this._Poly_DisTime,
                    this._CB_DisTime,
                    this._Oil_DisTime,
                    this._Powder_DisTime,
                    this._Serial_BatchId,
                    this._CB_Batch,
                    this._Oil_Batch,
                    this._Poly_Batch,
                    this._Powder_Batch,
                    this._Small_Batch,
                    this._Used_Flag,
                    this._Used_Datetime,
                    this._Used_Planid,
                    this._Worker_barcode,
                    this._Mem_Note,
                    this._Warning_sgn,
                    this._Shelf_num,
                    this._Limit_Time,
                    this._Max_time,
                    this._Lot_Energy,
                    this._SDS_Time,
                    this._ZJSID,
                    this._LLSerialID,
                    this._Max_Press,
                    this._Max_Energy,
                    this._Max_Power};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Plan_Date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mater_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mater_Name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_Code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Serial_Id = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Shift_Id = reader.GetInt16(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Shift_Class = reader.GetInt16(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Edt_Code = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Plan_Id = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Start_Datetime = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Done_Rtime = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Done_AllRtime = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Bwb_Time = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Set_Weight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Real_Weight = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Error_Sgn = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Shelf_Barcode = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Shelf_Update = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Test_Result = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Pj_Temp = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Pj_Power = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Pj_Ener = reader.GetDecimal(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Pj_Status = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Mix_Status = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Poly_DisTime = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._CB_DisTime = reader.GetInt32(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._Oil_DisTime = reader.GetInt32(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Powder_DisTime = reader.GetInt32(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._Serial_BatchId = reader.GetInt32(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._CB_Batch = reader.GetInt32(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._Oil_Batch = reader.GetInt32(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._Poly_Batch = reader.GetInt32(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._Powder_Batch = reader.GetInt32(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._Small_Batch = reader.GetInt32(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._Used_Flag = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._Used_Datetime = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._Used_Planid = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._Worker_barcode = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._Mem_Note = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._Warning_sgn = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._Shelf_num = reader.GetInt32(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._Limit_Time = this.GetDateTime(reader, 42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._Max_time = this.GetDateTime(reader, 43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._Lot_Energy = reader.GetDecimal(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._SDS_Time = reader.GetInt32(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._ZJSID = reader.GetString(46);
            }
            if ((false == reader.IsDBNull(47))) {
                this._LLSerialID = reader.GetInt32(47);
            }
            if ((false == reader.IsDBNull(48))) {
                this._Max_Press = reader.GetDecimal(48);
            }
            if ((false == reader.IsDBNull(49))) {
                this._Max_Energy = reader.GetDecimal(49);
            }
            if ((false == reader.IsDBNull(50))) {
                this._Max_Power = reader.GetDecimal(50);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Plan_Date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mater_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mater_Name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_Code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Serial_Id = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Shift_Id = ((System.Nullable<short>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Shift_Class = ((System.Nullable<short>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Edt_Code = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Plan_Id = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Start_Datetime = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Done_Rtime = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Done_AllRtime = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Bwb_Time = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Set_Weight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Real_Weight = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Error_Sgn = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Shelf_Barcode = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Shelf_Update = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Test_Result = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Pj_Temp = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Pj_Power = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Pj_Ener = ((System.Nullable<decimal>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Pj_Status = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Mix_Status = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Poly_DisTime = ((System.Nullable<int>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._CB_DisTime = ((System.Nullable<int>)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._Oil_DisTime = ((System.Nullable<int>)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._Powder_DisTime = ((System.Nullable<int>)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._Serial_BatchId = ((System.Nullable<int>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._CB_Batch = ((System.Nullable<int>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._Oil_Batch = ((System.Nullable<int>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._Poly_Batch = ((System.Nullable<int>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._Powder_Batch = ((System.Nullable<int>)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._Small_Batch = ((System.Nullable<int>)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._Used_Flag = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._Used_Datetime = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._Used_Planid = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._Worker_barcode = ((string)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._Mem_Note = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._Warning_sgn = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._Shelf_num = ((System.Nullable<int>)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._Limit_Time = this.GetDateTime(row, 42);
            }
            if ((false == row.IsNull(43))) {
                this._Max_time = this.GetDateTime(row, 43);
            }
            if ((false == row.IsNull(44))) {
                this._Lot_Energy = ((System.Nullable<decimal>)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._SDS_Time = ((int)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._ZJSID = ((string)(row[46]));
            }
            if ((false == row.IsNull(47))) {
                this._LLSerialID = ((int)(row[47]));
            }
            if ((false == row.IsNull(48))) {
                this._Max_Press = ((System.Nullable<decimal>)(row[48]));
            }
            if ((false == row.IsNull(49))) {
                this._Max_Energy = ((System.Nullable<decimal>)(row[49]));
            }
            if ((false == row.IsNull(50))) {
                this._Max_Power = ((System.Nullable<decimal>)(row[50]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptLot).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptLot)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Plan_Date = new NBear.Common.PropertyItem("Plan_Date", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Mater_Name = new NBear.Common.PropertyItem("Mater_Name", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Serial_Id = new NBear.Common.PropertyItem("Serial_Id", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Shift_Id = new NBear.Common.PropertyItem("Shift_Id", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Shift_Class = new NBear.Common.PropertyItem("Shift_Class", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Edt_Code = new NBear.Common.PropertyItem("Edt_Code", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Plan_Id = new NBear.Common.PropertyItem("Plan_Id", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Start_Datetime = new NBear.Common.PropertyItem("Start_Datetime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Done_Rtime = new NBear.Common.PropertyItem("Done_Rtime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Done_AllRtime = new NBear.Common.PropertyItem("Done_AllRtime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Bwb_Time = new NBear.Common.PropertyItem("Bwb_Time", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Set_Weight = new NBear.Common.PropertyItem("Set_Weight", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Real_Weight = new NBear.Common.PropertyItem("Real_Weight", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Error_Sgn = new NBear.Common.PropertyItem("Error_Sgn", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Shelf_Barcode = new NBear.Common.PropertyItem("Shelf_Barcode", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Shelf_Update = new NBear.Common.PropertyItem("Shelf_Update", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Test_Result = new NBear.Common.PropertyItem("Test_Result", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Pj_Temp = new NBear.Common.PropertyItem("Pj_Temp", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Pj_Power = new NBear.Common.PropertyItem("Pj_Power", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Pj_Ener = new NBear.Common.PropertyItem("Pj_Ener", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Pj_Status = new NBear.Common.PropertyItem("Pj_Status", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Mix_Status = new NBear.Common.PropertyItem("Mix_Status", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Poly_DisTime = new NBear.Common.PropertyItem("Poly_DisTime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _CB_DisTime = new NBear.Common.PropertyItem("CB_DisTime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Oil_DisTime = new NBear.Common.PropertyItem("Oil_DisTime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Powder_DisTime = new NBear.Common.PropertyItem("Powder_DisTime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Serial_BatchId = new NBear.Common.PropertyItem("Serial_BatchId", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _CB_Batch = new NBear.Common.PropertyItem("CB_Batch", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Oil_Batch = new NBear.Common.PropertyItem("Oil_Batch", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Poly_Batch = new NBear.Common.PropertyItem("Poly_Batch", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Powder_Batch = new NBear.Common.PropertyItem("Powder_Batch", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Small_Batch = new NBear.Common.PropertyItem("Small_Batch", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Used_Flag = new NBear.Common.PropertyItem("Used_Flag", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Used_Datetime = new NBear.Common.PropertyItem("Used_Datetime", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Used_Planid = new NBear.Common.PropertyItem("Used_Planid", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Worker_barcode = new NBear.Common.PropertyItem("Worker_barcode", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Mem_Note = new NBear.Common.PropertyItem("Mem_Note", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Warning_sgn = new NBear.Common.PropertyItem("Warning_sgn", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Shelf_num = new NBear.Common.PropertyItem("Shelf_num", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Limit_Time = new NBear.Common.PropertyItem("Limit_Time", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Max_time = new NBear.Common.PropertyItem("Max_time", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Lot_Energy = new NBear.Common.PropertyItem("Lot_Energy", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _SDS_Time = new NBear.Common.PropertyItem("SDS_Time", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _ZJSID = new NBear.Common.PropertyItem("ZJSID", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _LLSerialID = new NBear.Common.PropertyItem("LLSerialID", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Max_Press = new NBear.Common.PropertyItem("Max_Press", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Max_Energy = new NBear.Common.PropertyItem("Max_Energy", "Mesnac.Entity.PptLot");
            
            protected NBear.Common.PropertyItem _Max_Power = new NBear.Common.PropertyItem("Max_Power", "Mesnac.Entity.PptLot");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_Date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Date", _Plan_Date.EntityConfiguration, _Plan_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Name", _Mater_Name.EntityConfiguration, _Mater_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Serial_Id {
                get {
                    if ((aliasName == null)) {
                        return _Serial_Id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_Id", _Serial_Id.EntityConfiguration, _Serial_Id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Id", _Shift_Id.EntityConfiguration, _Shift_Id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Class", _Shift_Class.EntityConfiguration, _Shift_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Edt_Code {
                get {
                    if ((aliasName == null)) {
                        return _Edt_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Edt_Code", _Edt_Code.EntityConfiguration, _Edt_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_Id {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Id", _Plan_Id.EntityConfiguration, _Plan_Id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Start_Datetime {
                get {
                    if ((aliasName == null)) {
                        return _Start_Datetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Start_Datetime", _Start_Datetime.EntityConfiguration, _Start_Datetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Done_Rtime {
                get {
                    if ((aliasName == null)) {
                        return _Done_Rtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Done_Rtime", _Done_Rtime.EntityConfiguration, _Done_Rtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Done_AllRtime {
                get {
                    if ((aliasName == null)) {
                        return _Done_AllRtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Done_AllRtime", _Done_AllRtime.EntityConfiguration, _Done_AllRtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Bwb_Time {
                get {
                    if ((aliasName == null)) {
                        return _Bwb_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Bwb_Time", _Bwb_Time.EntityConfiguration, _Bwb_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Set_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_Weight", _Set_Weight.EntityConfiguration, _Set_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Real_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_Weight", _Real_Weight.EntityConfiguration, _Real_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Error_Sgn {
                get {
                    if ((aliasName == null)) {
                        return _Error_Sgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Error_Sgn", _Error_Sgn.EntityConfiguration, _Error_Sgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelf_Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Shelf_Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelf_Barcode", _Shelf_Barcode.EntityConfiguration, _Shelf_Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelf_Update {
                get {
                    if ((aliasName == null)) {
                        return _Shelf_Update;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelf_Update", _Shelf_Update.EntityConfiguration, _Shelf_Update.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Test_Result {
                get {
                    if ((aliasName == null)) {
                        return _Test_Result;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Test_Result", _Test_Result.EntityConfiguration, _Test_Result.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pj_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Pj_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pj_Temp", _Pj_Temp.EntityConfiguration, _Pj_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pj_Power {
                get {
                    if ((aliasName == null)) {
                        return _Pj_Power;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pj_Power", _Pj_Power.EntityConfiguration, _Pj_Power.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pj_Ener {
                get {
                    if ((aliasName == null)) {
                        return _Pj_Ener;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pj_Ener", _Pj_Ener.EntityConfiguration, _Pj_Ener.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pj_Status {
                get {
                    if ((aliasName == null)) {
                        return _Pj_Status;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pj_Status", _Pj_Status.EntityConfiguration, _Pj_Status.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mix_Status {
                get {
                    if ((aliasName == null)) {
                        return _Mix_Status;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mix_Status", _Mix_Status.EntityConfiguration, _Mix_Status.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Poly_DisTime {
                get {
                    if ((aliasName == null)) {
                        return _Poly_DisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Poly_DisTime", _Poly_DisTime.EntityConfiguration, _Poly_DisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CB_DisTime {
                get {
                    if ((aliasName == null)) {
                        return _CB_DisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CB_DisTime", _CB_DisTime.EntityConfiguration, _CB_DisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oil_DisTime {
                get {
                    if ((aliasName == null)) {
                        return _Oil_DisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oil_DisTime", _Oil_DisTime.EntityConfiguration, _Oil_DisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Powder_DisTime {
                get {
                    if ((aliasName == null)) {
                        return _Powder_DisTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Powder_DisTime", _Powder_DisTime.EntityConfiguration, _Powder_DisTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Serial_BatchId {
                get {
                    if ((aliasName == null)) {
                        return _Serial_BatchId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_BatchId", _Serial_BatchId.EntityConfiguration, _Serial_BatchId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CB_Batch {
                get {
                    if ((aliasName == null)) {
                        return _CB_Batch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CB_Batch", _CB_Batch.EntityConfiguration, _CB_Batch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oil_Batch {
                get {
                    if ((aliasName == null)) {
                        return _Oil_Batch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oil_Batch", _Oil_Batch.EntityConfiguration, _Oil_Batch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Poly_Batch {
                get {
                    if ((aliasName == null)) {
                        return _Poly_Batch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Poly_Batch", _Poly_Batch.EntityConfiguration, _Poly_Batch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Powder_Batch {
                get {
                    if ((aliasName == null)) {
                        return _Powder_Batch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Powder_Batch", _Powder_Batch.EntityConfiguration, _Powder_Batch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Small_Batch {
                get {
                    if ((aliasName == null)) {
                        return _Small_Batch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Small_Batch", _Small_Batch.EntityConfiguration, _Small_Batch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Used_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Flag", _Used_Flag.EntityConfiguration, _Used_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Datetime {
                get {
                    if ((aliasName == null)) {
                        return _Used_Datetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Datetime", _Used_Datetime.EntityConfiguration, _Used_Datetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Planid {
                get {
                    if ((aliasName == null)) {
                        return _Used_Planid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Planid", _Used_Planid.EntityConfiguration, _Used_Planid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Worker_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Worker_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Worker_barcode", _Worker_barcode.EntityConfiguration, _Worker_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_Note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_Note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_Note", _Mem_Note.EntityConfiguration, _Mem_Note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Warning_sgn {
                get {
                    if ((aliasName == null)) {
                        return _Warning_sgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Warning_sgn", _Warning_sgn.EntityConfiguration, _Warning_sgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelf_num {
                get {
                    if ((aliasName == null)) {
                        return _Shelf_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelf_num", _Shelf_num.EntityConfiguration, _Shelf_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Limit_Time {
                get {
                    if ((aliasName == null)) {
                        return _Limit_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Limit_Time", _Limit_Time.EntityConfiguration, _Limit_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_time {
                get {
                    if ((aliasName == null)) {
                        return _Max_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_time", _Max_time.EntityConfiguration, _Max_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Lot_Energy {
                get {
                    if ((aliasName == null)) {
                        return _Lot_Energy;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Lot_Energy", _Lot_Energy.EntityConfiguration, _Lot_Energy.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SDS_Time {
                get {
                    if ((aliasName == null)) {
                        return _SDS_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SDS_Time", _SDS_Time.EntityConfiguration, _SDS_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ZJSID {
                get {
                    if ((aliasName == null)) {
                        return _ZJSID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ZJSID", _ZJSID.EntityConfiguration, _ZJSID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLSerialID {
                get {
                    if ((aliasName == null)) {
                        return _LLSerialID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLSerialID", _LLSerialID.EntityConfiguration, _LLSerialID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_Press {
                get {
                    if ((aliasName == null)) {
                        return _Max_Press;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_Press", _Max_Press.EntityConfiguration, _Max_Press.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_Energy {
                get {
                    if ((aliasName == null)) {
                        return _Max_Energy;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_Energy", _Max_Energy.EntityConfiguration, _Max_Energy.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_Power {
                get {
                    if ((aliasName == null)) {
                        return _Max_Power;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_Power", _Max_Power.EntityConfiguration, _Max_Power.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
