//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_downcodeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_downcode> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_downcode\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_downcode\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Mp_code\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Mp_code\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"true\"" +
        " isNotNull=\"true\" />\r\n    <Property name=\"Mp_ikindcode\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Mp_ikindcode\" mappingColumnType=\"System.String\" sqlType=\"char(3)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_name\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Mp_name\" mappingColumnType=\"System.String\" sqlType=\"varc" +
        "har(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mem_note" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Mem_note\" mappingColumnType=\"System.String\"" +
        " sqlType=\"ntext\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Mp_deal\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Mp_deal\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"ntext\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties" +
        ">\r\n</EntityConfiguration>")]
    public partial class Eqm_downcode : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_downcodeEntityConfiguration;
        
        protected string _Mp_code;
        
        protected string _Mp_ikindcode;
        
        protected string _Mp_name;
        
        protected string _Mem_note;
        
        protected string _Mp_deal;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_downcode left, global::Mesnac.Entity.Eqm_downcode right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_downcode left, global::Mesnac.Entity.Eqm_downcode right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mp_code {
            get {
                return this._Mp_code;
            }
            set {
                this.OnPropertyChanged("Mp_code", this._Mp_code, value);
                this._Mp_code = value;
            }
        }
        
        public string Mp_ikindcode {
            get {
                return this._Mp_ikindcode;
            }
            set {
                this.OnPropertyChanged("Mp_ikindcode", this._Mp_ikindcode, value);
                this._Mp_ikindcode = value;
            }
        }
        
        public string Mp_name {
            get {
                return this._Mp_name;
            }
            set {
                this.OnPropertyChanged("Mp_name", this._Mp_name, value);
                this._Mp_name = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public string Mp_deal {
            get {
                return this._Mp_deal;
            }
            set {
                this.OnPropertyChanged("Mp_deal", this._Mp_deal, value);
                this._Mp_deal = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_downcode._Eqm_downcodeEntityConfiguration == null)) {
                Eqm_downcode._Eqm_downcodeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_downcode");
            }
            return Eqm_downcode._Eqm_downcodeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_code,
                    this._Mp_ikindcode,
                    this._Mp_name,
                    this._Mem_note,
                    this._Mp_deal};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mp_ikindcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mp_name = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mem_note = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mp_deal = reader.GetString(4);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mp_ikindcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mp_name = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mem_note = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Mp_deal = ((string)(row[4]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_downcode).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_downcode)(obj)).isAttached) 
                        && (this.Mp_code == ((global::Mesnac.Entity.Eqm_downcode)(obj)).Mp_code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_code = new NBear.Common.PropertyItem("Mp_code", "Mesnac.Entity.Eqm_downcode");
            
            protected NBear.Common.PropertyItem _Mp_ikindcode = new NBear.Common.PropertyItem("Mp_ikindcode", "Mesnac.Entity.Eqm_downcode");
            
            protected NBear.Common.PropertyItem _Mp_name = new NBear.Common.PropertyItem("Mp_name", "Mesnac.Entity.Eqm_downcode");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.Eqm_downcode");
            
            protected NBear.Common.PropertyItem _Mp_deal = new NBear.Common.PropertyItem("Mp_deal", "Mesnac.Entity.Eqm_downcode");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_code", _Mp_code.EntityConfiguration, _Mp_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_ikindcode {
                get {
                    if ((aliasName == null)) {
                        return _Mp_ikindcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_ikindcode", _Mp_ikindcode.EntityConfiguration, _Mp_ikindcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_name {
                get {
                    if ((aliasName == null)) {
                        return _Mp_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_name", _Mp_name.EntityConfiguration, _Mp_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_deal {
                get {
                    if ((aliasName == null)) {
                        return _Mp_deal;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_deal", _Mp_deal.EntityConfiguration, _Mp_deal.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
