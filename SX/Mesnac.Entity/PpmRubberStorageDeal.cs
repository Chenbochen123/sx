//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PpmRubberStorageDealArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmRubberStorageDeal>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PpmRubberStorageDeal\" isReadOnly=\"false\" isAutoPreLoad=\"fals" +
        "e\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmRubberStorageDeal\" b" +
        "atchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"DealId\" type=\"System.Int64\" " +
        "isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"DealId\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimary" +
        "Key=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StorageID\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar" +
        "(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StoragePlac" +
        "eID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"BarCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarCode\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"ShelfBarcode\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Sh" +
        "elfBarcode\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"BarcodeStart\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"BarcodeStart\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"BarcodeEnd\" type=\"System.Nullable`1[System.Int32]\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"BarcodeEnd\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"i" +
        "nt\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShelfNum\" typ" +
        "e=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"ShelfNum\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"PlanDate\" type=\"System.Nullable`1[System.DateTime]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"PlanDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" " +
        "sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"ShiftID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System" +
        ".String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"ShiftClassID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftClassID\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterC" +
        "ode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ValidDate\" type=\"S" +
        "ystem.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"ValidDate\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"ProductWeight\" type=\"System.Nullable`1[Syst" +
        "em.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"ProductWeight\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"ConsumeWeight\" type=\"System.Nullable`1[System.Decimal]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"ConsumeWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlT" +
        "ype=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Rea" +
        "lWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RealWeight\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LLBarCode\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"LLBarCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(3" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealNum\" type" +
        "=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"RealNum\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"OperPerson\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OperPe" +
        "rson\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"DealDate\" type=\"System.DateTime\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"DealDate\" mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DealPerson\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"DealPerson\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "DealWay\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"DealWay\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"DealValidDate\" type=\"System.Nullable`1[System.DateTime]\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"DealValidDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlTyp" +
        "e=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Deal" +
        "StorageID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"DealStorageID\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"DealStoragePlaceID\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Deal" +
        "StoragePlaceID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DealRemark\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"DealRemark\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IsCh" +
        "ecked\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"IsChecked\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"IsFeedBack\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsFeedBack\" mappingColum" +
        "nType=\"System.String\" sqlType=\"nchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"CheckDate\" type=\"System.Nullable`1[System.DateTime]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"CheckDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sql" +
        "Type=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"C" +
        "heckPerson\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"CheckPerson\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"DealShift\" type=\"System.Nullable`1[System.Int32]\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"DealShift\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigurati" +
        "on>")]
    public partial class PpmRubberStorageDeal : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PpmRubberStorageDealEntityConfiguration;

        protected long _DealId;

        protected string _StorageID;

        protected string _StoragePlaceID;

        protected string _BarCode;

        protected string _ShelfBarcode;

        protected global::System.Int32? _BarcodeStart;

        protected global::System.Int32? _BarcodeEnd;

        protected global::System.Int32? _ShelfNum;

        protected global::System.DateTime? _PlanDate;

        protected string _ShiftID;

        protected string _ShiftClassID;

        protected string _MaterCode;

        protected string _EquipCode;

        protected global::System.DateTime? _ValidDate;

        protected global::System.Decimal? _ProductWeight;

        protected global::System.Decimal? _ConsumeWeight;

        protected global::System.Decimal? _RealWeight;

        protected string _LLBarCode;

        protected global::System.Int32? _RealNum;

        protected string _OperPerson;

        protected global::System.DateTime _DealDate;

        protected string _DealPerson;

        protected string _DealWay;

        protected global::System.DateTime? _DealValidDate;

        protected string _DealStorageID;

        protected string _DealStoragePlaceID;

        protected string _DealRemark;

        protected string _IsChecked;

        protected string _IsFeedBack;

        protected global::System.DateTime? _CheckDate;

        protected string _CheckPerson;

        protected global::System.Int32? _DealShift;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PpmRubberStorageDeal left, global::Mesnac.Entity.PpmRubberStorageDeal right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PpmRubberStorageDeal left, global::Mesnac.Entity.PpmRubberStorageDeal right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public long DealId
        {
            get
            {
                return this._DealId;
            }
            set
            {
                this.OnPropertyChanged("DealId", this._DealId, value);
                this._DealId = value;
            }
        }

        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public string StoragePlaceID
        {
            get
            {
                return this._StoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }

        public string BarCode
        {
            get
            {
                return this._BarCode;
            }
            set
            {
                this.OnPropertyChanged("BarCode", this._BarCode, value);
                this._BarCode = value;
            }
        }

        public string ShelfBarcode
        {
            get
            {
                return this._ShelfBarcode;
            }
            set
            {
                this.OnPropertyChanged("ShelfBarcode", this._ShelfBarcode, value);
                this._ShelfBarcode = value;
            }
        }

        public global::System.Int32? BarcodeStart
        {
            get
            {
                return this._BarcodeStart;
            }
            set
            {
                this.OnPropertyChanged("BarcodeStart", this._BarcodeStart, value);
                this._BarcodeStart = value;
            }
        }

        public global::System.Int32? BarcodeEnd
        {
            get
            {
                return this._BarcodeEnd;
            }
            set
            {
                this.OnPropertyChanged("BarcodeEnd", this._BarcodeEnd, value);
                this._BarcodeEnd = value;
            }
        }

        public global::System.Int32? ShelfNum
        {
            get
            {
                return this._ShelfNum;
            }
            set
            {
                this.OnPropertyChanged("ShelfNum", this._ShelfNum, value);
                this._ShelfNum = value;
            }
        }

        public global::System.DateTime? PlanDate
        {
            get
            {
                return this._PlanDate;
            }
            set
            {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }

        public string ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public string ShiftClassID
        {
            get
            {
                return this._ShiftClassID;
            }
            set
            {
                this.OnPropertyChanged("ShiftClassID", this._ShiftClassID, value);
                this._ShiftClassID = value;
            }
        }

        public string MaterCode
        {
            get
            {
                return this._MaterCode;
            }
            set
            {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public global::System.DateTime? ValidDate
        {
            get
            {
                return this._ValidDate;
            }
            set
            {
                this.OnPropertyChanged("ValidDate", this._ValidDate, value);
                this._ValidDate = value;
            }
        }

        public global::System.Decimal? ProductWeight
        {
            get
            {
                return this._ProductWeight;
            }
            set
            {
                this.OnPropertyChanged("ProductWeight", this._ProductWeight, value);
                this._ProductWeight = value;
            }
        }

        public global::System.Decimal? ConsumeWeight
        {
            get
            {
                return this._ConsumeWeight;
            }
            set
            {
                this.OnPropertyChanged("ConsumeWeight", this._ConsumeWeight, value);
                this._ConsumeWeight = value;
            }
        }

        public global::System.Decimal? RealWeight
        {
            get
            {
                return this._RealWeight;
            }
            set
            {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }

        public string LLBarCode
        {
            get
            {
                return this._LLBarCode;
            }
            set
            {
                this.OnPropertyChanged("LLBarCode", this._LLBarCode, value);
                this._LLBarCode = value;
            }
        }

        public global::System.Int32? RealNum
        {
            get
            {
                return this._RealNum;
            }
            set
            {
                this.OnPropertyChanged("RealNum", this._RealNum, value);
                this._RealNum = value;
            }
        }

        public string OperPerson
        {
            get
            {
                return this._OperPerson;
            }
            set
            {
                this.OnPropertyChanged("OperPerson", this._OperPerson, value);
                this._OperPerson = value;
            }
        }

        public global::System.DateTime DealDate
        {
            get
            {
                return this._DealDate;
            }
            set
            {
                this.OnPropertyChanged("DealDate", this._DealDate, value);
                this._DealDate = value;
            }
        }

        public string DealPerson
        {
            get
            {
                return this._DealPerson;
            }
            set
            {
                this.OnPropertyChanged("DealPerson", this._DealPerson, value);
                this._DealPerson = value;
            }
        }

        public string DealWay
        {
            get
            {
                return this._DealWay;
            }
            set
            {
                this.OnPropertyChanged("DealWay", this._DealWay, value);
                this._DealWay = value;
            }
        }

        public global::System.DateTime? DealValidDate
        {
            get
            {
                return this._DealValidDate;
            }
            set
            {
                this.OnPropertyChanged("DealValidDate", this._DealValidDate, value);
                this._DealValidDate = value;
            }
        }

        public string DealStorageID
        {
            get
            {
                return this._DealStorageID;
            }
            set
            {
                this.OnPropertyChanged("DealStorageID", this._DealStorageID, value);
                this._DealStorageID = value;
            }
        }

        public string DealStoragePlaceID
        {
            get
            {
                return this._DealStoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("DealStoragePlaceID", this._DealStoragePlaceID, value);
                this._DealStoragePlaceID = value;
            }
        }

        public string DealRemark
        {
            get
            {
                return this._DealRemark;
            }
            set
            {
                this.OnPropertyChanged("DealRemark", this._DealRemark, value);
                this._DealRemark = value;
            }
        }

        public string IsChecked
        {
            get
            {
                return this._IsChecked;
            }
            set
            {
                this.OnPropertyChanged("IsChecked", this._IsChecked, value);
                this._IsChecked = value;
            }
        }

        public string IsFeedBack
        {
            get
            {
                return this._IsFeedBack;
            }
            set
            {
                this.OnPropertyChanged("IsFeedBack", this._IsFeedBack, value);
                this._IsFeedBack = value;
            }
        }

        public global::System.DateTime? CheckDate
        {
            get
            {
                return this._CheckDate;
            }
            set
            {
                this.OnPropertyChanged("CheckDate", this._CheckDate, value);
                this._CheckDate = value;
            }
        }

        public string CheckPerson
        {
            get
            {
                return this._CheckPerson;
            }
            set
            {
                this.OnPropertyChanged("CheckPerson", this._CheckPerson, value);
                this._CheckPerson = value;
            }
        }

        public global::System.Int32? DealShift
        {
            get
            {
                return this._DealShift;
            }
            set
            {
                this.OnPropertyChanged("DealShift", this._DealShift, value);
                this._DealShift = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PpmRubberStorageDeal._PpmRubberStorageDealEntityConfiguration == null))
            {
                PpmRubberStorageDeal._PpmRubberStorageDealEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmRubberStorageDeal");
            }
            return PpmRubberStorageDeal._PpmRubberStorageDealEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._DealId,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._BarCode,
                    this._ShelfBarcode,
                    this._BarcodeStart,
                    this._BarcodeEnd,
                    this._ShelfNum,
                    this._PlanDate,
                    this._ShiftID,
                    this._ShiftClassID,
                    this._MaterCode,
                    this._EquipCode,
                    this._ValidDate,
                    this._ProductWeight,
                    this._ConsumeWeight,
                    this._RealWeight,
                    this._LLBarCode,
                    this._RealNum,
                    this._OperPerson,
                    this._DealDate,
                    this._DealPerson,
                    this._DealWay,
                    this._DealValidDate,
                    this._DealStorageID,
                    this._DealStoragePlaceID,
                    this._DealRemark,
                    this._IsChecked,
                    this._IsFeedBack,
                    this._CheckDate,
                    this._CheckPerson,
                    this._DealShift};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._DealId = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._StorageID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._StoragePlaceID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._BarCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._ShelfBarcode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._BarcodeStart = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._BarcodeEnd = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ShelfNum = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._PlanDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ShiftID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._ShiftClassID = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._MaterCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._EquipCode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._ValidDate = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._ProductWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._ConsumeWeight = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._RealWeight = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._LLBarCode = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._RealNum = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._OperPerson = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._DealDate = this.GetDateTime(reader, 20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._DealPerson = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._DealWay = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._DealValidDate = this.GetDateTime(reader, 23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._DealStorageID = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._DealStoragePlaceID = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._DealRemark = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._IsChecked = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28)))
            {
                this._IsFeedBack = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29)))
            {
                this._CheckDate = this.GetDateTime(reader, 29);
            }
            if ((false == reader.IsDBNull(30)))
            {
                this._CheckPerson = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31)))
            {
                this._DealShift = reader.GetInt32(31);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._DealId = ((long)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._StorageID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._StoragePlaceID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._BarCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._ShelfBarcode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._BarcodeStart = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._BarcodeEnd = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ShelfNum = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._PlanDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._ShiftID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._ShiftClassID = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._MaterCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._EquipCode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._ValidDate = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._ProductWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._ConsumeWeight = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._RealWeight = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._LLBarCode = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._RealNum = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._OperPerson = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._DealDate = this.GetDateTime(row, 20);
            }
            if ((false == row.IsNull(21)))
            {
                this._DealPerson = ((string)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._DealWay = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._DealValidDate = this.GetDateTime(row, 23);
            }
            if ((false == row.IsNull(24)))
            {
                this._DealStorageID = ((string)(row[24]));
            }
            if ((false == row.IsNull(25)))
            {
                this._DealStoragePlaceID = ((string)(row[25]));
            }
            if ((false == row.IsNull(26)))
            {
                this._DealRemark = ((string)(row[26]));
            }
            if ((false == row.IsNull(27)))
            {
                this._IsChecked = ((string)(row[27]));
            }
            if ((false == row.IsNull(28)))
            {
                this._IsFeedBack = ((string)(row[28]));
            }
            if ((false == row.IsNull(29)))
            {
                this._CheckDate = this.GetDateTime(row, 29);
            }
            if ((false == row.IsNull(30)))
            {
                this._CheckPerson = ((string)(row[30]));
            }
            if ((false == row.IsNull(31)))
            {
                this._DealShift = ((System.Nullable<int>)(row[31]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmRubberStorageDeal).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PpmRubberStorageDeal)(obj)).isAttached)
                        && (this.DealId == ((global::Mesnac.Entity.PpmRubberStorageDeal)(obj)).DealId));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _DealId = new NBear.Common.PropertyItem("DealId", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _BarCode = new NBear.Common.PropertyItem("BarCode", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ShelfBarcode = new NBear.Common.PropertyItem("ShelfBarcode", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _BarcodeStart = new NBear.Common.PropertyItem("BarcodeStart", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _BarcodeEnd = new NBear.Common.PropertyItem("BarcodeEnd", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ShelfNum = new NBear.Common.PropertyItem("ShelfNum", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ShiftClassID = new NBear.Common.PropertyItem("ShiftClassID", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ValidDate = new NBear.Common.PropertyItem("ValidDate", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ProductWeight = new NBear.Common.PropertyItem("ProductWeight", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _ConsumeWeight = new NBear.Common.PropertyItem("ConsumeWeight", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _LLBarCode = new NBear.Common.PropertyItem("LLBarCode", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _RealNum = new NBear.Common.PropertyItem("RealNum", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _OperPerson = new NBear.Common.PropertyItem("OperPerson", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealDate = new NBear.Common.PropertyItem("DealDate", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealPerson = new NBear.Common.PropertyItem("DealPerson", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealWay = new NBear.Common.PropertyItem("DealWay", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealValidDate = new NBear.Common.PropertyItem("DealValidDate", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealStorageID = new NBear.Common.PropertyItem("DealStorageID", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealStoragePlaceID = new NBear.Common.PropertyItem("DealStoragePlaceID", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealRemark = new NBear.Common.PropertyItem("DealRemark", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _IsChecked = new NBear.Common.PropertyItem("IsChecked", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _IsFeedBack = new NBear.Common.PropertyItem("IsFeedBack", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _CheckDate = new NBear.Common.PropertyItem("CheckDate", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _CheckPerson = new NBear.Common.PropertyItem("CheckPerson", "Mesnac.Entity.PpmRubberStorageDeal");

            protected NBear.Common.PropertyItem _DealShift = new NBear.Common.PropertyItem("DealShift", "Mesnac.Entity.PpmRubberStorageDeal");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem DealId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealId", _DealId.EntityConfiguration, _DealId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarCode", _BarCode.EntityConfiguration, _BarCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShelfBarcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShelfBarcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShelfBarcode", _ShelfBarcode.EntityConfiguration, _ShelfBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarcodeStart
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarcodeStart;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarcodeStart", _BarcodeStart.EntityConfiguration, _BarcodeStart.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BarcodeEnd
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BarcodeEnd;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BarcodeEnd", _BarcodeEnd.EntityConfiguration, _BarcodeEnd.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShelfNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShelfNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShelfNum", _ShelfNum.EntityConfiguration, _ShelfNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem PlanDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _PlanDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftClassID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftClassID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftClassID", _ShiftClassID.EntityConfiguration, _ShiftClassID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ValidDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ValidDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ValidDate", _ValidDate.EntityConfiguration, _ValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ProductWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ProductWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ProductWeight", _ProductWeight.EntityConfiguration, _ProductWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ConsumeWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ConsumeWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ConsumeWeight", _ConsumeWeight.EntityConfiguration, _ConsumeWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LLBarCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LLBarCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LLBarCode", _LLBarCode.EntityConfiguration, _LLBarCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealNum", _RealNum.EntityConfiguration, _RealNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OperPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OperPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OperPerson", _OperPerson.EntityConfiguration, _OperPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealDate", _DealDate.EntityConfiguration, _DealDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealPerson", _DealPerson.EntityConfiguration, _DealPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealWay
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealWay;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealWay", _DealWay.EntityConfiguration, _DealWay.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealValidDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealValidDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealValidDate", _DealValidDate.EntityConfiguration, _DealValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealStorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealStorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealStorageID", _DealStorageID.EntityConfiguration, _DealStorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealStoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealStoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealStoragePlaceID", _DealStoragePlaceID.EntityConfiguration, _DealStoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealRemark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealRemark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealRemark", _DealRemark.EntityConfiguration, _DealRemark.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IsChecked
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsChecked;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IsChecked", _IsChecked.EntityConfiguration, _IsChecked.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IsFeedBack
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsFeedBack;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IsFeedBack", _IsFeedBack.EntityConfiguration, _IsFeedBack.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CheckDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CheckDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CheckDate", _CheckDate.EntityConfiguration, _CheckDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CheckPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CheckPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CheckPerson", _CheckPerson.EntityConfiguration, _CheckPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealShift
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealShift;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealShift", _DealShift.EntityConfiguration, _DealShift.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
