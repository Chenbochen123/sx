//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_SparePlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_SparePlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_SparePlan\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_SparePlan\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"DepCode\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"DepCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=" +
        "\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Plan_Date\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"Plan_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" is" +
        "PrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"SerialID\" type=\"Syste" +
        "m.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"SerialID\" mappingColumnType=\"System.Int16\" sqlType=\"small" +
        "int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"BJ_code\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"BJ_code\" mappingColumnType=\"System.String\" sqlType" +
        "=\"varchar(20)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"BJ_n" +
        "ame\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"BJ_name\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Stock_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stock_Code\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"BJ_specType\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BJ_sp" +
        "ecType\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(255)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"BJ_tpcode\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"BJ_tpcode\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_Num\" type=" +
        "\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Plan_Num\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Unit_Code\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Unit_Code\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Stock_Num\" type=\"System.Nulla" +
        "ble`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Stock_Num\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Month_Num\" type=\"System.Nullable`1[System.Decimal]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Month_Num\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlTyp" +
        "e=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_" +
        "price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Plan_price\" mappin" +
        "gColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"Total_Price\" type=\"System.Nulla" +
        "ble`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Total_Price\" mappingColumnType=\"System.Null" +
        "able`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"Stock_Worker\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stock_" +
        "Worker\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_State\" type=\"System.String\"" +
        " isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Plan_State\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"Stock_Date\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"Stock_Date\" mappingColumnType" +
        "=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Prefer_date\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Prefer_date\" " +
        "mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"RealIn_Date\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"RealIn_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(254)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigurat" +
        "ion>")]
    public partial class Eqm_SparePlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_SparePlanEntityConfiguration;
        
        protected string _DepCode;
        
        protected string _Plan_Date;
        
        protected short _SerialID;
        
        protected string _BJ_code;
        
        protected string _BJ_name;
        
        protected string _Stock_Code;
        
        protected string _BJ_specType;
        
        protected string _BJ_tpcode;
        
        protected global::System.Decimal? _Plan_Num;
        
        protected string _Unit_Code;
        
        protected global::System.Decimal? _Stock_Num;
        
        protected global::System.Decimal? _Month_Num;
        
        protected global::System.Decimal? _Plan_price;
        
        protected global::System.Decimal? _Total_Price;
        
        protected string _Stock_Worker;
        
        protected string _Plan_State;
        
        protected string _Stock_Date;
        
        protected string _Prefer_date;
        
        protected string _RealIn_Date;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_SparePlan left, global::Mesnac.Entity.Eqm_SparePlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_SparePlan left, global::Mesnac.Entity.Eqm_SparePlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string DepCode {
            get {
                return this._DepCode;
            }
            set {
                this.OnPropertyChanged("DepCode", this._DepCode, value);
                this._DepCode = value;
            }
        }
        
        public string Plan_Date {
            get {
                return this._Plan_Date;
            }
            set {
                this.OnPropertyChanged("Plan_Date", this._Plan_Date, value);
                this._Plan_Date = value;
            }
        }
        
        public short SerialID {
            get {
                return this._SerialID;
            }
            set {
                this.OnPropertyChanged("SerialID", this._SerialID, value);
                this._SerialID = value;
            }
        }
        
        public string BJ_code {
            get {
                return this._BJ_code;
            }
            set {
                this.OnPropertyChanged("BJ_code", this._BJ_code, value);
                this._BJ_code = value;
            }
        }
        
        public string BJ_name {
            get {
                return this._BJ_name;
            }
            set {
                this.OnPropertyChanged("BJ_name", this._BJ_name, value);
                this._BJ_name = value;
            }
        }
        
        public string Stock_Code {
            get {
                return this._Stock_Code;
            }
            set {
                this.OnPropertyChanged("Stock_Code", this._Stock_Code, value);
                this._Stock_Code = value;
            }
        }
        
        public string BJ_specType {
            get {
                return this._BJ_specType;
            }
            set {
                this.OnPropertyChanged("BJ_specType", this._BJ_specType, value);
                this._BJ_specType = value;
            }
        }
        
        public string BJ_tpcode {
            get {
                return this._BJ_tpcode;
            }
            set {
                this.OnPropertyChanged("BJ_tpcode", this._BJ_tpcode, value);
                this._BJ_tpcode = value;
            }
        }
        
        public global::System.Decimal? Plan_Num {
            get {
                return this._Plan_Num;
            }
            set {
                this.OnPropertyChanged("Plan_Num", this._Plan_Num, value);
                this._Plan_Num = value;
            }
        }
        
        public string Unit_Code {
            get {
                return this._Unit_Code;
            }
            set {
                this.OnPropertyChanged("Unit_Code", this._Unit_Code, value);
                this._Unit_Code = value;
            }
        }
        
        public global::System.Decimal? Stock_Num {
            get {
                return this._Stock_Num;
            }
            set {
                this.OnPropertyChanged("Stock_Num", this._Stock_Num, value);
                this._Stock_Num = value;
            }
        }
        
        public global::System.Decimal? Month_Num {
            get {
                return this._Month_Num;
            }
            set {
                this.OnPropertyChanged("Month_Num", this._Month_Num, value);
                this._Month_Num = value;
            }
        }
        
        public global::System.Decimal? Plan_price {
            get {
                return this._Plan_price;
            }
            set {
                this.OnPropertyChanged("Plan_price", this._Plan_price, value);
                this._Plan_price = value;
            }
        }
        
        public global::System.Decimal? Total_Price {
            get {
                return this._Total_Price;
            }
            set {
                this.OnPropertyChanged("Total_Price", this._Total_Price, value);
                this._Total_Price = value;
            }
        }
        
        public string Stock_Worker {
            get {
                return this._Stock_Worker;
            }
            set {
                this.OnPropertyChanged("Stock_Worker", this._Stock_Worker, value);
                this._Stock_Worker = value;
            }
        }
        
        public string Plan_State {
            get {
                return this._Plan_State;
            }
            set {
                this.OnPropertyChanged("Plan_State", this._Plan_State, value);
                this._Plan_State = value;
            }
        }
        
        public string Stock_Date {
            get {
                return this._Stock_Date;
            }
            set {
                this.OnPropertyChanged("Stock_Date", this._Stock_Date, value);
                this._Stock_Date = value;
            }
        }
        
        public string Prefer_date {
            get {
                return this._Prefer_date;
            }
            set {
                this.OnPropertyChanged("Prefer_date", this._Prefer_date, value);
                this._Prefer_date = value;
            }
        }
        
        public string RealIn_Date {
            get {
                return this._RealIn_Date;
            }
            set {
                this.OnPropertyChanged("RealIn_Date", this._RealIn_Date, value);
                this._RealIn_Date = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_SparePlan._Eqm_SparePlanEntityConfiguration == null)) {
                Eqm_SparePlan._Eqm_SparePlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_SparePlan");
            }
            return Eqm_SparePlan._Eqm_SparePlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._DepCode,
                    this._Plan_Date,
                    this._SerialID,
                    this._BJ_code,
                    this._BJ_name,
                    this._Stock_Code,
                    this._BJ_specType,
                    this._BJ_tpcode,
                    this._Plan_Num,
                    this._Unit_Code,
                    this._Stock_Num,
                    this._Month_Num,
                    this._Plan_price,
                    this._Total_Price,
                    this._Stock_Worker,
                    this._Plan_State,
                    this._Stock_Date,
                    this._Prefer_date,
                    this._RealIn_Date,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._DepCode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Plan_Date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._SerialID = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._BJ_code = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._BJ_name = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Stock_Code = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._BJ_specType = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._BJ_tpcode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Plan_Num = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Unit_Code = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Stock_Num = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Month_Num = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Plan_price = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Total_Price = reader.GetDecimal(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Stock_Worker = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Plan_State = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Stock_Date = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Prefer_date = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._RealIn_Date = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Remark = reader.GetString(19);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._DepCode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Plan_Date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._SerialID = ((short)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._BJ_code = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._BJ_name = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Stock_Code = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._BJ_specType = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._BJ_tpcode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Plan_Num = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Unit_Code = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Stock_Num = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Month_Num = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Plan_price = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Total_Price = ((System.Nullable<decimal>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Stock_Worker = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Plan_State = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Stock_Date = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Prefer_date = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._RealIn_Date = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Remark = ((string)(row[19]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_SparePlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((((this.isAttached && ((global::Mesnac.Entity.Eqm_SparePlan)(obj)).isAttached) 
                        && (this.DepCode == ((global::Mesnac.Entity.Eqm_SparePlan)(obj)).DepCode)) 
                        && (this.Plan_Date == ((global::Mesnac.Entity.Eqm_SparePlan)(obj)).Plan_Date)) 
                        && (this.SerialID == ((global::Mesnac.Entity.Eqm_SparePlan)(obj)).SerialID)) 
                        && (this.BJ_code == ((global::Mesnac.Entity.Eqm_SparePlan)(obj)).BJ_code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _DepCode = new NBear.Common.PropertyItem("DepCode", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Plan_Date = new NBear.Common.PropertyItem("Plan_Date", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _SerialID = new NBear.Common.PropertyItem("SerialID", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _BJ_code = new NBear.Common.PropertyItem("BJ_code", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _BJ_name = new NBear.Common.PropertyItem("BJ_name", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Stock_Code = new NBear.Common.PropertyItem("Stock_Code", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _BJ_specType = new NBear.Common.PropertyItem("BJ_specType", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _BJ_tpcode = new NBear.Common.PropertyItem("BJ_tpcode", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Plan_Num = new NBear.Common.PropertyItem("Plan_Num", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Unit_Code = new NBear.Common.PropertyItem("Unit_Code", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Stock_Num = new NBear.Common.PropertyItem("Stock_Num", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Month_Num = new NBear.Common.PropertyItem("Month_Num", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Plan_price = new NBear.Common.PropertyItem("Plan_price", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Total_Price = new NBear.Common.PropertyItem("Total_Price", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Stock_Worker = new NBear.Common.PropertyItem("Stock_Worker", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Plan_State = new NBear.Common.PropertyItem("Plan_State", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Stock_Date = new NBear.Common.PropertyItem("Stock_Date", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Prefer_date = new NBear.Common.PropertyItem("Prefer_date", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _RealIn_Date = new NBear.Common.PropertyItem("RealIn_Date", "Mesnac.Entity.Eqm_SparePlan");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.Eqm_SparePlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem DepCode {
                get {
                    if ((aliasName == null)) {
                        return _DepCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DepCode", _DepCode.EntityConfiguration, _DepCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_Date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Date", _Plan_Date.EntityConfiguration, _Plan_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialID {
                get {
                    if ((aliasName == null)) {
                        return _SerialID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialID", _SerialID.EntityConfiguration, _SerialID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_code {
                get {
                    if ((aliasName == null)) {
                        return _BJ_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_code", _BJ_code.EntityConfiguration, _BJ_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_name {
                get {
                    if ((aliasName == null)) {
                        return _BJ_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_name", _BJ_name.EntityConfiguration, _BJ_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_Code {
                get {
                    if ((aliasName == null)) {
                        return _Stock_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_Code", _Stock_Code.EntityConfiguration, _Stock_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_specType {
                get {
                    if ((aliasName == null)) {
                        return _BJ_specType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_specType", _BJ_specType.EntityConfiguration, _BJ_specType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BJ_tpcode {
                get {
                    if ((aliasName == null)) {
                        return _BJ_tpcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BJ_tpcode", _BJ_tpcode.EntityConfiguration, _BJ_tpcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_Num {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Num", _Plan_Num.EntityConfiguration, _Plan_Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Unit_Code {
                get {
                    if ((aliasName == null)) {
                        return _Unit_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Unit_Code", _Unit_Code.EntityConfiguration, _Unit_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_Num {
                get {
                    if ((aliasName == null)) {
                        return _Stock_Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_Num", _Stock_Num.EntityConfiguration, _Stock_Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Month_Num {
                get {
                    if ((aliasName == null)) {
                        return _Month_Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Month_Num", _Month_Num.EntityConfiguration, _Month_Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_price {
                get {
                    if ((aliasName == null)) {
                        return _Plan_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_price", _Plan_price.EntityConfiguration, _Plan_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Total_Price {
                get {
                    if ((aliasName == null)) {
                        return _Total_Price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Total_Price", _Total_Price.EntityConfiguration, _Total_Price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_Worker {
                get {
                    if ((aliasName == null)) {
                        return _Stock_Worker;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_Worker", _Stock_Worker.EntityConfiguration, _Stock_Worker.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_State {
                get {
                    if ((aliasName == null)) {
                        return _Plan_State;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_State", _Plan_State.EntityConfiguration, _Plan_State.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_Date {
                get {
                    if ((aliasName == null)) {
                        return _Stock_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_Date", _Stock_Date.EntityConfiguration, _Stock_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Prefer_date {
                get {
                    if ((aliasName == null)) {
                        return _Prefer_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Prefer_date", _Prefer_date.EntityConfiguration, _Prefer_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealIn_Date {
                get {
                    if ((aliasName == null)) {
                        return _RealIn_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealIn_Date", _RealIn_Date.EntityConfiguration, _RealIn_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
