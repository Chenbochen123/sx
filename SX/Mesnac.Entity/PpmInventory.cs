//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmInventoryArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmInventory> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmInventory\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmInventory\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Barcode\" mappingColumnType=\"System.String\" sqlType=\"varchar(18)\" isPrimaryKey=\"t" +
        "rue\" isNotNull=\"true\" />\r\n    <Property name=\"RealWeight\" type=\"System.Nullable`" +
        "1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"RealWeight\" mappingColumnType=\"System.Nullable`" +
        "1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"ProfitLossFlag\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ProfitLos" +
        "sFlag\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"BelongTable\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"BelongTable\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OperPerson\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"OperPerson\" mappingColumnType=\"System.String\" sq" +
        "lType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"OperTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OperTime\" m" +
        "appingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InventoryNum\" type=\"Syst" +
        "em.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"InventoryNum\" mappingColumnType=\"System.Int32\" sqlType=\"" +
        "int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n  </Properties>\r\n</EntityConfigura" +
        "tion>")]
    public partial class PpmInventory : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmInventoryEntityConfiguration;
        
        protected string _Barcode;
        
        protected global::System.Decimal? _RealWeight;
        
        protected string _ProfitLossFlag;
        
        protected string _BelongTable;
        
        protected string _OperPerson;
        
        protected global::System.DateTime? _OperTime;
        
        protected int _InventoryNum;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmInventory left, global::Mesnac.Entity.PpmInventory right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmInventory left, global::Mesnac.Entity.PpmInventory right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public string ProfitLossFlag {
            get {
                return this._ProfitLossFlag;
            }
            set {
                this.OnPropertyChanged("ProfitLossFlag", this._ProfitLossFlag, value);
                this._ProfitLossFlag = value;
            }
        }
        
        public string BelongTable {
            get {
                return this._BelongTable;
            }
            set {
                this.OnPropertyChanged("BelongTable", this._BelongTable, value);
                this._BelongTable = value;
            }
        }
        
        public string OperPerson {
            get {
                return this._OperPerson;
            }
            set {
                this.OnPropertyChanged("OperPerson", this._OperPerson, value);
                this._OperPerson = value;
            }
        }
        
        public global::System.DateTime? OperTime {
            get {
                return this._OperTime;
            }
            set {
                this.OnPropertyChanged("OperTime", this._OperTime, value);
                this._OperTime = value;
            }
        }
        
        public int InventoryNum {
            get {
                return this._InventoryNum;
            }
            set {
                this.OnPropertyChanged("InventoryNum", this._InventoryNum, value);
                this._InventoryNum = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmInventory._PpmInventoryEntityConfiguration == null)) {
                PpmInventory._PpmInventoryEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmInventory");
            }
            return PpmInventory._PpmInventoryEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._RealWeight,
                    this._ProfitLossFlag,
                    this._BelongTable,
                    this._OperPerson,
                    this._OperTime,
                    this._InventoryNum};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._RealWeight = reader.GetDecimal(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ProfitLossFlag = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._BelongTable = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._OperPerson = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._OperTime = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._InventoryNum = reader.GetInt32(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ProfitLossFlag = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._BelongTable = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._OperPerson = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._OperTime = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6))) {
                this._InventoryNum = ((int)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmInventory).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((this.isAttached && ((global::Mesnac.Entity.PpmInventory)(obj)).isAttached) 
                        && (this.Barcode == ((global::Mesnac.Entity.PpmInventory)(obj)).Barcode)) 
                        && (this.InventoryNum == ((global::Mesnac.Entity.PpmInventory)(obj)).InventoryNum));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmInventory");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PpmInventory");
            
            protected NBear.Common.PropertyItem _ProfitLossFlag = new NBear.Common.PropertyItem("ProfitLossFlag", "Mesnac.Entity.PpmInventory");
            
            protected NBear.Common.PropertyItem _BelongTable = new NBear.Common.PropertyItem("BelongTable", "Mesnac.Entity.PpmInventory");
            
            protected NBear.Common.PropertyItem _OperPerson = new NBear.Common.PropertyItem("OperPerson", "Mesnac.Entity.PpmInventory");
            
            protected NBear.Common.PropertyItem _OperTime = new NBear.Common.PropertyItem("OperTime", "Mesnac.Entity.PpmInventory");
            
            protected NBear.Common.PropertyItem _InventoryNum = new NBear.Common.PropertyItem("InventoryNum", "Mesnac.Entity.PpmInventory");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProfitLossFlag {
                get {
                    if ((aliasName == null)) {
                        return _ProfitLossFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProfitLossFlag", _ProfitLossFlag.EntityConfiguration, _ProfitLossFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BelongTable {
                get {
                    if ((aliasName == null)) {
                        return _BelongTable;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BelongTable", _BelongTable.EntityConfiguration, _BelongTable.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperPerson {
                get {
                    if ((aliasName == null)) {
                        return _OperPerson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperPerson", _OperPerson.EntityConfiguration, _OperPerson.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperTime {
                get {
                    if ((aliasName == null)) {
                        return _OperTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperTime", _OperTime.EntityConfiguration, _OperTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InventoryNum {
                get {
                    if ((aliasName == null)) {
                        return _InventoryNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InventoryNum", _InventoryNum.EntityConfiguration, _InventoryNum.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
