//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtOpenActionModelDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtOpenActionModelDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtOpenActionModelDetail\" isReadOnly=\"false\" isAutoPreLoad=\"" +
        "false\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtOpenActionModelD" +
        "etail\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System." +
        "Decimal\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"ObjID\" mappingColumnType=\"System.Decimal\" sqlType=\"decimal" +
        "\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"MainModelID\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"MainModelID\" mappingColumnType=\"System.String\" sq" +
        "lType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"OpenMixingNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OpenMixingNo\" mappingColum" +
        "nType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"MixingStep\" type=\"System.Nullable`1[System.Int32]\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"MixingStep\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sq" +
        "lType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OpenA" +
        "ctionCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"OpenActionCode\" mappingColumnType=" +
        "\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"MixTime\" type=\"System.Nullable`1[System.Int32]\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"MixTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CoolMixSpeed\" typ" +
        "e=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"CoolMixSpeed\" mappingColumnT" +
        "ype=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"OpenMixSpeed\" type=\"System.Nullable`1[S" +
        "ystem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"OpenMixSpeed\" mappingColumnType=\"System.Nullable`1" +
        "[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"MixRollor\" type=\"System.Nullable`1[System.Decimal]\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"MixRollor\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"d" +
        "ecimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WaterTemp" +
        "\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"WaterTemp\" mappingColum" +
        "nType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"RubberTemp\" type=\"System.Nullable`1[S" +
        "ystem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"RubberTemp\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"CarSpeed\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"CarSpeed\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decim" +
        "al\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigur" +
        "ation>")]
    public partial class PmtOpenActionModelDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtOpenActionModelDetailEntityConfiguration;
        
        protected decimal _ObjID;
        
        protected string _MainModelID;
        
        protected string _OpenMixingNo;
        
        protected global::System.Int32? _MixingStep;
        
        protected string _OpenActionCode;
        
        protected global::System.Int32? _MixTime;
        
        protected global::System.Decimal? _CoolMixSpeed;
        
        protected global::System.Decimal? _OpenMixSpeed;
        
        protected global::System.Decimal? _MixRollor;
        
        protected global::System.Decimal? _WaterTemp;
        
        protected global::System.Decimal? _RubberTemp;
        
        protected global::System.Decimal? _CarSpeed;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtOpenActionModelDetail left, global::Mesnac.Entity.PmtOpenActionModelDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtOpenActionModelDetail left, global::Mesnac.Entity.PmtOpenActionModelDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public decimal ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string MainModelID {
            get {
                return this._MainModelID;
            }
            set {
                this.OnPropertyChanged("MainModelID", this._MainModelID, value);
                this._MainModelID = value;
            }
        }
        
        public string OpenMixingNo {
            get {
                return this._OpenMixingNo;
            }
            set {
                this.OnPropertyChanged("OpenMixingNo", this._OpenMixingNo, value);
                this._OpenMixingNo = value;
            }
        }
        
        public global::System.Int32? MixingStep {
            get {
                return this._MixingStep;
            }
            set {
                this.OnPropertyChanged("MixingStep", this._MixingStep, value);
                this._MixingStep = value;
            }
        }
        
        public string OpenActionCode {
            get {
                return this._OpenActionCode;
            }
            set {
                this.OnPropertyChanged("OpenActionCode", this._OpenActionCode, value);
                this._OpenActionCode = value;
            }
        }
        
        public global::System.Int32? MixTime {
            get {
                return this._MixTime;
            }
            set {
                this.OnPropertyChanged("MixTime", this._MixTime, value);
                this._MixTime = value;
            }
        }
        
        public global::System.Decimal? CoolMixSpeed {
            get {
                return this._CoolMixSpeed;
            }
            set {
                this.OnPropertyChanged("CoolMixSpeed", this._CoolMixSpeed, value);
                this._CoolMixSpeed = value;
            }
        }
        
        public global::System.Decimal? OpenMixSpeed {
            get {
                return this._OpenMixSpeed;
            }
            set {
                this.OnPropertyChanged("OpenMixSpeed", this._OpenMixSpeed, value);
                this._OpenMixSpeed = value;
            }
        }
        
        public global::System.Decimal? MixRollor {
            get {
                return this._MixRollor;
            }
            set {
                this.OnPropertyChanged("MixRollor", this._MixRollor, value);
                this._MixRollor = value;
            }
        }
        
        public global::System.Decimal? WaterTemp {
            get {
                return this._WaterTemp;
            }
            set {
                this.OnPropertyChanged("WaterTemp", this._WaterTemp, value);
                this._WaterTemp = value;
            }
        }
        
        public global::System.Decimal? RubberTemp {
            get {
                return this._RubberTemp;
            }
            set {
                this.OnPropertyChanged("RubberTemp", this._RubberTemp, value);
                this._RubberTemp = value;
            }
        }
        
        public global::System.Decimal? CarSpeed {
            get {
                return this._CarSpeed;
            }
            set {
                this.OnPropertyChanged("CarSpeed", this._CarSpeed, value);
                this._CarSpeed = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtOpenActionModelDetail._PmtOpenActionModelDetailEntityConfiguration == null)) {
                PmtOpenActionModelDetail._PmtOpenActionModelDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtOpenActionModelDetail");
            }
            return PmtOpenActionModelDetail._PmtOpenActionModelDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._MainModelID,
                    this._OpenMixingNo,
                    this._MixingStep,
                    this._OpenActionCode,
                    this._MixTime,
                    this._CoolMixSpeed,
                    this._OpenMixSpeed,
                    this._MixRollor,
                    this._WaterTemp,
                    this._RubberTemp,
                    this._CarSpeed};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetDecimal(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MainModelID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._OpenMixingNo = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MixingStep = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._OpenActionCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MixTime = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._CoolMixSpeed = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._OpenMixSpeed = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._MixRollor = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._WaterTemp = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._RubberTemp = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._CarSpeed = reader.GetDecimal(11);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((decimal)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MainModelID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._OpenMixingNo = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MixingStep = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._OpenActionCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MixTime = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._CoolMixSpeed = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._OpenMixSpeed = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._MixRollor = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._WaterTemp = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._RubberTemp = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._CarSpeed = ((System.Nullable<decimal>)(row[11]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtOpenActionModelDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtOpenActionModelDetail)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PmtOpenActionModelDetail)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _MainModelID = new NBear.Common.PropertyItem("MainModelID", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _OpenMixingNo = new NBear.Common.PropertyItem("OpenMixingNo", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _MixingStep = new NBear.Common.PropertyItem("MixingStep", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _OpenActionCode = new NBear.Common.PropertyItem("OpenActionCode", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _MixTime = new NBear.Common.PropertyItem("MixTime", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _CoolMixSpeed = new NBear.Common.PropertyItem("CoolMixSpeed", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _OpenMixSpeed = new NBear.Common.PropertyItem("OpenMixSpeed", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _MixRollor = new NBear.Common.PropertyItem("MixRollor", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _WaterTemp = new NBear.Common.PropertyItem("WaterTemp", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _RubberTemp = new NBear.Common.PropertyItem("RubberTemp", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            protected NBear.Common.PropertyItem _CarSpeed = new NBear.Common.PropertyItem("CarSpeed", "Mesnac.Entity.PmtOpenActionModelDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MainModelID {
                get {
                    if ((aliasName == null)) {
                        return _MainModelID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MainModelID", _MainModelID.EntityConfiguration, _MainModelID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OpenMixingNo {
                get {
                    if ((aliasName == null)) {
                        return _OpenMixingNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OpenMixingNo", _OpenMixingNo.EntityConfiguration, _OpenMixingNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MixingStep {
                get {
                    if ((aliasName == null)) {
                        return _MixingStep;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MixingStep", _MixingStep.EntityConfiguration, _MixingStep.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OpenActionCode {
                get {
                    if ((aliasName == null)) {
                        return _OpenActionCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OpenActionCode", _OpenActionCode.EntityConfiguration, _OpenActionCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MixTime {
                get {
                    if ((aliasName == null)) {
                        return _MixTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MixTime", _MixTime.EntityConfiguration, _MixTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CoolMixSpeed {
                get {
                    if ((aliasName == null)) {
                        return _CoolMixSpeed;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CoolMixSpeed", _CoolMixSpeed.EntityConfiguration, _CoolMixSpeed.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OpenMixSpeed {
                get {
                    if ((aliasName == null)) {
                        return _OpenMixSpeed;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OpenMixSpeed", _OpenMixSpeed.EntityConfiguration, _OpenMixSpeed.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MixRollor {
                get {
                    if ((aliasName == null)) {
                        return _MixRollor;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MixRollor", _MixRollor.EntityConfiguration, _MixRollor.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WaterTemp {
                get {
                    if ((aliasName == null)) {
                        return _WaterTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WaterTemp", _WaterTemp.EntityConfiguration, _WaterTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RubberTemp {
                get {
                    if ((aliasName == null)) {
                        return _RubberTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RubberTemp", _RubberTemp.EntityConfiguration, _RubberTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CarSpeed {
                get {
                    if ((aliasName == null)) {
                        return _CarSpeed;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CarSpeed", _CarSpeed.EntityConfiguration, _CarSpeed.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
