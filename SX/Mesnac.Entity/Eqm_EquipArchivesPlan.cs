//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_EquipArchivesPlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_EquipArchivesPlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_EquipArchivesPlan\" isReadOnly=\"false\" isAutoPreLoad=\"fal" +
        "se\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_EquipArchivesPlan\"" +
        " batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"Iid\" type=\"System.Int32\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Iid\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"tr" +
        "ue\" isNotNull=\"true\" />\r\n    <Property name=\"Mainid\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Mainid\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Etype\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Etype\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Serialid\" type=\"System.Nullable`1[System." +
        "Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Serialid\" mappingColumnType=\"System.Nullable`1[System.Int3" +
        "2]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Checkdate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Checkdate\" m" +
        "appingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipNo\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"EquipNo\" mappingColumnType=\"System.String\" sqlType=\"varchar(" +
        "20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Memo\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Memo\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Entity" +
        "Configuration>")]
    public partial class Eqm_EquipArchivesPlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_EquipArchivesPlanEntityConfiguration;
        
        protected int _Iid;
        
        protected global::System.Int32? _Mainid;
        
        protected global::System.Int32? _Etype;
        
        protected global::System.Int32? _Serialid;
        
        protected global::System.DateTime? _Checkdate;
        
        protected string _EquipNo;
        
        protected string _Memo;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_EquipArchivesPlan left, global::Mesnac.Entity.Eqm_EquipArchivesPlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_EquipArchivesPlan left, global::Mesnac.Entity.Eqm_EquipArchivesPlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Iid {
            get {
                return this._Iid;
            }
            set {
                this.OnPropertyChanged("Iid", this._Iid, value);
                this._Iid = value;
            }
        }
        
        public global::System.Int32? Mainid {
            get {
                return this._Mainid;
            }
            set {
                this.OnPropertyChanged("Mainid", this._Mainid, value);
                this._Mainid = value;
            }
        }
        
        public global::System.Int32? Etype {
            get {
                return this._Etype;
            }
            set {
                this.OnPropertyChanged("Etype", this._Etype, value);
                this._Etype = value;
            }
        }
        
        public global::System.Int32? Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public global::System.DateTime? Checkdate {
            get {
                return this._Checkdate;
            }
            set {
                this.OnPropertyChanged("Checkdate", this._Checkdate, value);
                this._Checkdate = value;
            }
        }
        
        public string EquipNo {
            get {
                return this._EquipNo;
            }
            set {
                this.OnPropertyChanged("EquipNo", this._EquipNo, value);
                this._EquipNo = value;
            }
        }
        
        public string Memo {
            get {
                return this._Memo;
            }
            set {
                this.OnPropertyChanged("Memo", this._Memo, value);
                this._Memo = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_EquipArchivesPlan._Eqm_EquipArchivesPlanEntityConfiguration == null)) {
                Eqm_EquipArchivesPlan._Eqm_EquipArchivesPlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_EquipArchivesPlan");
            }
            return Eqm_EquipArchivesPlan._Eqm_EquipArchivesPlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Iid,
                    this._Mainid,
                    this._Etype,
                    this._Serialid,
                    this._Checkdate,
                    this._EquipNo,
                    this._Memo};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Iid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mainid = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Etype = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Serialid = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Checkdate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._EquipNo = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Memo = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Iid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mainid = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Etype = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Serialid = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Checkdate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5))) {
                this._EquipNo = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Memo = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_EquipArchivesPlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_EquipArchivesPlan)(obj)).isAttached) 
                        && (this.Iid == ((global::Mesnac.Entity.Eqm_EquipArchivesPlan)(obj)).Iid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Iid = new NBear.Common.PropertyItem("Iid", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            protected NBear.Common.PropertyItem _Mainid = new NBear.Common.PropertyItem("Mainid", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            protected NBear.Common.PropertyItem _Etype = new NBear.Common.PropertyItem("Etype", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            protected NBear.Common.PropertyItem _Checkdate = new NBear.Common.PropertyItem("Checkdate", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            protected NBear.Common.PropertyItem _EquipNo = new NBear.Common.PropertyItem("EquipNo", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            protected NBear.Common.PropertyItem _Memo = new NBear.Common.PropertyItem("Memo", "Mesnac.Entity.Eqm_EquipArchivesPlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Iid {
                get {
                    if ((aliasName == null)) {
                        return _Iid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Iid", _Iid.EntityConfiguration, _Iid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mainid {
                get {
                    if ((aliasName == null)) {
                        return _Mainid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mainid", _Mainid.EntityConfiguration, _Mainid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Etype {
                get {
                    if ((aliasName == null)) {
                        return _Etype;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Etype", _Etype.EntityConfiguration, _Etype.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Checkdate {
                get {
                    if ((aliasName == null)) {
                        return _Checkdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Checkdate", _Checkdate.EntityConfiguration, _Checkdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipNo {
                get {
                    if ((aliasName == null)) {
                        return _EquipNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipNo", _EquipNo.EntityConfiguration, _EquipNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo {
                get {
                    if ((aliasName == null)) {
                        return _Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo", _Memo.EntityConfiguration, _Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
