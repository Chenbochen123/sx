//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class JCZL_SubFacArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.JCZL_SubFac> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.JCZL_SubFac\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatc" +
        "hUpdate=\"false\" isRelation=\"false\" mappingName=\"JCZL_SubFac\" batchSize=\"10\">\r\n  " +
        "<Properties>\r\n    <Property name=\"Fac_Id\" type=\"System.Int32\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fac_" +
        "Id\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull" +
        "=\"true\" />\r\n    <Property name=\"Fac_Name\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fac" +
        "_Name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(30)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dep_Code\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Dep_Code\" mappingColumnType=\"System.String\" sqlType=\"varc" +
        "har(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Is_sys\" " +
        "type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"Is_sys\" mappingColumnType=\"" +
        "System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"SAP_StoreCode\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "SAP_StoreCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SAP_FacCode\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"SAP_FacCode\" mappingColumnType=\"System.String\" sqlType=\"va" +
        "rchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SAP_St" +
        "oreCode2\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"SAP_StoreCode2\" mappingColumnType=\"" +
        "System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "  </Properties>\r\n</EntityConfiguration>")]
    public partial class JCZL_SubFac : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _JCZL_SubFacEntityConfiguration;
        
        protected int _Fac_Id;
        
        protected string _Fac_Name;
        
        protected string _Remark;
        
        protected string _Dep_Code;
        
        protected global::System.Int32? _Is_sys;
        
        protected string _SAP_StoreCode;
        
        protected string _SAP_FacCode;
        
        protected string _SAP_StoreCode2;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.JCZL_SubFac left, global::Mesnac.Entity.JCZL_SubFac right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.JCZL_SubFac left, global::Mesnac.Entity.JCZL_SubFac right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Fac_Id {
            get {
                return this._Fac_Id;
            }
            set {
                this.OnPropertyChanged("Fac_Id", this._Fac_Id, value);
                this._Fac_Id = value;
            }
        }
        
        public string Fac_Name {
            get {
                return this._Fac_Name;
            }
            set {
                this.OnPropertyChanged("Fac_Name", this._Fac_Name, value);
                this._Fac_Name = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Dep_Code {
            get {
                return this._Dep_Code;
            }
            set {
                this.OnPropertyChanged("Dep_Code", this._Dep_Code, value);
                this._Dep_Code = value;
            }
        }
        
        public global::System.Int32? Is_sys {
            get {
                return this._Is_sys;
            }
            set {
                this.OnPropertyChanged("Is_sys", this._Is_sys, value);
                this._Is_sys = value;
            }
        }
        
        public string SAP_StoreCode {
            get {
                return this._SAP_StoreCode;
            }
            set {
                this.OnPropertyChanged("SAP_StoreCode", this._SAP_StoreCode, value);
                this._SAP_StoreCode = value;
            }
        }
        
        public string SAP_FacCode {
            get {
                return this._SAP_FacCode;
            }
            set {
                this.OnPropertyChanged("SAP_FacCode", this._SAP_FacCode, value);
                this._SAP_FacCode = value;
            }
        }
        
        public string SAP_StoreCode2 {
            get {
                return this._SAP_StoreCode2;
            }
            set {
                this.OnPropertyChanged("SAP_StoreCode2", this._SAP_StoreCode2, value);
                this._SAP_StoreCode2 = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((JCZL_SubFac._JCZL_SubFacEntityConfiguration == null)) {
                JCZL_SubFac._JCZL_SubFacEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.JCZL_SubFac");
            }
            return JCZL_SubFac._JCZL_SubFacEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Fac_Id,
                    this._Fac_Name,
                    this._Remark,
                    this._Dep_Code,
                    this._Is_sys,
                    this._SAP_StoreCode,
                    this._SAP_FacCode,
                    this._SAP_StoreCode2};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Fac_Id = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Fac_Name = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Remark = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Dep_Code = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Is_sys = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._SAP_StoreCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._SAP_FacCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._SAP_StoreCode2 = reader.GetString(7);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Fac_Id = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Fac_Name = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Remark = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Dep_Code = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Is_sys = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._SAP_StoreCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._SAP_FacCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._SAP_StoreCode2 = ((string)(row[7]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.JCZL_SubFac).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.JCZL_SubFac)(obj)).isAttached) 
                        && (this.Fac_Id == ((global::Mesnac.Entity.JCZL_SubFac)(obj)).Fac_Id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Fac_Id = new NBear.Common.PropertyItem("Fac_Id", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _Fac_Name = new NBear.Common.PropertyItem("Fac_Name", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _Dep_Code = new NBear.Common.PropertyItem("Dep_Code", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _Is_sys = new NBear.Common.PropertyItem("Is_sys", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _SAP_StoreCode = new NBear.Common.PropertyItem("SAP_StoreCode", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _SAP_FacCode = new NBear.Common.PropertyItem("SAP_FacCode", "Mesnac.Entity.JCZL_SubFac");
            
            protected NBear.Common.PropertyItem _SAP_StoreCode2 = new NBear.Common.PropertyItem("SAP_StoreCode2", "Mesnac.Entity.JCZL_SubFac");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Fac_Id {
                get {
                    if ((aliasName == null)) {
                        return _Fac_Id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_Id", _Fac_Id.EntityConfiguration, _Fac_Id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_Name {
                get {
                    if ((aliasName == null)) {
                        return _Fac_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_Name", _Fac_Name.EntityConfiguration, _Fac_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dep_Code {
                get {
                    if ((aliasName == null)) {
                        return _Dep_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dep_Code", _Dep_Code.EntityConfiguration, _Dep_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Is_sys {
                get {
                    if ((aliasName == null)) {
                        return _Is_sys;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Is_sys", _Is_sys.EntityConfiguration, _Is_sys.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAP_StoreCode {
                get {
                    if ((aliasName == null)) {
                        return _SAP_StoreCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAP_StoreCode", _SAP_StoreCode.EntityConfiguration, _SAP_StoreCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAP_FacCode {
                get {
                    if ((aliasName == null)) {
                        return _SAP_FacCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAP_FacCode", _SAP_FacCode.EntityConfiguration, _SAP_FacCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAP_StoreCode2 {
                get {
                    if ((aliasName == null)) {
                        return _SAP_StoreCode2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAP_StoreCode2", _SAP_StoreCode2.EntityConfiguration, _SAP_StoreCode2.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
