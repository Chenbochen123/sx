//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_downikindArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_downikind> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_downikind\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_downikind\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"Mp_ikindcode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Mp_ikindcode\" mappingColumnType=\"System.String\" sqlType=\"char(3)\" isPrima" +
        "ryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mp_mkindcode\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Mp_mkindcode\" mappingColumnType=\"System.String\" sqlType=\"" +
        "char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_ikind" +
        "name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Mp_ikindname\" mappingColumnType=\"System" +
        ".String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Pr" +
        "operties>\r\n</EntityConfiguration>")]
    public partial class Eqm_downikind : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_downikindEntityConfiguration;
        
        protected string _Mp_ikindcode;
        
        protected string _Mp_mkindcode;
        
        protected string _Mp_ikindname;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_downikind left, global::Mesnac.Entity.Eqm_downikind right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_downikind left, global::Mesnac.Entity.Eqm_downikind right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mp_ikindcode {
            get {
                return this._Mp_ikindcode;
            }
            set {
                this.OnPropertyChanged("Mp_ikindcode", this._Mp_ikindcode, value);
                this._Mp_ikindcode = value;
            }
        }
        
        public string Mp_mkindcode {
            get {
                return this._Mp_mkindcode;
            }
            set {
                this.OnPropertyChanged("Mp_mkindcode", this._Mp_mkindcode, value);
                this._Mp_mkindcode = value;
            }
        }
        
        public string Mp_ikindname {
            get {
                return this._Mp_ikindname;
            }
            set {
                this.OnPropertyChanged("Mp_ikindname", this._Mp_ikindname, value);
                this._Mp_ikindname = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_downikind._Eqm_downikindEntityConfiguration == null)) {
                Eqm_downikind._Eqm_downikindEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_downikind");
            }
            return Eqm_downikind._Eqm_downikindEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_ikindcode,
                    this._Mp_mkindcode,
                    this._Mp_ikindname};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_ikindcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mp_mkindcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mp_ikindname = reader.GetString(2);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_ikindcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mp_mkindcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mp_ikindname = ((string)(row[2]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_downikind).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_downikind)(obj)).isAttached) 
                        && (this.Mp_ikindcode == ((global::Mesnac.Entity.Eqm_downikind)(obj)).Mp_ikindcode));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_ikindcode = new NBear.Common.PropertyItem("Mp_ikindcode", "Mesnac.Entity.Eqm_downikind");
            
            protected NBear.Common.PropertyItem _Mp_mkindcode = new NBear.Common.PropertyItem("Mp_mkindcode", "Mesnac.Entity.Eqm_downikind");
            
            protected NBear.Common.PropertyItem _Mp_ikindname = new NBear.Common.PropertyItem("Mp_ikindname", "Mesnac.Entity.Eqm_downikind");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_ikindcode {
                get {
                    if ((aliasName == null)) {
                        return _Mp_ikindcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_ikindcode", _Mp_ikindcode.EntityConfiguration, _Mp_ikindcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_mkindcode {
                get {
                    if ((aliasName == null)) {
                        return _Mp_mkindcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_mkindcode", _Mp_mkindcode.EntityConfiguration, _Mp_mkindcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_ikindname {
                get {
                    if ((aliasName == null)) {
                        return _Mp_ikindname;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_ikindname", _Mp_ikindname.EntityConfiguration, _Mp_ikindname.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
