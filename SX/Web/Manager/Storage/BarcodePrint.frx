<?xml version="1.0" encoding="utf-8"?>
<Report ScriptLanguage="CSharp" TextQuality="Regular" ReportInfo.Description="Demonstrates simple list report. To create it:&#13;&#10;&#13;&#10;- go to &quot;Data&quot; menu and select &quot;Choose Report Data...&quot; item to select datasource;&#13;&#10;&#13;&#10;- go to &quot;Report|Configure Bands...&quot; menu to create the band structure;&#13;&#10;&#13;&#10;- return to the report page, doubleclick the data band to show its editor;&#13;&#10;&#13;&#10;- choose the datasource;&#13;&#10;&#13;&#10;- drag data from the Data Dictionary window to the band." ReportInfo.Created="01/17/2008 03:05:57" ReportInfo.Modified="07/25/2013 20:16:36" ReportInfo.CreatorVersion="1.5.14.0">
  <ScriptText>using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Windows.Forms;
using System.Drawing;
using System.Data;
using FastReport;
using FastReport.Data;
using FastReport.Dialog;
using FastReport.Barcode;
using FastReport.Table;
using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {
    private void Barcode1_BeforePrint(object sender, EventArgs e)
    {
      DataSourceBase rowData = Report.GetDataSource(&quot;BarcodePrint&quot;);
      
      Barcode1.Text = rowData.Report.GetColumnValue(&quot;BarcodePrint.Barcode&quot;).ToString();
      Barcode3.Text = rowData.Report.GetColumnValue(&quot;BarcodePrint.Barcode&quot;).ToString();
    }
  }
}
</ScriptText>
  <Dictionary>
    <MsSqlDataConnection Name="Connection" ConnectionString="rijcmlqAFHGp6KQj27H4qUwAIR20hSnyrpNtgmeY+I5zyTmYE0HuZfX1hs9fAqnt4DRtzHmabOsETFu8uBcY3tAnpVWBTTAdBw7JTBCtzSX8xSQMNVNNe0oRSMlmPwJJUBb3zDgZKPcDdrCWsDxM9qWsy6hliWiTerGcgzrd2bOfloaDI1+V6rdddMS/Vzcp2u9LU3U">
      <TableDataSource Name="BasDept" Alias="BarcodePrint" DataType="System.Int32" Enabled="true" TableName="BasDept">
        <Column Name="ObjID" DataType="System.Int32"/>
        <Column Name="DepCode" DataType="System.String"/>
        <Column Name="DepName" DataType="System.String"/>
        <Column Name="DepLevel" DataType="System.Int32"/>
        <Column Name="ParentNum" DataType="System.String"/>
        <Column Name="Remark" DataType="System.String"/>
        <Column Name="ERPCode" DataType="System.String"/>
        <Column Name="HRCode" DataType="System.String"/>
        <Column Name="DisplayId" DataType="System.Int32"/>
        <Column Name="DeleteFlag" DataType="System.String"/>
      </TableDataSource>
    </MsSqlDataConnection>
  </Dictionary>
  <ReportPage Name="Page1" FirstPageSource="1" OtherPagesSource="1">
    <DataBand Name="Data1" Width="718.2" Height="250.61" DataSource="BasDept">
      <TextObject Name="Text1" Left="311.85" Top="-3.78" Width="85.05" Height="28.35" Text="记录表号：" Font="宋体, 10pt"/>
      <TextObject Name="Text2" Left="378" Top="-3.78" Width="122.85" Height="18.9" Text="[BarcodePrint.liushuiID]" Font="宋体, 10pt"/>
      <BarcodeObject Name="Barcode1" Left="151.2" Top="187.11" Width="340.2" Height="54.05" Border.ShadowWidth="8" Border.Lines="All" Border.Color="Transparent" Border.Width="0" BeforePrintEvent="Barcode1_BeforePrint" AutoSize="false" Text="" Barcode="Code128" Barcode.WideBarRatio="4" Barcode.AutoEncode="true"/>
      <BarcodeObject Name="Barcode3" Left="506.52" Width="35.91" Height="198.45" Border.Lines="All" Border.Color="White" BeforePrintEvent="Barcode1_BeforePrint" Angle="90" AutoSize="false" Text="" ShowText="false" Barcode="Code128" Barcode.AutoEncode="true"/>
      <TextObject Name="Text4" Left="207.9" Top="18.9" Width="113.4" Height="28.35" Text="[BarcodePrint.MaterCode]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text5" Left="321.3" Top="18.9" Width="56.7" Height="28.35" Text="名称：" Font="宋体, 10pt"/>
      <TextObject Name="Text7" Left="132.3" Top="47.25" Width="56.7" Height="28.35" Text="规格：" Font="宋体, 10pt"/>
      <TextObject Name="Text8" Left="179.55" Top="47.25" Width="141.75" Height="28.35" Text="[BarcodePrint.MaterialOtherName]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text9" Left="321.3" Top="47.25" Width="85.05" Height="28.35" Text="计量单位：" Font="宋体, 10pt"/>
      <TextObject Name="Text10" Left="387.45" Top="47.25" Width="113.4" Height="28.35" Text="t" HorzAlign="Center" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text11" Left="132.3" Top="75.6" Width="94.5" Height="28.35" Text="供应商批号：" Font="宋体, 10pt"/>
      <TextObject Name="Text12" Left="207.9" Top="75.6" Width="113.4" Height="28.35" Text="[BarcodePrint.FacBarcode]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text13" Left="321.3" Top="75.6" Width="85.05" Height="28.35" Text="进厂批号：" Font="宋体, 10pt"/>
      <TextObject Name="Text14" Left="387.45" Top="75.6" Width="113.4" Height="28.35" Text="[BarcodePrint.InBarcode]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text15" Left="132.3" Top="103.95" Width="56.7" Height="28.35" Text="批量：" Font="宋体, 10pt"/>
      <TextObject Name="Text16" Left="179.55" Top="103.95" Width="141.75" Height="28.35" Text="[BarcodePrint.Batch]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text17" Left="321.3" Top="103.95" Width="85.05" Height="28.35" Text="产地：" Font="宋体, 10pt"/>
      <TextObject Name="Text18" Left="368.55" Top="103.95" Width="132.3" Height="28.35" Text="[BarcodePrint.ProductPlace]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text19" Left="132.3" Top="132.3" Width="85.05" Height="28.35" Text="生产日期：" Font="宋体, 10pt"/>
      <TextObject Name="Text20" Left="207.9" Top="132.3" Width="113.4" Height="28.35" Text="[BarcodePrint.ProcDate]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text21" Left="321.3" Top="132.3" Width="85.05" Height="28.35" Text="到期日期：" Font="宋体, 10pt"/>
      <TextObject Name="Text22" Left="387.45" Top="132.3" Width="113.4" Height="28.35" Text="[BarcodePrint.ValidDate]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text23" Left="132.3" Top="160.65" Width="85.05" Height="28.35" Text="检验日期：" Font="宋体, 10pt"/>
      <TextObject Name="Text24" Left="207.9" Top="160.65" Width="113.4" Height="28.35" Text="[BarcodePrint.ChkDate]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text25" Left="321.3" Top="160.65" Width="85.05" Height="28.35" Text="检验结果：" Font="宋体, 10pt"/>
      <TextObject Name="Text26" Left="387.45" Top="160.65" Width="113.4" Height="28.35" Text="[BarcodePrint.ChkResultFalg]" Underlines="true" Font="宋体, 10pt"/>
      <TextObject Name="Text27" Left="132.3" Top="18.9" Width="85.05" Height="28.35" Text="微机编号：" Font="宋体, 10pt"/>
      <TextObject Name="Text28" Left="368.55" Top="18.9" Width="132.3" Height="28.35" Text="[BarcodePrint.MaterialSimpleName]" Underlines="true" Font="宋体, 10pt"/>
      <RichObject Name="Rich1" Left="548.1" Top="18.9" Width="141.75" Height="122.85" Text="{\rtf1\ansi\ansicpg936\deff0\deflang1033\deflangfe2052{\fonttbl{\f0\fnil NSimSun;}{\f1\fnil\fcharset134 NSimSun;}{\f2\fnil\fcharset136 NSimSun;}{\f3\fnil\fcharset134 \'cb\'ce\'cc\'e5;}}&#13;&#10;{\colortbl ;\red0\green0\blue255;\red43\green145\blue175;\red0\green128\blue0;\red163\green21\blue21;}&#13;&#10;\viewkind4\uc1\pard\cf1\lang2052\f0\fs19 protected\cf0  \cf1 void\cf0  WebReport1_StartReport(\cf1 object\cf0  sender, \cf2 EventArgs\cf0  e)\par&#13;&#10;    \{\par&#13;&#10;        \cf3 //\f1\'b3\'f5\f0 ?\f1\'ca\'bc\f2 ?\f1\'bb\'af\'a1\'a5\'b1\'a8\'c0\'a1\'b1\'ed\'c0\'a8\'bf\'d8\f0 ?\f1\'bc\'fe\f0 t\cf0\par&#13;&#10;        FastReport.\cf2 Report\cf0  report = \cf1 this\cf0 .WebReport1.Report;\par&#13;&#10;        report.Load(Server.MapPath(\cf4 &quot;BarcodePrint.frx&quot;\cf0 ));\par&#13;&#10;        \cf3 //\f1\'b0\'f3\f2\'e3\'a8\f1\'b6\'a8\'a1\'a7\'ca\'fd\'ba\'79\'be\'dd\f0 Y\f1\'d4\'b4\'a1\'e4\cf0\f0\par&#13;&#10;        \cf1 string\cf0  str = Request.QueryString[\cf4 &quot;Str&quot;\cf0 ].ToString();\par&#13;&#10;        \cf1 string\cf0 [] sArray = str.Split(\cf4 ','\cf0 );\par&#13;&#10;        \cf1 string\cf0  billNo = sArray[0].ToString();\par&#13;&#10;        \cf1 string\cf0  storageID = sArray[1].ToString();\par&#13;&#10;        \cf1 string\cf0  storagePlaceID = sArray[2].ToString();\par&#13;&#10;        \cf1 string\cf0  barcode = sArray[3].ToString();\par&#13;&#10;        \cf1 string\cf0  orderID = sArray[4].ToString();\par&#13;&#10;        \cf1 string\cf0  shelfWeight = sArray[5].ToString();\par&#13;&#10;        \cf1 string\cf0  num = sArray[6].ToString();\par&#13;&#10;        \cf1 string\cf0  facBarcode = sArray[7].ToString();\par&#13;&#10;        \cf1 string\cf0  inBarcode = sArray[8].ToString();\par&#13;&#10;        \cf1 string\cf0  batch = sArray[9].ToString();\par&#13;&#10;        \cf1 string\cf0  productPlace = sArray[10].ToString();\par&#13;&#10;        \cf1 string\cf0  chkDate = sArray[11].ToString();\par&#13;&#10;        \cf1 int\cf0  startNum = \cf2 Convert\cf0 .ToInt32(sArray[12].ToString());\par&#13;&#10;        \cf2 DataSet\cf0  ds = adjustManager.GetDetailInfo(billNo, storageID, storagePlaceID, barcode, orderID);\cf3 //adjustManager.GetInfoByBarcode(strBarcode.Substring(0, strBarcode.Length - 2), this.UserID);\cf0\par&#13;&#10;\par&#13;&#10;        \cf1 string\cf0  sql = \cf1 string\cf0 .Empty;\par&#13;&#10;        \cf3 //decimal shelfPieceWeight = Convert.ToDecimal(shelfWeight);\cf0\par&#13;&#10;        \cf3 //decimal lastWeight = Convert.ToDecimal(ds.Tables[0].Rows[0][&quot;AdjustWeight&quot;].ToString()) - shelfPieceWeight * Convert.ToInt32(num);\cf0\par&#13;&#10;\par&#13;&#10;        \cf3 //string data1 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;UserName&quot;].ToString()) ? &quot; &quot; : ds.Tables[0].Rows[0][&quot;UserName&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data2 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;MaterialName&quot;].ToString()) ? &quot; &quot; : ds.Tables[0].Rows[0][&quot;MaterialName&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data3 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;ClassName&quot;].ToString()) ? &quot; &quot; : ds.Tables[0].Rows[0][&quot;ClassName&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data4 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date1&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date1&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data5 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date2&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date2&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data6 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date3&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date3&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data7 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date4&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date4&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data8 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date5&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date5&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data9 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date6&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date6&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data10 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date7&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date7&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //string data11 = string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;date8&quot;].ToString()) ? &quot;0&quot; : ds.Tables[0].Rows[0][&quot;date8&quot;].ToString();\cf0\par&#13;&#10;        \cf3 //for (int i = 1; i &lt;= Convert.ToInt32(num); i++)\cf0\par&#13;&#10;        \cf3 //\{\cf0\par&#13;&#10;        \cf3 //    sql += &quot;select '&quot;+barcode+&quot;' + RIGHT('0000' + CONVERT(VARCHAR, '&quot; + i + &quot;'), 4) Barcode, '&quot; + data1 + &quot;' UserName, '&quot; + data2 + &quot;' MaterialName, '&quot; + i + &quot;' ShelfBarcode, '&quot; + data3 + &quot;' ClassName, '&quot; + data4 + &quot;' date1, '&quot; + data5 + &quot;' date2, '&quot; + data6 + &quot;' date3, '&quot; + data7 + &quot;' date4, '&quot; + data8 + &quot;' date5, '&quot; + data9 + &quot;' date6, '&quot; + data10 + &quot;' date7, '&quot; + data11 + &quot;' date8 union all &quot;;\cf0\par&#13;&#10;        \cf3 //\}\cf0\par&#13;&#10;\par&#13;&#10;        \cf1 string\cf0  data1 = \cf1 string\cf0 .IsNullOrEmpty(ds.Tables[0].Rows[0][\cf4 &quot;Barcode&quot;\cf0 ].ToString()) ? \cf4 &quot; &quot;\cf0  : ds.Tables[0].Rows[0][\cf4 &quot;Barcode&quot;\cf0 ].ToString().Substring(0, 9);\par&#13;&#10;        \cf1 string\cf0  data2 = \cf1 string\cf0 .IsNullOrEmpty(ds.Tables[0].Rows[0][\cf4 &quot;MaterialSimpleName&quot;\cf0 ].ToString()) ? \cf4 &quot; &quot;\cf0  : ds.Tables[0].Rows[0][\cf4 &quot;MaterialSimpleName&quot;\cf0 ].ToString();\par&#13;&#10;        \cf1 string\cf0  data3 = \cf1 string\cf0 .IsNullOrEmpty(ds.Tables[0].Rows[0][\cf4 &quot;MaterialOtherName&quot;\cf0 ].ToString()) ? \cf4 &quot; &quot;\cf0  : ds.Tables[0].Rows[0][\cf4 &quot;MaterialOtherName&quot;\cf0 ].ToString();\par&#13;&#10;        \cf1 string\cf0  data4 = \cf1 string\cf0 .IsNullOrEmpty(ds.Tables[0].Rows[0][\cf4 &quot;ProductPlace&quot;\cf0 ].ToString()) ? productPlace : ds.Tables[0].Rows[0][\cf4 &quot;ProductPlace&quot;\cf0 ].ToString();\par&#13;&#10;        \cf1 string\cf0  data5 = \cf1 string\cf0 .IsNullOrEmpty(ds.Tables[0].Rows[0][\cf4 &quot;ProcDate&quot;\cf0 ].ToString()) ? \cf4 &quot; &quot;\cf0  : ds.Tables[0].Rows[0][\cf4 &quot;ProcDate&quot;\cf0 ].ToString().Substring(0, 10);\par&#13;&#10;        \cf1 string\cf0  data6 = \cf1 string\cf0 .IsNullOrEmpty(ds.Tables[0].Rows[0][\cf4 &quot;ValidDate&quot;\cf0 ].ToString()) ? \cf4 &quot; &quot;\cf0  : ds.Tables[0].Rows[0][\cf4 &quot;ValidDate&quot;\cf0 ].ToString().Substring(0, 10);\par&#13;&#10;        \cf1 string\cf0  data7 = facBarcode;\par&#13;&#10;        \cf1 string\cf0  data8 = inBarcode;\par&#13;&#10;        \cf1 string\cf0  data9 = batch;\par&#13;&#10;        \cf1 string\cf0  data10 = chkDate;\cf3 //string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;ChkDate&quot;].ToString()) ? &quot; &quot; : ds.Tables[0].Rows[0][&quot;ChkDate&quot;].ToString().Substring(0, 10);\cf0\par&#13;&#10;        \cf1 string\cf0  data11 = \cf4 &quot;\f1\'ba\'cf\f0 ?\f1\'b8\'f1\f0 ?&quot;\cf0 ;\cf3 //string.IsNullOrEmpty(ds.Tables[0].Rows[0][&quot;ChkResultFlag&quot;].ToString()) ? &quot;\f1\'ce\'b4\f2\'a1\'e4\f1\'bc\'ec\'a8\'ac\'d1\'e9\'a8\'a6&quot; : ds.Tables[0].Rows[0][&quot;ChkResultFlag&quot;].ToString() == &quot;1&quot; ? &quot;\'ba\'cf\f0 ?\f1\'b8\'f1\f0 ?&quot; : &quot;\f1\'b2\'bb\f0 ?\f1\'ba\'cf\f0 ?\f1\'b8\'f1\f0 ?&quot;;\cf0\par&#13;&#10;        \cf1 for\cf0  (\cf1 int\cf0  i = 0; i &lt; \cf2 Convert\cf0 .ToInt32(num); i++)\par&#13;&#10;        \{\par&#13;&#10;            \cf1 int\cf0  liushui = i + startNum;\par&#13;&#10;            sql += \cf4 &quot;select 'QSE&quot;\cf0  + \cf2 DateTime\cf0 .Now.ToString(\cf4 &quot;MM.dd&quot;\cf0 ) + \cf4 &quot;-' + RIGHT('0000' + CONVERT(VARCHAR, '&quot;\cf0  + liushui + \cf4 &quot;'), 4) liushuiID, '&quot;\cf0  + barcode + \cf4 &quot;' + RIGHT('0000' + CONVERT(VARCHAR, '&quot;\cf0  + liushui + \cf4 &quot;'), 4) Barcode, '&quot;\cf0  + data1 + \cf4 &quot;' MaterCode, '&quot;\cf0  + data2 + \cf4 &quot;' MaterialSimpleName, '&quot;\cf0  + i + \cf4 &quot;' ShelfBarcode, '&quot;\cf0  + data3 + \cf4 &quot;' MaterialOtherName, '&quot;\cf0  + data4 + \cf4 &quot;' ProductPlace, '&quot;\cf0  + data5 + \cf4 &quot;' ProcDate, '&quot;\cf0  + data6 + \cf4 &quot;' ValidDate, '&quot;\cf0  + data7 + \cf4 &quot;' FacBarcode, '&quot;\cf0  + data8 + \cf4 &quot;' InBarcode, '&quot;\cf0  + data9 + \cf4 &quot;' Batch, '&quot;\cf0  + data10 + \cf4 &quot;' ChkDate, '&quot;\cf0  + data11 + \cf4 &quot;' ChkResultFalg union all &quot;\cf0 ;\par&#13;&#10;        \}\par&#13;&#10;\par&#13;&#10;        \cf2 DataSet\cf0  dsSql = adjustManager.GetSqlInfo(sql.Substring(0, sql.Length - 10));\par&#13;&#10;\par&#13;&#10;        report.RegisterData(dsSql.Tables[0], \cf4 &quot;BarcodePrint&quot;\cf0 );\par&#13;&#10;    \}\par&#13;&#10;\f3\fs18\par&#13;&#10;}&#13;&#10;"/>
    </DataBand>
  </ReportPage>
</Report>
