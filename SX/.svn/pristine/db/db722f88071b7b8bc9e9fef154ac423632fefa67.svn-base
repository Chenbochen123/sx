//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_CleanStandArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_CleanStand> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_CleanStand\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isB" +
        "atchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_CleanStand\" batchSize=\"10" +
        "\">\r\n  <Properties>\r\n    <Property name=\"Serialid\" type=\"System.Int32\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Serialid\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\"" +
        " isNotNull=\"true\" />\r\n    <Property name=\"Workshop\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Workshop\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipName\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"EquipName\" mappingColumnType=\"System.String\" sqlType=\"var" +
        "char(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Posname" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Posname\" mappingColumnType=\"System.String\" " +
        "sqlType=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Equipno\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Equipno\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Cycle\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Cyc" +
        "le\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Before_temp\" type=\"System.N" +
        "ullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Before_temp\" mappingColumnType=\"System." +
        "Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"After_temp\" type=\"System.Nullable`1[System.Decimal]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"After_temp\" mappingColumnType=\"System.Nullable`1[System.Decimal]" +
        "\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Clean_type\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Clean_type\" mappingColumnType=" +
        "\"System.String\" sqlType=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Begin_date\" type=\"System.Nullable`1[System.DateTime]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Begin_date\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlT" +
        "ype=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"La" +
        "st_date\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Last_date\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Next_date\" type=\"System.Nul" +
        "lable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Next_date\" mappingColumnType=\"System.Nul" +
        "lable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"Memo\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Memo\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_CleanStand : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_CleanStandEntityConfiguration;
        
        protected int _Serialid;
        
        protected string _Workshop;
        
        protected string _EquipName;
        
        protected string _Posname;
        
        protected string _Equipno;
        
        protected global::System.Int32? _Cycle;
        
        protected global::System.Decimal? _Before_temp;
        
        protected global::System.Decimal? _After_temp;
        
        protected string _Clean_type;
        
        protected global::System.DateTime? _Begin_date;
        
        protected global::System.DateTime? _Last_date;
        
        protected global::System.DateTime? _Next_date;
        
        protected string _Memo;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_CleanStand left, global::Mesnac.Entity.Eqm_CleanStand right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_CleanStand left, global::Mesnac.Entity.Eqm_CleanStand right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public string Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public string EquipName {
            get {
                return this._EquipName;
            }
            set {
                this.OnPropertyChanged("EquipName", this._EquipName, value);
                this._EquipName = value;
            }
        }
        
        public string Posname {
            get {
                return this._Posname;
            }
            set {
                this.OnPropertyChanged("Posname", this._Posname, value);
                this._Posname = value;
            }
        }
        
        public string Equipno {
            get {
                return this._Equipno;
            }
            set {
                this.OnPropertyChanged("Equipno", this._Equipno, value);
                this._Equipno = value;
            }
        }
        
        public global::System.Int32? Cycle {
            get {
                return this._Cycle;
            }
            set {
                this.OnPropertyChanged("Cycle", this._Cycle, value);
                this._Cycle = value;
            }
        }
        
        public global::System.Decimal? Before_temp {
            get {
                return this._Before_temp;
            }
            set {
                this.OnPropertyChanged("Before_temp", this._Before_temp, value);
                this._Before_temp = value;
            }
        }
        
        public global::System.Decimal? After_temp {
            get {
                return this._After_temp;
            }
            set {
                this.OnPropertyChanged("After_temp", this._After_temp, value);
                this._After_temp = value;
            }
        }
        
        public string Clean_type {
            get {
                return this._Clean_type;
            }
            set {
                this.OnPropertyChanged("Clean_type", this._Clean_type, value);
                this._Clean_type = value;
            }
        }
        
        public global::System.DateTime? Begin_date {
            get {
                return this._Begin_date;
            }
            set {
                this.OnPropertyChanged("Begin_date", this._Begin_date, value);
                this._Begin_date = value;
            }
        }
        
        public global::System.DateTime? Last_date {
            get {
                return this._Last_date;
            }
            set {
                this.OnPropertyChanged("Last_date", this._Last_date, value);
                this._Last_date = value;
            }
        }
        
        public global::System.DateTime? Next_date {
            get {
                return this._Next_date;
            }
            set {
                this.OnPropertyChanged("Next_date", this._Next_date, value);
                this._Next_date = value;
            }
        }
        
        public string Memo {
            get {
                return this._Memo;
            }
            set {
                this.OnPropertyChanged("Memo", this._Memo, value);
                this._Memo = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_CleanStand._Eqm_CleanStandEntityConfiguration == null)) {
                Eqm_CleanStand._Eqm_CleanStandEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_CleanStand");
            }
            return Eqm_CleanStand._Eqm_CleanStandEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serialid,
                    this._Workshop,
                    this._EquipName,
                    this._Posname,
                    this._Equipno,
                    this._Cycle,
                    this._Before_temp,
                    this._After_temp,
                    this._Clean_type,
                    this._Begin_date,
                    this._Last_date,
                    this._Next_date,
                    this._Memo};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serialid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Workshop = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EquipName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Posname = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equipno = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Cycle = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Before_temp = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._After_temp = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Clean_type = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Begin_date = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Last_date = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Next_date = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Memo = reader.GetString(12);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serialid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Workshop = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._EquipName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Posname = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equipno = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Cycle = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Before_temp = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._After_temp = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Clean_type = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Begin_date = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10))) {
                this._Last_date = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._Next_date = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._Memo = ((string)(row[12]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_CleanStand).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_CleanStand)(obj)).isAttached) 
                        && (this.Serialid == ((global::Mesnac.Entity.Eqm_CleanStand)(obj)).Serialid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _EquipName = new NBear.Common.PropertyItem("EquipName", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Posname = new NBear.Common.PropertyItem("Posname", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Equipno = new NBear.Common.PropertyItem("Equipno", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Cycle = new NBear.Common.PropertyItem("Cycle", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Before_temp = new NBear.Common.PropertyItem("Before_temp", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _After_temp = new NBear.Common.PropertyItem("After_temp", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Clean_type = new NBear.Common.PropertyItem("Clean_type", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Begin_date = new NBear.Common.PropertyItem("Begin_date", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Last_date = new NBear.Common.PropertyItem("Last_date", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Next_date = new NBear.Common.PropertyItem("Next_date", "Mesnac.Entity.Eqm_CleanStand");
            
            protected NBear.Common.PropertyItem _Memo = new NBear.Common.PropertyItem("Memo", "Mesnac.Entity.Eqm_CleanStand");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipName {
                get {
                    if ((aliasName == null)) {
                        return _EquipName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipName", _EquipName.EntityConfiguration, _EquipName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Posname {
                get {
                    if ((aliasName == null)) {
                        return _Posname;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Posname", _Posname.EntityConfiguration, _Posname.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equipno {
                get {
                    if ((aliasName == null)) {
                        return _Equipno;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equipno", _Equipno.EntityConfiguration, _Equipno.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Cycle {
                get {
                    if ((aliasName == null)) {
                        return _Cycle;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Cycle", _Cycle.EntityConfiguration, _Cycle.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Before_temp {
                get {
                    if ((aliasName == null)) {
                        return _Before_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Before_temp", _Before_temp.EntityConfiguration, _Before_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem After_temp {
                get {
                    if ((aliasName == null)) {
                        return _After_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("After_temp", _After_temp.EntityConfiguration, _After_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Clean_type {
                get {
                    if ((aliasName == null)) {
                        return _Clean_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Clean_type", _Clean_type.EntityConfiguration, _Clean_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Begin_date {
                get {
                    if ((aliasName == null)) {
                        return _Begin_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Begin_date", _Begin_date.EntityConfiguration, _Begin_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Last_date {
                get {
                    if ((aliasName == null)) {
                        return _Last_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Last_date", _Last_date.EntityConfiguration, _Last_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Next_date {
                get {
                    if ((aliasName == null)) {
                        return _Next_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Next_date", _Next_date.EntityConfiguration, _Next_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo {
                get {
                    if ((aliasName == null)) {
                        return _Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo", _Memo.EntityConfiguration, _Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
