//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasWorkShopArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasWorkShop> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasWorkShop\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"BasWorkShop\" batchSize=\"10\">\r\n  <" +
        "Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" " +
        "mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"WorkShopName\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Wo" +
        "rkShopName\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FactoryID\" type=\"System.Int32\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"FactoryID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IsInnerGroup\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"IsInnerGroup\" mappingColumnType=\"System.String\" sqlType=\"" +
        "varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remar" +
        "k\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" s" +
        "qlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"" +
        "System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"StorageCode\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StorageCode\" m" +
        "appingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Fac_Code\" type=\"System.Nullable`1[System.In" +
        "t32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Fac_Code\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Wo" +
        "rkShop_Name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"WorkShop_Name\" mappingColumnType=" +
        "\"System.String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"WorkShop_Code\" type=\"System.Int32\" isInherited=\"false\" isR" +
        "eadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"WorkShop_C" +
        "ode\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class BasWorkShop : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasWorkShopEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _WorkShopName;
        
        protected int _FactoryID;
        
        protected string _IsInnerGroup;
        
        protected string _Remark;
        
        protected string _DeleteFlag;
        
        protected string _StorageCode;
        
        protected global::System.Int32? _Fac_Code;
        
        protected string _WorkShop_Name;
        
        protected int _WorkShop_Code;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasWorkShop left, global::Mesnac.Entity.BasWorkShop right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasWorkShop left, global::Mesnac.Entity.BasWorkShop right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string WorkShopName {
            get {
                return this._WorkShopName;
            }
            set {
                this.OnPropertyChanged("WorkShopName", this._WorkShopName, value);
                this._WorkShopName = value;
            }
        }
        
        public int FactoryID {
            get {
                return this._FactoryID;
            }
            set {
                this.OnPropertyChanged("FactoryID", this._FactoryID, value);
                this._FactoryID = value;
            }
        }
        
        public string IsInnerGroup {
            get {
                return this._IsInnerGroup;
            }
            set {
                this.OnPropertyChanged("IsInnerGroup", this._IsInnerGroup, value);
                this._IsInnerGroup = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string StorageCode {
            get {
                return this._StorageCode;
            }
            set {
                this.OnPropertyChanged("StorageCode", this._StorageCode, value);
                this._StorageCode = value;
            }
        }
        
        public global::System.Int32? Fac_Code {
            get {
                return this._Fac_Code;
            }
            set {
                this.OnPropertyChanged("Fac_Code", this._Fac_Code, value);
                this._Fac_Code = value;
            }
        }
        
        public string WorkShop_Name {
            get {
                return this._WorkShop_Name;
            }
            set {
                this.OnPropertyChanged("WorkShop_Name", this._WorkShop_Name, value);
                this._WorkShop_Name = value;
            }
        }
        
        public int WorkShop_Code {
            get {
                return this._WorkShop_Code;
            }
            set {
                this.OnPropertyChanged("WorkShop_Code", this._WorkShop_Code, value);
                this._WorkShop_Code = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasWorkShop._BasWorkShopEntityConfiguration == null)) {
                BasWorkShop._BasWorkShopEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasWorkShop");
            }
            return BasWorkShop._BasWorkShopEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._WorkShopName,
                    this._FactoryID,
                    this._IsInnerGroup,
                    this._Remark,
                    this._DeleteFlag,
                    this._StorageCode,
                    this._Fac_Code,
                    this._WorkShop_Name,
                    this._WorkShop_Code};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._WorkShopName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._FactoryID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._IsInnerGroup = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Remark = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._DeleteFlag = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._StorageCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Fac_Code = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._WorkShop_Name = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._WorkShop_Code = reader.GetInt32(9);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._WorkShopName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._FactoryID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._IsInnerGroup = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Remark = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._DeleteFlag = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._StorageCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Fac_Code = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._WorkShop_Name = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._WorkShop_Code = ((int)(row[9]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasWorkShop).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasWorkShop)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _WorkShopName = new NBear.Common.PropertyItem("WorkShopName", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _FactoryID = new NBear.Common.PropertyItem("FactoryID", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _IsInnerGroup = new NBear.Common.PropertyItem("IsInnerGroup", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _StorageCode = new NBear.Common.PropertyItem("StorageCode", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _Fac_Code = new NBear.Common.PropertyItem("Fac_Code", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _WorkShop_Name = new NBear.Common.PropertyItem("WorkShop_Name", "Mesnac.Entity.BasWorkShop");
            
            protected NBear.Common.PropertyItem _WorkShop_Code = new NBear.Common.PropertyItem("WorkShop_Code", "Mesnac.Entity.BasWorkShop");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShopName {
                get {
                    if ((aliasName == null)) {
                        return _WorkShopName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShopName", _WorkShopName.EntityConfiguration, _WorkShopName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FactoryID {
                get {
                    if ((aliasName == null)) {
                        return _FactoryID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FactoryID", _FactoryID.EntityConfiguration, _FactoryID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsInnerGroup {
                get {
                    if ((aliasName == null)) {
                        return _IsInnerGroup;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsInnerGroup", _IsInnerGroup.EntityConfiguration, _IsInnerGroup.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageCode {
                get {
                    if ((aliasName == null)) {
                        return _StorageCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageCode", _StorageCode.EntityConfiguration, _StorageCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_Code {
                get {
                    if ((aliasName == null)) {
                        return _Fac_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_Code", _Fac_Code.EntityConfiguration, _Fac_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShop_Name {
                get {
                    if ((aliasName == null)) {
                        return _WorkShop_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShop_Name", _WorkShop_Name.EntityConfiguration, _WorkShop_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShop_Code {
                get {
                    if ((aliasName == null)) {
                        return _WorkShop_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShop_Code", _WorkShop_Code.EntityConfiguration, _WorkShop_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
