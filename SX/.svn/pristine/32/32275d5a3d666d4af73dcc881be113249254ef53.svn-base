//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class SysPageMethodArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.SysPageMethod> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.SysPageMethod\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"SysPageMethod\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"O" +
        "bjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNu" +
        "ll=\"true\" />\r\n    <Property name=\"PageID\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"PageID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MethodNa" +
        "me\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"MethodName\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"varchar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"ShowName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShowName\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(500)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"RecordTime\" type=\"System.Nullable`1[System.D" +
        "ateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"RecordTime\" mappingColumnType=\"System.Nullable`1[System." +
        "DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"SeqIdx\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SeqIdx" +
        "\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class SysPageMethod : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _SysPageMethodEntityConfiguration;
        
        protected int _ObjID;
        
        protected global::System.Int32? _PageID;
        
        protected string _MethodName;
        
        protected string _ShowName;
        
        protected string _Remark;
        
        protected global::System.DateTime? _RecordTime;
        
        protected global::System.Int32? _SeqIdx;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.SysPageMethod left, global::Mesnac.Entity.SysPageMethod right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.SysPageMethod left, global::Mesnac.Entity.SysPageMethod right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.Int32? PageID {
            get {
                return this._PageID;
            }
            set {
                this.OnPropertyChanged("PageID", this._PageID, value);
                this._PageID = value;
            }
        }
        
        public string MethodName {
            get {
                return this._MethodName;
            }
            set {
                this.OnPropertyChanged("MethodName", this._MethodName, value);
                this._MethodName = value;
            }
        }
        
        public string ShowName {
            get {
                return this._ShowName;
            }
            set {
                this.OnPropertyChanged("ShowName", this._ShowName, value);
                this._ShowName = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.DateTime? RecordTime {
            get {
                return this._RecordTime;
            }
            set {
                this.OnPropertyChanged("RecordTime", this._RecordTime, value);
                this._RecordTime = value;
            }
        }
        
        public global::System.Int32? SeqIdx {
            get {
                return this._SeqIdx;
            }
            set {
                this.OnPropertyChanged("SeqIdx", this._SeqIdx, value);
                this._SeqIdx = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((SysPageMethod._SysPageMethodEntityConfiguration == null)) {
                SysPageMethod._SysPageMethodEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.SysPageMethod");
            }
            return SysPageMethod._SysPageMethodEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._PageID,
                    this._MethodName,
                    this._ShowName,
                    this._Remark,
                    this._RecordTime,
                    this._SeqIdx};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PageID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MethodName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ShowName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Remark = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RecordTime = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._SeqIdx = reader.GetInt32(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PageID = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MethodName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ShowName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Remark = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._RecordTime = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6))) {
                this._SeqIdx = ((System.Nullable<int>)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.SysPageMethod).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.SysPageMethod)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.SysPageMethod)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.SysPageMethod");
            
            protected NBear.Common.PropertyItem _PageID = new NBear.Common.PropertyItem("PageID", "Mesnac.Entity.SysPageMethod");
            
            protected NBear.Common.PropertyItem _MethodName = new NBear.Common.PropertyItem("MethodName", "Mesnac.Entity.SysPageMethod");
            
            protected NBear.Common.PropertyItem _ShowName = new NBear.Common.PropertyItem("ShowName", "Mesnac.Entity.SysPageMethod");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.SysPageMethod");
            
            protected NBear.Common.PropertyItem _RecordTime = new NBear.Common.PropertyItem("RecordTime", "Mesnac.Entity.SysPageMethod");
            
            protected NBear.Common.PropertyItem _SeqIdx = new NBear.Common.PropertyItem("SeqIdx", "Mesnac.Entity.SysPageMethod");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PageID {
                get {
                    if ((aliasName == null)) {
                        return _PageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PageID", _PageID.EntityConfiguration, _PageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MethodName {
                get {
                    if ((aliasName == null)) {
                        return _MethodName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MethodName", _MethodName.EntityConfiguration, _MethodName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShowName {
                get {
                    if ((aliasName == null)) {
                        return _ShowName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShowName", _ShowName.EntityConfiguration, _ShowName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordTime {
                get {
                    if ((aliasName == null)) {
                        return _RecordTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordTime", _RecordTime.EntityConfiguration, _RecordTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeqIdx {
                get {
                    if ((aliasName == null)) {
                        return _SeqIdx;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqIdx", _SeqIdx.EntityConfiguration, _SeqIdx.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
