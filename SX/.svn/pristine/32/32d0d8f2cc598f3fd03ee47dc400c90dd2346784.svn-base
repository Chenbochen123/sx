//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class QmcSampleLedgerArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmcSampleLedger>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmcSampleLedger\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmcSampleLedger\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"LedgerId\" type=\"System.Int32\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"LedgerId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"tru" +
        "e\" isNotNull=\"true\" />\r\n    <Property name=\"BillDetailId\" type=\"System.Nullable`" +
        "1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"BillDetailId\" mappingColumnType=\"System.Nullable`" +
        "1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"BillNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BillNo\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"OrderId\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"OrderId\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Barcode\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(24)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ba" +
        "tchCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"BatchCode\" mappingColumnType=\"System" +
        ".String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Frequency\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Frequency\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"MaterialCode\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"MaterialCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SampleCode\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"SampleCode\" mappingColumnType=\"System.String\" sqlType=\"nva" +
        "rchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sample" +
        "Name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"SampleName\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"SampleSource\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SampleSource\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"SampleNum\" type=\"System.Nullable`1[System.De" +
        "cimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"SampleNum\" mappingColumnType=\"System.Nullable`1[System.Dec" +
        "imal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"SpecId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SpecId\" map" +
        "pingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"SampleUnit\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"SampleUnit\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SampleStatus\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"SampleStatus\" mappingColumnType=\"System.String\"" +
        " sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"SupplierId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SupplierI" +
        "d\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ManufacturerId\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"ManufacturerId\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"FactoryCode\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Factor" +
        "yCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"ExtractorId\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"ExtractorId\" mappingColumnType=\"System.String\" sqlType=\"varchar(2" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ReceiverId\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"ReceiverId\" mappingColumnType=\"System.String\" " +
        "sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"FetcherId\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"FetcherId\" mappingColumnType=" +
        "\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"HandlerId\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"HandlerId\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"CheckResult\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"CheckResult\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ReceiveDate\" type=\"System.N" +
        "ullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"ReceiveDate\" mappingColumnType=\"System" +
        ".Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"SendDate\" type=\"System.Nullable`1[System.DateTim" +
        "e]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"SendDate\" mappingColumnType=\"System.Nullable`1[System.DateTime" +
        "]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"ReturnDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ReturnD" +
        "ate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"HandleDate\" type=\"" +
        "System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"HandleDate\" mappingColumnType=" +
        "\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"RecordDate\" type=\"System.Nullable`1[Syste" +
        "m.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"RecordDate\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"HandleMethod\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"HandleMethod\" m" +
        "appingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguratio" +
        "n>")]
    public partial class QmcSampleLedger : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _QmcSampleLedgerEntityConfiguration;

        protected int _LedgerId;

        protected global::System.Int32? _BillDetailId;

        protected string _BillNo;

        protected global::System.Int32? _OrderId;

        protected string _Barcode;

        protected string _BatchCode;

        protected string _Frequency;

        protected string _MaterialCode;

        protected string _SampleCode;

        protected string _SampleName;

        protected string _SampleSource;

        protected global::System.Decimal? _SampleNum;

        protected global::System.Int32? _SpecId;

        protected string _SampleUnit;

        protected string _SampleStatus;

        protected global::System.Int32? _SupplierId;

        protected global::System.Int32? _ManufacturerId;

        protected string _FactoryCode;

        protected string _ExtractorId;

        protected string _ReceiverId;

        protected string _FetcherId;

        protected string _HandlerId;

        protected string _CheckResult;

        protected global::System.DateTime? _ReceiveDate;

        protected global::System.DateTime? _SendDate;

        protected global::System.DateTime? _ReturnDate;

        protected global::System.DateTime? _HandleDate;

        protected global::System.DateTime? _RecordDate;

        protected string _HandleMethod;

        protected string _Remark;

        protected string _DeleteFlag;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.QmcSampleLedger left, global::Mesnac.Entity.QmcSampleLedger right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.QmcSampleLedger left, global::Mesnac.Entity.QmcSampleLedger right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int LedgerId
        {
            get
            {
                return this._LedgerId;
            }
            set
            {
                this.OnPropertyChanged("LedgerId", this._LedgerId, value);
                this._LedgerId = value;
            }
        }

        public global::System.Int32? BillDetailId
        {
            get
            {
                return this._BillDetailId;
            }
            set
            {
                this.OnPropertyChanged("BillDetailId", this._BillDetailId, value);
                this._BillDetailId = value;
            }
        }

        public string BillNo
        {
            get
            {
                return this._BillNo;
            }
            set
            {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }

        public global::System.Int32? OrderId
        {
            get
            {
                return this._OrderId;
            }
            set
            {
                this.OnPropertyChanged("OrderId", this._OrderId, value);
                this._OrderId = value;
            }
        }

        public string Barcode
        {
            get
            {
                return this._Barcode;
            }
            set
            {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }

        public string BatchCode
        {
            get
            {
                return this._BatchCode;
            }
            set
            {
                this.OnPropertyChanged("BatchCode", this._BatchCode, value);
                this._BatchCode = value;
            }
        }

        public string Frequency
        {
            get
            {
                return this._Frequency;
            }
            set
            {
                this.OnPropertyChanged("Frequency", this._Frequency, value);
                this._Frequency = value;
            }
        }

        public string MaterialCode
        {
            get
            {
                return this._MaterialCode;
            }
            set
            {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }

        public string SampleCode
        {
            get
            {
                return this._SampleCode;
            }
            set
            {
                this.OnPropertyChanged("SampleCode", this._SampleCode, value);
                this._SampleCode = value;
            }
        }

        public string SampleName
        {
            get
            {
                return this._SampleName;
            }
            set
            {
                this.OnPropertyChanged("SampleName", this._SampleName, value);
                this._SampleName = value;
            }
        }

        public string SampleSource
        {
            get
            {
                return this._SampleSource;
            }
            set
            {
                this.OnPropertyChanged("SampleSource", this._SampleSource, value);
                this._SampleSource = value;
            }
        }

        public global::System.Decimal? SampleNum
        {
            get
            {
                return this._SampleNum;
            }
            set
            {
                this.OnPropertyChanged("SampleNum", this._SampleNum, value);
                this._SampleNum = value;
            }
        }

        public global::System.Int32? SpecId
        {
            get
            {
                return this._SpecId;
            }
            set
            {
                this.OnPropertyChanged("SpecId", this._SpecId, value);
                this._SpecId = value;
            }
        }

        public string SampleUnit
        {
            get
            {
                return this._SampleUnit;
            }
            set
            {
                this.OnPropertyChanged("SampleUnit", this._SampleUnit, value);
                this._SampleUnit = value;
            }
        }

        public string SampleStatus
        {
            get
            {
                return this._SampleStatus;
            }
            set
            {
                this.OnPropertyChanged("SampleStatus", this._SampleStatus, value);
                this._SampleStatus = value;
            }
        }

        public global::System.Int32? SupplierId
        {
            get
            {
                return this._SupplierId;
            }
            set
            {
                this.OnPropertyChanged("SupplierId", this._SupplierId, value);
                this._SupplierId = value;
            }
        }

        public global::System.Int32? ManufacturerId
        {
            get
            {
                return this._ManufacturerId;
            }
            set
            {
                this.OnPropertyChanged("ManufacturerId", this._ManufacturerId, value);
                this._ManufacturerId = value;
            }
        }

        public string FactoryCode
        {
            get
            {
                return this._FactoryCode;
            }
            set
            {
                this.OnPropertyChanged("FactoryCode", this._FactoryCode, value);
                this._FactoryCode = value;
            }
        }

        public string ExtractorId
        {
            get
            {
                return this._ExtractorId;
            }
            set
            {
                this.OnPropertyChanged("ExtractorId", this._ExtractorId, value);
                this._ExtractorId = value;
            }
        }

        public string ReceiverId
        {
            get
            {
                return this._ReceiverId;
            }
            set
            {
                this.OnPropertyChanged("ReceiverId", this._ReceiverId, value);
                this._ReceiverId = value;
            }
        }

        public string FetcherId
        {
            get
            {
                return this._FetcherId;
            }
            set
            {
                this.OnPropertyChanged("FetcherId", this._FetcherId, value);
                this._FetcherId = value;
            }
        }

        public string HandlerId
        {
            get
            {
                return this._HandlerId;
            }
            set
            {
                this.OnPropertyChanged("HandlerId", this._HandlerId, value);
                this._HandlerId = value;
            }
        }

        public string CheckResult
        {
            get
            {
                return this._CheckResult;
            }
            set
            {
                this.OnPropertyChanged("CheckResult", this._CheckResult, value);
                this._CheckResult = value;
            }
        }

        public global::System.DateTime? ReceiveDate
        {
            get
            {
                return this._ReceiveDate;
            }
            set
            {
                this.OnPropertyChanged("ReceiveDate", this._ReceiveDate, value);
                this._ReceiveDate = value;
            }
        }

        public global::System.DateTime? SendDate
        {
            get
            {
                return this._SendDate;
            }
            set
            {
                this.OnPropertyChanged("SendDate", this._SendDate, value);
                this._SendDate = value;
            }
        }

        public global::System.DateTime? ReturnDate
        {
            get
            {
                return this._ReturnDate;
            }
            set
            {
                this.OnPropertyChanged("ReturnDate", this._ReturnDate, value);
                this._ReturnDate = value;
            }
        }

        public global::System.DateTime? HandleDate
        {
            get
            {
                return this._HandleDate;
            }
            set
            {
                this.OnPropertyChanged("HandleDate", this._HandleDate, value);
                this._HandleDate = value;
            }
        }

        public global::System.DateTime? RecordDate
        {
            get
            {
                return this._RecordDate;
            }
            set
            {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }

        public string HandleMethod
        {
            get
            {
                return this._HandleMethod;
            }
            set
            {
                this.OnPropertyChanged("HandleMethod", this._HandleMethod, value);
                this._HandleMethod = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((QmcSampleLedger._QmcSampleLedgerEntityConfiguration == null))
            {
                QmcSampleLedger._QmcSampleLedgerEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmcSampleLedger");
            }
            return QmcSampleLedger._QmcSampleLedgerEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._LedgerId,
                    this._BillDetailId,
                    this._BillNo,
                    this._OrderId,
                    this._Barcode,
                    this._BatchCode,
                    this._Frequency,
                    this._MaterialCode,
                    this._SampleCode,
                    this._SampleName,
                    this._SampleSource,
                    this._SampleNum,
                    this._SpecId,
                    this._SampleUnit,
                    this._SampleStatus,
                    this._SupplierId,
                    this._ManufacturerId,
                    this._FactoryCode,
                    this._ExtractorId,
                    this._ReceiverId,
                    this._FetcherId,
                    this._HandlerId,
                    this._CheckResult,
                    this._ReceiveDate,
                    this._SendDate,
                    this._ReturnDate,
                    this._HandleDate,
                    this._RecordDate,
                    this._HandleMethod,
                    this._Remark,
                    this._DeleteFlag};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._LedgerId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._BillDetailId = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._BillNo = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._OrderId = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._Barcode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._BatchCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._Frequency = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._MaterialCode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._SampleCode = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._SampleName = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._SampleSource = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._SampleNum = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._SpecId = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._SampleUnit = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._SampleStatus = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._SupplierId = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._ManufacturerId = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._FactoryCode = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._ExtractorId = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._ReceiverId = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._FetcherId = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._HandlerId = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._CheckResult = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._ReceiveDate = this.GetDateTime(reader, 23);
            }
            if ((false == reader.IsDBNull(24)))
            {
                this._SendDate = this.GetDateTime(reader, 24);
            }
            if ((false == reader.IsDBNull(25)))
            {
                this._ReturnDate = this.GetDateTime(reader, 25);
            }
            if ((false == reader.IsDBNull(26)))
            {
                this._HandleDate = this.GetDateTime(reader, 26);
            }
            if ((false == reader.IsDBNull(27)))
            {
                this._RecordDate = this.GetDateTime(reader, 27);
            }
            if ((false == reader.IsDBNull(28)))
            {
                this._HandleMethod = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29)))
            {
                this._Remark = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30)))
            {
                this._DeleteFlag = reader.GetString(30);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._LedgerId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._BillDetailId = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._BillNo = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._OrderId = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._Barcode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._BatchCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._Frequency = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._MaterialCode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._SampleCode = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._SampleName = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._SampleSource = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._SampleNum = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._SpecId = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._SampleUnit = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._SampleStatus = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._SupplierId = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._ManufacturerId = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._FactoryCode = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._ExtractorId = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._ReceiverId = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._FetcherId = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._HandlerId = ((string)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._CheckResult = ((string)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._ReceiveDate = this.GetDateTime(row, 23);
            }
            if ((false == row.IsNull(24)))
            {
                this._SendDate = this.GetDateTime(row, 24);
            }
            if ((false == row.IsNull(25)))
            {
                this._ReturnDate = this.GetDateTime(row, 25);
            }
            if ((false == row.IsNull(26)))
            {
                this._HandleDate = this.GetDateTime(row, 26);
            }
            if ((false == row.IsNull(27)))
            {
                this._RecordDate = this.GetDateTime(row, 27);
            }
            if ((false == row.IsNull(28)))
            {
                this._HandleMethod = ((string)(row[28]));
            }
            if ((false == row.IsNull(29)))
            {
                this._Remark = ((string)(row[29]));
            }
            if ((false == row.IsNull(30)))
            {
                this._DeleteFlag = ((string)(row[30]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmcSampleLedger).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmcSampleLedger)(obj)).isAttached)
                        && (this.LedgerId == ((global::Mesnac.Entity.QmcSampleLedger)(obj)).LedgerId));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _LedgerId = new NBear.Common.PropertyItem("LedgerId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _BillDetailId = new NBear.Common.PropertyItem("BillDetailId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _OrderId = new NBear.Common.PropertyItem("OrderId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _BatchCode = new NBear.Common.PropertyItem("BatchCode", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _Frequency = new NBear.Common.PropertyItem("Frequency", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SampleCode = new NBear.Common.PropertyItem("SampleCode", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SampleName = new NBear.Common.PropertyItem("SampleName", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SampleSource = new NBear.Common.PropertyItem("SampleSource", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SampleNum = new NBear.Common.PropertyItem("SampleNum", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SpecId = new NBear.Common.PropertyItem("SpecId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SampleUnit = new NBear.Common.PropertyItem("SampleUnit", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SampleStatus = new NBear.Common.PropertyItem("SampleStatus", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SupplierId = new NBear.Common.PropertyItem("SupplierId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _ManufacturerId = new NBear.Common.PropertyItem("ManufacturerId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _FactoryCode = new NBear.Common.PropertyItem("FactoryCode", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _ExtractorId = new NBear.Common.PropertyItem("ExtractorId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _ReceiverId = new NBear.Common.PropertyItem("ReceiverId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _FetcherId = new NBear.Common.PropertyItem("FetcherId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _HandlerId = new NBear.Common.PropertyItem("HandlerId", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _CheckResult = new NBear.Common.PropertyItem("CheckResult", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _ReceiveDate = new NBear.Common.PropertyItem("ReceiveDate", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _SendDate = new NBear.Common.PropertyItem("SendDate", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _ReturnDate = new NBear.Common.PropertyItem("ReturnDate", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _HandleDate = new NBear.Common.PropertyItem("HandleDate", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _HandleMethod = new NBear.Common.PropertyItem("HandleMethod", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.QmcSampleLedger");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmcSampleLedger");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem LedgerId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LedgerId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LedgerId", _LedgerId.EntityConfiguration, _LedgerId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BillDetailId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillDetailId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillDetailId", _BillDetailId.EntityConfiguration, _BillDetailId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BillNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem OrderId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _OrderId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("OrderId", _OrderId.EntityConfiguration, _OrderId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Barcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Barcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem BatchCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BatchCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BatchCode", _BatchCode.EntityConfiguration, _BatchCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Frequency
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Frequency;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Frequency", _Frequency.EntityConfiguration, _Frequency.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterialCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterialCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SampleCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SampleCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SampleCode", _SampleCode.EntityConfiguration, _SampleCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SampleName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SampleName;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SampleName", _SampleName.EntityConfiguration, _SampleName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SampleSource
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SampleSource;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SampleSource", _SampleSource.EntityConfiguration, _SampleSource.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SampleNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SampleNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SampleNum", _SampleNum.EntityConfiguration, _SampleNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SpecId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SpecId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SpecId", _SpecId.EntityConfiguration, _SpecId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SampleUnit
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SampleUnit;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SampleUnit", _SampleUnit.EntityConfiguration, _SampleUnit.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SampleStatus
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SampleStatus;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SampleStatus", _SampleStatus.EntityConfiguration, _SampleStatus.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SupplierId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SupplierId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SupplierId", _SupplierId.EntityConfiguration, _SupplierId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ManufacturerId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ManufacturerId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ManufacturerId", _ManufacturerId.EntityConfiguration, _ManufacturerId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FactoryCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FactoryCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FactoryCode", _FactoryCode.EntityConfiguration, _FactoryCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ExtractorId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ExtractorId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ExtractorId", _ExtractorId.EntityConfiguration, _ExtractorId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReceiverId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReceiverId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReceiverId", _ReceiverId.EntityConfiguration, _ReceiverId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FetcherId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FetcherId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FetcherId", _FetcherId.EntityConfiguration, _FetcherId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem HandlerId
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HandlerId;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("HandlerId", _HandlerId.EntityConfiguration, _HandlerId.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem CheckResult
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _CheckResult;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("CheckResult", _CheckResult.EntityConfiguration, _CheckResult.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReceiveDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReceiveDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReceiveDate", _ReceiveDate.EntityConfiguration, _ReceiveDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SendDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SendDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SendDate", _SendDate.EntityConfiguration, _SendDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturnDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturnDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturnDate", _ReturnDate.EntityConfiguration, _ReturnDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem HandleDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HandleDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("HandleDate", _HandleDate.EntityConfiguration, _HandleDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RecordDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RecordDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem HandleMethod
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HandleMethod;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("HandleMethod", _HandleMethod.EntityConfiguration, _HandleMethod.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
