//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_MaterfirstEquipArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_MaterfirstEquip> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_MaterfirstEquip\" isReadOnly=\"false\" isAutoPreLoad=\"false" +
        "\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_MaterfirstEquip\" bat" +
        "chSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"Serialid\" type=\"System.Int32\" " +
        "isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Serialid\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryK" +
        "ey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Sub_fac\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Sub_fac\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_Code\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Mater_Code\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ma" +
        "ter_name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Mater_name\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Equip_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_Code\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"Equip_name\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equ" +
        "ip_name\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Ppt_MaterfirstEquip : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_MaterfirstEquipEntityConfiguration;
        
        protected int _Serialid;
        
        protected string _Sub_fac;
        
        protected string _Mater_Code;
        
        protected string _Mater_name;
        
        protected string _Equip_Code;
        
        protected string _Equip_name;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_MaterfirstEquip left, global::Mesnac.Entity.Ppt_MaterfirstEquip right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_MaterfirstEquip left, global::Mesnac.Entity.Ppt_MaterfirstEquip right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public string Sub_fac {
            get {
                return this._Sub_fac;
            }
            set {
                this.OnPropertyChanged("Sub_fac", this._Sub_fac, value);
                this._Sub_fac = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public string Mater_name {
            get {
                return this._Mater_name;
            }
            set {
                this.OnPropertyChanged("Mater_name", this._Mater_name, value);
                this._Mater_name = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public string Equip_name {
            get {
                return this._Equip_name;
            }
            set {
                this.OnPropertyChanged("Equip_name", this._Equip_name, value);
                this._Equip_name = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_MaterfirstEquip._Ppt_MaterfirstEquipEntityConfiguration == null)) {
                Ppt_MaterfirstEquip._Ppt_MaterfirstEquipEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_MaterfirstEquip");
            }
            return Ppt_MaterfirstEquip._Ppt_MaterfirstEquipEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serialid,
                    this._Sub_fac,
                    this._Mater_Code,
                    this._Mater_name,
                    this._Equip_Code,
                    this._Equip_name};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serialid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Sub_fac = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mater_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mater_name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_Code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Equip_name = reader.GetString(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serialid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Sub_fac = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mater_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mater_name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_Code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Equip_name = ((string)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_MaterfirstEquip).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_MaterfirstEquip)(obj)).isAttached) 
                        && (this.Serialid == ((global::Mesnac.Entity.Ppt_MaterfirstEquip)(obj)).Serialid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Ppt_MaterfirstEquip");
            
            protected NBear.Common.PropertyItem _Sub_fac = new NBear.Common.PropertyItem("Sub_fac", "Mesnac.Entity.Ppt_MaterfirstEquip");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.Ppt_MaterfirstEquip");
            
            protected NBear.Common.PropertyItem _Mater_name = new NBear.Common.PropertyItem("Mater_name", "Mesnac.Entity.Ppt_MaterfirstEquip");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Ppt_MaterfirstEquip");
            
            protected NBear.Common.PropertyItem _Equip_name = new NBear.Common.PropertyItem("Equip_name", "Mesnac.Entity.Ppt_MaterfirstEquip");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Sub_fac {
                get {
                    if ((aliasName == null)) {
                        return _Sub_fac;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Sub_fac", _Sub_fac.EntityConfiguration, _Sub_fac.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_name", _Mater_name.EntityConfiguration, _Mater_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_name {
                get {
                    if ((aliasName == null)) {
                        return _Equip_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_name", _Equip_name.EntityConfiguration, _Equip_name.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
