//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtRecipeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtRecipe> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtRecipe\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"PmtRecipe\" batchSize=\"10\">\r\n  <Pro" +
        "perties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" ma" +
        "ppingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true" +
        "\" />\r\n    <Property name=\"RecipeEquipCode\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Re" +
        "cipeEquipCode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeMaterialCode\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"RecipeMaterialCode\" mappingColumnType=\"System.String\" s" +
        "qlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"RecipeVersionID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeVersionID\" mappingColu" +
        "mnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"RecipeName\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeName\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"RecipeType\" type=\"System.Nullable`1[System" +
        ".Int32]\" isInherited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"RecipeType\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"RecipeMaterialName\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"RecipeMaterialName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeUserVersion\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"RecipeUserVersion\" mappingColumnType=\"System." +
        "String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"RecipeState\" type=\"System.String\" isInherited=\"false\" sqlDefaultVa" +
        "lue=\"\'1\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"RecipeState\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeDefineDate\" type=\"Syst" +
        "em.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Recipe" +
        "DefineDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"date" +
        "time\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeModif" +
        "yUser\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeModi" +
        "fyUser\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeModifyTime\" type=\"System.N" +
        "ullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeModi" +
        "fyTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LotDoneTime\" ty" +
        "pe=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LotDone" +
        "Time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShelfLotCount\" type=\"Syst" +
        "em.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(5)\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShelfLotCount\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"LotTotalWeight\" type=\"System.Nu" +
        "llable`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0.00)\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LotTotalWeight\"" +
        " mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CarbonRecycleType\" type=" +
        "\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'2\'\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"CarbonRecycleType\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"CarbonRecycleTime\" type=\"System.Nullable`1[System.Int3" +
        "2]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"CarbonRecycleTime\" mappingColumnType=\"System.Nullable`1[System" +
        ".Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"OverTempMinTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" sqlDefaultValue=\"(100)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"OverTempMinTime\" mappingColumnType=\"System.Nullable`1[System" +
        ".Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"OverTimeSetTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" sqlDefaultValue=\"(300)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"OverTimeSetTime\" mappingColumnType=\"System.Nullable`1[System" +
        ".Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"OverTempSetTemp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" sqlDefaultValue=\"(150)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"OverTempSetTemp\" mappingColumnType=\"System.Nullable`1[System" +
        ".Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"InPolyMaxTemp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" " +
        "sqlDefaultValue=\"(100)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"InPolyMaxTemp\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"InPolyMinTemp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlD" +
        "efaultValue=\"(20)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"InPolyMinTemp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
        "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InP" +
        "olySetTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaul" +
        "tValue=\"(25)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"InPolySetTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InCarbon" +
        "SetTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultVa" +
        "lue=\"(40)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"InCarbonSetTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTyp" +
        "e=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InOilSetT" +
        "ime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=" +
        "\"(25)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"InOilSetTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InPowderSetTime\"" +
        " type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(25" +
        ")\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"InP" +
        "owderSetTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RollSpeedDiff\" ty" +
        "pe=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(5)\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RollSpe" +
        "edDiff\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RamPressDiff\" type=\"Sys" +
        "tem.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(5)\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RamPressDiff\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"IsUseAreaTemp\" type=\"System.Str" +
        "ing\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"IsUseAreaTemp\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"SideTemp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SideTe" +
        "mp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SideTempDiff\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"SideTempDiff\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"RollTemp\" type=\"System.Nullable`1[System.Int32]\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"(150)\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"RollTemp\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"RollTempDiff\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" sqlDefaultValue=\"(150)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"RollTempDiff\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"DdoorTemp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefa" +
        "ultValue=\"(30)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"DdoorTemp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType" +
        "=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DdoorTempD" +
        "iff\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=" +
        "\"(10)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"DdoorTempDiff\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OperCode\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"OperCode\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Remark\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"StartDatetime\" type=\"System.Nullable`1[System." +
        "DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"StartDatetime\" mappingColum" +
        "nType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"EndDatetime\" type=\"System.Nullable`" +
        "1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EndDatetime\" mappingColu" +
        "mnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"AuditFlag\" type=\"System.String\" is" +
        "Inherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"AuditFlag\" mappingColumnType=\"System.String\" s" +
        "qlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "AuditUser\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"AuditUser\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"AuditDateTime\" type=\"System.Nullable`1[System.DateTime]\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"AuditDateTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sq" +
        "lType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "RecipeDic\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"RecipeDic\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"StayTimeSpand\" type=\"System.Nullable`1[System.Int32]\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"StayTimeSpand\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"RearchCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RearchCode\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"CanAuditUser\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "CanAuditUser\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(0)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MakeUpTemp\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"MakeUpTemp\" mappingColumnType=\"System.Null" +
        "able`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"NewFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultV" +
        "alue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"NewFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"SAPVersionID\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"SAPVersionID\" mappingColumnType=\"System.String\" sqlType=\"nvarc" +
        "har(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"B_Versio" +
        "n\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"B_Version\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"R_Version\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"R_Version\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"S_Factory\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S_Factory\"" +
        " mappingColumnType=\"System.String\" sqlType=\"varchar(5)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"DisChangeTime\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"DisChangeTime\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Packweight\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pack" +
        "weight\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FactoryCode\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"FactoryCode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"HFF" +
        "lag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"HFFlag\" mappingColumnType=\"System.String" +
        "\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"JieDuan\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"JieDuan\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"CloseCC\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CloseCC\" mappingColum" +
        "nType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PmtRecipe : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtRecipeEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _RecipeEquipCode;
        
        protected string _RecipeMaterialCode;
        
        protected int _RecipeVersionID;
        
        protected string _RecipeName;
        
        protected global::System.Int32? _RecipeType;
        
        protected string _RecipeMaterialName;
        
        protected string _RecipeUserVersion;
        
        protected string _RecipeState;
        
        protected global::System.DateTime? _RecipeDefineDate;
        
        protected string _RecipeModifyUser;
        
        protected global::System.DateTime? _RecipeModifyTime;
        
        protected global::System.Int32? _LotDoneTime;
        
        protected global::System.Int32? _ShelfLotCount;
        
        protected global::System.Decimal? _LotTotalWeight;
        
        protected string _CarbonRecycleType;
        
        protected global::System.Int32? _CarbonRecycleTime;
        
        protected global::System.Int32? _OverTempMinTime;
        
        protected global::System.Int32? _OverTimeSetTime;
        
        protected global::System.Int32? _OverTempSetTemp;
        
        protected global::System.Int32? _InPolyMaxTemp;
        
        protected global::System.Int32? _InPolyMinTemp;
        
        protected global::System.Int32? _InPolySetTime;
        
        protected global::System.Int32? _InCarbonSetTime;
        
        protected global::System.Int32? _InOilSetTime;
        
        protected global::System.Int32? _InPowderSetTime;
        
        protected global::System.Int32? _RollSpeedDiff;
        
        protected global::System.Int32? _RamPressDiff;
        
        protected string _IsUseAreaTemp;
        
        protected global::System.Int32? _SideTemp;
        
        protected global::System.Int32? _SideTempDiff;
        
        protected global::System.Int32? _RollTemp;
        
        protected global::System.Int32? _RollTempDiff;
        
        protected global::System.Int32? _DdoorTemp;
        
        protected global::System.Int32? _DdoorTempDiff;
        
        protected string _OperCode;
        
        protected string _Remark;
        
        protected global::System.DateTime? _StartDatetime;
        
        protected global::System.DateTime? _EndDatetime;
        
        protected string _AuditFlag;
        
        protected string _AuditUser;
        
        protected global::System.DateTime? _AuditDateTime;
        
        protected string _RecipeDic;
        
        protected global::System.Int32? _StayTimeSpand;
        
        protected string _RearchCode;
        
        protected string _CanAuditUser;
        
        protected global::System.Int32? _MakeUpTemp;
        
        protected string _NewFlag;
        
        protected string _SAPVersionID;
        
        protected string _B_Version;
        
        protected string _R_Version;
        
        protected string _S_Factory;
        
        protected global::System.Int32? _DisChangeTime;
        
        protected global::System.Int32? _Packweight;
        
        protected string _FactoryCode;
        
        protected string _HFFlag;
        
        protected string _JieDuan;
        
        protected string _CloseCC;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtRecipe left, global::Mesnac.Entity.PmtRecipe right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtRecipe left, global::Mesnac.Entity.PmtRecipe right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string RecipeEquipCode {
            get {
                return this._RecipeEquipCode;
            }
            set {
                this.OnPropertyChanged("RecipeEquipCode", this._RecipeEquipCode, value);
                this._RecipeEquipCode = value;
            }
        }
        
        public string RecipeMaterialCode {
            get {
                return this._RecipeMaterialCode;
            }
            set {
                this.OnPropertyChanged("RecipeMaterialCode", this._RecipeMaterialCode, value);
                this._RecipeMaterialCode = value;
            }
        }
        
        public int RecipeVersionID {
            get {
                return this._RecipeVersionID;
            }
            set {
                this.OnPropertyChanged("RecipeVersionID", this._RecipeVersionID, value);
                this._RecipeVersionID = value;
            }
        }
        
        public string RecipeName {
            get {
                return this._RecipeName;
            }
            set {
                this.OnPropertyChanged("RecipeName", this._RecipeName, value);
                this._RecipeName = value;
            }
        }
        
        public global::System.Int32? RecipeType {
            get {
                return this._RecipeType;
            }
            set {
                this.OnPropertyChanged("RecipeType", this._RecipeType, value);
                this._RecipeType = value;
            }
        }
        
        public string RecipeMaterialName {
            get {
                return this._RecipeMaterialName;
            }
            set {
                this.OnPropertyChanged("RecipeMaterialName", this._RecipeMaterialName, value);
                this._RecipeMaterialName = value;
            }
        }
        
        public string RecipeUserVersion {
            get {
                return this._RecipeUserVersion;
            }
            set {
                this.OnPropertyChanged("RecipeUserVersion", this._RecipeUserVersion, value);
                this._RecipeUserVersion = value;
            }
        }
        
        public string RecipeState {
            get {
                return this._RecipeState;
            }
            set {
                this.OnPropertyChanged("RecipeState", this._RecipeState, value);
                this._RecipeState = value;
            }
        }
        
        public global::System.DateTime? RecipeDefineDate {
            get {
                return this._RecipeDefineDate;
            }
            set {
                this.OnPropertyChanged("RecipeDefineDate", this._RecipeDefineDate, value);
                this._RecipeDefineDate = value;
            }
        }
        
        public string RecipeModifyUser {
            get {
                return this._RecipeModifyUser;
            }
            set {
                this.OnPropertyChanged("RecipeModifyUser", this._RecipeModifyUser, value);
                this._RecipeModifyUser = value;
            }
        }
        
        public global::System.DateTime? RecipeModifyTime {
            get {
                return this._RecipeModifyTime;
            }
            set {
                this.OnPropertyChanged("RecipeModifyTime", this._RecipeModifyTime, value);
                this._RecipeModifyTime = value;
            }
        }
        
        public global::System.Int32? LotDoneTime {
            get {
                return this._LotDoneTime;
            }
            set {
                this.OnPropertyChanged("LotDoneTime", this._LotDoneTime, value);
                this._LotDoneTime = value;
            }
        }
        
        public global::System.Int32? ShelfLotCount {
            get {
                return this._ShelfLotCount;
            }
            set {
                this.OnPropertyChanged("ShelfLotCount", this._ShelfLotCount, value);
                this._ShelfLotCount = value;
            }
        }
        
        public global::System.Decimal? LotTotalWeight {
            get {
                return this._LotTotalWeight;
            }
            set {
                this.OnPropertyChanged("LotTotalWeight", this._LotTotalWeight, value);
                this._LotTotalWeight = value;
            }
        }
        
        public string CarbonRecycleType {
            get {
                return this._CarbonRecycleType;
            }
            set {
                this.OnPropertyChanged("CarbonRecycleType", this._CarbonRecycleType, value);
                this._CarbonRecycleType = value;
            }
        }
        
        public global::System.Int32? CarbonRecycleTime {
            get {
                return this._CarbonRecycleTime;
            }
            set {
                this.OnPropertyChanged("CarbonRecycleTime", this._CarbonRecycleTime, value);
                this._CarbonRecycleTime = value;
            }
        }
        
        public global::System.Int32? OverTempMinTime {
            get {
                return this._OverTempMinTime;
            }
            set {
                this.OnPropertyChanged("OverTempMinTime", this._OverTempMinTime, value);
                this._OverTempMinTime = value;
            }
        }
        
        public global::System.Int32? OverTimeSetTime {
            get {
                return this._OverTimeSetTime;
            }
            set {
                this.OnPropertyChanged("OverTimeSetTime", this._OverTimeSetTime, value);
                this._OverTimeSetTime = value;
            }
        }
        
        public global::System.Int32? OverTempSetTemp {
            get {
                return this._OverTempSetTemp;
            }
            set {
                this.OnPropertyChanged("OverTempSetTemp", this._OverTempSetTemp, value);
                this._OverTempSetTemp = value;
            }
        }
        
        public global::System.Int32? InPolyMaxTemp {
            get {
                return this._InPolyMaxTemp;
            }
            set {
                this.OnPropertyChanged("InPolyMaxTemp", this._InPolyMaxTemp, value);
                this._InPolyMaxTemp = value;
            }
        }
        
        public global::System.Int32? InPolyMinTemp {
            get {
                return this._InPolyMinTemp;
            }
            set {
                this.OnPropertyChanged("InPolyMinTemp", this._InPolyMinTemp, value);
                this._InPolyMinTemp = value;
            }
        }
        
        public global::System.Int32? InPolySetTime {
            get {
                return this._InPolySetTime;
            }
            set {
                this.OnPropertyChanged("InPolySetTime", this._InPolySetTime, value);
                this._InPolySetTime = value;
            }
        }
        
        public global::System.Int32? InCarbonSetTime {
            get {
                return this._InCarbonSetTime;
            }
            set {
                this.OnPropertyChanged("InCarbonSetTime", this._InCarbonSetTime, value);
                this._InCarbonSetTime = value;
            }
        }
        
        public global::System.Int32? InOilSetTime {
            get {
                return this._InOilSetTime;
            }
            set {
                this.OnPropertyChanged("InOilSetTime", this._InOilSetTime, value);
                this._InOilSetTime = value;
            }
        }
        
        public global::System.Int32? InPowderSetTime {
            get {
                return this._InPowderSetTime;
            }
            set {
                this.OnPropertyChanged("InPowderSetTime", this._InPowderSetTime, value);
                this._InPowderSetTime = value;
            }
        }
        
        public global::System.Int32? RollSpeedDiff {
            get {
                return this._RollSpeedDiff;
            }
            set {
                this.OnPropertyChanged("RollSpeedDiff", this._RollSpeedDiff, value);
                this._RollSpeedDiff = value;
            }
        }
        
        public global::System.Int32? RamPressDiff {
            get {
                return this._RamPressDiff;
            }
            set {
                this.OnPropertyChanged("RamPressDiff", this._RamPressDiff, value);
                this._RamPressDiff = value;
            }
        }
        
        public string IsUseAreaTemp {
            get {
                return this._IsUseAreaTemp;
            }
            set {
                this.OnPropertyChanged("IsUseAreaTemp", this._IsUseAreaTemp, value);
                this._IsUseAreaTemp = value;
            }
        }
        
        public global::System.Int32? SideTemp {
            get {
                return this._SideTemp;
            }
            set {
                this.OnPropertyChanged("SideTemp", this._SideTemp, value);
                this._SideTemp = value;
            }
        }
        
        public global::System.Int32? SideTempDiff {
            get {
                return this._SideTempDiff;
            }
            set {
                this.OnPropertyChanged("SideTempDiff", this._SideTempDiff, value);
                this._SideTempDiff = value;
            }
        }
        
        public global::System.Int32? RollTemp {
            get {
                return this._RollTemp;
            }
            set {
                this.OnPropertyChanged("RollTemp", this._RollTemp, value);
                this._RollTemp = value;
            }
        }
        
        public global::System.Int32? RollTempDiff {
            get {
                return this._RollTempDiff;
            }
            set {
                this.OnPropertyChanged("RollTempDiff", this._RollTempDiff, value);
                this._RollTempDiff = value;
            }
        }
        
        public global::System.Int32? DdoorTemp {
            get {
                return this._DdoorTemp;
            }
            set {
                this.OnPropertyChanged("DdoorTemp", this._DdoorTemp, value);
                this._DdoorTemp = value;
            }
        }
        
        public global::System.Int32? DdoorTempDiff {
            get {
                return this._DdoorTempDiff;
            }
            set {
                this.OnPropertyChanged("DdoorTempDiff", this._DdoorTempDiff, value);
                this._DdoorTempDiff = value;
            }
        }
        
        public string OperCode {
            get {
                return this._OperCode;
            }
            set {
                this.OnPropertyChanged("OperCode", this._OperCode, value);
                this._OperCode = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.DateTime? StartDatetime {
            get {
                return this._StartDatetime;
            }
            set {
                this.OnPropertyChanged("StartDatetime", this._StartDatetime, value);
                this._StartDatetime = value;
            }
        }
        
        public global::System.DateTime? EndDatetime {
            get {
                return this._EndDatetime;
            }
            set {
                this.OnPropertyChanged("EndDatetime", this._EndDatetime, value);
                this._EndDatetime = value;
            }
        }
        
        public string AuditFlag {
            get {
                return this._AuditFlag;
            }
            set {
                this.OnPropertyChanged("AuditFlag", this._AuditFlag, value);
                this._AuditFlag = value;
            }
        }
        
        public string AuditUser {
            get {
                return this._AuditUser;
            }
            set {
                this.OnPropertyChanged("AuditUser", this._AuditUser, value);
                this._AuditUser = value;
            }
        }
        
        public global::System.DateTime? AuditDateTime {
            get {
                return this._AuditDateTime;
            }
            set {
                this.OnPropertyChanged("AuditDateTime", this._AuditDateTime, value);
                this._AuditDateTime = value;
            }
        }
        
        public string RecipeDic {
            get {
                return this._RecipeDic;
            }
            set {
                this.OnPropertyChanged("RecipeDic", this._RecipeDic, value);
                this._RecipeDic = value;
            }
        }
        
        public global::System.Int32? StayTimeSpand {
            get {
                return this._StayTimeSpand;
            }
            set {
                this.OnPropertyChanged("StayTimeSpand", this._StayTimeSpand, value);
                this._StayTimeSpand = value;
            }
        }
        
        public string RearchCode {
            get {
                return this._RearchCode;
            }
            set {
                this.OnPropertyChanged("RearchCode", this._RearchCode, value);
                this._RearchCode = value;
            }
        }
        
        public string CanAuditUser {
            get {
                return this._CanAuditUser;
            }
            set {
                this.OnPropertyChanged("CanAuditUser", this._CanAuditUser, value);
                this._CanAuditUser = value;
            }
        }
        
        public global::System.Int32? MakeUpTemp {
            get {
                return this._MakeUpTemp;
            }
            set {
                this.OnPropertyChanged("MakeUpTemp", this._MakeUpTemp, value);
                this._MakeUpTemp = value;
            }
        }
        
        public string NewFlag {
            get {
                return this._NewFlag;
            }
            set {
                this.OnPropertyChanged("NewFlag", this._NewFlag, value);
                this._NewFlag = value;
            }
        }
        
        public string SAPVersionID {
            get {
                return this._SAPVersionID;
            }
            set {
                this.OnPropertyChanged("SAPVersionID", this._SAPVersionID, value);
                this._SAPVersionID = value;
            }
        }
        
        public string B_Version {
            get {
                return this._B_Version;
            }
            set {
                this.OnPropertyChanged("B_Version", this._B_Version, value);
                this._B_Version = value;
            }
        }
        
        public string R_Version {
            get {
                return this._R_Version;
            }
            set {
                this.OnPropertyChanged("R_Version", this._R_Version, value);
                this._R_Version = value;
            }
        }
        
        public string S_Factory {
            get {
                return this._S_Factory;
            }
            set {
                this.OnPropertyChanged("S_Factory", this._S_Factory, value);
                this._S_Factory = value;
            }
        }
        
        public global::System.Int32? DisChangeTime {
            get {
                return this._DisChangeTime;
            }
            set {
                this.OnPropertyChanged("DisChangeTime", this._DisChangeTime, value);
                this._DisChangeTime = value;
            }
        }
        
        public global::System.Int32? Packweight {
            get {
                return this._Packweight;
            }
            set {
                this.OnPropertyChanged("Packweight", this._Packweight, value);
                this._Packweight = value;
            }
        }
        
        public string FactoryCode {
            get {
                return this._FactoryCode;
            }
            set {
                this.OnPropertyChanged("FactoryCode", this._FactoryCode, value);
                this._FactoryCode = value;
            }
        }
        
        public string HFFlag {
            get {
                return this._HFFlag;
            }
            set {
                this.OnPropertyChanged("HFFlag", this._HFFlag, value);
                this._HFFlag = value;
            }
        }
        
        public string JieDuan {
            get {
                return this._JieDuan;
            }
            set {
                this.OnPropertyChanged("JieDuan", this._JieDuan, value);
                this._JieDuan = value;
            }
        }
        
        public string CloseCC {
            get {
                return this._CloseCC;
            }
            set {
                this.OnPropertyChanged("CloseCC", this._CloseCC, value);
                this._CloseCC = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtRecipe._PmtRecipeEntityConfiguration == null)) {
                PmtRecipe._PmtRecipeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtRecipe");
            }
            return PmtRecipe._PmtRecipeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._RecipeEquipCode,
                    this._RecipeMaterialCode,
                    this._RecipeVersionID,
                    this._RecipeName,
                    this._RecipeType,
                    this._RecipeMaterialName,
                    this._RecipeUserVersion,
                    this._RecipeState,
                    this._RecipeDefineDate,
                    this._RecipeModifyUser,
                    this._RecipeModifyTime,
                    this._LotDoneTime,
                    this._ShelfLotCount,
                    this._LotTotalWeight,
                    this._CarbonRecycleType,
                    this._CarbonRecycleTime,
                    this._OverTempMinTime,
                    this._OverTimeSetTime,
                    this._OverTempSetTemp,
                    this._InPolyMaxTemp,
                    this._InPolyMinTemp,
                    this._InPolySetTime,
                    this._InCarbonSetTime,
                    this._InOilSetTime,
                    this._InPowderSetTime,
                    this._RollSpeedDiff,
                    this._RamPressDiff,
                    this._IsUseAreaTemp,
                    this._SideTemp,
                    this._SideTempDiff,
                    this._RollTemp,
                    this._RollTempDiff,
                    this._DdoorTemp,
                    this._DdoorTempDiff,
                    this._OperCode,
                    this._Remark,
                    this._StartDatetime,
                    this._EndDatetime,
                    this._AuditFlag,
                    this._AuditUser,
                    this._AuditDateTime,
                    this._RecipeDic,
                    this._StayTimeSpand,
                    this._RearchCode,
                    this._CanAuditUser,
                    this._MakeUpTemp,
                    this._NewFlag,
                    this._SAPVersionID,
                    this._B_Version,
                    this._R_Version,
                    this._S_Factory,
                    this._DisChangeTime,
                    this._Packweight,
                    this._FactoryCode,
                    this._HFFlag,
                    this._JieDuan,
                    this._CloseCC};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._RecipeEquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._RecipeMaterialCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RecipeVersionID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RecipeName = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RecipeType = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._RecipeMaterialName = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._RecipeUserVersion = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._RecipeState = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._RecipeDefineDate = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._RecipeModifyUser = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._RecipeModifyTime = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._LotDoneTime = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._ShelfLotCount = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._LotTotalWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._CarbonRecycleType = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._CarbonRecycleTime = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._OverTempMinTime = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._OverTimeSetTime = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._OverTempSetTemp = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._InPolyMaxTemp = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._InPolyMinTemp = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._InPolySetTime = reader.GetInt32(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._InCarbonSetTime = reader.GetInt32(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._InOilSetTime = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._InPowderSetTime = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._RollSpeedDiff = reader.GetInt32(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._RamPressDiff = reader.GetInt32(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._IsUseAreaTemp = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._SideTemp = reader.GetInt32(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._SideTempDiff = reader.GetInt32(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._RollTemp = reader.GetInt32(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._RollTempDiff = reader.GetInt32(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._DdoorTemp = reader.GetInt32(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._DdoorTempDiff = reader.GetInt32(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._OperCode = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._Remark = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._StartDatetime = this.GetDateTime(reader, 37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._EndDatetime = this.GetDateTime(reader, 38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._AuditFlag = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._AuditUser = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._AuditDateTime = this.GetDateTime(reader, 41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._RecipeDic = reader.GetString(42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._StayTimeSpand = reader.GetInt32(43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._RearchCode = reader.GetString(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._CanAuditUser = reader.GetString(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._MakeUpTemp = reader.GetInt32(46);
            }
            if ((false == reader.IsDBNull(47))) {
                this._NewFlag = reader.GetString(47);
            }
            if ((false == reader.IsDBNull(48))) {
                this._SAPVersionID = reader.GetString(48);
            }
            if ((false == reader.IsDBNull(49))) {
                this._B_Version = reader.GetString(49);
            }
            if ((false == reader.IsDBNull(50))) {
                this._R_Version = reader.GetString(50);
            }
            if ((false == reader.IsDBNull(51))) {
                this._S_Factory = reader.GetString(51);
            }
            if ((false == reader.IsDBNull(52))) {
                this._DisChangeTime = reader.GetInt32(52);
            }
            if ((false == reader.IsDBNull(53))) {
                this._Packweight = reader.GetInt32(53);
            }
            if ((false == reader.IsDBNull(54))) {
                this._FactoryCode = reader.GetString(54);
            }
            if ((false == reader.IsDBNull(55))) {
                this._HFFlag = reader.GetString(55);
            }
            if ((false == reader.IsDBNull(56))) {
                this._JieDuan = reader.GetString(56);
            }
            if ((false == reader.IsDBNull(57))) {
                this._CloseCC = reader.GetString(57);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._RecipeEquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._RecipeMaterialCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RecipeVersionID = ((int)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._RecipeName = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._RecipeType = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._RecipeMaterialName = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._RecipeUserVersion = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._RecipeState = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._RecipeDefineDate = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10))) {
                this._RecipeModifyUser = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._RecipeModifyTime = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._LotDoneTime = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._ShelfLotCount = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._LotTotalWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._CarbonRecycleType = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._CarbonRecycleTime = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._OverTempMinTime = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._OverTimeSetTime = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._OverTempSetTemp = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._InPolyMaxTemp = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._InPolyMinTemp = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._InPolySetTime = ((System.Nullable<int>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._InCarbonSetTime = ((System.Nullable<int>)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._InOilSetTime = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._InPowderSetTime = ((System.Nullable<int>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._RollSpeedDiff = ((System.Nullable<int>)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._RamPressDiff = ((System.Nullable<int>)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._IsUseAreaTemp = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._SideTemp = ((System.Nullable<int>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._SideTempDiff = ((System.Nullable<int>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._RollTemp = ((System.Nullable<int>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._RollTempDiff = ((System.Nullable<int>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._DdoorTemp = ((System.Nullable<int>)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._DdoorTempDiff = ((System.Nullable<int>)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._OperCode = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._Remark = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._StartDatetime = this.GetDateTime(row, 37);
            }
            if ((false == row.IsNull(38))) {
                this._EndDatetime = this.GetDateTime(row, 38);
            }
            if ((false == row.IsNull(39))) {
                this._AuditFlag = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._AuditUser = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._AuditDateTime = this.GetDateTime(row, 41);
            }
            if ((false == row.IsNull(42))) {
                this._RecipeDic = ((string)(row[42]));
            }
            if ((false == row.IsNull(43))) {
                this._StayTimeSpand = ((System.Nullable<int>)(row[43]));
            }
            if ((false == row.IsNull(44))) {
                this._RearchCode = ((string)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._CanAuditUser = ((string)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._MakeUpTemp = ((System.Nullable<int>)(row[46]));
            }
            if ((false == row.IsNull(47))) {
                this._NewFlag = ((string)(row[47]));
            }
            if ((false == row.IsNull(48))) {
                this._SAPVersionID = ((string)(row[48]));
            }
            if ((false == row.IsNull(49))) {
                this._B_Version = ((string)(row[49]));
            }
            if ((false == row.IsNull(50))) {
                this._R_Version = ((string)(row[50]));
            }
            if ((false == row.IsNull(51))) {
                this._S_Factory = ((string)(row[51]));
            }
            if ((false == row.IsNull(52))) {
                this._DisChangeTime = ((System.Nullable<int>)(row[52]));
            }
            if ((false == row.IsNull(53))) {
                this._Packweight = ((System.Nullable<int>)(row[53]));
            }
            if ((false == row.IsNull(54))) {
                this._FactoryCode = ((string)(row[54]));
            }
            if ((false == row.IsNull(55))) {
                this._HFFlag = ((string)(row[55]));
            }
            if ((false == row.IsNull(56))) {
                this._JieDuan = ((string)(row[56]));
            }
            if ((false == row.IsNull(57))) {
                this._CloseCC = ((string)(row[57]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtRecipe).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtRecipe)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PmtRecipe)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeEquipCode = new NBear.Common.PropertyItem("RecipeEquipCode", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeMaterialCode = new NBear.Common.PropertyItem("RecipeMaterialCode", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeVersionID = new NBear.Common.PropertyItem("RecipeVersionID", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeName = new NBear.Common.PropertyItem("RecipeName", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeType = new NBear.Common.PropertyItem("RecipeType", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeMaterialName = new NBear.Common.PropertyItem("RecipeMaterialName", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeUserVersion = new NBear.Common.PropertyItem("RecipeUserVersion", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeState = new NBear.Common.PropertyItem("RecipeState", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeDefineDate = new NBear.Common.PropertyItem("RecipeDefineDate", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeModifyUser = new NBear.Common.PropertyItem("RecipeModifyUser", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeModifyTime = new NBear.Common.PropertyItem("RecipeModifyTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _LotDoneTime = new NBear.Common.PropertyItem("LotDoneTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _ShelfLotCount = new NBear.Common.PropertyItem("ShelfLotCount", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _LotTotalWeight = new NBear.Common.PropertyItem("LotTotalWeight", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _CarbonRecycleType = new NBear.Common.PropertyItem("CarbonRecycleType", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _CarbonRecycleTime = new NBear.Common.PropertyItem("CarbonRecycleTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _OverTempMinTime = new NBear.Common.PropertyItem("OverTempMinTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _OverTimeSetTime = new NBear.Common.PropertyItem("OverTimeSetTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _OverTempSetTemp = new NBear.Common.PropertyItem("OverTempSetTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _InPolyMaxTemp = new NBear.Common.PropertyItem("InPolyMaxTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _InPolyMinTemp = new NBear.Common.PropertyItem("InPolyMinTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _InPolySetTime = new NBear.Common.PropertyItem("InPolySetTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _InCarbonSetTime = new NBear.Common.PropertyItem("InCarbonSetTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _InOilSetTime = new NBear.Common.PropertyItem("InOilSetTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _InPowderSetTime = new NBear.Common.PropertyItem("InPowderSetTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RollSpeedDiff = new NBear.Common.PropertyItem("RollSpeedDiff", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RamPressDiff = new NBear.Common.PropertyItem("RamPressDiff", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _IsUseAreaTemp = new NBear.Common.PropertyItem("IsUseAreaTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _SideTemp = new NBear.Common.PropertyItem("SideTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _SideTempDiff = new NBear.Common.PropertyItem("SideTempDiff", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RollTemp = new NBear.Common.PropertyItem("RollTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RollTempDiff = new NBear.Common.PropertyItem("RollTempDiff", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _DdoorTemp = new NBear.Common.PropertyItem("DdoorTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _DdoorTempDiff = new NBear.Common.PropertyItem("DdoorTempDiff", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _OperCode = new NBear.Common.PropertyItem("OperCode", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _StartDatetime = new NBear.Common.PropertyItem("StartDatetime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _EndDatetime = new NBear.Common.PropertyItem("EndDatetime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _AuditFlag = new NBear.Common.PropertyItem("AuditFlag", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _AuditUser = new NBear.Common.PropertyItem("AuditUser", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _AuditDateTime = new NBear.Common.PropertyItem("AuditDateTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RecipeDic = new NBear.Common.PropertyItem("RecipeDic", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _StayTimeSpand = new NBear.Common.PropertyItem("StayTimeSpand", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _RearchCode = new NBear.Common.PropertyItem("RearchCode", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _CanAuditUser = new NBear.Common.PropertyItem("CanAuditUser", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _MakeUpTemp = new NBear.Common.PropertyItem("MakeUpTemp", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _NewFlag = new NBear.Common.PropertyItem("NewFlag", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _SAPVersionID = new NBear.Common.PropertyItem("SAPVersionID", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _B_Version = new NBear.Common.PropertyItem("B_Version", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _R_Version = new NBear.Common.PropertyItem("R_Version", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _S_Factory = new NBear.Common.PropertyItem("S_Factory", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _DisChangeTime = new NBear.Common.PropertyItem("DisChangeTime", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _Packweight = new NBear.Common.PropertyItem("Packweight", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _FactoryCode = new NBear.Common.PropertyItem("FactoryCode", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _HFFlag = new NBear.Common.PropertyItem("HFFlag", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _JieDuan = new NBear.Common.PropertyItem("JieDuan", "Mesnac.Entity.PmtRecipe");
            
            protected NBear.Common.PropertyItem _CloseCC = new NBear.Common.PropertyItem("CloseCC", "Mesnac.Entity.PmtRecipe");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeEquipCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeEquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeEquipCode", _RecipeEquipCode.EntityConfiguration, _RecipeEquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeMaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeMaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeMaterialCode", _RecipeMaterialCode.EntityConfiguration, _RecipeMaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeVersionID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeVersionID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeVersionID", _RecipeVersionID.EntityConfiguration, _RecipeVersionID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeName {
                get {
                    if ((aliasName == null)) {
                        return _RecipeName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeName", _RecipeName.EntityConfiguration, _RecipeName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeType {
                get {
                    if ((aliasName == null)) {
                        return _RecipeType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeType", _RecipeType.EntityConfiguration, _RecipeType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeMaterialName {
                get {
                    if ((aliasName == null)) {
                        return _RecipeMaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeMaterialName", _RecipeMaterialName.EntityConfiguration, _RecipeMaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeUserVersion {
                get {
                    if ((aliasName == null)) {
                        return _RecipeUserVersion;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeUserVersion", _RecipeUserVersion.EntityConfiguration, _RecipeUserVersion.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeState {
                get {
                    if ((aliasName == null)) {
                        return _RecipeState;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeState", _RecipeState.EntityConfiguration, _RecipeState.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeDefineDate {
                get {
                    if ((aliasName == null)) {
                        return _RecipeDefineDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeDefineDate", _RecipeDefineDate.EntityConfiguration, _RecipeDefineDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeModifyUser {
                get {
                    if ((aliasName == null)) {
                        return _RecipeModifyUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeModifyUser", _RecipeModifyUser.EntityConfiguration, _RecipeModifyUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeModifyTime {
                get {
                    if ((aliasName == null)) {
                        return _RecipeModifyTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeModifyTime", _RecipeModifyTime.EntityConfiguration, _RecipeModifyTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LotDoneTime {
                get {
                    if ((aliasName == null)) {
                        return _LotDoneTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LotDoneTime", _LotDoneTime.EntityConfiguration, _LotDoneTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfLotCount {
                get {
                    if ((aliasName == null)) {
                        return _ShelfLotCount;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfLotCount", _ShelfLotCount.EntityConfiguration, _ShelfLotCount.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LotTotalWeight {
                get {
                    if ((aliasName == null)) {
                        return _LotTotalWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LotTotalWeight", _LotTotalWeight.EntityConfiguration, _LotTotalWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CarbonRecycleType {
                get {
                    if ((aliasName == null)) {
                        return _CarbonRecycleType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CarbonRecycleType", _CarbonRecycleType.EntityConfiguration, _CarbonRecycleType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CarbonRecycleTime {
                get {
                    if ((aliasName == null)) {
                        return _CarbonRecycleTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CarbonRecycleTime", _CarbonRecycleTime.EntityConfiguration, _CarbonRecycleTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTempMinTime {
                get {
                    if ((aliasName == null)) {
                        return _OverTempMinTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTempMinTime", _OverTempMinTime.EntityConfiguration, _OverTempMinTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTimeSetTime {
                get {
                    if ((aliasName == null)) {
                        return _OverTimeSetTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTimeSetTime", _OverTimeSetTime.EntityConfiguration, _OverTimeSetTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTempSetTemp {
                get {
                    if ((aliasName == null)) {
                        return _OverTempSetTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTempSetTemp", _OverTempSetTemp.EntityConfiguration, _OverTempSetTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InPolyMaxTemp {
                get {
                    if ((aliasName == null)) {
                        return _InPolyMaxTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InPolyMaxTemp", _InPolyMaxTemp.EntityConfiguration, _InPolyMaxTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InPolyMinTemp {
                get {
                    if ((aliasName == null)) {
                        return _InPolyMinTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InPolyMinTemp", _InPolyMinTemp.EntityConfiguration, _InPolyMinTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InPolySetTime {
                get {
                    if ((aliasName == null)) {
                        return _InPolySetTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InPolySetTime", _InPolySetTime.EntityConfiguration, _InPolySetTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InCarbonSetTime {
                get {
                    if ((aliasName == null)) {
                        return _InCarbonSetTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InCarbonSetTime", _InCarbonSetTime.EntityConfiguration, _InCarbonSetTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InOilSetTime {
                get {
                    if ((aliasName == null)) {
                        return _InOilSetTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InOilSetTime", _InOilSetTime.EntityConfiguration, _InOilSetTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InPowderSetTime {
                get {
                    if ((aliasName == null)) {
                        return _InPowderSetTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InPowderSetTime", _InPowderSetTime.EntityConfiguration, _InPowderSetTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RollSpeedDiff {
                get {
                    if ((aliasName == null)) {
                        return _RollSpeedDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RollSpeedDiff", _RollSpeedDiff.EntityConfiguration, _RollSpeedDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RamPressDiff {
                get {
                    if ((aliasName == null)) {
                        return _RamPressDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RamPressDiff", _RamPressDiff.EntityConfiguration, _RamPressDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsUseAreaTemp {
                get {
                    if ((aliasName == null)) {
                        return _IsUseAreaTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsUseAreaTemp", _IsUseAreaTemp.EntityConfiguration, _IsUseAreaTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SideTemp {
                get {
                    if ((aliasName == null)) {
                        return _SideTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SideTemp", _SideTemp.EntityConfiguration, _SideTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SideTempDiff {
                get {
                    if ((aliasName == null)) {
                        return _SideTempDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SideTempDiff", _SideTempDiff.EntityConfiguration, _SideTempDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RollTemp {
                get {
                    if ((aliasName == null)) {
                        return _RollTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RollTemp", _RollTemp.EntityConfiguration, _RollTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RollTempDiff {
                get {
                    if ((aliasName == null)) {
                        return _RollTempDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RollTempDiff", _RollTempDiff.EntityConfiguration, _RollTempDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DdoorTemp {
                get {
                    if ((aliasName == null)) {
                        return _DdoorTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DdoorTemp", _DdoorTemp.EntityConfiguration, _DdoorTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DdoorTempDiff {
                get {
                    if ((aliasName == null)) {
                        return _DdoorTempDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DdoorTempDiff", _DdoorTempDiff.EntityConfiguration, _DdoorTempDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperCode {
                get {
                    if ((aliasName == null)) {
                        return _OperCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperCode", _OperCode.EntityConfiguration, _OperCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StartDatetime {
                get {
                    if ((aliasName == null)) {
                        return _StartDatetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StartDatetime", _StartDatetime.EntityConfiguration, _StartDatetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EndDatetime {
                get {
                    if ((aliasName == null)) {
                        return _EndDatetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EndDatetime", _EndDatetime.EntityConfiguration, _EndDatetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AuditFlag {
                get {
                    if ((aliasName == null)) {
                        return _AuditFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AuditFlag", _AuditFlag.EntityConfiguration, _AuditFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AuditUser {
                get {
                    if ((aliasName == null)) {
                        return _AuditUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AuditUser", _AuditUser.EntityConfiguration, _AuditUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AuditDateTime {
                get {
                    if ((aliasName == null)) {
                        return _AuditDateTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AuditDateTime", _AuditDateTime.EntityConfiguration, _AuditDateTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeDic {
                get {
                    if ((aliasName == null)) {
                        return _RecipeDic;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeDic", _RecipeDic.EntityConfiguration, _RecipeDic.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StayTimeSpand {
                get {
                    if ((aliasName == null)) {
                        return _StayTimeSpand;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StayTimeSpand", _StayTimeSpand.EntityConfiguration, _StayTimeSpand.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RearchCode {
                get {
                    if ((aliasName == null)) {
                        return _RearchCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RearchCode", _RearchCode.EntityConfiguration, _RearchCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CanAuditUser {
                get {
                    if ((aliasName == null)) {
                        return _CanAuditUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CanAuditUser", _CanAuditUser.EntityConfiguration, _CanAuditUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MakeUpTemp {
                get {
                    if ((aliasName == null)) {
                        return _MakeUpTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MakeUpTemp", _MakeUpTemp.EntityConfiguration, _MakeUpTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NewFlag {
                get {
                    if ((aliasName == null)) {
                        return _NewFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NewFlag", _NewFlag.EntityConfiguration, _NewFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPVersionID {
                get {
                    if ((aliasName == null)) {
                        return _SAPVersionID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPVersionID", _SAPVersionID.EntityConfiguration, _SAPVersionID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem B_Version {
                get {
                    if ((aliasName == null)) {
                        return _B_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("B_Version", _B_Version.EntityConfiguration, _B_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem R_Version {
                get {
                    if ((aliasName == null)) {
                        return _R_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("R_Version", _R_Version.EntityConfiguration, _R_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem S_Factory {
                get {
                    if ((aliasName == null)) {
                        return _S_Factory;
                    }
                    else {
                        return new NBear.Common.PropertyItem("S_Factory", _S_Factory.EntityConfiguration, _S_Factory.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DisChangeTime {
                get {
                    if ((aliasName == null)) {
                        return _DisChangeTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DisChangeTime", _DisChangeTime.EntityConfiguration, _DisChangeTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Packweight {
                get {
                    if ((aliasName == null)) {
                        return _Packweight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Packweight", _Packweight.EntityConfiguration, _Packweight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FactoryCode {
                get {
                    if ((aliasName == null)) {
                        return _FactoryCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FactoryCode", _FactoryCode.EntityConfiguration, _FactoryCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HFFlag {
                get {
                    if ((aliasName == null)) {
                        return _HFFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HFFlag", _HFFlag.EntityConfiguration, _HFFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JieDuan {
                get {
                    if ((aliasName == null)) {
                        return _JieDuan;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JieDuan", _JieDuan.EntityConfiguration, _JieDuan.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CloseCC {
                get {
                    if ((aliasName == null)) {
                        return _CloseCC;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CloseCC", _CloseCC.EntityConfiguration, _CloseCC.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
