//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmtCheckStandMasterArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmtCheckStandMaster> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.QmtCheckStandMaster\" isReadOnly=\"true\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmtCheckStandMaster\" batc" +
        "hSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"StandId\" type=\"System.Int32\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"StandId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StandCode\" type=\"System.Nullab" +
        "le`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"StandCode\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"MaterCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"DefineDate\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DefineDat" +
        "e\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"WorkerBarcode\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"WorkerBarcode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StandVision\" type=\"Sys" +
        "tem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"StandVision\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"StandVisionStat\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stan" +
        "dVisionStat\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"StandDate\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"StandDate\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"QuaCompute\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"QuaCompute\" mappingColumnType=\"System.String\" sqlType=" +
        "\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MemoNot" +
        "e\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"MemoNote\" mappingColumnType=\"System.String\"" +
        " sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Choiceness\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"Choiceness\" mappingColumnType" +
        "=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"RegDateTime\" type=\"System.Nullable`1[System.DateTime]\" isInher" +
        "ited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"RegDateTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlTyp" +
        "e=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dele" +
        "teFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System." +
        "String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"GUID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"GUID\" mappingColumnType=\"System" +
        ".String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"LastModifyTime\" type=\"System.DateTime\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LastModifyTime\"" +
        " mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"LastSubmitTime\" type=\"System.Nullable`1[S" +
        "ystem.DateTime]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"LastSubmitTime\" mappingColumnType=\"System.Nullable" +
        "`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"LastSubmitUser\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"LastSub" +
        "mitUser\" mappingColumnType=\"System.String\" sqlType=\"varchar(5)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"LastAuditTime\" type=\"System.Nulla" +
        "ble`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"LastAuditTime\" mappingColumnType=\"System.Nu" +
        "llable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"LastAuditUser\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"La" +
        "stAuditUser\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LastAuditMemo\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"LastAuditMemo\" mappingColumnType=\"System.String\" sqlType=\"va" +
        "rchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LLStand" +
        "Vision\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"LLStandVision\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"PmtType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PmtType\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"PmtTypeName\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PmtTyp" +
        "eName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class QmtCheckStandMaster : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmtCheckStandMasterEntityConfiguration;
        
        protected int _StandId;
        
        protected global::System.Int32? _StandCode;
        
        protected string _MaterCode;
        
        protected string _DefineDate;
        
        protected string _WorkerBarcode;
        
        protected global::System.Int32? _StandVision;
        
        protected string _StandVisionStat;
        
        protected string _StandDate;
        
        protected string _QuaCompute;
        
        protected string _MemoNote;
        
        protected string _Choiceness;
        
        protected global::System.DateTime? _RegDateTime;
        
        protected string _DeleteFlag;
        
        protected string _GUID;
        
        protected global::System.DateTime _LastModifyTime;
        
        protected global::System.DateTime? _LastSubmitTime;
        
        protected string _LastSubmitUser;
        
        protected global::System.DateTime? _LastAuditTime;
        
        protected string _LastAuditUser;
        
        protected string _LastAuditMemo;
        
        protected string _LLStandVision;
        
        protected string _PmtType;
        
        protected string _PmtTypeName;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmtCheckStandMaster left, global::Mesnac.Entity.QmtCheckStandMaster right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmtCheckStandMaster left, global::Mesnac.Entity.QmtCheckStandMaster right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int StandId {
            get {
                return this._StandId;
            }
            set {
                this.OnPropertyChanged("StandId", this._StandId, value);
                this._StandId = value;
            }
        }
        
        public global::System.Int32? StandCode {
            get {
                return this._StandCode;
            }
            set {
                this.OnPropertyChanged("StandCode", this._StandCode, value);
                this._StandCode = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public string DefineDate {
            get {
                return this._DefineDate;
            }
            set {
                this.OnPropertyChanged("DefineDate", this._DefineDate, value);
                this._DefineDate = value;
            }
        }
        
        public string WorkerBarcode {
            get {
                return this._WorkerBarcode;
            }
            set {
                this.OnPropertyChanged("WorkerBarcode", this._WorkerBarcode, value);
                this._WorkerBarcode = value;
            }
        }
        
        public global::System.Int32? StandVision {
            get {
                return this._StandVision;
            }
            set {
                this.OnPropertyChanged("StandVision", this._StandVision, value);
                this._StandVision = value;
            }
        }
        
        public string StandVisionStat {
            get {
                return this._StandVisionStat;
            }
            set {
                this.OnPropertyChanged("StandVisionStat", this._StandVisionStat, value);
                this._StandVisionStat = value;
            }
        }
        
        public string StandDate {
            get {
                return this._StandDate;
            }
            set {
                this.OnPropertyChanged("StandDate", this._StandDate, value);
                this._StandDate = value;
            }
        }
        
        public string QuaCompute {
            get {
                return this._QuaCompute;
            }
            set {
                this.OnPropertyChanged("QuaCompute", this._QuaCompute, value);
                this._QuaCompute = value;
            }
        }
        
        public string MemoNote {
            get {
                return this._MemoNote;
            }
            set {
                this.OnPropertyChanged("MemoNote", this._MemoNote, value);
                this._MemoNote = value;
            }
        }
        
        public string Choiceness {
            get {
                return this._Choiceness;
            }
            set {
                this.OnPropertyChanged("Choiceness", this._Choiceness, value);
                this._Choiceness = value;
            }
        }
        
        public global::System.DateTime? RegDateTime {
            get {
                return this._RegDateTime;
            }
            set {
                this.OnPropertyChanged("RegDateTime", this._RegDateTime, value);
                this._RegDateTime = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string GUID {
            get {
                return this._GUID;
            }
            set {
                this.OnPropertyChanged("GUID", this._GUID, value);
                this._GUID = value;
            }
        }
        
        public global::System.DateTime LastModifyTime {
            get {
                return this._LastModifyTime;
            }
            set {
                this.OnPropertyChanged("LastModifyTime", this._LastModifyTime, value);
                this._LastModifyTime = value;
            }
        }
        
        public global::System.DateTime? LastSubmitTime {
            get {
                return this._LastSubmitTime;
            }
            set {
                this.OnPropertyChanged("LastSubmitTime", this._LastSubmitTime, value);
                this._LastSubmitTime = value;
            }
        }
        
        public string LastSubmitUser {
            get {
                return this._LastSubmitUser;
            }
            set {
                this.OnPropertyChanged("LastSubmitUser", this._LastSubmitUser, value);
                this._LastSubmitUser = value;
            }
        }
        
        public global::System.DateTime? LastAuditTime {
            get {
                return this._LastAuditTime;
            }
            set {
                this.OnPropertyChanged("LastAuditTime", this._LastAuditTime, value);
                this._LastAuditTime = value;
            }
        }
        
        public string LastAuditUser {
            get {
                return this._LastAuditUser;
            }
            set {
                this.OnPropertyChanged("LastAuditUser", this._LastAuditUser, value);
                this._LastAuditUser = value;
            }
        }
        
        public string LastAuditMemo {
            get {
                return this._LastAuditMemo;
            }
            set {
                this.OnPropertyChanged("LastAuditMemo", this._LastAuditMemo, value);
                this._LastAuditMemo = value;
            }
        }
        
        public string LLStandVision {
            get {
                return this._LLStandVision;
            }
            set {
                this.OnPropertyChanged("LLStandVision", this._LLStandVision, value);
                this._LLStandVision = value;
            }
        }
        
        public string PmtType {
            get {
                return this._PmtType;
            }
            set {
                this.OnPropertyChanged("PmtType", this._PmtType, value);
                this._PmtType = value;
            }
        }
        
        public string PmtTypeName {
            get {
                return this._PmtTypeName;
            }
            set {
                this.OnPropertyChanged("PmtTypeName", this._PmtTypeName, value);
                this._PmtTypeName = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmtCheckStandMaster._QmtCheckStandMasterEntityConfiguration == null)) {
                QmtCheckStandMaster._QmtCheckStandMasterEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmtCheckStandMaster");
            }
            return QmtCheckStandMaster._QmtCheckStandMasterEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._StandId,
                    this._StandCode,
                    this._MaterCode,
                    this._DefineDate,
                    this._WorkerBarcode,
                    this._StandVision,
                    this._StandVisionStat,
                    this._StandDate,
                    this._QuaCompute,
                    this._MemoNote,
                    this._Choiceness,
                    this._RegDateTime,
                    this._DeleteFlag,
                    this._GUID,
                    this._LastModifyTime,
                    this._LastSubmitTime,
                    this._LastSubmitUser,
                    this._LastAuditTime,
                    this._LastAuditUser,
                    this._LastAuditMemo,
                    this._LLStandVision,
                    this._PmtType,
                    this._PmtTypeName};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._StandId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._StandCode = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MaterCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._DefineDate = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._WorkerBarcode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._StandVision = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._StandVisionStat = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._StandDate = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._QuaCompute = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._MemoNote = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Choiceness = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._RegDateTime = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._DeleteFlag = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._GUID = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._LastModifyTime = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._LastSubmitTime = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._LastSubmitUser = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._LastAuditTime = this.GetDateTime(reader, 17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._LastAuditUser = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._LastAuditMemo = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._LLStandVision = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._PmtType = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._PmtTypeName = reader.GetString(22);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._StandId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._StandCode = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MaterCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._DefineDate = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._WorkerBarcode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._StandVision = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._StandVisionStat = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._StandDate = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._QuaCompute = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._MemoNote = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Choiceness = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._RegDateTime = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._DeleteFlag = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._GUID = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._LastModifyTime = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15))) {
                this._LastSubmitTime = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16))) {
                this._LastSubmitUser = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._LastAuditTime = this.GetDateTime(row, 17);
            }
            if ((false == row.IsNull(18))) {
                this._LastAuditUser = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._LastAuditMemo = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._LLStandVision = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._PmtType = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._PmtTypeName = ((string)(row[22]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmtCheckStandMaster).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmtCheckStandMaster)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _StandId = new NBear.Common.PropertyItem("StandId", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _StandCode = new NBear.Common.PropertyItem("StandCode", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _DefineDate = new NBear.Common.PropertyItem("DefineDate", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _WorkerBarcode = new NBear.Common.PropertyItem("WorkerBarcode", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _StandVision = new NBear.Common.PropertyItem("StandVision", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _StandVisionStat = new NBear.Common.PropertyItem("StandVisionStat", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _StandDate = new NBear.Common.PropertyItem("StandDate", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _QuaCompute = new NBear.Common.PropertyItem("QuaCompute", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _MemoNote = new NBear.Common.PropertyItem("MemoNote", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _Choiceness = new NBear.Common.PropertyItem("Choiceness", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _RegDateTime = new NBear.Common.PropertyItem("RegDateTime", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _GUID = new NBear.Common.PropertyItem("GUID", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LastModifyTime = new NBear.Common.PropertyItem("LastModifyTime", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LastSubmitTime = new NBear.Common.PropertyItem("LastSubmitTime", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LastSubmitUser = new NBear.Common.PropertyItem("LastSubmitUser", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LastAuditTime = new NBear.Common.PropertyItem("LastAuditTime", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LastAuditUser = new NBear.Common.PropertyItem("LastAuditUser", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LastAuditMemo = new NBear.Common.PropertyItem("LastAuditMemo", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _LLStandVision = new NBear.Common.PropertyItem("LLStandVision", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _PmtType = new NBear.Common.PropertyItem("PmtType", "Mesnac.Entity.QmtCheckStandMaster");
            
            protected NBear.Common.PropertyItem _PmtTypeName = new NBear.Common.PropertyItem("PmtTypeName", "Mesnac.Entity.QmtCheckStandMaster");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem StandId {
                get {
                    if ((aliasName == null)) {
                        return _StandId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandId", _StandId.EntityConfiguration, _StandId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandCode {
                get {
                    if ((aliasName == null)) {
                        return _StandCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandCode", _StandCode.EntityConfiguration, _StandCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DefineDate {
                get {
                    if ((aliasName == null)) {
                        return _DefineDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DefineDate", _DefineDate.EntityConfiguration, _DefineDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkerBarcode {
                get {
                    if ((aliasName == null)) {
                        return _WorkerBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkerBarcode", _WorkerBarcode.EntityConfiguration, _WorkerBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandVision {
                get {
                    if ((aliasName == null)) {
                        return _StandVision;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandVision", _StandVision.EntityConfiguration, _StandVision.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandVisionStat {
                get {
                    if ((aliasName == null)) {
                        return _StandVisionStat;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandVisionStat", _StandVisionStat.EntityConfiguration, _StandVisionStat.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandDate {
                get {
                    if ((aliasName == null)) {
                        return _StandDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandDate", _StandDate.EntityConfiguration, _StandDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem QuaCompute {
                get {
                    if ((aliasName == null)) {
                        return _QuaCompute;
                    }
                    else {
                        return new NBear.Common.PropertyItem("QuaCompute", _QuaCompute.EntityConfiguration, _QuaCompute.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MemoNote {
                get {
                    if ((aliasName == null)) {
                        return _MemoNote;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MemoNote", _MemoNote.EntityConfiguration, _MemoNote.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Choiceness {
                get {
                    if ((aliasName == null)) {
                        return _Choiceness;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Choiceness", _Choiceness.EntityConfiguration, _Choiceness.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RegDateTime {
                get {
                    if ((aliasName == null)) {
                        return _RegDateTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RegDateTime", _RegDateTime.EntityConfiguration, _RegDateTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GUID {
                get {
                    if ((aliasName == null)) {
                        return _GUID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GUID", _GUID.EntityConfiguration, _GUID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastModifyTime {
                get {
                    if ((aliasName == null)) {
                        return _LastModifyTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastModifyTime", _LastModifyTime.EntityConfiguration, _LastModifyTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastSubmitTime {
                get {
                    if ((aliasName == null)) {
                        return _LastSubmitTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastSubmitTime", _LastSubmitTime.EntityConfiguration, _LastSubmitTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastSubmitUser {
                get {
                    if ((aliasName == null)) {
                        return _LastSubmitUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastSubmitUser", _LastSubmitUser.EntityConfiguration, _LastSubmitUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastAuditTime {
                get {
                    if ((aliasName == null)) {
                        return _LastAuditTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastAuditTime", _LastAuditTime.EntityConfiguration, _LastAuditTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastAuditUser {
                get {
                    if ((aliasName == null)) {
                        return _LastAuditUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastAuditUser", _LastAuditUser.EntityConfiguration, _LastAuditUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastAuditMemo {
                get {
                    if ((aliasName == null)) {
                        return _LastAuditMemo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastAuditMemo", _LastAuditMemo.EntityConfiguration, _LastAuditMemo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLStandVision {
                get {
                    if ((aliasName == null)) {
                        return _LLStandVision;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLStandVision", _LLStandVision.EntityConfiguration, _LLStandVision.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PmtType {
                get {
                    if ((aliasName == null)) {
                        return _PmtType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PmtType", _PmtType.EntityConfiguration, _PmtType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PmtTypeName {
                get {
                    if ((aliasName == null)) {
                        return _PmtTypeName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PmtTypeName", _PmtTypeName.EntityConfiguration, _PmtTypeName.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
