//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmInventoryDatelistArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmInventoryDatelist> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmInventoryDatelist\" isReadOnly=\"false\" isAutoPreLoad=\"fals" +
        "e\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmInventoryDatelist\" b" +
        "atchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"InventoryNum\" type=\"System.I" +
        "nt32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"InventoryNum\" mappingColumnType=\"System.Int32\" sqlType=\"int\"" +
        " isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"EndDate\" type=\"Sys" +
        "tem.DateTime\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"EndDate\" mappingColumnType=\"System.DateTime\" sqlType" +
        "=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EndSh" +
        "iftID\" type=\"System.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"EndShiftID\" mappingColumnType=\"System.I" +
        "nt16\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"PanCunType\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PanCunT" +
        "ype\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EndFlag\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"EndFlag\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InventoryStatus" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"InventoryStatus\" mappingColumnType=\"System." +
        "String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"CalcSign\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CalcS" +
        "ign\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JZSIGN\" type=\"System.Nulla" +
        "ble`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"JZSIGN\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"PDDate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PDDate\" mappingColumnType" +
        "=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"StorageID\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StorageID\" m" +
        "appingColumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PpmInventoryDatelist : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmInventoryDatelistEntityConfiguration;
        
        protected int _InventoryNum;
        
        protected global::System.DateTime _EndDate;
        
        protected short _EndShiftID;
        
        protected global::System.Int32? _PanCunType;
        
        protected string _EndFlag;
        
        protected string _InventoryStatus;
        
        protected global::System.Int32? _CalcSign;
        
        protected global::System.Int32? _JZSIGN;
        
        protected string _PDDate;
        
        protected string _StorageID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmInventoryDatelist left, global::Mesnac.Entity.PpmInventoryDatelist right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmInventoryDatelist left, global::Mesnac.Entity.PpmInventoryDatelist right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int InventoryNum {
            get {
                return this._InventoryNum;
            }
            set {
                this.OnPropertyChanged("InventoryNum", this._InventoryNum, value);
                this._InventoryNum = value;
            }
        }
        
        public global::System.DateTime EndDate {
            get {
                return this._EndDate;
            }
            set {
                this.OnPropertyChanged("EndDate", this._EndDate, value);
                this._EndDate = value;
            }
        }
        
        public short EndShiftID {
            get {
                return this._EndShiftID;
            }
            set {
                this.OnPropertyChanged("EndShiftID", this._EndShiftID, value);
                this._EndShiftID = value;
            }
        }
        
        public global::System.Int32? PanCunType {
            get {
                return this._PanCunType;
            }
            set {
                this.OnPropertyChanged("PanCunType", this._PanCunType, value);
                this._PanCunType = value;
            }
        }
        
        public string EndFlag {
            get {
                return this._EndFlag;
            }
            set {
                this.OnPropertyChanged("EndFlag", this._EndFlag, value);
                this._EndFlag = value;
            }
        }
        
        public string InventoryStatus {
            get {
                return this._InventoryStatus;
            }
            set {
                this.OnPropertyChanged("InventoryStatus", this._InventoryStatus, value);
                this._InventoryStatus = value;
            }
        }
        
        public global::System.Int32? CalcSign {
            get {
                return this._CalcSign;
            }
            set {
                this.OnPropertyChanged("CalcSign", this._CalcSign, value);
                this._CalcSign = value;
            }
        }
        
        public global::System.Int32? JZSIGN {
            get {
                return this._JZSIGN;
            }
            set {
                this.OnPropertyChanged("JZSIGN", this._JZSIGN, value);
                this._JZSIGN = value;
            }
        }
        
        public string PDDate {
            get {
                return this._PDDate;
            }
            set {
                this.OnPropertyChanged("PDDate", this._PDDate, value);
                this._PDDate = value;
            }
        }
        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmInventoryDatelist._PpmInventoryDatelistEntityConfiguration == null)) {
                PpmInventoryDatelist._PpmInventoryDatelistEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmInventoryDatelist");
            }
            return PpmInventoryDatelist._PpmInventoryDatelistEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._InventoryNum,
                    this._EndDate,
                    this._EndShiftID,
                    this._PanCunType,
                    this._EndFlag,
                    this._InventoryStatus,
                    this._CalcSign,
                    this._JZSIGN,
                    this._PDDate,
                    this._StorageID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._InventoryNum = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EndDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EndShiftID = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._PanCunType = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._EndFlag = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._InventoryStatus = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._CalcSign = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._JZSIGN = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._PDDate = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._StorageID = reader.GetString(9);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._InventoryNum = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EndDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2))) {
                this._EndShiftID = ((short)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._PanCunType = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._EndFlag = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._InventoryStatus = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._CalcSign = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._JZSIGN = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._PDDate = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._StorageID = ((string)(row[9]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmInventoryDatelist).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PpmInventoryDatelist)(obj)).isAttached) 
                        && (this.InventoryNum == ((global::Mesnac.Entity.PpmInventoryDatelist)(obj)).InventoryNum));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _InventoryNum = new NBear.Common.PropertyItem("InventoryNum", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _EndDate = new NBear.Common.PropertyItem("EndDate", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _EndShiftID = new NBear.Common.PropertyItem("EndShiftID", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _PanCunType = new NBear.Common.PropertyItem("PanCunType", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _EndFlag = new NBear.Common.PropertyItem("EndFlag", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _InventoryStatus = new NBear.Common.PropertyItem("InventoryStatus", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _CalcSign = new NBear.Common.PropertyItem("CalcSign", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _JZSIGN = new NBear.Common.PropertyItem("JZSIGN", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _PDDate = new NBear.Common.PropertyItem("PDDate", "Mesnac.Entity.PpmInventoryDatelist");
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmInventoryDatelist");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem InventoryNum {
                get {
                    if ((aliasName == null)) {
                        return _InventoryNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InventoryNum", _InventoryNum.EntityConfiguration, _InventoryNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EndDate {
                get {
                    if ((aliasName == null)) {
                        return _EndDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EndDate", _EndDate.EntityConfiguration, _EndDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EndShiftID {
                get {
                    if ((aliasName == null)) {
                        return _EndShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EndShiftID", _EndShiftID.EntityConfiguration, _EndShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PanCunType {
                get {
                    if ((aliasName == null)) {
                        return _PanCunType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PanCunType", _PanCunType.EntityConfiguration, _PanCunType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EndFlag {
                get {
                    if ((aliasName == null)) {
                        return _EndFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EndFlag", _EndFlag.EntityConfiguration, _EndFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InventoryStatus {
                get {
                    if ((aliasName == null)) {
                        return _InventoryStatus;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InventoryStatus", _InventoryStatus.EntityConfiguration, _InventoryStatus.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CalcSign {
                get {
                    if ((aliasName == null)) {
                        return _CalcSign;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CalcSign", _CalcSign.EntityConfiguration, _CalcSign.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JZSIGN {
                get {
                    if ((aliasName == null)) {
                        return _JZSIGN;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JZSIGN", _JZSIGN.EntityConfiguration, _JZSIGN.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PDDate {
                get {
                    if ((aliasName == null)) {
                        return _PDDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PDDate", _PDDate.EntityConfiguration, _PDDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
