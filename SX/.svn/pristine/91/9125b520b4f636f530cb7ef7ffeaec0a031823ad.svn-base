//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasUserArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasUser> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasUser\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatchUpda" +
        "te=\"false\" isRelation=\"false\" mappingName=\"BasUser\" batchSize=\"10\">\r\n  <Properti" +
        "es>\r\n    <Property name=\"ObjID\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"UserName\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Use" +
        "rName\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"UserPWD\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"UserPWD\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealName\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"RealName\" mappingColumnType=\"System.String\" sqlType=\"nvarc" +
        "har(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sex\" typ" +
        "e=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Sex\" mappingColumnType=\"System.Int32\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Telephone\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Telephone\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(11)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"WorkBarcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"WorkBarcode\" mappingColumnType=\"" +
        "System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"DeptCode\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeptCode\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"WorkID\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"WorkID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTyp" +
        "e=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System.String\" sql" +
        "Type=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Wo" +
        "rkShopID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"WorkShopID\" mappingColumnType=\"System" +
        ".Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"HRCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"HRCode\" mappingColumnType=\"System" +
        ".String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"ERPCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"tru" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ERPCode\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFl" +
        "ag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"IsEmployee\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"IsEmployee\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"A\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"A\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"B\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnl" +
        "y=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"B\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"C\" type=\"System.Nullable`1[System.Int32]\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"C\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"D\" type=\"System.N" +
        "ullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"D\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"E\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"E\" mappingColum" +
        "nType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"F\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"F\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Work_type\" type=" +
        "\"System.Nullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"true\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"Work_type\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Work_typeA\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Work_typeA\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
        "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Wor" +
        "k_typeB\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"" +
        "true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Work_typeB\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Work_typeC\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Work_typeC\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Work_typeD\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Work_type" +
        "D\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Work_typeE\" type=\"System.Nul" +
        "lable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Work_typeE\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Work_typeF\" type=\"System.Nullable`1[System.Int32]\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Work_typeF\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"A_fen\" type=\"Syste" +
        "m.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"A_fen\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"B_fen\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"B_fe" +
        "n\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"C_fen\" type=\"System.Nullable" +
        "`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"C_fen\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"D_fen\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"D_fen\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"E_fen\" type=\"System.Nullable`1[System." +
        "Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"E_fen\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
        "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"F_f" +
        "en\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"F_fen\" mappingColumnType" +
        "=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Pic\" type=\"System.Byte[]\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pic\" mapp" +
        "ingColumnType=\"System.Byte[]\" sqlType=\"image\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class BasUser : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasUserEntityConfiguration;
        
        protected string _ObjID;
        
        protected string _UserName;
        
        protected string _UserPWD;
        
        protected string _RealName;
        
        protected int _Sex;
        
        protected string _Telephone;
        
        protected string _WorkBarcode;
        
        protected string _DeptCode;
        
        protected global::System.Int32? _WorkID;
        
        protected string _ShiftID;
        
        protected int _WorkShopID;
        
        protected string _HRCode;
        
        protected string _ERPCode;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _IsEmployee;
        
        protected global::System.Int32? _A;
        
        protected global::System.Int32? _B;
        
        protected global::System.Int32? _C;
        
        protected global::System.Int32? _D;
        
        protected global::System.Int32? _E;
        
        protected global::System.Int32? _F;
        
        protected global::System.Int16? _Work_type;
        
        protected global::System.Int32? _Work_typeA;
        
        protected global::System.Int32? _Work_typeB;
        
        protected global::System.Int32? _Work_typeC;
        
        protected global::System.Int32? _Work_typeD;
        
        protected global::System.Int32? _Work_typeE;
        
        protected global::System.Int32? _Work_typeF;
        
        protected global::System.Int32? _A_fen;
        
        protected global::System.Int32? _B_fen;
        
        protected global::System.Int32? _C_fen;
        
        protected global::System.Int32? _D_fen;
        
        protected global::System.Int32? _E_fen;
        
        protected global::System.Int32? _F_fen;
        
        protected byte[] _Pic;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasUser left, global::Mesnac.Entity.BasUser right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasUser left, global::Mesnac.Entity.BasUser right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string UserName {
            get {
                return this._UserName;
            }
            set {
                this.OnPropertyChanged("UserName", this._UserName, value);
                this._UserName = value;
            }
        }
        
        public string UserPWD {
            get {
                return this._UserPWD;
            }
            set {
                this.OnPropertyChanged("UserPWD", this._UserPWD, value);
                this._UserPWD = value;
            }
        }
        
        public string RealName {
            get {
                return this._RealName;
            }
            set {
                this.OnPropertyChanged("RealName", this._RealName, value);
                this._RealName = value;
            }
        }
        
        public int Sex {
            get {
                return this._Sex;
            }
            set {
                this.OnPropertyChanged("Sex", this._Sex, value);
                this._Sex = value;
            }
        }
        
        public string Telephone {
            get {
                return this._Telephone;
            }
            set {
                this.OnPropertyChanged("Telephone", this._Telephone, value);
                this._Telephone = value;
            }
        }
        
        public string WorkBarcode {
            get {
                return this._WorkBarcode;
            }
            set {
                this.OnPropertyChanged("WorkBarcode", this._WorkBarcode, value);
                this._WorkBarcode = value;
            }
        }
        
        public string DeptCode {
            get {
                return this._DeptCode;
            }
            set {
                this.OnPropertyChanged("DeptCode", this._DeptCode, value);
                this._DeptCode = value;
            }
        }
        
        public global::System.Int32? WorkID {
            get {
                return this._WorkID;
            }
            set {
                this.OnPropertyChanged("WorkID", this._WorkID, value);
                this._WorkID = value;
            }
        }
        
        public string ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public int WorkShopID {
            get {
                return this._WorkShopID;
            }
            set {
                this.OnPropertyChanged("WorkShopID", this._WorkShopID, value);
                this._WorkShopID = value;
            }
        }
        
        public string HRCode {
            get {
                return this._HRCode;
            }
            set {
                this.OnPropertyChanged("HRCode", this._HRCode, value);
                this._HRCode = value;
            }
        }
        
        public string ERPCode {
            get {
                return this._ERPCode;
            }
            set {
                this.OnPropertyChanged("ERPCode", this._ERPCode, value);
                this._ERPCode = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string IsEmployee {
            get {
                return this._IsEmployee;
            }
            set {
                this.OnPropertyChanged("IsEmployee", this._IsEmployee, value);
                this._IsEmployee = value;
            }
        }
        
        public global::System.Int32? A {
            get {
                return this._A;
            }
            set {
                this.OnPropertyChanged("A", this._A, value);
                this._A = value;
            }
        }
        
        public global::System.Int32? B {
            get {
                return this._B;
            }
            set {
                this.OnPropertyChanged("B", this._B, value);
                this._B = value;
            }
        }
        
        public global::System.Int32? C {
            get {
                return this._C;
            }
            set {
                this.OnPropertyChanged("C", this._C, value);
                this._C = value;
            }
        }
        
        public global::System.Int32? D {
            get {
                return this._D;
            }
            set {
                this.OnPropertyChanged("D", this._D, value);
                this._D = value;
            }
        }
        
        public global::System.Int32? E {
            get {
                return this._E;
            }
            set {
                this.OnPropertyChanged("E", this._E, value);
                this._E = value;
            }
        }
        
        public global::System.Int32? F {
            get {
                return this._F;
            }
            set {
                this.OnPropertyChanged("F", this._F, value);
                this._F = value;
            }
        }
        
        public global::System.Int16? Work_type {
            get {
                return this._Work_type;
            }
            set {
                this.OnPropertyChanged("Work_type", this._Work_type, value);
                this._Work_type = value;
            }
        }
        
        public global::System.Int32? Work_typeA {
            get {
                return this._Work_typeA;
            }
            set {
                this.OnPropertyChanged("Work_typeA", this._Work_typeA, value);
                this._Work_typeA = value;
            }
        }
        
        public global::System.Int32? Work_typeB {
            get {
                return this._Work_typeB;
            }
            set {
                this.OnPropertyChanged("Work_typeB", this._Work_typeB, value);
                this._Work_typeB = value;
            }
        }
        
        public global::System.Int32? Work_typeC {
            get {
                return this._Work_typeC;
            }
            set {
                this.OnPropertyChanged("Work_typeC", this._Work_typeC, value);
                this._Work_typeC = value;
            }
        }
        
        public global::System.Int32? Work_typeD {
            get {
                return this._Work_typeD;
            }
            set {
                this.OnPropertyChanged("Work_typeD", this._Work_typeD, value);
                this._Work_typeD = value;
            }
        }
        
        public global::System.Int32? Work_typeE {
            get {
                return this._Work_typeE;
            }
            set {
                this.OnPropertyChanged("Work_typeE", this._Work_typeE, value);
                this._Work_typeE = value;
            }
        }
        
        public global::System.Int32? Work_typeF {
            get {
                return this._Work_typeF;
            }
            set {
                this.OnPropertyChanged("Work_typeF", this._Work_typeF, value);
                this._Work_typeF = value;
            }
        }
        
        public global::System.Int32? A_fen {
            get {
                return this._A_fen;
            }
            set {
                this.OnPropertyChanged("A_fen", this._A_fen, value);
                this._A_fen = value;
            }
        }
        
        public global::System.Int32? B_fen {
            get {
                return this._B_fen;
            }
            set {
                this.OnPropertyChanged("B_fen", this._B_fen, value);
                this._B_fen = value;
            }
        }
        
        public global::System.Int32? C_fen {
            get {
                return this._C_fen;
            }
            set {
                this.OnPropertyChanged("C_fen", this._C_fen, value);
                this._C_fen = value;
            }
        }
        
        public global::System.Int32? D_fen {
            get {
                return this._D_fen;
            }
            set {
                this.OnPropertyChanged("D_fen", this._D_fen, value);
                this._D_fen = value;
            }
        }
        
        public global::System.Int32? E_fen {
            get {
                return this._E_fen;
            }
            set {
                this.OnPropertyChanged("E_fen", this._E_fen, value);
                this._E_fen = value;
            }
        }
        
        public global::System.Int32? F_fen {
            get {
                return this._F_fen;
            }
            set {
                this.OnPropertyChanged("F_fen", this._F_fen, value);
                this._F_fen = value;
            }
        }
        
        public byte[] Pic {
            get {
                return this._Pic;
            }
            set {
                this.OnPropertyChanged("Pic", this._Pic, value);
                this._Pic = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasUser._BasUserEntityConfiguration == null)) {
                BasUser._BasUserEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasUser");
            }
            return BasUser._BasUserEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._UserName,
                    this._UserPWD,
                    this._RealName,
                    this._Sex,
                    this._Telephone,
                    this._WorkBarcode,
                    this._DeptCode,
                    this._WorkID,
                    this._ShiftID,
                    this._WorkShopID,
                    this._HRCode,
                    this._ERPCode,
                    this._DeleteFlag,
                    this._Remark,
                    this._IsEmployee,
                    this._A,
                    this._B,
                    this._C,
                    this._D,
                    this._E,
                    this._F,
                    this._Work_type,
                    this._Work_typeA,
                    this._Work_typeB,
                    this._Work_typeC,
                    this._Work_typeD,
                    this._Work_typeE,
                    this._Work_typeF,
                    this._A_fen,
                    this._B_fen,
                    this._C_fen,
                    this._D_fen,
                    this._E_fen,
                    this._F_fen,
                    this._Pic};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._UserName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._UserPWD = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RealName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Sex = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Telephone = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._WorkBarcode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._DeptCode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._WorkID = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ShiftID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._WorkShopID = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._HRCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._ERPCode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._DeleteFlag = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Remark = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._IsEmployee = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._A = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._B = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._C = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._D = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._E = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._F = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Work_type = reader.GetInt16(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Work_typeA = reader.GetInt32(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Work_typeB = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Work_typeC = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._Work_typeD = reader.GetInt32(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._Work_typeE = reader.GetInt32(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Work_typeF = reader.GetInt32(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._A_fen = reader.GetInt32(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._B_fen = reader.GetInt32(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._C_fen = reader.GetInt32(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._D_fen = reader.GetInt32(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._E_fen = reader.GetInt32(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._F_fen = reader.GetInt32(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._Pic = ((byte[])(reader.GetValue(35)));
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._UserName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._UserPWD = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RealName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Sex = ((int)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Telephone = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._WorkBarcode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._DeptCode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._WorkID = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ShiftID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._WorkShopID = ((int)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._HRCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._ERPCode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._DeleteFlag = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Remark = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._IsEmployee = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._A = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._B = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._C = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._D = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._E = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._F = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Work_type = ((System.Nullable<short>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Work_typeA = ((System.Nullable<int>)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Work_typeB = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Work_typeC = ((System.Nullable<int>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._Work_typeD = ((System.Nullable<int>)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._Work_typeE = ((System.Nullable<int>)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._Work_typeF = ((System.Nullable<int>)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._A_fen = ((System.Nullable<int>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._B_fen = ((System.Nullable<int>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._C_fen = ((System.Nullable<int>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._D_fen = ((System.Nullable<int>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._E_fen = ((System.Nullable<int>)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._F_fen = ((System.Nullable<int>)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._Pic = ((byte[])(row[35]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasUser).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasUser)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _UserName = new NBear.Common.PropertyItem("UserName", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _UserPWD = new NBear.Common.PropertyItem("UserPWD", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _RealName = new NBear.Common.PropertyItem("RealName", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Sex = new NBear.Common.PropertyItem("Sex", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Telephone = new NBear.Common.PropertyItem("Telephone", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _WorkBarcode = new NBear.Common.PropertyItem("WorkBarcode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _DeptCode = new NBear.Common.PropertyItem("DeptCode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _WorkID = new NBear.Common.PropertyItem("WorkID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _WorkShopID = new NBear.Common.PropertyItem("WorkShopID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _HRCode = new NBear.Common.PropertyItem("HRCode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _ERPCode = new NBear.Common.PropertyItem("ERPCode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _IsEmployee = new NBear.Common.PropertyItem("IsEmployee", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _A = new NBear.Common.PropertyItem("A", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _B = new NBear.Common.PropertyItem("B", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _C = new NBear.Common.PropertyItem("C", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _D = new NBear.Common.PropertyItem("D", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _E = new NBear.Common.PropertyItem("E", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _F = new NBear.Common.PropertyItem("F", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_type = new NBear.Common.PropertyItem("Work_type", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_typeA = new NBear.Common.PropertyItem("Work_typeA", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_typeB = new NBear.Common.PropertyItem("Work_typeB", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_typeC = new NBear.Common.PropertyItem("Work_typeC", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_typeD = new NBear.Common.PropertyItem("Work_typeD", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_typeE = new NBear.Common.PropertyItem("Work_typeE", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Work_typeF = new NBear.Common.PropertyItem("Work_typeF", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _A_fen = new NBear.Common.PropertyItem("A_fen", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _B_fen = new NBear.Common.PropertyItem("B_fen", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _C_fen = new NBear.Common.PropertyItem("C_fen", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _D_fen = new NBear.Common.PropertyItem("D_fen", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _E_fen = new NBear.Common.PropertyItem("E_fen", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _F_fen = new NBear.Common.PropertyItem("F_fen", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Pic = new NBear.Common.PropertyItem("Pic", "Mesnac.Entity.BasUser");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserName {
                get {
                    if ((aliasName == null)) {
                        return _UserName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserName", _UserName.EntityConfiguration, _UserName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserPWD {
                get {
                    if ((aliasName == null)) {
                        return _UserPWD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserPWD", _UserPWD.EntityConfiguration, _UserPWD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealName {
                get {
                    if ((aliasName == null)) {
                        return _RealName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealName", _RealName.EntityConfiguration, _RealName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Sex {
                get {
                    if ((aliasName == null)) {
                        return _Sex;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Sex", _Sex.EntityConfiguration, _Sex.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Telephone {
                get {
                    if ((aliasName == null)) {
                        return _Telephone;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Telephone", _Telephone.EntityConfiguration, _Telephone.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkBarcode {
                get {
                    if ((aliasName == null)) {
                        return _WorkBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkBarcode", _WorkBarcode.EntityConfiguration, _WorkBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeptCode {
                get {
                    if ((aliasName == null)) {
                        return _DeptCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeptCode", _DeptCode.EntityConfiguration, _DeptCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkID {
                get {
                    if ((aliasName == null)) {
                        return _WorkID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkID", _WorkID.EntityConfiguration, _WorkID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShopID {
                get {
                    if ((aliasName == null)) {
                        return _WorkShopID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShopID", _WorkShopID.EntityConfiguration, _WorkShopID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HRCode {
                get {
                    if ((aliasName == null)) {
                        return _HRCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HRCode", _HRCode.EntityConfiguration, _HRCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode", _ERPCode.EntityConfiguration, _ERPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsEmployee {
                get {
                    if ((aliasName == null)) {
                        return _IsEmployee;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsEmployee", _IsEmployee.EntityConfiguration, _IsEmployee.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem A {
                get {
                    if ((aliasName == null)) {
                        return _A;
                    }
                    else {
                        return new NBear.Common.PropertyItem("A", _A.EntityConfiguration, _A.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem B {
                get {
                    if ((aliasName == null)) {
                        return _B;
                    }
                    else {
                        return new NBear.Common.PropertyItem("B", _B.EntityConfiguration, _B.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem C {
                get {
                    if ((aliasName == null)) {
                        return _C;
                    }
                    else {
                        return new NBear.Common.PropertyItem("C", _C.EntityConfiguration, _C.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem D {
                get {
                    if ((aliasName == null)) {
                        return _D;
                    }
                    else {
                        return new NBear.Common.PropertyItem("D", _D.EntityConfiguration, _D.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem E {
                get {
                    if ((aliasName == null)) {
                        return _E;
                    }
                    else {
                        return new NBear.Common.PropertyItem("E", _E.EntityConfiguration, _E.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem F {
                get {
                    if ((aliasName == null)) {
                        return _F;
                    }
                    else {
                        return new NBear.Common.PropertyItem("F", _F.EntityConfiguration, _F.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_type {
                get {
                    if ((aliasName == null)) {
                        return _Work_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_type", _Work_type.EntityConfiguration, _Work_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeA {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeA;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeA", _Work_typeA.EntityConfiguration, _Work_typeA.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeB {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeB;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeB", _Work_typeB.EntityConfiguration, _Work_typeB.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeC {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeC;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeC", _Work_typeC.EntityConfiguration, _Work_typeC.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeD {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeD", _Work_typeD.EntityConfiguration, _Work_typeD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeE {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeE;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeE", _Work_typeE.EntityConfiguration, _Work_typeE.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeF {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeF;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeF", _Work_typeF.EntityConfiguration, _Work_typeF.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem A_fen {
                get {
                    if ((aliasName == null)) {
                        return _A_fen;
                    }
                    else {
                        return new NBear.Common.PropertyItem("A_fen", _A_fen.EntityConfiguration, _A_fen.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem B_fen {
                get {
                    if ((aliasName == null)) {
                        return _B_fen;
                    }
                    else {
                        return new NBear.Common.PropertyItem("B_fen", _B_fen.EntityConfiguration, _B_fen.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem C_fen {
                get {
                    if ((aliasName == null)) {
                        return _C_fen;
                    }
                    else {
                        return new NBear.Common.PropertyItem("C_fen", _C_fen.EntityConfiguration, _C_fen.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem D_fen {
                get {
                    if ((aliasName == null)) {
                        return _D_fen;
                    }
                    else {
                        return new NBear.Common.PropertyItem("D_fen", _D_fen.EntityConfiguration, _D_fen.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem E_fen {
                get {
                    if ((aliasName == null)) {
                        return _E_fen;
                    }
                    else {
                        return new NBear.Common.PropertyItem("E_fen", _E_fen.EntityConfiguration, _E_fen.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem F_fen {
                get {
                    if ((aliasName == null)) {
                        return _F_fen;
                    }
                    else {
                        return new NBear.Common.PropertyItem("F_fen", _F_fen.EntityConfiguration, _F_fen.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pic {
                get {
                    if ((aliasName == null)) {
                        return _Pic;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pic", _Pic.EntityConfiguration, _Pic.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
