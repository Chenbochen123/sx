//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmtQrigMasterArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmtQrigMaster> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmtQrigMaster\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmtQrigMaster\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"SeqNo\" type=\"System.Int64\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Se" +
        "qNo\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\" isNot" +
        "Null=\"true\" />\r\n    <Property name=\"PlanDate\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"PlanDate\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftId\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"ShiftId\" mappingColumnType=\"System.Null" +
        "able`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"ShiftClass\" type=\"System.Nullable`1[System.Int32]\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"ShiftClass\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"MaterCode\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Se" +
        "rialId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SerialId\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"CheckNum\" type=\"System.Nullable`1[System" +
        ".Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"CheckNum\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"CheckDate\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"CheckDate\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"CheckTime\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckTime\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(8)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"ShiftCheckId\" type=\"System.Nullable`1[System.Int32]\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"ShiftCheckId\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
        "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Wor" +
        "kerBarcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"WorkerBarcode\" mappingColumnType=" +
        "\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Flag\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Flag" +
        "\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IfLast\" type=\"System.Nullable" +
        "`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"IfLast\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"TestType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TestType\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"CheckEquipCode\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"CheckEquipCode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WorkshopID\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"WorkshopID\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"LastChangeTime\" type=\"System.Nullable`1[System.DateTime]\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"LastChangeTime\" mappingColumnType=\"System.Nullable`1[System.DateTim" +
        "e]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"SulfTime\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"SulfTime\" mappingColumnType=\"" +
        "System.String\" sqlType=\"varchar(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"SulfEquip\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SulfEquip\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(4)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"RegDateTime\" type=\"System.Nullable`1[System.Da" +
        "teTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"RegDateTime\" mappingColumnType=\"System.Nullable`1[System." +
        "DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"StandIDNeedUpdate\" type=\"System.String\" isInherited=\"false\" sqlDefa" +
        "ultValue=\"\'1\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"StandIDNeedUpdate\" mappingColumnType=\"System.String\" sqlType=\"varchar(4" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"NeedReJudgeGra" +
        "de\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'1\'\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"NeedReJudgeGrade\" m" +
        "appingColumnType=\"System.String\" sqlType=\"varchar(4)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"StandCode\" type=\"System.Nullable`1[System.I" +
        "nt32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"StandCode\" mappingColumnType=\"System.Nullable`1[System.Int3" +
        "2]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"SendPerson\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"SendPerson\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"SendNum\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SendNum\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"SendDate\" type=\"System.Nullable`1[System.DateTime" +
        "]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"SendDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]" +
        "\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteF" +
        "lag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"NeedJudgeGrade\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"NeedJudgeGrade\" mappingColumnType=\"System.String\" sqlType=\"varchar(4)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"GUID\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"GUID\" mappingColumnType=\"System.String\" sqlType=\"nchar" +
        "(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"NeedAssess\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"NeedAssess\" mappingColumnType=\"System.String" +
        "\" sqlType=\"varchar(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"ImportRelativeId\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ImportRelativeId\" map" +
        "pingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"BatchNo\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "BatchNo\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"ZJSID\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"ZJSID\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LLSerialID\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"LLSerialID\" mappingColumnType=\"System.N" +
        "ullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"BarCode\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarCode\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"CheckPlan_Class\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"CheckPlan_Class\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"CheckPlan_Date\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckPlan_Date\" map" +
        "pingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class QmtQrigMaster : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmtQrigMasterEntityConfiguration;
        
        protected long _SeqNo;
        
        protected string _PlanDate;
        
        protected string _EquipCode;
        
        protected global::System.Int32? _ShiftId;
        
        protected global::System.Int32? _ShiftClass;
        
        protected string _MaterCode;
        
        protected global::System.Int32? _SerialId;
        
        protected global::System.Int32? _CheckNum;
        
        protected string _CheckDate;
        
        protected string _CheckTime;
        
        protected global::System.Int32? _ShiftCheckId;
        
        protected string _WorkerBarcode;
        
        protected global::System.Int32? _Flag;
        
        protected global::System.Int32? _IfLast;
        
        protected string _TestType;
        
        protected string _Remark;
        
        protected string _CheckEquipCode;
        
        protected global::System.Int32? _WorkshopID;
        
        protected global::System.DateTime? _LastChangeTime;
        
        protected string _SulfTime;
        
        protected string _SulfEquip;
        
        protected global::System.DateTime? _RegDateTime;
        
        protected string _StandIDNeedUpdate;
        
        protected string _NeedReJudgeGrade;
        
        protected global::System.Int32? _StandCode;
        
        protected string _SendPerson;
        
        protected string _SendNum;
        
        protected global::System.DateTime? _SendDate;
        
        protected string _DeleteFlag;
        
        protected string _NeedJudgeGrade;
        
        protected string _GUID;
        
        protected string _NeedAssess;
        
        protected string _ImportRelativeId;
        
        protected string _BatchNo;
        
        protected string _ZJSID;
        
        protected global::System.Int32? _LLSerialID;
        
        protected string _BarCode;
        
        protected global::System.Int32? _CheckPlan_Class;
        
        protected string _CheckPlan_Date;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmtQrigMaster left, global::Mesnac.Entity.QmtQrigMaster right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmtQrigMaster left, global::Mesnac.Entity.QmtQrigMaster right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long SeqNo {
            get {
                return this._SeqNo;
            }
            set {
                this.OnPropertyChanged("SeqNo", this._SeqNo, value);
                this._SeqNo = value;
            }
        }
        
        public string PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public global::System.Int32? ShiftId {
            get {
                return this._ShiftId;
            }
            set {
                this.OnPropertyChanged("ShiftId", this._ShiftId, value);
                this._ShiftId = value;
            }
        }
        
        public global::System.Int32? ShiftClass {
            get {
                return this._ShiftClass;
            }
            set {
                this.OnPropertyChanged("ShiftClass", this._ShiftClass, value);
                this._ShiftClass = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.Int32? SerialId {
            get {
                return this._SerialId;
            }
            set {
                this.OnPropertyChanged("SerialId", this._SerialId, value);
                this._SerialId = value;
            }
        }
        
        public global::System.Int32? CheckNum {
            get {
                return this._CheckNum;
            }
            set {
                this.OnPropertyChanged("CheckNum", this._CheckNum, value);
                this._CheckNum = value;
            }
        }
        
        public string CheckDate {
            get {
                return this._CheckDate;
            }
            set {
                this.OnPropertyChanged("CheckDate", this._CheckDate, value);
                this._CheckDate = value;
            }
        }
        
        public string CheckTime {
            get {
                return this._CheckTime;
            }
            set {
                this.OnPropertyChanged("CheckTime", this._CheckTime, value);
                this._CheckTime = value;
            }
        }
        
        public global::System.Int32? ShiftCheckId {
            get {
                return this._ShiftCheckId;
            }
            set {
                this.OnPropertyChanged("ShiftCheckId", this._ShiftCheckId, value);
                this._ShiftCheckId = value;
            }
        }
        
        public string WorkerBarcode {
            get {
                return this._WorkerBarcode;
            }
            set {
                this.OnPropertyChanged("WorkerBarcode", this._WorkerBarcode, value);
                this._WorkerBarcode = value;
            }
        }
        
        public global::System.Int32? Flag {
            get {
                return this._Flag;
            }
            set {
                this.OnPropertyChanged("Flag", this._Flag, value);
                this._Flag = value;
            }
        }
        
        public global::System.Int32? IfLast {
            get {
                return this._IfLast;
            }
            set {
                this.OnPropertyChanged("IfLast", this._IfLast, value);
                this._IfLast = value;
            }
        }
        
        public string TestType {
            get {
                return this._TestType;
            }
            set {
                this.OnPropertyChanged("TestType", this._TestType, value);
                this._TestType = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string CheckEquipCode {
            get {
                return this._CheckEquipCode;
            }
            set {
                this.OnPropertyChanged("CheckEquipCode", this._CheckEquipCode, value);
                this._CheckEquipCode = value;
            }
        }
        
        public global::System.Int32? WorkshopID {
            get {
                return this._WorkshopID;
            }
            set {
                this.OnPropertyChanged("WorkshopID", this._WorkshopID, value);
                this._WorkshopID = value;
            }
        }
        
        public global::System.DateTime? LastChangeTime {
            get {
                return this._LastChangeTime;
            }
            set {
                this.OnPropertyChanged("LastChangeTime", this._LastChangeTime, value);
                this._LastChangeTime = value;
            }
        }
        
        public string SulfTime {
            get {
                return this._SulfTime;
            }
            set {
                this.OnPropertyChanged("SulfTime", this._SulfTime, value);
                this._SulfTime = value;
            }
        }
        
        public string SulfEquip {
            get {
                return this._SulfEquip;
            }
            set {
                this.OnPropertyChanged("SulfEquip", this._SulfEquip, value);
                this._SulfEquip = value;
            }
        }
        
        public global::System.DateTime? RegDateTime {
            get {
                return this._RegDateTime;
            }
            set {
                this.OnPropertyChanged("RegDateTime", this._RegDateTime, value);
                this._RegDateTime = value;
            }
        }
        
        public string StandIDNeedUpdate {
            get {
                return this._StandIDNeedUpdate;
            }
            set {
                this.OnPropertyChanged("StandIDNeedUpdate", this._StandIDNeedUpdate, value);
                this._StandIDNeedUpdate = value;
            }
        }
        
        public string NeedReJudgeGrade {
            get {
                return this._NeedReJudgeGrade;
            }
            set {
                this.OnPropertyChanged("NeedReJudgeGrade", this._NeedReJudgeGrade, value);
                this._NeedReJudgeGrade = value;
            }
        }
        
        public global::System.Int32? StandCode {
            get {
                return this._StandCode;
            }
            set {
                this.OnPropertyChanged("StandCode", this._StandCode, value);
                this._StandCode = value;
            }
        }
        
        public string SendPerson {
            get {
                return this._SendPerson;
            }
            set {
                this.OnPropertyChanged("SendPerson", this._SendPerson, value);
                this._SendPerson = value;
            }
        }
        
        public string SendNum {
            get {
                return this._SendNum;
            }
            set {
                this.OnPropertyChanged("SendNum", this._SendNum, value);
                this._SendNum = value;
            }
        }
        
        public global::System.DateTime? SendDate {
            get {
                return this._SendDate;
            }
            set {
                this.OnPropertyChanged("SendDate", this._SendDate, value);
                this._SendDate = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string NeedJudgeGrade {
            get {
                return this._NeedJudgeGrade;
            }
            set {
                this.OnPropertyChanged("NeedJudgeGrade", this._NeedJudgeGrade, value);
                this._NeedJudgeGrade = value;
            }
        }
        
        public string GUID {
            get {
                return this._GUID;
            }
            set {
                this.OnPropertyChanged("GUID", this._GUID, value);
                this._GUID = value;
            }
        }
        
        public string NeedAssess {
            get {
                return this._NeedAssess;
            }
            set {
                this.OnPropertyChanged("NeedAssess", this._NeedAssess, value);
                this._NeedAssess = value;
            }
        }
        
        public string ImportRelativeId {
            get {
                return this._ImportRelativeId;
            }
            set {
                this.OnPropertyChanged("ImportRelativeId", this._ImportRelativeId, value);
                this._ImportRelativeId = value;
            }
        }
        
        public string BatchNo {
            get {
                return this._BatchNo;
            }
            set {
                this.OnPropertyChanged("BatchNo", this._BatchNo, value);
                this._BatchNo = value;
            }
        }
        
        public string ZJSID {
            get {
                return this._ZJSID;
            }
            set {
                this.OnPropertyChanged("ZJSID", this._ZJSID, value);
                this._ZJSID = value;
            }
        }
        
        public global::System.Int32? LLSerialID {
            get {
                return this._LLSerialID;
            }
            set {
                this.OnPropertyChanged("LLSerialID", this._LLSerialID, value);
                this._LLSerialID = value;
            }
        }
        
        public string BarCode {
            get {
                return this._BarCode;
            }
            set {
                this.OnPropertyChanged("BarCode", this._BarCode, value);
                this._BarCode = value;
            }
        }
        
        public global::System.Int32? CheckPlan_Class {
            get {
                return this._CheckPlan_Class;
            }
            set {
                this.OnPropertyChanged("CheckPlan_Class", this._CheckPlan_Class, value);
                this._CheckPlan_Class = value;
            }
        }
        
        public string CheckPlan_Date {
            get {
                return this._CheckPlan_Date;
            }
            set {
                this.OnPropertyChanged("CheckPlan_Date", this._CheckPlan_Date, value);
                this._CheckPlan_Date = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmtQrigMaster._QmtQrigMasterEntityConfiguration == null)) {
                QmtQrigMaster._QmtQrigMasterEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmtQrigMaster");
            }
            return QmtQrigMaster._QmtQrigMasterEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._SeqNo,
                    this._PlanDate,
                    this._EquipCode,
                    this._ShiftId,
                    this._ShiftClass,
                    this._MaterCode,
                    this._SerialId,
                    this._CheckNum,
                    this._CheckDate,
                    this._CheckTime,
                    this._ShiftCheckId,
                    this._WorkerBarcode,
                    this._Flag,
                    this._IfLast,
                    this._TestType,
                    this._Remark,
                    this._CheckEquipCode,
                    this._WorkshopID,
                    this._LastChangeTime,
                    this._SulfTime,
                    this._SulfEquip,
                    this._RegDateTime,
                    this._StandIDNeedUpdate,
                    this._NeedReJudgeGrade,
                    this._StandCode,
                    this._SendPerson,
                    this._SendNum,
                    this._SendDate,
                    this._DeleteFlag,
                    this._NeedJudgeGrade,
                    this._GUID,
                    this._NeedAssess,
                    this._ImportRelativeId,
                    this._BatchNo,
                    this._ZJSID,
                    this._LLSerialID,
                    this._BarCode,
                    this._CheckPlan_Class,
                    this._CheckPlan_Date};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._SeqNo = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PlanDate = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EquipCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ShiftId = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ShiftClass = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._SerialId = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._CheckNum = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._CheckDate = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._CheckTime = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._ShiftCheckId = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._WorkerBarcode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Flag = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._IfLast = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._TestType = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Remark = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._CheckEquipCode = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._WorkshopID = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._LastChangeTime = this.GetDateTime(reader, 18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._SulfTime = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._SulfEquip = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._RegDateTime = this.GetDateTime(reader, 21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._StandIDNeedUpdate = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._NeedReJudgeGrade = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._StandCode = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._SendPerson = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._SendNum = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._SendDate = this.GetDateTime(reader, 27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._DeleteFlag = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._NeedJudgeGrade = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._GUID = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._NeedAssess = reader.GetString(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._ImportRelativeId = reader.GetString(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._BatchNo = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._ZJSID = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._LLSerialID = reader.GetInt32(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._BarCode = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._CheckPlan_Class = reader.GetInt32(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._CheckPlan_Date = reader.GetString(38);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._SeqNo = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PlanDate = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._EquipCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ShiftId = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ShiftClass = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._SerialId = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._CheckNum = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._CheckDate = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._CheckTime = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._ShiftCheckId = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._WorkerBarcode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Flag = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._IfLast = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._TestType = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Remark = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._CheckEquipCode = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._WorkshopID = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._LastChangeTime = this.GetDateTime(row, 18);
            }
            if ((false == row.IsNull(19))) {
                this._SulfTime = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._SulfEquip = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._RegDateTime = this.GetDateTime(row, 21);
            }
            if ((false == row.IsNull(22))) {
                this._StandIDNeedUpdate = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._NeedReJudgeGrade = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._StandCode = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._SendPerson = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._SendNum = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._SendDate = this.GetDateTime(row, 27);
            }
            if ((false == row.IsNull(28))) {
                this._DeleteFlag = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._NeedJudgeGrade = ((string)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._GUID = ((string)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._NeedAssess = ((string)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._ImportRelativeId = ((string)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._BatchNo = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._ZJSID = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._LLSerialID = ((System.Nullable<int>)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._BarCode = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._CheckPlan_Class = ((System.Nullable<int>)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._CheckPlan_Date = ((string)(row[38]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmtQrigMaster).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmtQrigMaster)(obj)).isAttached) 
                        && (this.SeqNo == ((global::Mesnac.Entity.QmtQrigMaster)(obj)).SeqNo));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _SeqNo = new NBear.Common.PropertyItem("SeqNo", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _ShiftId = new NBear.Common.PropertyItem("ShiftId", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _ShiftClass = new NBear.Common.PropertyItem("ShiftClass", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _SerialId = new NBear.Common.PropertyItem("SerialId", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _CheckNum = new NBear.Common.PropertyItem("CheckNum", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _CheckDate = new NBear.Common.PropertyItem("CheckDate", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _CheckTime = new NBear.Common.PropertyItem("CheckTime", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _ShiftCheckId = new NBear.Common.PropertyItem("ShiftCheckId", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _WorkerBarcode = new NBear.Common.PropertyItem("WorkerBarcode", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _Flag = new NBear.Common.PropertyItem("Flag", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _IfLast = new NBear.Common.PropertyItem("IfLast", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _TestType = new NBear.Common.PropertyItem("TestType", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _CheckEquipCode = new NBear.Common.PropertyItem("CheckEquipCode", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _WorkshopID = new NBear.Common.PropertyItem("WorkshopID", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _LastChangeTime = new NBear.Common.PropertyItem("LastChangeTime", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _SulfTime = new NBear.Common.PropertyItem("SulfTime", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _SulfEquip = new NBear.Common.PropertyItem("SulfEquip", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _RegDateTime = new NBear.Common.PropertyItem("RegDateTime", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _StandIDNeedUpdate = new NBear.Common.PropertyItem("StandIDNeedUpdate", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _NeedReJudgeGrade = new NBear.Common.PropertyItem("NeedReJudgeGrade", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _StandCode = new NBear.Common.PropertyItem("StandCode", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _SendPerson = new NBear.Common.PropertyItem("SendPerson", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _SendNum = new NBear.Common.PropertyItem("SendNum", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _SendDate = new NBear.Common.PropertyItem("SendDate", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _NeedJudgeGrade = new NBear.Common.PropertyItem("NeedJudgeGrade", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _GUID = new NBear.Common.PropertyItem("GUID", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _NeedAssess = new NBear.Common.PropertyItem("NeedAssess", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _ImportRelativeId = new NBear.Common.PropertyItem("ImportRelativeId", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _BatchNo = new NBear.Common.PropertyItem("BatchNo", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _ZJSID = new NBear.Common.PropertyItem("ZJSID", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _LLSerialID = new NBear.Common.PropertyItem("LLSerialID", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _BarCode = new NBear.Common.PropertyItem("BarCode", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _CheckPlan_Class = new NBear.Common.PropertyItem("CheckPlan_Class", "Mesnac.Entity.QmtQrigMaster");
            
            protected NBear.Common.PropertyItem _CheckPlan_Date = new NBear.Common.PropertyItem("CheckPlan_Date", "Mesnac.Entity.QmtQrigMaster");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem SeqNo {
                get {
                    if ((aliasName == null)) {
                        return _SeqNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqNo", _SeqNo.EntityConfiguration, _SeqNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftId {
                get {
                    if ((aliasName == null)) {
                        return _ShiftId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftId", _ShiftId.EntityConfiguration, _ShiftId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftClass {
                get {
                    if ((aliasName == null)) {
                        return _ShiftClass;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftClass", _ShiftClass.EntityConfiguration, _ShiftClass.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialId {
                get {
                    if ((aliasName == null)) {
                        return _SerialId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialId", _SerialId.EntityConfiguration, _SerialId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckNum {
                get {
                    if ((aliasName == null)) {
                        return _CheckNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckNum", _CheckNum.EntityConfiguration, _CheckNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckDate {
                get {
                    if ((aliasName == null)) {
                        return _CheckDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckDate", _CheckDate.EntityConfiguration, _CheckDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckTime {
                get {
                    if ((aliasName == null)) {
                        return _CheckTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckTime", _CheckTime.EntityConfiguration, _CheckTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftCheckId {
                get {
                    if ((aliasName == null)) {
                        return _ShiftCheckId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftCheckId", _ShiftCheckId.EntityConfiguration, _ShiftCheckId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkerBarcode {
                get {
                    if ((aliasName == null)) {
                        return _WorkerBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkerBarcode", _WorkerBarcode.EntityConfiguration, _WorkerBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Flag {
                get {
                    if ((aliasName == null)) {
                        return _Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Flag", _Flag.EntityConfiguration, _Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IfLast {
                get {
                    if ((aliasName == null)) {
                        return _IfLast;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IfLast", _IfLast.EntityConfiguration, _IfLast.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TestType {
                get {
                    if ((aliasName == null)) {
                        return _TestType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TestType", _TestType.EntityConfiguration, _TestType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckEquipCode {
                get {
                    if ((aliasName == null)) {
                        return _CheckEquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckEquipCode", _CheckEquipCode.EntityConfiguration, _CheckEquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkshopID {
                get {
                    if ((aliasName == null)) {
                        return _WorkshopID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkshopID", _WorkshopID.EntityConfiguration, _WorkshopID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastChangeTime {
                get {
                    if ((aliasName == null)) {
                        return _LastChangeTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastChangeTime", _LastChangeTime.EntityConfiguration, _LastChangeTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SulfTime {
                get {
                    if ((aliasName == null)) {
                        return _SulfTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SulfTime", _SulfTime.EntityConfiguration, _SulfTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SulfEquip {
                get {
                    if ((aliasName == null)) {
                        return _SulfEquip;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SulfEquip", _SulfEquip.EntityConfiguration, _SulfEquip.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RegDateTime {
                get {
                    if ((aliasName == null)) {
                        return _RegDateTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RegDateTime", _RegDateTime.EntityConfiguration, _RegDateTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandIDNeedUpdate {
                get {
                    if ((aliasName == null)) {
                        return _StandIDNeedUpdate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandIDNeedUpdate", _StandIDNeedUpdate.EntityConfiguration, _StandIDNeedUpdate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NeedReJudgeGrade {
                get {
                    if ((aliasName == null)) {
                        return _NeedReJudgeGrade;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NeedReJudgeGrade", _NeedReJudgeGrade.EntityConfiguration, _NeedReJudgeGrade.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandCode {
                get {
                    if ((aliasName == null)) {
                        return _StandCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandCode", _StandCode.EntityConfiguration, _StandCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendPerson {
                get {
                    if ((aliasName == null)) {
                        return _SendPerson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendPerson", _SendPerson.EntityConfiguration, _SendPerson.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendNum {
                get {
                    if ((aliasName == null)) {
                        return _SendNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendNum", _SendNum.EntityConfiguration, _SendNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SendDate {
                get {
                    if ((aliasName == null)) {
                        return _SendDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SendDate", _SendDate.EntityConfiguration, _SendDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NeedJudgeGrade {
                get {
                    if ((aliasName == null)) {
                        return _NeedJudgeGrade;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NeedJudgeGrade", _NeedJudgeGrade.EntityConfiguration, _NeedJudgeGrade.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GUID {
                get {
                    if ((aliasName == null)) {
                        return _GUID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GUID", _GUID.EntityConfiguration, _GUID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NeedAssess {
                get {
                    if ((aliasName == null)) {
                        return _NeedAssess;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NeedAssess", _NeedAssess.EntityConfiguration, _NeedAssess.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ImportRelativeId {
                get {
                    if ((aliasName == null)) {
                        return _ImportRelativeId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ImportRelativeId", _ImportRelativeId.EntityConfiguration, _ImportRelativeId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BatchNo {
                get {
                    if ((aliasName == null)) {
                        return _BatchNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BatchNo", _BatchNo.EntityConfiguration, _BatchNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ZJSID {
                get {
                    if ((aliasName == null)) {
                        return _ZJSID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ZJSID", _ZJSID.EntityConfiguration, _ZJSID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LLSerialID {
                get {
                    if ((aliasName == null)) {
                        return _LLSerialID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LLSerialID", _LLSerialID.EntityConfiguration, _LLSerialID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarCode {
                get {
                    if ((aliasName == null)) {
                        return _BarCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarCode", _BarCode.EntityConfiguration, _BarCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckPlan_Class {
                get {
                    if ((aliasName == null)) {
                        return _CheckPlan_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckPlan_Class", _CheckPlan_Class.EntityConfiguration, _CheckPlan_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckPlan_Date {
                get {
                    if ((aliasName == null)) {
                        return _CheckPlan_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckPlan_Date", _CheckPlan_Date.EntityConfiguration, _CheckPlan_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
