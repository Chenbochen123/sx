//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasDeptErpInfoArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasDeptErpInfo> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.BasDeptErpInfo\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isB" +
        "atchUpdate=\"false\" isRelation=\"false\" mappingName=\"BasDeptErpInfo\" batchSize=\"10" +
        "\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotN" +
        "ull=\"true\" />\r\n    <Property name=\"DepName\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"D" +
        "epName\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"ERPCode\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"ERPCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SeqIdx\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"SeqIdx\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sql" +
        "Type=\"varchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Deleteflag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Deleteflag\" mappingColumnType=" +
        "\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  <" +
        "/Properties>\r\n</EntityConfiguration>")]
    public partial class BasDeptErpInfo : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasDeptErpInfoEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _DepName;
        
        protected string _ERPCode;
        
        protected string _SeqIdx;
        
        protected string _Remark;
        
        protected string _Deleteflag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasDeptErpInfo left, global::Mesnac.Entity.BasDeptErpInfo right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasDeptErpInfo left, global::Mesnac.Entity.BasDeptErpInfo right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string DepName {
            get {
                return this._DepName;
            }
            set {
                this.OnPropertyChanged("DepName", this._DepName, value);
                this._DepName = value;
            }
        }
        
        public string ERPCode {
            get {
                return this._ERPCode;
            }
            set {
                this.OnPropertyChanged("ERPCode", this._ERPCode, value);
                this._ERPCode = value;
            }
        }
        
        public string SeqIdx {
            get {
                return this._SeqIdx;
            }
            set {
                this.OnPropertyChanged("SeqIdx", this._SeqIdx, value);
                this._SeqIdx = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Deleteflag {
            get {
                return this._Deleteflag;
            }
            set {
                this.OnPropertyChanged("Deleteflag", this._Deleteflag, value);
                this._Deleteflag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasDeptErpInfo._BasDeptErpInfoEntityConfiguration == null)) {
                BasDeptErpInfo._BasDeptErpInfoEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasDeptErpInfo");
            }
            return BasDeptErpInfo._BasDeptErpInfoEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._DepName,
                    this._ERPCode,
                    this._SeqIdx,
                    this._Remark,
                    this._Deleteflag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._DepName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ERPCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SeqIdx = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Remark = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Deleteflag = reader.GetString(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._DepName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ERPCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._SeqIdx = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Remark = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Deleteflag = ((string)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasDeptErpInfo).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasDeptErpInfo)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.BasDeptErpInfo)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasDeptErpInfo");
            
            protected NBear.Common.PropertyItem _DepName = new NBear.Common.PropertyItem("DepName", "Mesnac.Entity.BasDeptErpInfo");
            
            protected NBear.Common.PropertyItem _ERPCode = new NBear.Common.PropertyItem("ERPCode", "Mesnac.Entity.BasDeptErpInfo");
            
            protected NBear.Common.PropertyItem _SeqIdx = new NBear.Common.PropertyItem("SeqIdx", "Mesnac.Entity.BasDeptErpInfo");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasDeptErpInfo");
            
            protected NBear.Common.PropertyItem _Deleteflag = new NBear.Common.PropertyItem("Deleteflag", "Mesnac.Entity.BasDeptErpInfo");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DepName {
                get {
                    if ((aliasName == null)) {
                        return _DepName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DepName", _DepName.EntityConfiguration, _DepName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode", _ERPCode.EntityConfiguration, _ERPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeqIdx {
                get {
                    if ((aliasName == null)) {
                        return _SeqIdx;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqIdx", _SeqIdx.EntityConfiguration, _SeqIdx.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Deleteflag {
                get {
                    if ((aliasName == null)) {
                        return _Deleteflag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Deleteflag", _Deleteflag.EntityConfiguration, _Deleteflag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
