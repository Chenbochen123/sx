//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmSemiStorageArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmSemiStorage> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmSemiStorage\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isB" +
        "atchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmSemiStorage\" batchSize=\"10" +
        "\">\r\n  <Properties>\r\n    <Property name=\"StorageID\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrim" +
        "aryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StoragePlaceID\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"" +
        "Barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Prop" +
        "erty name=\"ShelfBarcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShelfBarcode\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"BarcodeStart\" type=\"System.Nullable`1[System.I" +
        "nt32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"BarcodeStart\" mappingColumnType=\"System.Nullable`1[System.I" +
        "nt32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"BarcodeEnd\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"BarcodeEnd\"" +
        " mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShelfNum\" type=\"System.Nullabl" +
        "e`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"ShelfNum\" mappingColumnType=\"System.Nullable`1[" +
        "System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"MemNote\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MemNote\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"PlanDate\" type=\"System.Nullable`1[System.DateTime]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"PlanDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlT" +
        "ype=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sh" +
        "iftID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"ShiftClassID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftClassID\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipCode\"" +
        " mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ValidDate\" type=\"Syste" +
        "m.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"ValidDate\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"ProductWeight\" type=\"System.Nullable`1[System.D" +
        "ecimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"ProductWeight\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"StockFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue" +
        "=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"StockFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"CheckFlag\" type=\"System.String\" i" +
        "sInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"CheckFlag\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"TecDealFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"TecDealFl" +
        "ag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"TecDealIdea\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"TecDealIdea\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ConsumeWeight\" type" +
        "=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"ConsumeWeight\" mappingColumnT" +
        "ype=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"RealWeight\" type=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"RealWeight\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"RecordDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"RecordDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"d" +
        "atetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OperPers" +
        "on\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"OperPerson\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"SourceStorageID\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SourceStorageID\" " +
        "mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"SourceStoragePlaceID\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"SourceStoragePlaceID\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</En" +
        "tityConfiguration>")]
    public partial class PpmSemiStorage : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmSemiStorageEntityConfiguration;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected string _Barcode;
        
        protected string _ShelfBarcode;
        
        protected global::System.Int32? _BarcodeStart;
        
        protected global::System.Int32? _BarcodeEnd;
        
        protected global::System.Int32? _ShelfNum;
        
        protected string _MemNote;
        
        protected global::System.DateTime? _PlanDate;
        
        protected string _ShiftID;
        
        protected string _ShiftClassID;
        
        protected string _EquipCode;
        
        protected string _MaterCode;
        
        protected global::System.DateTime? _ValidDate;
        
        protected global::System.Decimal? _ProductWeight;
        
        protected string _StockFlag;
        
        protected string _CheckFlag;
        
        protected string _TecDealFlag;
        
        protected string _TecDealIdea;
        
        protected global::System.Decimal? _ConsumeWeight;
        
        protected global::System.Decimal? _RealWeight;
        
        protected global::System.DateTime? _RecordDate;
        
        protected string _OperPerson;
        
        protected string _SourceStorageID;
        
        protected string _SourceStoragePlaceID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmSemiStorage left, global::Mesnac.Entity.PpmSemiStorage right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmSemiStorage left, global::Mesnac.Entity.PpmSemiStorage right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public string ShelfBarcode {
            get {
                return this._ShelfBarcode;
            }
            set {
                this.OnPropertyChanged("ShelfBarcode", this._ShelfBarcode, value);
                this._ShelfBarcode = value;
            }
        }
        
        public global::System.Int32? BarcodeStart {
            get {
                return this._BarcodeStart;
            }
            set {
                this.OnPropertyChanged("BarcodeStart", this._BarcodeStart, value);
                this._BarcodeStart = value;
            }
        }
        
        public global::System.Int32? BarcodeEnd {
            get {
                return this._BarcodeEnd;
            }
            set {
                this.OnPropertyChanged("BarcodeEnd", this._BarcodeEnd, value);
                this._BarcodeEnd = value;
            }
        }
        
        public global::System.Int32? ShelfNum {
            get {
                return this._ShelfNum;
            }
            set {
                this.OnPropertyChanged("ShelfNum", this._ShelfNum, value);
                this._ShelfNum = value;
            }
        }
        
        public string MemNote {
            get {
                return this._MemNote;
            }
            set {
                this.OnPropertyChanged("MemNote", this._MemNote, value);
                this._MemNote = value;
            }
        }
        
        public global::System.DateTime? PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public string ShiftClassID {
            get {
                return this._ShiftClassID;
            }
            set {
                this.OnPropertyChanged("ShiftClassID", this._ShiftClassID, value);
                this._ShiftClassID = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.DateTime? ValidDate {
            get {
                return this._ValidDate;
            }
            set {
                this.OnPropertyChanged("ValidDate", this._ValidDate, value);
                this._ValidDate = value;
            }
        }
        
        public global::System.Decimal? ProductWeight {
            get {
                return this._ProductWeight;
            }
            set {
                this.OnPropertyChanged("ProductWeight", this._ProductWeight, value);
                this._ProductWeight = value;
            }
        }
        
        public string StockFlag {
            get {
                return this._StockFlag;
            }
            set {
                this.OnPropertyChanged("StockFlag", this._StockFlag, value);
                this._StockFlag = value;
            }
        }
        
        public string CheckFlag {
            get {
                return this._CheckFlag;
            }
            set {
                this.OnPropertyChanged("CheckFlag", this._CheckFlag, value);
                this._CheckFlag = value;
            }
        }
        
        public string TecDealFlag {
            get {
                return this._TecDealFlag;
            }
            set {
                this.OnPropertyChanged("TecDealFlag", this._TecDealFlag, value);
                this._TecDealFlag = value;
            }
        }
        
        public string TecDealIdea {
            get {
                return this._TecDealIdea;
            }
            set {
                this.OnPropertyChanged("TecDealIdea", this._TecDealIdea, value);
                this._TecDealIdea = value;
            }
        }
        
        public global::System.Decimal? ConsumeWeight {
            get {
                return this._ConsumeWeight;
            }
            set {
                this.OnPropertyChanged("ConsumeWeight", this._ConsumeWeight, value);
                this._ConsumeWeight = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public string OperPerson {
            get {
                return this._OperPerson;
            }
            set {
                this.OnPropertyChanged("OperPerson", this._OperPerson, value);
                this._OperPerson = value;
            }
        }
        
        public string SourceStorageID {
            get {
                return this._SourceStorageID;
            }
            set {
                this.OnPropertyChanged("SourceStorageID", this._SourceStorageID, value);
                this._SourceStorageID = value;
            }
        }
        
        public string SourceStoragePlaceID {
            get {
                return this._SourceStoragePlaceID;
            }
            set {
                this.OnPropertyChanged("SourceStoragePlaceID", this._SourceStoragePlaceID, value);
                this._SourceStoragePlaceID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmSemiStorage._PpmSemiStorageEntityConfiguration == null)) {
                PpmSemiStorage._PpmSemiStorageEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmSemiStorage");
            }
            return PpmSemiStorage._PpmSemiStorageEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._StorageID,
                    this._StoragePlaceID,
                    this._Barcode,
                    this._ShelfBarcode,
                    this._BarcodeStart,
                    this._BarcodeEnd,
                    this._ShelfNum,
                    this._MemNote,
                    this._PlanDate,
                    this._ShiftID,
                    this._ShiftClassID,
                    this._EquipCode,
                    this._MaterCode,
                    this._ValidDate,
                    this._ProductWeight,
                    this._StockFlag,
                    this._CheckFlag,
                    this._TecDealFlag,
                    this._TecDealIdea,
                    this._ConsumeWeight,
                    this._RealWeight,
                    this._RecordDate,
                    this._OperPerson,
                    this._SourceStorageID,
                    this._SourceStoragePlaceID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._StorageID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._StoragePlaceID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Barcode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ShelfBarcode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._BarcodeStart = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._BarcodeEnd = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ShelfNum = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._MemNote = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._PlanDate = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ShiftID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._ShiftClassID = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._EquipCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._MaterCode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._ValidDate = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._ProductWeight = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._StockFlag = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._CheckFlag = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._TecDealFlag = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._TecDealIdea = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._ConsumeWeight = reader.GetDecimal(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._RealWeight = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._RecordDate = this.GetDateTime(reader, 21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._OperPerson = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._SourceStorageID = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._SourceStoragePlaceID = reader.GetString(24);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._StorageID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._StoragePlaceID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Barcode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ShelfBarcode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._BarcodeStart = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._BarcodeEnd = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ShelfNum = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._MemNote = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._PlanDate = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9))) {
                this._ShiftID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._ShiftClassID = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._EquipCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._MaterCode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._ValidDate = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14))) {
                this._ProductWeight = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._StockFlag = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._CheckFlag = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._TecDealFlag = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._TecDealIdea = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._ConsumeWeight = ((System.Nullable<decimal>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._RecordDate = this.GetDateTime(row, 21);
            }
            if ((false == row.IsNull(22))) {
                this._OperPerson = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._SourceStorageID = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._SourceStoragePlaceID = ((string)(row[24]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmSemiStorage).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PpmSemiStorage)(obj)).isAttached) 
                        && (this.StorageID == ((global::Mesnac.Entity.PpmSemiStorage)(obj)).StorageID)) 
                        && (this.StoragePlaceID == ((global::Mesnac.Entity.PpmSemiStorage)(obj)).StoragePlaceID)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PpmSemiStorage)(obj)).Barcode));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ShelfBarcode = new NBear.Common.PropertyItem("ShelfBarcode", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _BarcodeStart = new NBear.Common.PropertyItem("BarcodeStart", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _BarcodeEnd = new NBear.Common.PropertyItem("BarcodeEnd", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ShelfNum = new NBear.Common.PropertyItem("ShelfNum", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _MemNote = new NBear.Common.PropertyItem("MemNote", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ShiftClassID = new NBear.Common.PropertyItem("ShiftClassID", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ValidDate = new NBear.Common.PropertyItem("ValidDate", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ProductWeight = new NBear.Common.PropertyItem("ProductWeight", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _StockFlag = new NBear.Common.PropertyItem("StockFlag", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _CheckFlag = new NBear.Common.PropertyItem("CheckFlag", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _TecDealFlag = new NBear.Common.PropertyItem("TecDealFlag", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _TecDealIdea = new NBear.Common.PropertyItem("TecDealIdea", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _ConsumeWeight = new NBear.Common.PropertyItem("ConsumeWeight", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _OperPerson = new NBear.Common.PropertyItem("OperPerson", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _SourceStorageID = new NBear.Common.PropertyItem("SourceStorageID", "Mesnac.Entity.PpmSemiStorage");
            
            protected NBear.Common.PropertyItem _SourceStoragePlaceID = new NBear.Common.PropertyItem("SourceStoragePlaceID", "Mesnac.Entity.PpmSemiStorage");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfBarcode {
                get {
                    if ((aliasName == null)) {
                        return _ShelfBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfBarcode", _ShelfBarcode.EntityConfiguration, _ShelfBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarcodeStart {
                get {
                    if ((aliasName == null)) {
                        return _BarcodeStart;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarcodeStart", _BarcodeStart.EntityConfiguration, _BarcodeStart.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarcodeEnd {
                get {
                    if ((aliasName == null)) {
                        return _BarcodeEnd;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarcodeEnd", _BarcodeEnd.EntityConfiguration, _BarcodeEnd.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShelfNum {
                get {
                    if ((aliasName == null)) {
                        return _ShelfNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShelfNum", _ShelfNum.EntityConfiguration, _ShelfNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MemNote {
                get {
                    if ((aliasName == null)) {
                        return _MemNote;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MemNote", _MemNote.EntityConfiguration, _MemNote.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftClassID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftClassID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftClassID", _ShiftClassID.EntityConfiguration, _ShiftClassID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ValidDate {
                get {
                    if ((aliasName == null)) {
                        return _ValidDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ValidDate", _ValidDate.EntityConfiguration, _ValidDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProductWeight {
                get {
                    if ((aliasName == null)) {
                        return _ProductWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProductWeight", _ProductWeight.EntityConfiguration, _ProductWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StockFlag {
                get {
                    if ((aliasName == null)) {
                        return _StockFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StockFlag", _StockFlag.EntityConfiguration, _StockFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckFlag {
                get {
                    if ((aliasName == null)) {
                        return _CheckFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckFlag", _CheckFlag.EntityConfiguration, _CheckFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TecDealFlag {
                get {
                    if ((aliasName == null)) {
                        return _TecDealFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TecDealFlag", _TecDealFlag.EntityConfiguration, _TecDealFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TecDealIdea {
                get {
                    if ((aliasName == null)) {
                        return _TecDealIdea;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TecDealIdea", _TecDealIdea.EntityConfiguration, _TecDealIdea.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ConsumeWeight {
                get {
                    if ((aliasName == null)) {
                        return _ConsumeWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ConsumeWeight", _ConsumeWeight.EntityConfiguration, _ConsumeWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperPerson {
                get {
                    if ((aliasName == null)) {
                        return _OperPerson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperPerson", _OperPerson.EntityConfiguration, _OperPerson.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceStorageID {
                get {
                    if ((aliasName == null)) {
                        return _SourceStorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceStorageID", _SourceStorageID.EntityConfiguration, _SourceStorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceStoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _SourceStoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceStoragePlaceID", _SourceStoragePlaceID.EntityConfiguration, _SourceStoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
