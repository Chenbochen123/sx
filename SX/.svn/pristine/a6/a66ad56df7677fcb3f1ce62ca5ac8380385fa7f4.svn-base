//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptMixDataArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptMixData> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PptMixData\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"PptMixData\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"false" +
        "\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"char(18)\" " +
        "isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mix_id\" type=\"Syste" +
        "m.Int32\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Mix_id\" mappingColumnType=\"System.I" +
        "nt32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=" +
        "\"Term_code\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Term_code\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Set_time\" type=\"System.Nullable`1[S" +
        "ystem.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Set_time\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"Set_temp\" type=\"System.Nullable`1[System.Decimal]\" " +
        "isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Set_temp\" mappingColumnType=\"System.Nullable" +
        "`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Set_ener\" type=\"System.Nullable`1[System.Decimal]\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Set_ener\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"Set_power\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Set_power\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Set_pres\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fal" +
        "se\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Set_pres\" mappingColumnType=\"System.Nullable`1[System.Dec" +
        "imal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Set_rota\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" s" +
        "qlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Set_rota\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" s" +
        "qlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Act_code\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Act_code\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Save_Time\" type=\"System.Nullable`1[Sys" +
        "tem.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"getdate()\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Save_Time\" mappingColum" +
        "nType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"PFTime\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"PFTime\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"PFTemp\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PFTemp\" mappin" +
        "gColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"PFEner\" type=\"System.Nullable`1" +
        "[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"PFEner\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"PFPower\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"P" +
        "FPower\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PFPres\" type=\"Sys" +
        "tem.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"PFPres\" mappingColumnType=\"System." +
        "Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"PFRota\" type=\"System.Nullable`1[System.Decimal]\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"PFRota\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlTyp" +
        "e=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Entity" +
        "Configuration>")]
    public partial class PptMixData : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptMixDataEntityConfiguration;
        
        protected string _Barcode;
        
        protected int _Mix_id;
        
        protected global::System.Int32? _Term_code;
        
        protected global::System.Int32? _Set_time;
        
        protected global::System.Decimal? _Set_temp;
        
        protected global::System.Decimal? _Set_ener;
        
        protected global::System.Decimal? _Set_power;
        
        protected global::System.Decimal? _Set_pres;
        
        protected global::System.Decimal? _Set_rota;
        
        protected global::System.Int32? _Act_code;
        
        protected global::System.DateTime? _Save_Time;
        
        protected global::System.Int32? _PFTime;
        
        protected global::System.Decimal? _PFTemp;
        
        protected global::System.Decimal? _PFEner;
        
        protected global::System.Decimal? _PFPower;
        
        protected global::System.Decimal? _PFPres;
        
        protected global::System.Decimal? _PFRota;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptMixData left, global::Mesnac.Entity.PptMixData right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptMixData left, global::Mesnac.Entity.PptMixData right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int Mix_id {
            get {
                return this._Mix_id;
            }
            set {
                this.OnPropertyChanged("Mix_id", this._Mix_id, value);
                this._Mix_id = value;
            }
        }
        
        public global::System.Int32? Term_code {
            get {
                return this._Term_code;
            }
            set {
                this.OnPropertyChanged("Term_code", this._Term_code, value);
                this._Term_code = value;
            }
        }
        
        public global::System.Int32? Set_time {
            get {
                return this._Set_time;
            }
            set {
                this.OnPropertyChanged("Set_time", this._Set_time, value);
                this._Set_time = value;
            }
        }
        
        public global::System.Decimal? Set_temp {
            get {
                return this._Set_temp;
            }
            set {
                this.OnPropertyChanged("Set_temp", this._Set_temp, value);
                this._Set_temp = value;
            }
        }
        
        public global::System.Decimal? Set_ener {
            get {
                return this._Set_ener;
            }
            set {
                this.OnPropertyChanged("Set_ener", this._Set_ener, value);
                this._Set_ener = value;
            }
        }
        
        public global::System.Decimal? Set_power {
            get {
                return this._Set_power;
            }
            set {
                this.OnPropertyChanged("Set_power", this._Set_power, value);
                this._Set_power = value;
            }
        }
        
        public global::System.Decimal? Set_pres {
            get {
                return this._Set_pres;
            }
            set {
                this.OnPropertyChanged("Set_pres", this._Set_pres, value);
                this._Set_pres = value;
            }
        }
        
        public global::System.Decimal? Set_rota {
            get {
                return this._Set_rota;
            }
            set {
                this.OnPropertyChanged("Set_rota", this._Set_rota, value);
                this._Set_rota = value;
            }
        }
        
        public global::System.Int32? Act_code {
            get {
                return this._Act_code;
            }
            set {
                this.OnPropertyChanged("Act_code", this._Act_code, value);
                this._Act_code = value;
            }
        }
        
        public global::System.DateTime? Save_Time {
            get {
                return this._Save_Time;
            }
            set {
                this.OnPropertyChanged("Save_Time", this._Save_Time, value);
                this._Save_Time = value;
            }
        }
        
        public global::System.Int32? PFTime {
            get {
                return this._PFTime;
            }
            set {
                this.OnPropertyChanged("PFTime", this._PFTime, value);
                this._PFTime = value;
            }
        }
        
        public global::System.Decimal? PFTemp {
            get {
                return this._PFTemp;
            }
            set {
                this.OnPropertyChanged("PFTemp", this._PFTemp, value);
                this._PFTemp = value;
            }
        }
        
        public global::System.Decimal? PFEner {
            get {
                return this._PFEner;
            }
            set {
                this.OnPropertyChanged("PFEner", this._PFEner, value);
                this._PFEner = value;
            }
        }
        
        public global::System.Decimal? PFPower {
            get {
                return this._PFPower;
            }
            set {
                this.OnPropertyChanged("PFPower", this._PFPower, value);
                this._PFPower = value;
            }
        }
        
        public global::System.Decimal? PFPres {
            get {
                return this._PFPres;
            }
            set {
                this.OnPropertyChanged("PFPres", this._PFPres, value);
                this._PFPres = value;
            }
        }
        
        public global::System.Decimal? PFRota {
            get {
                return this._PFRota;
            }
            set {
                this.OnPropertyChanged("PFRota", this._PFRota, value);
                this._PFRota = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptMixData._PptMixDataEntityConfiguration == null)) {
                PptMixData._PptMixDataEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptMixData");
            }
            return PptMixData._PptMixDataEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._Mix_id,
                    this._Term_code,
                    this._Set_time,
                    this._Set_temp,
                    this._Set_ener,
                    this._Set_power,
                    this._Set_pres,
                    this._Set_rota,
                    this._Act_code,
                    this._Save_Time,
                    this._PFTime,
                    this._PFTemp,
                    this._PFEner,
                    this._PFPower,
                    this._PFPres,
                    this._PFRota};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mix_id = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Term_code = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Set_time = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Set_temp = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Set_ener = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Set_power = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Set_pres = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Set_rota = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Act_code = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Save_Time = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._PFTime = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._PFTemp = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._PFEner = reader.GetDecimal(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._PFPower = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._PFPres = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._PFRota = reader.GetDecimal(16);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mix_id = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Term_code = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Set_time = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Set_temp = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Set_ener = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Set_power = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Set_pres = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Set_rota = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Act_code = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Save_Time = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._PFTime = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._PFTemp = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._PFEner = ((System.Nullable<decimal>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._PFPower = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._PFPres = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._PFRota = ((System.Nullable<decimal>)(row[16]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptMixData).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((this.isAttached && ((global::Mesnac.Entity.PptMixData)(obj)).isAttached) 
                        && (this.Barcode == ((global::Mesnac.Entity.PptMixData)(obj)).Barcode)) 
                        && (this.Mix_id == ((global::Mesnac.Entity.PptMixData)(obj)).Mix_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Mix_id = new NBear.Common.PropertyItem("Mix_id", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Term_code = new NBear.Common.PropertyItem("Term_code", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Set_time = new NBear.Common.PropertyItem("Set_time", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Set_temp = new NBear.Common.PropertyItem("Set_temp", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Set_ener = new NBear.Common.PropertyItem("Set_ener", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Set_power = new NBear.Common.PropertyItem("Set_power", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Set_pres = new NBear.Common.PropertyItem("Set_pres", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Set_rota = new NBear.Common.PropertyItem("Set_rota", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Act_code = new NBear.Common.PropertyItem("Act_code", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _Save_Time = new NBear.Common.PropertyItem("Save_Time", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _PFTime = new NBear.Common.PropertyItem("PFTime", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _PFTemp = new NBear.Common.PropertyItem("PFTemp", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _PFEner = new NBear.Common.PropertyItem("PFEner", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _PFPower = new NBear.Common.PropertyItem("PFPower", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _PFPres = new NBear.Common.PropertyItem("PFPres", "Mesnac.Entity.PptMixData");
            
            protected NBear.Common.PropertyItem _PFRota = new NBear.Common.PropertyItem("PFRota", "Mesnac.Entity.PptMixData");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mix_id {
                get {
                    if ((aliasName == null)) {
                        return _Mix_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mix_id", _Mix_id.EntityConfiguration, _Mix_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Term_code {
                get {
                    if ((aliasName == null)) {
                        return _Term_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Term_code", _Term_code.EntityConfiguration, _Term_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_time {
                get {
                    if ((aliasName == null)) {
                        return _Set_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_time", _Set_time.EntityConfiguration, _Set_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_temp {
                get {
                    if ((aliasName == null)) {
                        return _Set_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_temp", _Set_temp.EntityConfiguration, _Set_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_ener {
                get {
                    if ((aliasName == null)) {
                        return _Set_ener;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_ener", _Set_ener.EntityConfiguration, _Set_ener.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_power {
                get {
                    if ((aliasName == null)) {
                        return _Set_power;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_power", _Set_power.EntityConfiguration, _Set_power.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_pres {
                get {
                    if ((aliasName == null)) {
                        return _Set_pres;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_pres", _Set_pres.EntityConfiguration, _Set_pres.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_rota {
                get {
                    if ((aliasName == null)) {
                        return _Set_rota;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_rota", _Set_rota.EntityConfiguration, _Set_rota.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Act_code {
                get {
                    if ((aliasName == null)) {
                        return _Act_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Act_code", _Act_code.EntityConfiguration, _Act_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Save_Time {
                get {
                    if ((aliasName == null)) {
                        return _Save_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Save_Time", _Save_Time.EntityConfiguration, _Save_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFTime {
                get {
                    if ((aliasName == null)) {
                        return _PFTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFTime", _PFTime.EntityConfiguration, _PFTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFTemp {
                get {
                    if ((aliasName == null)) {
                        return _PFTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFTemp", _PFTemp.EntityConfiguration, _PFTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFEner {
                get {
                    if ((aliasName == null)) {
                        return _PFEner;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFEner", _PFEner.EntityConfiguration, _PFEner.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFPower {
                get {
                    if ((aliasName == null)) {
                        return _PFPower;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFPower", _PFPower.EntityConfiguration, _PFPower.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFPres {
                get {
                    if ((aliasName == null)) {
                        return _PFPres;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFPres", _PFPres.EntityConfiguration, _PFPres.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PFRota {
                get {
                    if ((aliasName == null)) {
                        return _PFRota;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PFRota", _PFRota.EntityConfiguration, _PFRota.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
