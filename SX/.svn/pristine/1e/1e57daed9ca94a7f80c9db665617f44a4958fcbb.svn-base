//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtRecipeWeightLogArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtRecipeWeightLog> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtRecipeWeightLog\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtRecipeWeightLog\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"LogObjID\" type=\"System.Int32\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"LogObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeObjID\" type=\"System.Int32\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"RecipeObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeEquipCode\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"RecipeEquipCode\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"RecipeMaterialCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeMaterialCode\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"RecipeVersionID\" type=\"System.Int32\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"RecipeVersionID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WeightID\" type=\"System.Int32\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"WeightID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WeightType\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"WeightType\" mappingColumnType=\"System.String\" sqlType=\"char" +
        "(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ScaleID\" typ" +
        "e=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"ScaleID\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"ActCode\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ActCode\"" +
        " mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"MaterialCode\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"MaterialCode\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterialName\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"MaterialName\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Se" +
        "tWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SetWeight\" mappi" +
        "ngColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ErrorAllow\" type=\"System.Nulla" +
        "ble`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"ErrorAllow\" mappingColumnType=\"System.Nulla" +
        "ble`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"LogRecordTime\" type=\"System.Nullable`1[System.DateTime]\"" +
        " isInherited=\"false\" sqlDefaultValue=\"getdate()\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"LogRecordTime\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PmtRecipeWeightLog : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtRecipeWeightLogEntityConfiguration;
        
        protected int _ObjID;
        
        protected int _LogObjID;
        
        protected int _RecipeObjID;
        
        protected string _RecipeEquipCode;
        
        protected string _RecipeMaterialCode;
        
        protected int _RecipeVersionID;
        
        protected int _WeightID;
        
        protected string _WeightType;
        
        protected global::System.Int32? _ScaleID;
        
        protected string _ActCode;
        
        protected string _MaterialCode;
        
        protected string _MaterialName;
        
        protected global::System.Decimal? _SetWeight;
        
        protected global::System.Decimal? _ErrorAllow;
        
        protected global::System.DateTime? _LogRecordTime;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtRecipeWeightLog left, global::Mesnac.Entity.PmtRecipeWeightLog right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtRecipeWeightLog left, global::Mesnac.Entity.PmtRecipeWeightLog right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public int LogObjID {
            get {
                return this._LogObjID;
            }
            set {
                this.OnPropertyChanged("LogObjID", this._LogObjID, value);
                this._LogObjID = value;
            }
        }
        
        public int RecipeObjID {
            get {
                return this._RecipeObjID;
            }
            set {
                this.OnPropertyChanged("RecipeObjID", this._RecipeObjID, value);
                this._RecipeObjID = value;
            }
        }
        
        public string RecipeEquipCode {
            get {
                return this._RecipeEquipCode;
            }
            set {
                this.OnPropertyChanged("RecipeEquipCode", this._RecipeEquipCode, value);
                this._RecipeEquipCode = value;
            }
        }
        
        public string RecipeMaterialCode {
            get {
                return this._RecipeMaterialCode;
            }
            set {
                this.OnPropertyChanged("RecipeMaterialCode", this._RecipeMaterialCode, value);
                this._RecipeMaterialCode = value;
            }
        }
        
        public int RecipeVersionID {
            get {
                return this._RecipeVersionID;
            }
            set {
                this.OnPropertyChanged("RecipeVersionID", this._RecipeVersionID, value);
                this._RecipeVersionID = value;
            }
        }
        
        public int WeightID {
            get {
                return this._WeightID;
            }
            set {
                this.OnPropertyChanged("WeightID", this._WeightID, value);
                this._WeightID = value;
            }
        }
        
        public string WeightType {
            get {
                return this._WeightType;
            }
            set {
                this.OnPropertyChanged("WeightType", this._WeightType, value);
                this._WeightType = value;
            }
        }
        
        public global::System.Int32? ScaleID {
            get {
                return this._ScaleID;
            }
            set {
                this.OnPropertyChanged("ScaleID", this._ScaleID, value);
                this._ScaleID = value;
            }
        }
        
        public string ActCode {
            get {
                return this._ActCode;
            }
            set {
                this.OnPropertyChanged("ActCode", this._ActCode, value);
                this._ActCode = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }
        
        public global::System.Decimal? SetWeight {
            get {
                return this._SetWeight;
            }
            set {
                this.OnPropertyChanged("SetWeight", this._SetWeight, value);
                this._SetWeight = value;
            }
        }
        
        public global::System.Decimal? ErrorAllow {
            get {
                return this._ErrorAllow;
            }
            set {
                this.OnPropertyChanged("ErrorAllow", this._ErrorAllow, value);
                this._ErrorAllow = value;
            }
        }
        
        public global::System.DateTime? LogRecordTime {
            get {
                return this._LogRecordTime;
            }
            set {
                this.OnPropertyChanged("LogRecordTime", this._LogRecordTime, value);
                this._LogRecordTime = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtRecipeWeightLog._PmtRecipeWeightLogEntityConfiguration == null)) {
                PmtRecipeWeightLog._PmtRecipeWeightLogEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtRecipeWeightLog");
            }
            return PmtRecipeWeightLog._PmtRecipeWeightLogEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._LogObjID,
                    this._RecipeObjID,
                    this._RecipeEquipCode,
                    this._RecipeMaterialCode,
                    this._RecipeVersionID,
                    this._WeightID,
                    this._WeightType,
                    this._ScaleID,
                    this._ActCode,
                    this._MaterialCode,
                    this._MaterialName,
                    this._SetWeight,
                    this._ErrorAllow,
                    this._LogRecordTime};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._LogObjID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._RecipeObjID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RecipeEquipCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RecipeMaterialCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RecipeVersionID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._WeightID = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._WeightType = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ScaleID = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ActCode = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._MaterialCode = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._MaterialName = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._SetWeight = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._ErrorAllow = reader.GetDecimal(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._LogRecordTime = this.GetDateTime(reader, 14);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._LogObjID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._RecipeObjID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RecipeEquipCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._RecipeMaterialCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._RecipeVersionID = ((int)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._WeightID = ((int)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._WeightType = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ScaleID = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ActCode = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._MaterialCode = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._MaterialName = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._SetWeight = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._ErrorAllow = ((System.Nullable<decimal>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._LogRecordTime = this.GetDateTime(row, 14);
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtRecipeWeightLog).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtRecipeWeightLog)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PmtRecipeWeightLog)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _LogObjID = new NBear.Common.PropertyItem("LogObjID", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _RecipeObjID = new NBear.Common.PropertyItem("RecipeObjID", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _RecipeEquipCode = new NBear.Common.PropertyItem("RecipeEquipCode", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _RecipeMaterialCode = new NBear.Common.PropertyItem("RecipeMaterialCode", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _RecipeVersionID = new NBear.Common.PropertyItem("RecipeVersionID", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _WeightID = new NBear.Common.PropertyItem("WeightID", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _WeightType = new NBear.Common.PropertyItem("WeightType", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _ScaleID = new NBear.Common.PropertyItem("ScaleID", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _ActCode = new NBear.Common.PropertyItem("ActCode", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _MaterialName = new NBear.Common.PropertyItem("MaterialName", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _SetWeight = new NBear.Common.PropertyItem("SetWeight", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _ErrorAllow = new NBear.Common.PropertyItem("ErrorAllow", "Mesnac.Entity.PmtRecipeWeightLog");
            
            protected NBear.Common.PropertyItem _LogRecordTime = new NBear.Common.PropertyItem("LogRecordTime", "Mesnac.Entity.PmtRecipeWeightLog");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LogObjID {
                get {
                    if ((aliasName == null)) {
                        return _LogObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LogObjID", _LogObjID.EntityConfiguration, _LogObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeObjID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeObjID", _RecipeObjID.EntityConfiguration, _RecipeObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeEquipCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeEquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeEquipCode", _RecipeEquipCode.EntityConfiguration, _RecipeEquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeMaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeMaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeMaterialCode", _RecipeMaterialCode.EntityConfiguration, _RecipeMaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeVersionID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeVersionID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeVersionID", _RecipeVersionID.EntityConfiguration, _RecipeVersionID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WeightID {
                get {
                    if ((aliasName == null)) {
                        return _WeightID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WeightID", _WeightID.EntityConfiguration, _WeightID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WeightType {
                get {
                    if ((aliasName == null)) {
                        return _WeightType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WeightType", _WeightType.EntityConfiguration, _WeightType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ScaleID {
                get {
                    if ((aliasName == null)) {
                        return _ScaleID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ScaleID", _ScaleID.EntityConfiguration, _ScaleID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ActCode {
                get {
                    if ((aliasName == null)) {
                        return _ActCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ActCode", _ActCode.EntityConfiguration, _ActCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetWeight {
                get {
                    if ((aliasName == null)) {
                        return _SetWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetWeight", _SetWeight.EntityConfiguration, _SetWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErrorAllow {
                get {
                    if ((aliasName == null)) {
                        return _ErrorAllow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErrorAllow", _ErrorAllow.EntityConfiguration, _ErrorAllow.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LogRecordTime {
                get {
                    if ((aliasName == null)) {
                        return _LogRecordTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LogRecordTime", _LogRecordTime.EntityConfiguration, _LogRecordTime.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
