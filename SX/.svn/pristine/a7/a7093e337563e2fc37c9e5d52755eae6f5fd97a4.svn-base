//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_plantimeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_plantime> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_plantime\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_plantime\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Plan_id\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Plan_id\" mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"Plan_date\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Plan_date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_Code\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Mater_Code\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_nam" +
        "e\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Mater_name\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Equip_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_Code\" mappingColum" +
        "nType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Shift_id\" type=\"System.Nullable`1[System.Int16]\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Shift_id\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"sma" +
        "llint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_Clas" +
        "s\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shift_Class\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Change_Time\" type=\"System.Nullable`1[" +
        "System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Change_Time\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"Poly_Time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Poly_" +
        "Time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Nomal_time\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Nomal_time\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Starttime\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Starttime\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Changeshifttime\" type=\"System.Nullable`1[Sy" +
        "stem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Changeshifttime\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Down_alltime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"f" +
        "alse\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Down_alltime\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Plan_time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDe" +
        "faultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Plan_time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTyp" +
        "e=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConf" +
        "iguration>")]
    public partial class Ppt_plantime : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_plantimeEntityConfiguration;
        
        protected string _Plan_id;
        
        protected string _Plan_date;
        
        protected string _Mater_Code;
        
        protected string _Mater_name;
        
        protected string _Equip_Code;
        
        protected global::System.Int16? _Shift_id;
        
        protected global::System.Int16? _Shift_Class;
        
        protected global::System.Int32? _Change_Time;
        
        protected global::System.Int32? _Poly_Time;
        
        protected global::System.Int32? _Nomal_time;
        
        protected string _Starttime;
        
        protected global::System.Int32? _Changeshifttime;
        
        protected global::System.Int32? _Down_alltime;
        
        protected global::System.Int32? _Plan_time;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_plantime left, global::Mesnac.Entity.Ppt_plantime right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_plantime left, global::Mesnac.Entity.Ppt_plantime right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Plan_id {
            get {
                return this._Plan_id;
            }
            set {
                this.OnPropertyChanged("Plan_id", this._Plan_id, value);
                this._Plan_id = value;
            }
        }
        
        public string Plan_date {
            get {
                return this._Plan_date;
            }
            set {
                this.OnPropertyChanged("Plan_date", this._Plan_date, value);
                this._Plan_date = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public string Mater_name {
            get {
                return this._Mater_name;
            }
            set {
                this.OnPropertyChanged("Mater_name", this._Mater_name, value);
                this._Mater_name = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public global::System.Int16? Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public global::System.Int16? Shift_Class {
            get {
                return this._Shift_Class;
            }
            set {
                this.OnPropertyChanged("Shift_Class", this._Shift_Class, value);
                this._Shift_Class = value;
            }
        }
        
        public global::System.Int32? Change_Time {
            get {
                return this._Change_Time;
            }
            set {
                this.OnPropertyChanged("Change_Time", this._Change_Time, value);
                this._Change_Time = value;
            }
        }
        
        public global::System.Int32? Poly_Time {
            get {
                return this._Poly_Time;
            }
            set {
                this.OnPropertyChanged("Poly_Time", this._Poly_Time, value);
                this._Poly_Time = value;
            }
        }
        
        public global::System.Int32? Nomal_time {
            get {
                return this._Nomal_time;
            }
            set {
                this.OnPropertyChanged("Nomal_time", this._Nomal_time, value);
                this._Nomal_time = value;
            }
        }
        
        public string Starttime {
            get {
                return this._Starttime;
            }
            set {
                this.OnPropertyChanged("Starttime", this._Starttime, value);
                this._Starttime = value;
            }
        }
        
        public global::System.Int32? Changeshifttime {
            get {
                return this._Changeshifttime;
            }
            set {
                this.OnPropertyChanged("Changeshifttime", this._Changeshifttime, value);
                this._Changeshifttime = value;
            }
        }
        
        public global::System.Int32? Down_alltime {
            get {
                return this._Down_alltime;
            }
            set {
                this.OnPropertyChanged("Down_alltime", this._Down_alltime, value);
                this._Down_alltime = value;
            }
        }
        
        public global::System.Int32? Plan_time {
            get {
                return this._Plan_time;
            }
            set {
                this.OnPropertyChanged("Plan_time", this._Plan_time, value);
                this._Plan_time = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_plantime._Ppt_plantimeEntityConfiguration == null)) {
                Ppt_plantime._Ppt_plantimeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_plantime");
            }
            return Ppt_plantime._Ppt_plantimeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Plan_id,
                    this._Plan_date,
                    this._Mater_Code,
                    this._Mater_name,
                    this._Equip_Code,
                    this._Shift_id,
                    this._Shift_Class,
                    this._Change_Time,
                    this._Poly_Time,
                    this._Nomal_time,
                    this._Starttime,
                    this._Changeshifttime,
                    this._Down_alltime,
                    this._Plan_time};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Plan_id = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Plan_date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mater_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mater_name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_Code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Shift_id = reader.GetInt16(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Shift_Class = reader.GetInt16(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Change_Time = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Poly_Time = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Nomal_time = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Starttime = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Changeshifttime = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Down_alltime = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Plan_time = reader.GetInt32(13);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Plan_id = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Plan_date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mater_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mater_name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_Code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Shift_id = ((System.Nullable<short>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Shift_Class = ((System.Nullable<short>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Change_Time = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Poly_Time = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Nomal_time = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Starttime = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Changeshifttime = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Down_alltime = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Plan_time = ((System.Nullable<int>)(row[13]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_plantime).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_plantime)(obj)).isAttached) 
                        && (this.Plan_id == ((global::Mesnac.Entity.Ppt_plantime)(obj)).Plan_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Plan_id = new NBear.Common.PropertyItem("Plan_id", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Plan_date = new NBear.Common.PropertyItem("Plan_date", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Mater_name = new NBear.Common.PropertyItem("Mater_name", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Shift_Class = new NBear.Common.PropertyItem("Shift_Class", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Change_Time = new NBear.Common.PropertyItem("Change_Time", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Poly_Time = new NBear.Common.PropertyItem("Poly_Time", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Nomal_time = new NBear.Common.PropertyItem("Nomal_time", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Starttime = new NBear.Common.PropertyItem("Starttime", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Changeshifttime = new NBear.Common.PropertyItem("Changeshifttime", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Down_alltime = new NBear.Common.PropertyItem("Down_alltime", "Mesnac.Entity.Ppt_plantime");
            
            protected NBear.Common.PropertyItem _Plan_time = new NBear.Common.PropertyItem("Plan_time", "Mesnac.Entity.Ppt_plantime");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Plan_id {
                get {
                    if ((aliasName == null)) {
                        return _Plan_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_id", _Plan_id.EntityConfiguration, _Plan_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_date", _Plan_date.EntityConfiguration, _Plan_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_name", _Mater_name.EntityConfiguration, _Mater_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Class", _Shift_Class.EntityConfiguration, _Shift_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Change_Time {
                get {
                    if ((aliasName == null)) {
                        return _Change_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Change_Time", _Change_Time.EntityConfiguration, _Change_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Poly_Time {
                get {
                    if ((aliasName == null)) {
                        return _Poly_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Poly_Time", _Poly_Time.EntityConfiguration, _Poly_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Nomal_time {
                get {
                    if ((aliasName == null)) {
                        return _Nomal_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Nomal_time", _Nomal_time.EntityConfiguration, _Nomal_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Starttime {
                get {
                    if ((aliasName == null)) {
                        return _Starttime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Starttime", _Starttime.EntityConfiguration, _Starttime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Changeshifttime {
                get {
                    if ((aliasName == null)) {
                        return _Changeshifttime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Changeshifttime", _Changeshifttime.EntityConfiguration, _Changeshifttime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Down_alltime {
                get {
                    if ((aliasName == null)) {
                        return _Down_alltime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Down_alltime", _Down_alltime.EntityConfiguration, _Down_alltime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_time {
                get {
                    if ((aliasName == null)) {
                        return _Plan_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_time", _Plan_time.EntityConfiguration, _Plan_time.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
