//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmtQrigDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmtQrigDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.QmtQrigDetail\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmtQrigDetail\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"IncId\" type=\"System.Int64\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"In" +
        "cId\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"SeqNo\" type=\"System.Int64\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S" +
        "eqNo\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\" isNo" +
        "tNull=\"true\" />\r\n    <Property name=\"ItemCd\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "ItemCd\" mappingColumnType=\"System.String\" sqlType=\"char(3)\" isPrimaryKey=\"true\" " +
        "isNotNull=\"true\" />\r\n    <Property name=\"ItemCheck\" type=\"System.Nullable`1[Syst" +
        "em.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"ItemCheck\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"StandCode\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Sta" +
        "ndCode\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StandId\" type=\"System.N" +
        "ullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"StandId\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"UnitName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UnitName\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"JudgeValue\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"JudgeValue\" mappingColumnType=\"System.Nullable`1[System.Int32]\"" +
        " sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ch" +
        "eckEquipCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"CheckEquipCode\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"PlanDate\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanDate\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"De" +
        "leteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"GUID\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"GUID\" mappingColumnType=\"System.String\" sqlType=\"nchar(36)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"ImportRelativeId\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"ImportRelativeId\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</En" +
        "tityConfiguration>")]
    public partial class QmtQrigDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmtQrigDetailEntityConfiguration;
        
        protected long _IncId;
        
        protected long _SeqNo;
        
        protected string _ItemCd;
        
        protected global::System.Decimal? _ItemCheck;
        
        protected global::System.Int32? _StandCode;
        
        protected global::System.Int32? _StandId;
        
        protected string _UnitName;
        
        protected global::System.Int32? _JudgeValue;
        
        protected string _CheckEquipCode;
        
        protected string _PlanDate;
        
        protected string _DeleteFlag;
        
        protected string _GUID;
        
        protected string _ImportRelativeId;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmtQrigDetail left, global::Mesnac.Entity.QmtQrigDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmtQrigDetail left, global::Mesnac.Entity.QmtQrigDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long IncId {
            get {
                return this._IncId;
            }
            set {
                this.OnPropertyChanged("IncId", this._IncId, value);
                this._IncId = value;
            }
        }
        
        public long SeqNo {
            get {
                return this._SeqNo;
            }
            set {
                this.OnPropertyChanged("SeqNo", this._SeqNo, value);
                this._SeqNo = value;
            }
        }
        
        public string ItemCd {
            get {
                return this._ItemCd;
            }
            set {
                this.OnPropertyChanged("ItemCd", this._ItemCd, value);
                this._ItemCd = value;
            }
        }
        
        public global::System.Decimal? ItemCheck {
            get {
                return this._ItemCheck;
            }
            set {
                this.OnPropertyChanged("ItemCheck", this._ItemCheck, value);
                this._ItemCheck = value;
            }
        }
        
        public global::System.Int32? StandCode {
            get {
                return this._StandCode;
            }
            set {
                this.OnPropertyChanged("StandCode", this._StandCode, value);
                this._StandCode = value;
            }
        }
        
        public global::System.Int32? StandId {
            get {
                return this._StandId;
            }
            set {
                this.OnPropertyChanged("StandId", this._StandId, value);
                this._StandId = value;
            }
        }
        
        public string UnitName {
            get {
                return this._UnitName;
            }
            set {
                this.OnPropertyChanged("UnitName", this._UnitName, value);
                this._UnitName = value;
            }
        }
        
        public global::System.Int32? JudgeValue {
            get {
                return this._JudgeValue;
            }
            set {
                this.OnPropertyChanged("JudgeValue", this._JudgeValue, value);
                this._JudgeValue = value;
            }
        }
        
        public string CheckEquipCode {
            get {
                return this._CheckEquipCode;
            }
            set {
                this.OnPropertyChanged("CheckEquipCode", this._CheckEquipCode, value);
                this._CheckEquipCode = value;
            }
        }
        
        public string PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string GUID {
            get {
                return this._GUID;
            }
            set {
                this.OnPropertyChanged("GUID", this._GUID, value);
                this._GUID = value;
            }
        }
        
        public string ImportRelativeId {
            get {
                return this._ImportRelativeId;
            }
            set {
                this.OnPropertyChanged("ImportRelativeId", this._ImportRelativeId, value);
                this._ImportRelativeId = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmtQrigDetail._QmtQrigDetailEntityConfiguration == null)) {
                QmtQrigDetail._QmtQrigDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmtQrigDetail");
            }
            return QmtQrigDetail._QmtQrigDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._IncId,
                    this._SeqNo,
                    this._ItemCd,
                    this._ItemCheck,
                    this._StandCode,
                    this._StandId,
                    this._UnitName,
                    this._JudgeValue,
                    this._CheckEquipCode,
                    this._PlanDate,
                    this._DeleteFlag,
                    this._GUID,
                    this._ImportRelativeId};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._IncId = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._SeqNo = reader.GetInt64(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ItemCd = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ItemCheck = reader.GetDecimal(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._StandCode = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._StandId = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._UnitName = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._JudgeValue = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._CheckEquipCode = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._PlanDate = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._DeleteFlag = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._GUID = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._ImportRelativeId = reader.GetString(12);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._IncId = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._SeqNo = ((long)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ItemCd = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ItemCheck = ((System.Nullable<decimal>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._StandCode = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._StandId = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._UnitName = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._JudgeValue = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._CheckEquipCode = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._PlanDate = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._DeleteFlag = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._GUID = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._ImportRelativeId = ((string)(row[12]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmtQrigDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((this.isAttached && ((global::Mesnac.Entity.QmtQrigDetail)(obj)).isAttached) 
                        && (this.SeqNo == ((global::Mesnac.Entity.QmtQrigDetail)(obj)).SeqNo)) 
                        && (this.ItemCd == ((global::Mesnac.Entity.QmtQrigDetail)(obj)).ItemCd));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _IncId = new NBear.Common.PropertyItem("IncId", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _SeqNo = new NBear.Common.PropertyItem("SeqNo", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _ItemCd = new NBear.Common.PropertyItem("ItemCd", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _ItemCheck = new NBear.Common.PropertyItem("ItemCheck", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _StandCode = new NBear.Common.PropertyItem("StandCode", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _StandId = new NBear.Common.PropertyItem("StandId", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _UnitName = new NBear.Common.PropertyItem("UnitName", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _JudgeValue = new NBear.Common.PropertyItem("JudgeValue", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _CheckEquipCode = new NBear.Common.PropertyItem("CheckEquipCode", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _GUID = new NBear.Common.PropertyItem("GUID", "Mesnac.Entity.QmtQrigDetail");
            
            protected NBear.Common.PropertyItem _ImportRelativeId = new NBear.Common.PropertyItem("ImportRelativeId", "Mesnac.Entity.QmtQrigDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem IncId {
                get {
                    if ((aliasName == null)) {
                        return _IncId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IncId", _IncId.EntityConfiguration, _IncId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeqNo {
                get {
                    if ((aliasName == null)) {
                        return _SeqNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqNo", _SeqNo.EntityConfiguration, _SeqNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemCd {
                get {
                    if ((aliasName == null)) {
                        return _ItemCd;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemCd", _ItemCd.EntityConfiguration, _ItemCd.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemCheck {
                get {
                    if ((aliasName == null)) {
                        return _ItemCheck;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemCheck", _ItemCheck.EntityConfiguration, _ItemCheck.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandCode {
                get {
                    if ((aliasName == null)) {
                        return _StandCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandCode", _StandCode.EntityConfiguration, _StandCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StandId {
                get {
                    if ((aliasName == null)) {
                        return _StandId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StandId", _StandId.EntityConfiguration, _StandId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UnitName {
                get {
                    if ((aliasName == null)) {
                        return _UnitName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UnitName", _UnitName.EntityConfiguration, _UnitName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JudgeValue {
                get {
                    if ((aliasName == null)) {
                        return _JudgeValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JudgeValue", _JudgeValue.EntityConfiguration, _JudgeValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckEquipCode {
                get {
                    if ((aliasName == null)) {
                        return _CheckEquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckEquipCode", _CheckEquipCode.EntityConfiguration, _CheckEquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GUID {
                get {
                    if ((aliasName == null)) {
                        return _GUID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GUID", _GUID.EntityConfiguration, _GUID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ImportRelativeId {
                get {
                    if ((aliasName == null)) {
                        return _ImportRelativeId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ImportRelativeId", _ImportRelativeId.EntityConfiguration, _ImportRelativeId.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
