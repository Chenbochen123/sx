using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Mesnac.Entity;
using Ext.Net;
using Mesnac.Business.Implements;
using NBear.Common;
using System.Text.RegularExpressions;
using Mesnac.Data.Components;
using System.Data;
using System.IO;
using System.Text;
using Microsoft.Win32;
using System.Diagnostics;
using Ionic.Zip;
using NPOI.SS.UserModel;
using NPOI.HSSF.UserModel;
using System.Data.SqlClient;
public partial class Manager_BasicInfo_DepartmentInfo_Department : Mesnac.Web.UI.Page
{
    protected BasDeptManager manager = new BasDeptManager();//业务对象
    protected SysCodeManager sysCodeManager = new SysCodeManager();
    protected BasDeptErpInfoManager erpInfoManager = new BasDeptErpInfoManager();
    protected Ext.Net.MessageBox msg = new Ext.Net.MessageBox();//弹出框
    protected EntityArrayList<BasDept> entityList;
    private string topDepCode = "00000";

    #region 权限定义
    protected __ _ = new __();
    public class __ : ___  //必须继承___   //Action不能重复，重复会被覆盖
    {
        public __()
        {
            查询 = new SysPageAction() { ActionID = 1, ActionName = "btn_search" };
            历史查询 = new SysPageAction() { ActionID = 2, ActionName = "btn_history_search" };
            导出 = new SysPageAction() { ActionID = 3, ActionName = "btnExport" };
            修改 = new SysPageAction() { ActionID = 4, ActionName = "Edit" };
            删除 = new SysPageAction() { ActionID = 5, ActionName = "Delete" };
            恢复 = new SysPageAction() { ActionID = 6, ActionName = "Recover" };
            添加 = new SysPageAction() { ActionID = 7, ActionName = "btn_add" };
        }
        public SysPageAction 查询 { get; private set; } //必须为 public
        public SysPageAction 历史查询 { get; private set; } //必须为 public
        public SysPageAction 导出 { get; private set; } //必须为 public
        public SysPageAction 修改 { get; private set; } //必须为 public
        public SysPageAction 删除 { get; private set; } //必须为 public
        public SysPageAction 恢复 { get; private set; } //必须为 public
        public SysPageAction 添加 { get; private set; } //必须为 public
    }
    #endregion

    #region 初始化方法
    /// <summary>
    /// 页面初始化方法
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!X.IsAjaxRequest)
        {
            InitTreeDept();
        }
    }
    #region 查询显示左侧部门列表 树
    [DirectMethod]
    public string treePanelDeptLoad(string pageid)
    {
        WhereClip whereDept = new WhereClip();
        whereDept.And(BasDept._.DeleteFlag == "0");
        whereDept.And(BasDept._.ParentNum == pageid);
        EntityArrayList<BasDept> deptList = manager.GetListByWhere(whereDept);
        NodeCollection nodes = new Ext.Net.NodeCollection();
        if (deptList.Count > 0)
        {
            foreach (BasDept dept in deptList)
            {
                if (manager.GetListByWhere(BasDept._.ParentNum == dept.DepCode && BasDept._.DeleteFlag == 0).Count > 0)
                {
                    Node node = new Node();
                    node.NodeID = dept.DepCode;
                    node.Text = dept.DepName;
                    node.Icon = Icon.Building;
                    node.Leaf = false;
                    nodes.Add(node);
                }
                else
                {
                    Node node = new Node();
                    node.NodeID = dept.DepCode;
                    node.Text = dept.DepName;
                    node.Icon = Icon.BuildingGo;
                    node.Leaf = true;
                    nodes.Add(node);
                }
            }
        }
        return nodes.ToJson();
    }
    /// <summary>
    /// 初始化部门列表树
    /// </summary>
    private void InitTreeDept()
    {
        if (this._.查询.SeqIdx == 0)
        {
            return;
        }
        treeDept.GetRootNode().RemoveAll();
        WhereClip where = new WhereClip();
        where.And(BasDept._.DeleteFlag == "0");
        where.And(BasDept._.DepCode == "00001");
        EntityArrayList<BasDept> lst = manager.GetListByWhere(where);
        foreach (BasDept dept in lst)
        {

            Node node = new Node();
            node.NodeID = dept.DepCode;
            node.Text = dept.DepName;
            node.Icon = Icon.Building;
            treeDept.GetRootNode().AppendChild(node);
        }
    }
    #endregion
    #endregion

    #region 分页相关方法
    private PageResult<BasDept> GetPageResultData(PageResult<BasDept> pageParams)
    {
        BasDeptManager.QueryParams queryParams = new BasDeptManager.QueryParams();
        queryParams.pageParams = pageParams;
        queryParams.depCode = txt_dep_code.Text.TrimEnd().TrimStart();
        queryParams.depName = txt_dep_name.Text.TrimEnd().TrimStart();
        queryParams.parentNum = hidden_parent_num.Value == "" ? "" : hidden_parent_num.Value.ToString();
        queryParams.erpCode = txt_erp_code.Text.TrimEnd().TrimStart();
        queryParams.remark = txt_remark.Text.TrimEnd().TrimStart();
        queryParams.deleteFlag = hidden_delete_flag.Text;

        return manager.GetTablePageDataBySql(queryParams);
    }

    [DirectMethod]
    public object GridPanelBindData(string action, Dictionary<string, object> extraParams)
    {
        if (!Regex.IsMatch(txt_dep_code.Text.TrimEnd().TrimStart(), "^[0-9]*$"))
        {
            txt_dep_code.Text = "";
        }
        if (this._.查询.SeqIdx == 0)
        {
            return "";
        }
        StoreRequestParameters prms = new StoreRequestParameters(extraParams);
        PageResult<BasDept> pageParams = new PageResult<BasDept>();
        pageParams.PageIndex = prms.Page;
        pageParams.PageSize = prms.Limit;
        pageParams.Orderfld = "ObjID ASC";

        PageResult<BasDept> lst = GetPageResultData(pageParams);
        DataTable data = lst.DataSet.Tables[0];

        int total = lst.RecordCount;
        return new { data, total };
    }
    #endregion

    #region 打印
    /// <summary>
    /// 打印调用方法
    /// yuany 2013年3月2日
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void btnExportSubmit_Click(object sender, EventArgs e)
    {
        if (!Regex.IsMatch(txt_dep_code.Text.TrimEnd().TrimStart(), "^[0-9]*$"))
        {
            txt_dep_code.Text = "";
        }
        PageResult<BasDept> pageParams = new PageResult<BasDept>();
        pageParams.PageSize = -100;
        PageResult<BasDept> lst = GetPageResultData(pageParams);
        for (int i = 0; i < lst.DataSet.Tables[0].Columns.Count; i++)
        {
            bool isshow = false;
            DataColumn dc = lst.DataSet.Tables[0].Columns[i];
            foreach (ColumnBase cb in this.pnlList.ColumnModel.Columns)
            {
                if ((cb.DataIndex != null) && (cb.DataIndex.ToUpper() == dc.ColumnName.ToUpper()))
                {
                    dc.ColumnName = cb.Text;
                    isshow = true;
                    break;
                }
            }
            if (!isshow)
            {
                lst.DataSet.Tables[0].Columns.Remove(dc.ColumnName);
                i--;
            }
        }
        new Mesnac.Util.Excel.ExcelDownload().ExcelFileDown(lst.DataSet, "部门信息");
    }
    #endregion

    #region 增删改查按钮事件

    /// <summary>
    /// 点击添加按钮激发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
 
  protected void tohf()
  {
      BasMaterialManager manager = new BasMaterialManager();
      String sql = "select * from pptplan where recipeequipcode = '01038' and plandate >='2017-11-15' and tbflag is null and planstate>2 order by plandate";
      //and tbflag is null
      DataSet ds = manager.GetBySql(sql).ToDataSet();
      if (ds.Tables[0].Rows.Count == 0)
      {
          //msg.Alert("操作", "无计划！");
          //msg.Show(); 
          return;
      }
      DataRow dr = ds.Tables[0].Rows[0];
      string planid = dr["PlanID"].ToString();
      string RecipeMaterialCode = dr["RecipeMaterialCode"].ToString();
      string RecipeMaterialName = dr["RecipeMaterialName"].ToString();
      string RecipeVerSionID = dr["RecipeVerSionID"].ToString();
      string PlanNum = dr["PlanNum"].ToString();
      string RecipeType = dr["RecipeType"].ToString();
      try
      {
          sql = "update pptplan set tbflag ='1' where planid ='" + planid + "' ";
          ds = manager.GetBySql(sql).ToDataSet();

          sql = "   select * from pmtrecipe where recipeequipcode = '01038' and recipematerialcode = '" + RecipeMaterialCode + "' and recipeversionid = '" + RecipeVerSionID + "' and RecipeType = '" + RecipeType + "'";
          ds = manager.GetBySql(sql).ToDataSet(); dr = ds.Tables[0].Rows[0];
          String Recipeobjid = dr["ObjID"].ToString();
          String HFFlag = dr["HFFlag"].ToString();
          sql = " select * from PmtTypeToHF where  code = '" + RecipeType + "'";
          DataSet dst = manager.GetBySql(sql).ToDataSet();
          String RecipeTypeName = dst.Tables[0].Rows[0]["Name"].ToString();
          String HFRcode = RecipeMaterialName + "(" + dst.Tables[0].Rows[0]["HFCode"].ToString().Trim() + ")";


          HF.Service ws = new HF.Service();//  插入配方 删除称量信息 插入物料 插入称量信息 更新配方 插入计划
          ws.Url = "http://192.168.1.137:8018/MesToHf/Service.asmx";
          DataSet hfrecipe = ws.GetData("SELECT * FROM OPENQUERY(HFDB, 'select * from recipes_import where reci_recp_code = ''" + HFRcode + "'' and RECI_RECP_VERSION = " + RecipeVerSionID + "')");
          if (hfrecipe.Tables[0].Rows.Count == 0)
          {
              sql = ("insert into openquery(HFDB,'select RECI_LINE_NAME, RECI_RECP_CODE,RECI_RECP_NAME, RECI_RECP_VERSION, RECI_BLOCKED, RECI_FUNCTION, RECI_HOST_ID ,RECI_RECP_CODE_2 from recipes_import where 1=0') values ('Line01','" + HFRcode + "','" + RecipeMaterialName + RecipeTypeName + "'," + RecipeVerSionID + ", 1, 9, 1,'" + RecipeMaterialCode + "');   ");

              ws.GetData("insert into openquery(HFDB,'select RECI_LINE_NAME, RECI_RECP_CODE,RECI_RECP_NAME, RECI_RECP_VERSION, RECI_BLOCKED, RECI_FUNCTION, RECI_HOST_ID ,RECI_RECP_CODE_2 from recipes_import where 1=0') values ('Line01','" + HFRcode + "','" + RecipeMaterialName + RecipeTypeName + "'," + RecipeVerSionID + ", 1, 9, 1,'" + RecipeMaterialCode + "');   ");
              HFFlag = "";
          }

          hfrecipe = ws.GetData("SELECT * FROM OPENQUERY(HFDB, 'select * from recipes_import where reci_recp_code = ''" + HFRcode + "'' and RECI_RECP_VERSION = " + RecipeVerSionID + " ')");
          String hfreid = hfrecipe.Tables[0].Rows[0]["RECI_ID"].ToString();
       

          if (string.IsNullOrEmpty(HFFlag.Trim()))
          {
              sql = (" delete from OPENQUERY(HFDB, 'select * from recipes_cmp_import where rcmp_reci_id = " + hfreid + "');   ");
              ws.GetData(" delete from OPENQUERY(HFDB, 'select * from recipes_cmp_import where rcmp_reci_id = " + hfreid + "');   ");


              sql = "select * from pmtrecipeweight where recipeobjid = '" + Recipeobjid + "'";
              ds = manager.GetBySql(sql).ToDataSet();
       
              foreach (DataRow drow in ds.Tables[0].Rows)
              {
                  sql = "select * from basmaterial where materialcode  = '" + drow["MaterialCode"].ToString() + "'";
                  DataSet dm = manager.GetBySql(sql).ToDataSet();
                  if (dm.Tables[0].Rows.Count == 0)
                  {

                      continue;
                  }
                  String hfcode = dm.Tables[0].Rows[0]["HFCode"].ToString();
                  if (string.IsNullOrEmpty(hfcode)) hfcode = dm.Tables[0].Rows[0]["ERPCode"].ToString();
                  if (string.IsNullOrEmpty(hfcode)) hfcode = "0";
                  string mtype = "Mes";
                  if (drow["MaterialCode"].ToString().Substring(0, 3) == "104") mtype = "Carbon";
                  if (drow["MaterialCode"].ToString().Substring(0, 1) == "2") mtype = "Chemical";
                  if (drow["MaterialCode"].ToString().Substring(0, 3) == "107") mtype = "Oil";
                  if (drow["MaterialCode"].ToString().Substring(0, 3) == "101") mtype = "Rubber";
                  if (drow["MaterialCode"].ToString().Substring(0, 3) == "102") mtype = "Rubber";
                  if (drow["MaterialCode"].ToString().Substring(0, 3) == "103") mtype = "Rubber";

                  dm = ws.GetData("SELECT * FROM OPENQUERY(HFDB, 'select * from materials_import where MATI_NAME =''" + drow["MaterialCode"].ToString() + "'' ')");
                  if (dm.Tables[0].Rows.Count == 0)
                  {
                      sql = (@"insert into openquery(HFDB,'select MATI_MAT_GROUP,MATI_MAT_CODE,MATI_NAME,MATI_MAT_TYPE,MATI_FUNCTION from materials_import where 1=0') values ('" + mtype + "','" + hfcode + "','" + drow["MaterialCode"].ToString() + "','RAW',9);  ");
                      ws.GetData(@"insert into openquery(HFDB,'select MATI_MAT_GROUP,MATI_MAT_CODE,MATI_NAME,MATI_MAT_TYPE,MATI_FUNCTION from materials_import where 1=0') values ('" + mtype + "','" + hfcode + "','" + drow["MaterialCode"].ToString() + "','RAW',9);  ");
                  }
                  else
                  {
                      sql = (@" delete from OPENQUERY(HFDB, 'select * from materials_import  where MATI_NAME =''" + drow["MaterialCode"].ToString() + "'' ');    ");
                      ws.GetData(@" delete from OPENQUERY(HFDB, 'select * from materials_import  where MATI_NAME =''" + drow["MaterialCode"].ToString() + "'' ');    ");
                      sql = (@"insert into openquery(HFDB,'select MATI_MAT_GROUP,MATI_MAT_CODE,MATI_NAME,MATI_MAT_TYPE,MATI_FUNCTION from materials_import where 1=0') values ('" + mtype + "','" + hfcode + "','" + drow["MaterialCode"].ToString() + "','RAW',4);  ");
                      ws.GetData(@"insert into openquery(HFDB,'select MATI_MAT_GROUP,MATI_MAT_CODE,MATI_NAME,MATI_MAT_TYPE,MATI_FUNCTION from materials_import where 1=0') values ('" + mtype + "','" + hfcode + "','" + drow["MaterialCode"].ToString() + "','RAW',4);  ");

                      //ws.GetData(@"   update OPENQUERY(HFDB, 'select * from materials_import where MATI_NAME=" + drow["MaterialCode"].ToString() + "') set MATI_FUNCTION=4  ,MATI_MAT_CODE  = '" + hfcode + "'");

                  }
                  sql = (@"insert into openquery(HFDB,'select RCMP_RECI_ID,RCMP_MAT_CODE,RCMP_WEIGHT from recipes_cmp_import where 1=0') 
values (" + hfreid + ",'" + hfcode + "'," + drow["SetWeight"].ToString() + ");  ");
                  ws.GetData(@"insert into openquery(HFDB,'select RCMP_RECI_ID,RCMP_MAT_CODE,RCMP_WEIGHT from recipes_cmp_import where 1=0') 
values (" + hfreid + ",'" + hfcode + "'," + drow["SetWeight"].ToString() + ");  ");


              }

              sql = ("   update OPENQUERY(HFDB, 'select * from recipes_import where RECI_ID= " + hfreid + "') set RECI_FUNCTION=4  ");
              ws.GetData(sql);

          
              sql = "update pmtrecipe set hfflag ='2' where objid ='" + Recipeobjid + "' ";
              ds = manager.GetBySql(sql).ToDataSet();



          }
          sql = (@" delete from OPENQUERY(HFDB, 'select * from prod_orders_imp  where pori_order_number =''" + planid + "'' ');    ");
          ws.GetData(sql);
          sql = (@"  insert into openquery(HFDB,'select pori_line_name, pori_order_number, pori_recipe_code, pori_recipe_version, 
                                              pori_batch_quantity_set, pori_order_weight, pori_pror_blocked, pori_function, 
                                              pori_host_id from prod_orders_imp where 1=0') 
values ('Line01','" + planid + "','" + HFRcode + "'," + RecipeVerSionID + "," + PlanNum + ", 0, 0, 9, 1);  ");
          ws.GetData(sql);

          sql = "update pptplan set tbflag ='2' where planid ='" + planid + "' ";
          ds = manager.GetBySql(sql).ToDataSet();


          //msg.Alert("操作", "导入HF成功！");
          //msg.Show();
      }

      catch (Exception ex)
      {

          sql = sql.Replace("'", "''");// ex.Message.ToString() 

          string Esql = @"insert into SysWebLog (remark,methodresult,recordtime,UserCode,MethodID)
values('HF','失败 " + sql + planid + "',getdate(),'000001','1')";
          manager.GetBySql(Esql).ToDataSet();



      }

  }
  protected void toFile()
  {
      FileStream fs = new FileStream("d://HFMIX.zip", FileMode.CreateNew);

      HF.Service ws = new HF.Service();
      ws.Url = "http://192.168.1.137:8018/MesToHf/Service.asmx";


      String sql = "SELECT * FROM OPENQUERY(HFDB, 'select * from Batch_Report where batr_id = ''271079''')";
      DataSet ds =  ws.GetData(sql);
 
    
      byte[] brs = null;
      brs = (byte[])ds.Tables[0].Rows[0]["BATR_MEASURED_DATA"];      

      MemoryStream ms = new MemoryStream(brs);
      ms.WriteTo(fs);
      fs.Flush();
      ms.Close();
      fs.Close();
      //string str
   

  }

  /// <summary>
  /// 根据路径删除文件
  /// </summary>
  /// <param name="path"></param>
  public void DeleteFile(string path)
  {
      FileAttributes attr = File.GetAttributes(path);
      if (attr == FileAttributes.Directory)
      {
          Directory.Delete(path, true);
      }
      else
      {
          File.Delete(path);
      }
  }
  public List<FileInfo> GetFilesByDir(string path)
  {
      DirectoryInfo di = new DirectoryInfo(path);

      //找到该目录下的文件  
      FileInfo[] fi = di.GetFiles();

      //把FileInfo[]数组转换为List  
      List<FileInfo> list = fi.ToList<FileInfo>();
      return list;
  }  
  protected void getExcel() {
      String barcode = "180306381N050039";

      string filePath = @"d:/HFMIX/";
      String fname = "";
      List<FileInfo> list1 = GetFilesByDir(filePath);
      foreach (FileInfo fi in list1)
      {
          if (fi.Name.IndexOf("RPT") > 0)
          { fname = fi.Name; }
      }


      StreamReader sr = new StreamReader("d://HFMIX//" + fname, Encoding.Default);
      String line; int i = 0;
      String time = "";
    //上密炼机有上顶栓，下密炼机没有；有个station的字段，区分出了那个是Mixer1,那个是Mixer2
      String temp = "";//转子温度
      String power = "";//功率
      String energy = "";//能量
      String press = "";//压力
      String speed = "";
      String Position = "";//位置
      String Mixing_MixT = "";//侧壁温度
      String Mixing_RotorT = "";//转子温度
      String Mixing_DumpT = "";//卸料门温度
      while ((line = sr.ReadLine()) != null)
      {
          if (i < 3) { i++; continue; }
         
         


          string[] tempstr = line.ToString().Split(';');
          Double d = double.Parse(tempstr[0].ToString());
          int ii = (int)d;
          //time = time + tempstr[0]+":";
          time = time + ii.ToString() + ":";
          press = press + tempstr[2] + ":";
          speed = speed + tempstr[3] + ":";
          temp = temp + tempstr[8] + ":";
          Position = Position + tempstr[11] + ":";
          power = power + tempstr[21] + ":";
          energy = energy + tempstr[9] + ":";
           Mixing_MixT = Mixing_MixT + tempstr[18] + ":";
           Mixing_RotorT = Mixing_RotorT + tempstr[19] + ":";
           Mixing_DumpT = Mixing_DumpT + tempstr[20] + ":";
  
          //msg.Alert("操作", line.ToString());
          //msg.Show();
          //return;
        
      }
      sr.Close();
      string sql = "select * from MENSCurve.dbo.Ppt_curvedata where barcode = '"+ barcode +"'";
      DataSet ds = manager.GetBySql(sql).ToDataSet();
      if (ds.Tables[0].Rows.Count > 0)
      { sql = "delete from MENSCurve.dbo.Ppt_curvedata where barcode = '" + barcode + "'"; ds = manager.GetBySql(sql).ToDataSet(); }

      sql = @"insert into  MENSCurve.dbo.Ppt_curvedata ( barcode ,plan_id,start_datetime,Mixing_Time,Mixing_Temp,Mixing_Power,Mixing_Energy,Mixing_Press,Mixing_Speed,Mixing_Position,Mixing_MixT,Mixing_RotorT,Mixing_DumpT)
values ('" + barcode + "','" + barcode.Substring(0, 12) + "','2018-01-01','" + time + "','" + temp + "','" + power + "','" + energy + "','" + press + "','" + speed + "','" + Position + "','" + Mixing_MixT + "','" + Mixing_RotorT + "','" + Mixing_DumpT + "')";
          //txt_dep_name.Text = sql;
          ds = manager.GetBySql(sql).ToDataSet();

     
  }
    //解压缩方法
  public static void UnCompressRar(string inputRarFileName, string outputPath)
     {
       RegistryKey key = Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\WinRAR.exe");
       bool _existSetupWinRar = !string.IsNullOrEmpty(key.GetValue(string.Empty).ToString());
      
         //获取WinRar.exe路径
       string WinRarPath = key.GetValue(string.Empty).ToString();
         //rar 执行时的命令、参数
         string rarCmd;
         //启动进程的参数
        ProcessStartInfo processStartInfo = new ProcessStartInfo();
        //进程对象
       Process process = new Process();
        try
        {
           
             //如果压缩到目标路径不存在
             if (!Directory.Exists(outputPath))
             {
                 //创建压缩到目标路径
                 Directory.CreateDirectory(outputPath);
             }
             rarCmd = "x " + inputRarFileName + " " + outputPath + " -y";
 
 
             processStartInfo.FileName = WinRarPath;
             processStartInfo.Arguments = rarCmd;
             processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
             processStartInfo.WorkingDirectory = outputPath;
 
 
             process.StartInfo = processStartInfo;
             process.Start();
process.WaitForExit();
             process.Close();
             process.Dispose();
         }
         catch (Exception ex)
         {
             throw ex;
         }
         finally
         {
             process.Close();
             process.Dispose();
         }
     }
    protected void btn_add_Click(object sender, EventArgs e)
  {
    
      //Dictionary<string, object> dict = new Dictionary<string, object>();
      //dict.Add("@PlanID", "");

      //DataSet dss = manager.GetDataSetByStoreProcedure("ProcPlanNeedXCCheck", dict);
      // msg.Alert("操作", dss.Tables[0].Rows[0][0].ToString());
      // msg.Show();
      // return;
     
     
        if(1==2){
            try
            {
                DeleteFile("d://HFMIX.zip"); //删除文件
                DeleteFile("d://HFMIX");   //删除文件
            }
            catch (Exception ex) { }

            toFile();   //读取字段值写入文件

        UnCompressRar("d://HFMIX.zip", "d://HFMIX"); //解压缩
        getExcel(); //读取解压文件内容 写入自己数据库
        //DeleteFile("d://HFMIX.zip"); //删除文件
        //DeleteFile("d://HFMIX");   //删除文件
        return;

        }

      

        if (hidden_parent_num.Value == "" || hidden_parent_num.Value.ToString() =="00000")
        {
            msg.Alert("操作", "请选择左侧部门节点！");
            msg.Show();
            return;
        }
        add_dep_name.Text = "";
        hidden_dept_name.Text = "";
        add_parent_num.Text = manager.GetListByWhere(BasDept._.DepCode == (hidden_parent_num.Value == "" ? topDepCode : hidden_parent_num.Value))[0].DepName;
        add_erp_code.Text = "";
        hidden_erp_code.Text = "";
        add_hr_code.Text = "";
        add_display_id.Text = "";
        add_remark.Text = "";
        btnAddSave.Disable(true);
        this.winAdd.Show();
    }

    /// <summary>
    /// 点击恢复激发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="unit_num"></param>
    [Ext.Net.DirectMethod()]
    public string commandcolumn_direct_recover(string obj_id)
    {
        try
        {
            BasDept dep = manager.GetById(obj_id);
            EntityArrayList<BasDept> parentDepList = manager.GetListByWhere(BasDept._.DepCode == dep.ParentNum && BasDept._.DeleteFlag == "1");
            if (parentDepList.Count > 0)
            {
                return "恢复失败：请先恢复父级部门[" + parentDepList[0].DepName+ "]";
            }
            dep.DeleteFlag = "0";
            manager.Update(dep);
            this.AppendWebLog("部门信息恢复", "部门编码：" + dep.DepCode);
            pageToolBar.DoRefresh();
            //左侧树刷新 
            EntityArrayList<BasDept> childDepList = manager.GetListByWhere(BasDept._.ParentNum == hidden_parent_num.Text && BasDept._.DeleteFlag == 0);
            if (childDepList.Count == 1)
            {
                treeDept.GetNodeById(hidden_parent_num.Text).ParentNode().Reload();
            }
            else
            {
                treeDept.GetNodeById(hidden_parent_num.Text).Reload();
            }
        }
        catch (Exception e)
        {
            return "恢复失败：" + e;
        }
        return "恢复成功";
    }

    /// <summary>
    /// 点击修改激发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="unit_num"></param>
    [Ext.Net.DirectMethod()]
    public void commandcolumn_direct_edit(string dep_num)
    {
        BasDept dep = manager.GetById(dep_num);
        modify_obj_id.Value = dep.ObjID;
        modify_dep_name.Value = dep.DepName;
        hidden_dept_name.Value = dep.DepName;
        modify_dep_level.Value = sysCodeManager.GetListByWhere(SysCode._.TypeID == "DeptLevel" && SysCode._.ItemCode == dep.DepLevel)[0].ItemName;
        //-----------------------加载父级部门下拉框数据
        modify_parent_num.Value = dep.ParentNum == topDepCode ? "" : manager.GetListByWhere(BasDept._.DepCode == dep.ParentNum)[0].DepName;
        hidden_parent_num.Value = dep.ParentNum;
        if (erpInfoManager.GetListByWhere(BasDeptErpInfo._.ERPCode == dep.ERPCode).Count > 0)
        {
            modify_erp_code.Value = erpInfoManager.GetListByWhere(BasDeptErpInfo._.ERPCode == dep.ERPCode)[0].DepName;
            hidden_erp_code.Value = dep.ERPCode;
        }
        else
        {
            modify_erp_code.Value = "";
            hidden_erp_code.Value = "";
        }
        modify_hr_code.Value = dep.HRCode;
        modify_display_id.Value = dep.DisplayId;
        modify_remark.Value = dep.Remark;
        this.winModify.Show();
    }

    /// <summary>
    /// 点击删除触发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="unit_num"></param>
    /// <returns></returns>
    [Ext.Net.DirectMethod()]
    public string commandcolumn_direct_delete(string obj_id)
    {
        try
        {
            //判断是否可以删除，有子菜单禁止删除，部门中心禁止删除
            BasDept dep = manager.GetById(obj_id);
            EntityArrayList<BasDept>  depList = manager.GetTopNListOrder(1, BasDept._.ObjID.Asc);
            if (depList[0].ObjID.ToString().Equals(obj_id))
            {
                return "删除失败：顶级部门禁止删除";
            }
            depList = manager.GetListByWhere(BasDept._.ParentNum == dep.DepCode && BasDept._.DeleteFlag == "0");
            if (depList.Count > 0)
            {
                return "删除失败：有子部门挂在此部门下，禁止删除";
            }

            dep.DeleteFlag = "1";
            manager.Update(dep);
            this.AppendWebLog("部门信息删除", "部门编码：" + dep.DepCode);
            pageToolBar.DoRefresh();

            //左侧树刷新 
            EntityArrayList<BasDept> childDepList = manager.GetListByWhere(BasDept._.ParentNum == hidden_parent_num.Text && BasDept._.DeleteFlag == 0);
            if (childDepList.Count == 0)
            {
                treeDept.GetNodeById(hidden_parent_num.Text).ParentNode().Reload();
            }
            else
            {
                treeDept.GetNodeById(hidden_parent_num.Text).Reload();
            }
        }
        catch (Exception e)
        {
            return "删除失败：" + e;
        }
        return "删除成功";
    }

    /// <summary>
    /// 点击取消按钮激发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    public void BtnCancel_Click(object sender, DirectEventArgs e)
    {
        this.winAdd.Close();
        this.winModify.Close();
    }

    /// <summary>
    /// 点击添加信息中保存按钮激发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    public void BtnAddSave_Click(object sender, DirectEventArgs e)
    {
        try
        {  
            //添加校验重复
            EntityArrayList<BasDept> depList = manager.GetListByWhere(BasDept._.DepName == add_dep_name.Text.TrimStart().TrimEnd());
            if (depList.Count > 0)
            {
                X.Msg.Alert("提示", "此部门名称已被使用！").Show();
                return;
            }
            BasDept dep = new BasDept();
            dep.ObjID = Convert.ToInt32(manager.GetNextDepCode());
            dep.DepCode = manager.GetNextDepCode();
            dep.DepName  = add_dep_name.Text;
            dep.DepLevel = Convert.ToInt32(manager.GetListByWhere(BasDept._.DepCode == (hidden_parent_num.Value == "" ? topDepCode : hidden_parent_num.Value))[0].DepLevel + 1);
            dep.ParentNum = hidden_parent_num.Value.ToString();
            dep.DeleteFlag = "0";
            dep.ERPCode = hidden_erp_code.Text;
            dep.HRCode = add_hr_code.Text;
            if (!string.Empty.Equals(add_display_id.Text))
            {
                dep.DisplayId = Convert.ToInt32(add_display_id.Text);
            }
            dep.Remark = add_remark.Text;
            manager.Insert(dep);
            this.AppendWebLog("部门信息添加", "部门编码：" + dep.DepCode);
            this.winAdd.Close();
            pageToolBar.DoRefresh();
            //左侧树刷新
            EntityArrayList<BasDept> childDepList = manager.GetListByWhere(BasDept._.ParentNum == hidden_parent_num.Text && BasDept._.DeleteFlag == 0);
            if (childDepList.Count == 1)
            {
                treeDept.GetNodeById(hidden_parent_num.Text).ParentNode().Reload();
            }
            else
            {
                treeDept.GetNodeById(hidden_parent_num.Text).Reload();
            }
            msg.Alert("操作", "保存成功");
            msg.Show();
        }
        catch (Exception ex)
        {
            msg.Alert("操作", "保存失败：" + ex);
            msg.Show();
        }
    }

    /// <summary>
    /// 点击修改信息中保存按钮激发的事件
    /// yuany   2013年1月22日
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void BtnModifySave_Click(object sender, EventArgs e)
    {
        try
        {
            //修改重复校验
            EntityArrayList<BasDept> workList = manager.GetListByWhere(BasDept._.DepName == modify_dep_name.Text.TrimStart().TrimEnd());
            if (workList.Count > 0)
            {
                if (workList[0].DepName != hidden_dept_name.Text)
                {
                    X.Msg.Alert("提示", "此部门名称已被使用！").Show();
                    return;
                }
            }
            BasDept dep = new BasDept();
            dep.ObjID = Convert.ToInt32(modify_obj_id.Text);
            dep.Attach();
            dep.DepName = modify_dep_name.Text;
            dep.DepLevel = Convert.ToInt32(sysCodeManager.GetListByWhere(
                    SysCode._.TypeID == "DeptLevel" && SysCode._.ItemName == modify_dep_level.Value)[0].ItemCode);
            dep.ParentNum = dep.DepLevel == 1 ? topDepCode : hidden_parent_num.Value.ToString();
            dep.DeleteFlag = "0";
            dep.ERPCode = hidden_erp_code.Text;
            dep.HRCode = modify_hr_code.Text;
            if(!string.Empty.Equals(modify_display_id.Text))
            {
                dep.DisplayId = Convert.ToInt32(modify_display_id.Text);
            }
            dep.Remark = modify_remark.Text;
            manager.Update(dep);
            this.AppendWebLog("部门信息修改", "部门编码：" + dep.DepCode);
            this.winModify.Close();
            pageToolBar.DoRefresh();
            //左侧树刷新
            treeDept.GetNodeById(hidden_parent_num.Text).Reload();
            msg.Alert("操作", "更新成功");
            msg.Show();
        }
        catch (Exception ex)
        {
            msg.Alert("操作", "更新失败：" + ex);
            msg.Show();
        }
    }
    #endregion

    #region 校验方法
    /// <summary>
    /// 检查用户名是否重复
    /// yuany
    /// 2013年1月31日
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void CheckDeptName(object sender, RemoteValidationEventArgs e)
    {
        TextField field = (TextField)sender;
        string deptname = field.Text;
        EntityArrayList<BasDept> deptList = manager.GetListByWhere(BasDept._.DepName == deptname);
        if (deptList.Count == 0)
        {
            e.Success = true;
        }
        else
        {
            if (deptList[0].DepName.ToString() == hidden_dept_name.Value.ToString())
            {

                e.Success = true;
            }
            else
            {
                e.Success = false;
                e.ErrorMessage = "此部门名称已被使用！";
            }
        }
    }

    protected void CheckFieldInt(object sender, RemoteValidationEventArgs e)
    {
        TextField field = (TextField)sender;
        Regex regex = new Regex(@"^[\d]+$");
        if (regex.IsMatch(field.Text) || field.Text == "")
        {
            e.Success = true;
        }
        else
        {
            e.Success = false;
            e.ErrorMessage = "此填入项必须为正整数!";
        }
    }
    #endregion
}