//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class EQM_EnergyManageArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EQM_EnergyManage> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.EQM_EnergyManage\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"EQM_EnergyManage\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"Serial_id\" type=\"System.Int64\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Serial_id\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKe" +
        "y=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Start_date\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"Start_date\" mappingColumnType=\"System.String\" sqlType=\"char(10)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"End_Date\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"End_Date\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Work" +
        "Shop_Code\" type=\"System.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"WorkShop_Code\" mappingColumnType=\"S" +
        "ystem.Int16\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Rub_Weight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Rub_Weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"dec" +
        "imal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dian\" type=" +
        "\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Dian\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Feng\" type=\"System.Nullable`1[System.Decimal]\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Feng\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=" +
        "\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Water\" " +
        "type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Water\" mappingColumnType=" +
        "\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"ZhengQi\" type=\"System.Nullable`1[System.Dec" +
        "imal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"ZhengQi\" mappingColumnType=\"System.Nullable`1[System.Decima" +
        "l]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Oil1\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Oil1\" mappingC" +
        "olumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"Oil2\" type=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Oil2\" mappingColumnType=\"System.Nullable`1[System.De" +
        "cimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Value1\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Value1\" " +
        "mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Value2\" type=\"System.Null" +
        "able`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Value2\" mappingColumnType=\"System.Nullable" +
        "`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Dian_price\" type=\"System.Nullable`1[System.Decimal]\" isInhe" +
        "rited=\"false\" sqlDefaultValue=\"(0.635)\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Dian_price\" mappingColumnType=\"System.Nullable" +
        "`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Feng_Price\" type=\"System.Nullable`1[System.Decimal]\" isInhe" +
        "rited=\"false\" sqlDefaultValue=\"(1.1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"Feng_Price\" mappingColumnType=\"System.Nullable`1" +
        "[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Water_price\" type=\"System.Nullable`1[System.Decimal]\" isInher" +
        "ited=\"false\" sqlDefaultValue=\"(3.3)\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Water_price\" mappingColumnType=\"System.Nullable`1" +
        "[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Qi_price\" type=\"System.Nullable`1[System.Decimal]\" isInherite" +
        "d=\"false\" sqlDefaultValue=\"(175)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Qi_price\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Memo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Memo\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class EQM_EnergyManage : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _EQM_EnergyManageEntityConfiguration;
        
        protected long _Serial_id;
        
        protected string _Start_date;
        
        protected string _End_Date;
        
        protected short _WorkShop_Code;
        
        protected global::System.Decimal? _Rub_Weight;
        
        protected global::System.Decimal? _Dian;
        
        protected global::System.Decimal? _Feng;
        
        protected global::System.Decimal? _Water;
        
        protected global::System.Decimal? _ZhengQi;
        
        protected global::System.Decimal? _Oil1;
        
        protected global::System.Decimal? _Oil2;
        
        protected global::System.Decimal? _Value1;
        
        protected global::System.Decimal? _Value2;
        
        protected global::System.Decimal? _Dian_price;
        
        protected global::System.Decimal? _Feng_Price;
        
        protected global::System.Decimal? _Water_price;
        
        protected global::System.Decimal? _Qi_price;
        
        protected string _Memo;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.EQM_EnergyManage left, global::Mesnac.Entity.EQM_EnergyManage right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.EQM_EnergyManage left, global::Mesnac.Entity.EQM_EnergyManage right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long Serial_id {
            get {
                return this._Serial_id;
            }
            set {
                this.OnPropertyChanged("Serial_id", this._Serial_id, value);
                this._Serial_id = value;
            }
        }
        
        public string Start_date {
            get {
                return this._Start_date;
            }
            set {
                this.OnPropertyChanged("Start_date", this._Start_date, value);
                this._Start_date = value;
            }
        }
        
        public string End_Date {
            get {
                return this._End_Date;
            }
            set {
                this.OnPropertyChanged("End_Date", this._End_Date, value);
                this._End_Date = value;
            }
        }
        
        public short WorkShop_Code {
            get {
                return this._WorkShop_Code;
            }
            set {
                this.OnPropertyChanged("WorkShop_Code", this._WorkShop_Code, value);
                this._WorkShop_Code = value;
            }
        }
        
        public global::System.Decimal? Rub_Weight {
            get {
                return this._Rub_Weight;
            }
            set {
                this.OnPropertyChanged("Rub_Weight", this._Rub_Weight, value);
                this._Rub_Weight = value;
            }
        }
        
        public global::System.Decimal? Dian {
            get {
                return this._Dian;
            }
            set {
                this.OnPropertyChanged("Dian", this._Dian, value);
                this._Dian = value;
            }
        }
        
        public global::System.Decimal? Feng {
            get {
                return this._Feng;
            }
            set {
                this.OnPropertyChanged("Feng", this._Feng, value);
                this._Feng = value;
            }
        }
        
        public global::System.Decimal? Water {
            get {
                return this._Water;
            }
            set {
                this.OnPropertyChanged("Water", this._Water, value);
                this._Water = value;
            }
        }
        
        public global::System.Decimal? ZhengQi {
            get {
                return this._ZhengQi;
            }
            set {
                this.OnPropertyChanged("ZhengQi", this._ZhengQi, value);
                this._ZhengQi = value;
            }
        }
        
        public global::System.Decimal? Oil1 {
            get {
                return this._Oil1;
            }
            set {
                this.OnPropertyChanged("Oil1", this._Oil1, value);
                this._Oil1 = value;
            }
        }
        
        public global::System.Decimal? Oil2 {
            get {
                return this._Oil2;
            }
            set {
                this.OnPropertyChanged("Oil2", this._Oil2, value);
                this._Oil2 = value;
            }
        }
        
        public global::System.Decimal? Value1 {
            get {
                return this._Value1;
            }
            set {
                this.OnPropertyChanged("Value1", this._Value1, value);
                this._Value1 = value;
            }
        }
        
        public global::System.Decimal? Value2 {
            get {
                return this._Value2;
            }
            set {
                this.OnPropertyChanged("Value2", this._Value2, value);
                this._Value2 = value;
            }
        }
        
        public global::System.Decimal? Dian_price {
            get {
                return this._Dian_price;
            }
            set {
                this.OnPropertyChanged("Dian_price", this._Dian_price, value);
                this._Dian_price = value;
            }
        }
        
        public global::System.Decimal? Feng_Price {
            get {
                return this._Feng_Price;
            }
            set {
                this.OnPropertyChanged("Feng_Price", this._Feng_Price, value);
                this._Feng_Price = value;
            }
        }
        
        public global::System.Decimal? Water_price {
            get {
                return this._Water_price;
            }
            set {
                this.OnPropertyChanged("Water_price", this._Water_price, value);
                this._Water_price = value;
            }
        }
        
        public global::System.Decimal? Qi_price {
            get {
                return this._Qi_price;
            }
            set {
                this.OnPropertyChanged("Qi_price", this._Qi_price, value);
                this._Qi_price = value;
            }
        }
        
        public string Memo {
            get {
                return this._Memo;
            }
            set {
                this.OnPropertyChanged("Memo", this._Memo, value);
                this._Memo = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((EQM_EnergyManage._EQM_EnergyManageEntityConfiguration == null)) {
                EQM_EnergyManage._EQM_EnergyManageEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EQM_EnergyManage");
            }
            return EQM_EnergyManage._EQM_EnergyManageEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serial_id,
                    this._Start_date,
                    this._End_Date,
                    this._WorkShop_Code,
                    this._Rub_Weight,
                    this._Dian,
                    this._Feng,
                    this._Water,
                    this._ZhengQi,
                    this._Oil1,
                    this._Oil2,
                    this._Value1,
                    this._Value2,
                    this._Dian_price,
                    this._Feng_Price,
                    this._Water_price,
                    this._Qi_price,
                    this._Memo};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serial_id = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Start_date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._End_Date = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._WorkShop_Code = reader.GetInt16(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Rub_Weight = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Dian = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Feng = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Water = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ZhengQi = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Oil1 = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Oil2 = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Value1 = reader.GetDecimal(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Value2 = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Dian_price = reader.GetDecimal(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Feng_Price = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Water_price = reader.GetDecimal(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Qi_price = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Memo = reader.GetString(17);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serial_id = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Start_date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._End_Date = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._WorkShop_Code = ((short)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Rub_Weight = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Dian = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Feng = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Water = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ZhengQi = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Oil1 = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Oil2 = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Value1 = ((System.Nullable<decimal>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Value2 = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Dian_price = ((System.Nullable<decimal>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Feng_Price = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Water_price = ((System.Nullable<decimal>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Qi_price = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Memo = ((string)(row[17]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EQM_EnergyManage).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EQM_EnergyManage)(obj)).isAttached) 
                        && (this.Serial_id == ((global::Mesnac.Entity.EQM_EnergyManage)(obj)).Serial_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serial_id = new NBear.Common.PropertyItem("Serial_id", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Start_date = new NBear.Common.PropertyItem("Start_date", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _End_Date = new NBear.Common.PropertyItem("End_Date", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _WorkShop_Code = new NBear.Common.PropertyItem("WorkShop_Code", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Rub_Weight = new NBear.Common.PropertyItem("Rub_Weight", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Dian = new NBear.Common.PropertyItem("Dian", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Feng = new NBear.Common.PropertyItem("Feng", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Water = new NBear.Common.PropertyItem("Water", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _ZhengQi = new NBear.Common.PropertyItem("ZhengQi", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Oil1 = new NBear.Common.PropertyItem("Oil1", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Oil2 = new NBear.Common.PropertyItem("Oil2", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Value1 = new NBear.Common.PropertyItem("Value1", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Value2 = new NBear.Common.PropertyItem("Value2", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Dian_price = new NBear.Common.PropertyItem("Dian_price", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Feng_Price = new NBear.Common.PropertyItem("Feng_Price", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Water_price = new NBear.Common.PropertyItem("Water_price", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Qi_price = new NBear.Common.PropertyItem("Qi_price", "Mesnac.Entity.EQM_EnergyManage");
            
            protected NBear.Common.PropertyItem _Memo = new NBear.Common.PropertyItem("Memo", "Mesnac.Entity.EQM_EnergyManage");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serial_id {
                get {
                    if ((aliasName == null)) {
                        return _Serial_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_id", _Serial_id.EntityConfiguration, _Serial_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Start_date {
                get {
                    if ((aliasName == null)) {
                        return _Start_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Start_date", _Start_date.EntityConfiguration, _Start_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem End_Date {
                get {
                    if ((aliasName == null)) {
                        return _End_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("End_Date", _End_Date.EntityConfiguration, _End_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShop_Code {
                get {
                    if ((aliasName == null)) {
                        return _WorkShop_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShop_Code", _WorkShop_Code.EntityConfiguration, _WorkShop_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Rub_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Rub_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Rub_Weight", _Rub_Weight.EntityConfiguration, _Rub_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dian {
                get {
                    if ((aliasName == null)) {
                        return _Dian;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dian", _Dian.EntityConfiguration, _Dian.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Feng {
                get {
                    if ((aliasName == null)) {
                        return _Feng;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Feng", _Feng.EntityConfiguration, _Feng.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Water {
                get {
                    if ((aliasName == null)) {
                        return _Water;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Water", _Water.EntityConfiguration, _Water.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ZhengQi {
                get {
                    if ((aliasName == null)) {
                        return _ZhengQi;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ZhengQi", _ZhengQi.EntityConfiguration, _ZhengQi.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oil1 {
                get {
                    if ((aliasName == null)) {
                        return _Oil1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oil1", _Oil1.EntityConfiguration, _Oil1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oil2 {
                get {
                    if ((aliasName == null)) {
                        return _Oil2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oil2", _Oil2.EntityConfiguration, _Oil2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Value1 {
                get {
                    if ((aliasName == null)) {
                        return _Value1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Value1", _Value1.EntityConfiguration, _Value1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Value2 {
                get {
                    if ((aliasName == null)) {
                        return _Value2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Value2", _Value2.EntityConfiguration, _Value2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dian_price {
                get {
                    if ((aliasName == null)) {
                        return _Dian_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dian_price", _Dian_price.EntityConfiguration, _Dian_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Feng_Price {
                get {
                    if ((aliasName == null)) {
                        return _Feng_Price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Feng_Price", _Feng_Price.EntityConfiguration, _Feng_Price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Water_price {
                get {
                    if ((aliasName == null)) {
                        return _Water_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Water_price", _Water_price.EntityConfiguration, _Water_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Qi_price {
                get {
                    if ((aliasName == null)) {
                        return _Qi_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Qi_price", _Qi_price.EntityConfiguration, _Qi_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Memo {
                get {
                    if ((aliasName == null)) {
                        return _Memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Memo", _Memo.EntityConfiguration, _Memo.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
