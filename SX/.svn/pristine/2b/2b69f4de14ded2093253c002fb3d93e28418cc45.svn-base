//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtEquipJarStoreLogArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtEquipJarStoreLog> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtEquipJarStoreLog\" isReadOnly=\"false\" isAutoPreLoad=\"false" +
        "\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtEquipJarStoreLog\" bat" +
        "chSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjId\" type=\"System.Int32\" isI" +
        "nherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"ObjId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"tr" +
        "ue\" isNotNull=\"true\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JarType\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"JarType\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Prior" +
        "ity\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Priority\" mappingColum" +
        "nType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"StoragePlaceCodeBefore\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"StoragePlaceCodeBefore\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "StoragePlaceCodeAfter\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoragePlaceCodeAfter\"" +
        " mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"MaterialCodeBefore\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"MaterialCodeBefore\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mat" +
        "erialCodeAfter\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterialCodeAfter\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"WorkIDBefore\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "WorkIDBefore\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WorkIDAfter\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"WorkIDAfter\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ope" +
        "rCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"OperCode\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"OperDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"O" +
        "perDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetim" +
        "e\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OperMethod\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"OperMethod\" mappingColumnType=\"System.String\" s" +
        "qlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Ext_1\" type=\"System.String\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ext_1\"" +
        " mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Ext_2\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Ext_2\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ext_3\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"Ext_3\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ext_4\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Ext_4\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityCon" +
        "figuration>")]
    public partial class PmtEquipJarStoreLog : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtEquipJarStoreLogEntityConfiguration;
        
        protected int _ObjId;
        
        protected string _EquipCode;
        
        protected string _JarType;
        
        protected global::System.Int32? _Priority;
        
        protected string _StoragePlaceCodeBefore;
        
        protected string _StoragePlaceCodeAfter;
        
        protected string _MaterialCodeBefore;
        
        protected string _MaterialCodeAfter;
        
        protected string _WorkIDBefore;
        
        protected string _WorkIDAfter;
        
        protected string _OperCode;
        
        protected global::System.DateTime? _OperDate;
        
        protected string _OperMethod;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _Ext_1;
        
        protected string _Ext_2;
        
        protected string _Ext_3;
        
        protected string _Ext_4;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtEquipJarStoreLog left, global::Mesnac.Entity.PmtEquipJarStoreLog right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtEquipJarStoreLog left, global::Mesnac.Entity.PmtEquipJarStoreLog right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjId {
            get {
                return this._ObjId;
            }
            set {
                this.OnPropertyChanged("ObjId", this._ObjId, value);
                this._ObjId = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string JarType {
            get {
                return this._JarType;
            }
            set {
                this.OnPropertyChanged("JarType", this._JarType, value);
                this._JarType = value;
            }
        }
        
        public global::System.Int32? Priority {
            get {
                return this._Priority;
            }
            set {
                this.OnPropertyChanged("Priority", this._Priority, value);
                this._Priority = value;
            }
        }
        
        public string StoragePlaceCodeBefore {
            get {
                return this._StoragePlaceCodeBefore;
            }
            set {
                this.OnPropertyChanged("StoragePlaceCodeBefore", this._StoragePlaceCodeBefore, value);
                this._StoragePlaceCodeBefore = value;
            }
        }
        
        public string StoragePlaceCodeAfter {
            get {
                return this._StoragePlaceCodeAfter;
            }
            set {
                this.OnPropertyChanged("StoragePlaceCodeAfter", this._StoragePlaceCodeAfter, value);
                this._StoragePlaceCodeAfter = value;
            }
        }
        
        public string MaterialCodeBefore {
            get {
                return this._MaterialCodeBefore;
            }
            set {
                this.OnPropertyChanged("MaterialCodeBefore", this._MaterialCodeBefore, value);
                this._MaterialCodeBefore = value;
            }
        }
        
        public string MaterialCodeAfter {
            get {
                return this._MaterialCodeAfter;
            }
            set {
                this.OnPropertyChanged("MaterialCodeAfter", this._MaterialCodeAfter, value);
                this._MaterialCodeAfter = value;
            }
        }
        
        public string WorkIDBefore {
            get {
                return this._WorkIDBefore;
            }
            set {
                this.OnPropertyChanged("WorkIDBefore", this._WorkIDBefore, value);
                this._WorkIDBefore = value;
            }
        }
        
        public string WorkIDAfter {
            get {
                return this._WorkIDAfter;
            }
            set {
                this.OnPropertyChanged("WorkIDAfter", this._WorkIDAfter, value);
                this._WorkIDAfter = value;
            }
        }
        
        public string OperCode {
            get {
                return this._OperCode;
            }
            set {
                this.OnPropertyChanged("OperCode", this._OperCode, value);
                this._OperCode = value;
            }
        }
        
        public global::System.DateTime? OperDate {
            get {
                return this._OperDate;
            }
            set {
                this.OnPropertyChanged("OperDate", this._OperDate, value);
                this._OperDate = value;
            }
        }
        
        public string OperMethod {
            get {
                return this._OperMethod;
            }
            set {
                this.OnPropertyChanged("OperMethod", this._OperMethod, value);
                this._OperMethod = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Ext_1 {
            get {
                return this._Ext_1;
            }
            set {
                this.OnPropertyChanged("Ext_1", this._Ext_1, value);
                this._Ext_1 = value;
            }
        }
        
        public string Ext_2 {
            get {
                return this._Ext_2;
            }
            set {
                this.OnPropertyChanged("Ext_2", this._Ext_2, value);
                this._Ext_2 = value;
            }
        }
        
        public string Ext_3 {
            get {
                return this._Ext_3;
            }
            set {
                this.OnPropertyChanged("Ext_3", this._Ext_3, value);
                this._Ext_3 = value;
            }
        }
        
        public string Ext_4 {
            get {
                return this._Ext_4;
            }
            set {
                this.OnPropertyChanged("Ext_4", this._Ext_4, value);
                this._Ext_4 = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtEquipJarStoreLog._PmtEquipJarStoreLogEntityConfiguration == null)) {
                PmtEquipJarStoreLog._PmtEquipJarStoreLogEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtEquipJarStoreLog");
            }
            return PmtEquipJarStoreLog._PmtEquipJarStoreLogEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjId,
                    this._EquipCode,
                    this._JarType,
                    this._Priority,
                    this._StoragePlaceCodeBefore,
                    this._StoragePlaceCodeAfter,
                    this._MaterialCodeBefore,
                    this._MaterialCodeAfter,
                    this._WorkIDBefore,
                    this._WorkIDAfter,
                    this._OperCode,
                    this._OperDate,
                    this._OperMethod,
                    this._DeleteFlag,
                    this._Remark,
                    this._Ext_1,
                    this._Ext_2,
                    this._Ext_3,
                    this._Ext_4};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._JarType = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Priority = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._StoragePlaceCodeBefore = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._StoragePlaceCodeAfter = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterialCodeBefore = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._MaterialCodeAfter = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._WorkIDBefore = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._WorkIDAfter = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._OperCode = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._OperDate = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._OperMethod = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._DeleteFlag = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Remark = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Ext_1 = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Ext_2 = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Ext_3 = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Ext_4 = reader.GetString(18);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._JarType = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Priority = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._StoragePlaceCodeBefore = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._StoragePlaceCodeAfter = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaterialCodeBefore = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._MaterialCodeAfter = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._WorkIDBefore = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._WorkIDAfter = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._OperCode = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._OperDate = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._OperMethod = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._DeleteFlag = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Remark = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Ext_1 = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Ext_2 = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Ext_3 = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Ext_4 = ((string)(row[18]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtEquipJarStoreLog).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtEquipJarStoreLog)(obj)).isAttached) 
                        && (this.ObjId == ((global::Mesnac.Entity.PmtEquipJarStoreLog)(obj)).ObjId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjId = new NBear.Common.PropertyItem("ObjId", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _JarType = new NBear.Common.PropertyItem("JarType", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _Priority = new NBear.Common.PropertyItem("Priority", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _StoragePlaceCodeBefore = new NBear.Common.PropertyItem("StoragePlaceCodeBefore", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _StoragePlaceCodeAfter = new NBear.Common.PropertyItem("StoragePlaceCodeAfter", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _MaterialCodeBefore = new NBear.Common.PropertyItem("MaterialCodeBefore", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _MaterialCodeAfter = new NBear.Common.PropertyItem("MaterialCodeAfter", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _WorkIDBefore = new NBear.Common.PropertyItem("WorkIDBefore", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _WorkIDAfter = new NBear.Common.PropertyItem("WorkIDAfter", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _OperCode = new NBear.Common.PropertyItem("OperCode", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _OperDate = new NBear.Common.PropertyItem("OperDate", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _OperMethod = new NBear.Common.PropertyItem("OperMethod", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _Ext_1 = new NBear.Common.PropertyItem("Ext_1", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _Ext_2 = new NBear.Common.PropertyItem("Ext_2", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _Ext_3 = new NBear.Common.PropertyItem("Ext_3", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            protected NBear.Common.PropertyItem _Ext_4 = new NBear.Common.PropertyItem("Ext_4", "Mesnac.Entity.PmtEquipJarStoreLog");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjId {
                get {
                    if ((aliasName == null)) {
                        return _ObjId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjId", _ObjId.EntityConfiguration, _ObjId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JarType {
                get {
                    if ((aliasName == null)) {
                        return _JarType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JarType", _JarType.EntityConfiguration, _JarType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Priority {
                get {
                    if ((aliasName == null)) {
                        return _Priority;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Priority", _Priority.EntityConfiguration, _Priority.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceCodeBefore {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceCodeBefore;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceCodeBefore", _StoragePlaceCodeBefore.EntityConfiguration, _StoragePlaceCodeBefore.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceCodeAfter {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceCodeAfter;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceCodeAfter", _StoragePlaceCodeAfter.EntityConfiguration, _StoragePlaceCodeAfter.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCodeBefore {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCodeBefore;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCodeBefore", _MaterialCodeBefore.EntityConfiguration, _MaterialCodeBefore.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCodeAfter {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCodeAfter;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCodeAfter", _MaterialCodeAfter.EntityConfiguration, _MaterialCodeAfter.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkIDBefore {
                get {
                    if ((aliasName == null)) {
                        return _WorkIDBefore;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkIDBefore", _WorkIDBefore.EntityConfiguration, _WorkIDBefore.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkIDAfter {
                get {
                    if ((aliasName == null)) {
                        return _WorkIDAfter;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkIDAfter", _WorkIDAfter.EntityConfiguration, _WorkIDAfter.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperCode {
                get {
                    if ((aliasName == null)) {
                        return _OperCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperCode", _OperCode.EntityConfiguration, _OperCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperDate {
                get {
                    if ((aliasName == null)) {
                        return _OperDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperDate", _OperDate.EntityConfiguration, _OperDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperMethod {
                get {
                    if ((aliasName == null)) {
                        return _OperMethod;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperMethod", _OperMethod.EntityConfiguration, _OperMethod.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_1 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_1", _Ext_1.EntityConfiguration, _Ext_1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_2 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_2", _Ext_2.EntityConfiguration, _Ext_2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_3 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_3", _Ext_3.EntityConfiguration, _Ext_3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_4 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_4;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_4", _Ext_4.EntityConfiguration, _Ext_4.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
