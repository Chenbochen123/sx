//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstMaterialReturninArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstMaterialReturnin>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstMaterialReturnin\" isReadOnly=\"false\" isAutoPreLoad=\"false" +
        "\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstMaterialReturnin\" bat" +
        "chSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" is" +
        "PrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StorageID\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Fact" +
        "oryID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FactoryID\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"ReturninPerson\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"ReturninPerson\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(2" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ReturninDate\"" +
        " type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ReturninDate\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"InaccountDuration\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"InaccountDuration\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "LockedFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"LockedFlag\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"FiledFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValu" +
        "e=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"FiledFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"MakerPerson\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"MakerPerson\" mappingColumnType=\"System.String\" sqlType=\"nvarchar" +
        "(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ChkResultFl" +
        "ag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ChkResultFlag\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"ChkPerson\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Chk" +
        "Person\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"ChkDate\" type=\"System.Nullable`1" +
        "[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"ChkDate\" mappingColumnType=\"System.Nullable`1[S" +
        "ystem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" sqlDefau" +
        "ltValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IsFeedBack\" t" +
        "ype=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsFeedBack\" mappingColum" +
        "nType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PstMaterialReturnin : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstMaterialReturninEntityConfiguration;

        protected string _BillNo;

        protected string _StorageID;

        protected global::System.Int32? _FactoryID;

        protected string _ReturninPerson;

        protected global::System.DateTime? _ReturninDate;

        protected string _InaccountDuration;

        protected string _LockedFlag;

        protected string _FiledFlag;

        protected string _MakerPerson;

        protected string _ChkResultFlag;

        protected string _ChkPerson;

        protected global::System.DateTime? _ChkDate;

        protected string _DeleteFlag;

        protected string _Remark;

        protected string _IsFeedBack;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PstMaterialReturnin left, global::Mesnac.Entity.PstMaterialReturnin right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PstMaterialReturnin left, global::Mesnac.Entity.PstMaterialReturnin right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string BillNo
        {
            get
            {
                return this._BillNo;
            }
            set
            {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }

        public string StorageID
        {
            get
            {
                return this._StorageID;
            }
            set
            {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }

        public global::System.Int32? FactoryID
        {
            get
            {
                return this._FactoryID;
            }
            set
            {
                this.OnPropertyChanged("FactoryID", this._FactoryID, value);
                this._FactoryID = value;
            }
        }

        public string ReturninPerson
        {
            get
            {
                return this._ReturninPerson;
            }
            set
            {
                this.OnPropertyChanged("ReturninPerson", this._ReturninPerson, value);
                this._ReturninPerson = value;
            }
        }

        public global::System.DateTime? ReturninDate
        {
            get
            {
                return this._ReturninDate;
            }
            set
            {
                this.OnPropertyChanged("ReturninDate", this._ReturninDate, value);
                this._ReturninDate = value;
            }
        }

        public string InaccountDuration
        {
            get
            {
                return this._InaccountDuration;
            }
            set
            {
                this.OnPropertyChanged("InaccountDuration", this._InaccountDuration, value);
                this._InaccountDuration = value;
            }
        }

        public string LockedFlag
        {
            get
            {
                return this._LockedFlag;
            }
            set
            {
                this.OnPropertyChanged("LockedFlag", this._LockedFlag, value);
                this._LockedFlag = value;
            }
        }

        public string FiledFlag
        {
            get
            {
                return this._FiledFlag;
            }
            set
            {
                this.OnPropertyChanged("FiledFlag", this._FiledFlag, value);
                this._FiledFlag = value;
            }
        }

        public string MakerPerson
        {
            get
            {
                return this._MakerPerson;
            }
            set
            {
                this.OnPropertyChanged("MakerPerson", this._MakerPerson, value);
                this._MakerPerson = value;
            }
        }

        public string ChkResultFlag
        {
            get
            {
                return this._ChkResultFlag;
            }
            set
            {
                this.OnPropertyChanged("ChkResultFlag", this._ChkResultFlag, value);
                this._ChkResultFlag = value;
            }
        }

        public string ChkPerson
        {
            get
            {
                return this._ChkPerson;
            }
            set
            {
                this.OnPropertyChanged("ChkPerson", this._ChkPerson, value);
                this._ChkPerson = value;
            }
        }

        public global::System.DateTime? ChkDate
        {
            get
            {
                return this._ChkDate;
            }
            set
            {
                this.OnPropertyChanged("ChkDate", this._ChkDate, value);
                this._ChkDate = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public string IsFeedBack
        {
            get
            {
                return this._IsFeedBack;
            }
            set
            {
                this.OnPropertyChanged("IsFeedBack", this._IsFeedBack, value);
                this._IsFeedBack = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PstMaterialReturnin._PstMaterialReturninEntityConfiguration == null))
            {
                PstMaterialReturnin._PstMaterialReturninEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstMaterialReturnin");
            }
            return PstMaterialReturnin._PstMaterialReturninEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._BillNo,
                    this._StorageID,
                    this._FactoryID,
                    this._ReturninPerson,
                    this._ReturninDate,
                    this._InaccountDuration,
                    this._LockedFlag,
                    this._FiledFlag,
                    this._MakerPerson,
                    this._ChkResultFlag,
                    this._ChkPerson,
                    this._ChkDate,
                    this._DeleteFlag,
                    this._Remark,
                    this._IsFeedBack};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._StorageID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._FactoryID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ReturninPerson = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._ReturninDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._InaccountDuration = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._LockedFlag = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._FiledFlag = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._MakerPerson = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ChkResultFlag = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._ChkPerson = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._ChkDate = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._DeleteFlag = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._Remark = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._IsFeedBack = reader.GetString(14);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._StorageID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._FactoryID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ReturninPerson = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._ReturninDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._InaccountDuration = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._LockedFlag = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._FiledFlag = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._MakerPerson = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._ChkResultFlag = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._ChkPerson = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._ChkDate = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12)))
            {
                this._DeleteFlag = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._Remark = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._IsFeedBack = ((string)(row[14]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstMaterialReturnin).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PstMaterialReturnin)(obj)).isAttached)
                        && (this.BillNo == ((global::Mesnac.Entity.PstMaterialReturnin)(obj)).BillNo));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _FactoryID = new NBear.Common.PropertyItem("FactoryID", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _ReturninPerson = new NBear.Common.PropertyItem("ReturninPerson", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _ReturninDate = new NBear.Common.PropertyItem("ReturninDate", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _InaccountDuration = new NBear.Common.PropertyItem("InaccountDuration", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _LockedFlag = new NBear.Common.PropertyItem("LockedFlag", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _FiledFlag = new NBear.Common.PropertyItem("FiledFlag", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _MakerPerson = new NBear.Common.PropertyItem("MakerPerson", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _ChkResultFlag = new NBear.Common.PropertyItem("ChkResultFlag", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _ChkPerson = new NBear.Common.PropertyItem("ChkPerson", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _ChkDate = new NBear.Common.PropertyItem("ChkDate", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstMaterialReturnin");

            protected NBear.Common.PropertyItem _IsFeedBack = new NBear.Common.PropertyItem("IsFeedBack", "Mesnac.Entity.PstMaterialReturnin");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem BillNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StorageID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StorageID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FactoryID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FactoryID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FactoryID", _FactoryID.EntityConfiguration, _FactoryID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturninPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturninPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturninPerson", _ReturninPerson.EntityConfiguration, _ReturninPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReturninDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReturninDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReturninDate", _ReturninDate.EntityConfiguration, _ReturninDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InaccountDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InaccountDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InaccountDuration", _InaccountDuration.EntityConfiguration, _InaccountDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem LockedFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _LockedFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("LockedFlag", _LockedFlag.EntityConfiguration, _LockedFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FiledFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FiledFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FiledFlag", _FiledFlag.EntityConfiguration, _FiledFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MakerPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MakerPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MakerPerson", _MakerPerson.EntityConfiguration, _MakerPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkResultFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkResultFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkResultFlag", _ChkResultFlag.EntityConfiguration, _ChkResultFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkPerson", _ChkPerson.EntityConfiguration, _ChkPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkDate", _ChkDate.EntityConfiguration, _ChkDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem IsFeedBack
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _IsFeedBack;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("IsFeedBack", _IsFeedBack.EntityConfiguration, _IsFeedBack.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
