//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtEquipJarStoreArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtEquipJarStore> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtEquipJarStore\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtEquipJarStore\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherit" +
        "ed=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" is" +
        "NotNull=\"true\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInherit" +
        "ed=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ja" +
        "rType\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JarType\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"JarNum\" type=\"System.Int32\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JarNum" +
        "\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Priority\" type=\"System.Int32\" isInherited=\"false" +
        "\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Priority\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StoragePlaceCode\" type" +
        "=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoragePlaceCode\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"varchar(36)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"MaterialCode\" type=\"System.String\" isInherited=\"fa" +
        "lse\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"MaterialCode\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WorkID\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"WorkID\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"RecordTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"" +
        "false\" sqlDefaultValue=\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"RecordTime\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"SeqIdx\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S" +
        "eqIdx\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System" +
        ".String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"FillingType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FillingType\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"Supply\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Supply\" m" +
        "appingColumnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"SingleWeight\" type=\"System.Nullable`1[Sys" +
        "tem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"SingleWeight\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Propert" +
        "ies>\r\n</EntityConfiguration>")]
    public partial class PmtEquipJarStore : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtEquipJarStoreEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _EquipCode;
        
        protected string _JarType;
        
        protected int _JarNum;
        
        protected int _Priority;
        
        protected string _StoragePlaceCode;
        
        protected string _MaterialCode;
        
        protected string _WorkID;
        
        protected string _Remark;
        
        protected global::System.DateTime? _RecordTime;
        
        protected global::System.Int32? _SeqIdx;
        
        protected string _DeleteFlag;
        
        protected string _FillingType;
        
        protected string _Supply;
        
        protected global::System.Int32? _SingleWeight;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtEquipJarStore left, global::Mesnac.Entity.PmtEquipJarStore right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtEquipJarStore left, global::Mesnac.Entity.PmtEquipJarStore right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string JarType {
            get {
                return this._JarType;
            }
            set {
                this.OnPropertyChanged("JarType", this._JarType, value);
                this._JarType = value;
            }
        }
        
        public int JarNum {
            get {
                return this._JarNum;
            }
            set {
                this.OnPropertyChanged("JarNum", this._JarNum, value);
                this._JarNum = value;
            }
        }
        
        public int Priority {
            get {
                return this._Priority;
            }
            set {
                this.OnPropertyChanged("Priority", this._Priority, value);
                this._Priority = value;
            }
        }
        
        public string StoragePlaceCode {
            get {
                return this._StoragePlaceCode;
            }
            set {
                this.OnPropertyChanged("StoragePlaceCode", this._StoragePlaceCode, value);
                this._StoragePlaceCode = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string WorkID {
            get {
                return this._WorkID;
            }
            set {
                this.OnPropertyChanged("WorkID", this._WorkID, value);
                this._WorkID = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.DateTime? RecordTime {
            get {
                return this._RecordTime;
            }
            set {
                this.OnPropertyChanged("RecordTime", this._RecordTime, value);
                this._RecordTime = value;
            }
        }
        
        public global::System.Int32? SeqIdx {
            get {
                return this._SeqIdx;
            }
            set {
                this.OnPropertyChanged("SeqIdx", this._SeqIdx, value);
                this._SeqIdx = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string FillingType {
            get {
                return this._FillingType;
            }
            set {
                this.OnPropertyChanged("FillingType", this._FillingType, value);
                this._FillingType = value;
            }
        }
        
        public string Supply {
            get {
                return this._Supply;
            }
            set {
                this.OnPropertyChanged("Supply", this._Supply, value);
                this._Supply = value;
            }
        }
        
        public global::System.Int32? SingleWeight {
            get {
                return this._SingleWeight;
            }
            set {
                this.OnPropertyChanged("SingleWeight", this._SingleWeight, value);
                this._SingleWeight = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtEquipJarStore._PmtEquipJarStoreEntityConfiguration == null)) {
                PmtEquipJarStore._PmtEquipJarStoreEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtEquipJarStore");
            }
            return PmtEquipJarStore._PmtEquipJarStoreEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._EquipCode,
                    this._JarType,
                    this._JarNum,
                    this._Priority,
                    this._StoragePlaceCode,
                    this._MaterialCode,
                    this._WorkID,
                    this._Remark,
                    this._RecordTime,
                    this._SeqIdx,
                    this._DeleteFlag,
                    this._FillingType,
                    this._Supply,
                    this._SingleWeight};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._JarType = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._JarNum = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Priority = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._StoragePlaceCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterialCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._WorkID = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Remark = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._RecordTime = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._SeqIdx = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._DeleteFlag = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._FillingType = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Supply = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._SingleWeight = reader.GetInt32(14);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._JarType = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._JarNum = ((int)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Priority = ((int)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._StoragePlaceCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaterialCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._WorkID = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Remark = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._RecordTime = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10))) {
                this._SeqIdx = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._DeleteFlag = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._FillingType = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Supply = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._SingleWeight = ((System.Nullable<int>)(row[14]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtEquipJarStore).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtEquipJarStore)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PmtEquipJarStore)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _JarType = new NBear.Common.PropertyItem("JarType", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _JarNum = new NBear.Common.PropertyItem("JarNum", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _Priority = new NBear.Common.PropertyItem("Priority", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _StoragePlaceCode = new NBear.Common.PropertyItem("StoragePlaceCode", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _WorkID = new NBear.Common.PropertyItem("WorkID", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _RecordTime = new NBear.Common.PropertyItem("RecordTime", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _SeqIdx = new NBear.Common.PropertyItem("SeqIdx", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _FillingType = new NBear.Common.PropertyItem("FillingType", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _Supply = new NBear.Common.PropertyItem("Supply", "Mesnac.Entity.PmtEquipJarStore");
            
            protected NBear.Common.PropertyItem _SingleWeight = new NBear.Common.PropertyItem("SingleWeight", "Mesnac.Entity.PmtEquipJarStore");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JarType {
                get {
                    if ((aliasName == null)) {
                        return _JarType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JarType", _JarType.EntityConfiguration, _JarType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JarNum {
                get {
                    if ((aliasName == null)) {
                        return _JarNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JarNum", _JarNum.EntityConfiguration, _JarNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Priority {
                get {
                    if ((aliasName == null)) {
                        return _Priority;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Priority", _Priority.EntityConfiguration, _Priority.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceCode {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceCode", _StoragePlaceCode.EntityConfiguration, _StoragePlaceCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkID {
                get {
                    if ((aliasName == null)) {
                        return _WorkID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkID", _WorkID.EntityConfiguration, _WorkID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordTime {
                get {
                    if ((aliasName == null)) {
                        return _RecordTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordTime", _RecordTime.EntityConfiguration, _RecordTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeqIdx {
                get {
                    if ((aliasName == null)) {
                        return _SeqIdx;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqIdx", _SeqIdx.EntityConfiguration, _SeqIdx.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FillingType {
                get {
                    if ((aliasName == null)) {
                        return _FillingType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FillingType", _FillingType.EntityConfiguration, _FillingType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Supply {
                get {
                    if ((aliasName == null)) {
                        return _Supply;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Supply", _Supply.EntityConfiguration, _Supply.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SingleWeight {
                get {
                    if ((aliasName == null)) {
                        return _SingleWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SingleWeight", _SingleWeight.EntityConfiguration, _SingleWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
