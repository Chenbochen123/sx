//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Pst_MinstockArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Pst_Minstock> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Pst_Minstock\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Pst_Minstock\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Serial_Id\" type=\"System.Int64\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Serial_Id\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\"" +
        " isNotNull=\"true\" />\r\n    <Property name=\"Mater_barcode\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Mater_barcode\" mappingColumnType=\"System.String\" sqlType=\"varchar(15" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Bus_class\" typ" +
        "e=\"System.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Bus_class\" mappingColumnType=\"System.Int16\" sqlTy" +
        "pe=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sto" +
        "ck_date\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Stock_date\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Fac_id\" type=\"System.Int32\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fac_" +
        "id\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Mater_code\" type=\"System.String\" isInherited=\"" +
        "false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Mater_code\" mappingColumnType=\"System.String\" sqlType=\"ch" +
        "ar(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Profac_na" +
        "me\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Profac_name\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Mater_batch\" type=\"System.String\" isInher" +
        "ited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Mater_batch\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Mater_brand\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater_br" +
        "and\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_num\" type=\"System.Nullable`1[S" +
        "ystem.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Plan_num\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"Plan_weig\" type=\"System.Nullable`1[System.Decimal]\"" +
        " isInherited=\"false\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Plan_weig\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Real_num\" type=\"System.Nullable`1[System.Int32]\" isInh" +
        "erited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Real_num\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"Real_weig\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false" +
        "\" sqlDefaultValue=\"(0.00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Real_weig\" mappingColumnType=\"System.Nullable`1[System.Deci" +
        "mal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Real_price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Real_p" +
        "rice\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Real_sum\" type=\"Sys" +
        "tem.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Real_sum\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Test_no\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Test_" +
        "no\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Test_result\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Test_result\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Handle_name\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Handle_name\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Receive_name\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Receive_name\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Cargo_id\" type=\"System.String\" isInherited=\"false\" sqlDefault" +
        "Value=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Cargo_id\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Pos_code\" type=\"System.N" +
        "ullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"Pos_code\" mappingColumnType=\"System.Nulla" +
        "ble`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Ep_sgn\" type=\"System.String\" isInherited=\"false\" sqlDefau" +
        "ltValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Ep_sgn\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Up_dwn_mark\" type=\"System.Nul" +
        "lable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Up_dwn_mark\" mappingColumnType=\"System.Null" +
        "able`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"Mem_no\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mem_no\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"nvarchar(80)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Used_num\" type=\"System.Nullable`1[System.Int3" +
        "2]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Used_num\" mappingColumnType=\"System.Null" +
        "able`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Used_weigh\" type=\"System.Nullable`1[System.Decimal]\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Used_weigh\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" sqlType=\"numeric\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Used_Flag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Used_Flag\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Begin_Use\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Begin_U" +
        "se\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"End_Use\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"End_Use\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"Stock_code\" type=\"System.Nullab" +
        "le`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Stock_code\" mappingColumnType=\"System.Nullable" +
        "`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Out_StockCode\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Out_StockC" +
        "ode\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Fac_type\" type=\"System.Nullable`1[Sy" +
        "stem.Int16]\" isInherited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Fac_type\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Bill_NO\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Bil" +
        "l_NO\" mappingColumnType=\"System.String\" sqlType=\"char(11)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Print_Flag\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Print_Flag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Clyj\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"Clyj\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckChange_date" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"CheckChange_date\" mappingColumnType=\"System" +
        ".String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"CheckPerson_name\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CheckPerson_name" +
        "\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Erp_stockid\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"Erp_stockid\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Erp_RowId\" type=\"Syste" +
        "m.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"Erp_RowId\" mappingColumnType=\"System.N" +
        "ullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"Cargo_ck_id\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Cargo_ck_i" +
        "d\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Pro_Date\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Pro_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Limit_Date\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Limit_Date\" mappingColumnType=\"System.String\" sqlType=\"char(" +
        "10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Area_Code\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Area_Code" +
        "\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Unit_Weight\" type=\"System.Nullable`1[System.Deci" +
        "mal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Unit_Weight\" mappingColumnType=\"System.Nullable`1[System.Dec" +
        "imal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Oper_time\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"CON" +
        "VERT([varchar](19),getdate(),(120))\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Oper_time\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Xu" +
        "ni_Dep\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Xuni_Dep\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"In_K3\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" sq" +
        "lDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"In_K3\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType" +
        "=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Allow" +
        "_Use\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'1\'\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Allow_Use\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"MSGID\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MSGID\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Pst_Minstock : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Pst_MinstockEntityConfiguration;
        
        protected long _Serial_Id;
        
        protected string _Mater_barcode;
        
        protected short _Bus_class;
        
        protected string _Stock_date;
        
        protected int _Fac_id;
        
        protected string _Mater_code;
        
        protected global::System.Int32? _Profac_name;
        
        protected string _Mater_batch;
        
        protected string _Mater_brand;
        
        protected global::System.Int32? _Plan_num;
        
        protected global::System.Decimal? _Plan_weig;
        
        protected global::System.Int32? _Real_num;
        
        protected global::System.Decimal? _Real_weig;
        
        protected global::System.Decimal? _Real_price;
        
        protected global::System.Decimal? _Real_sum;
        
        protected string _Test_no;
        
        protected string _Test_result;
        
        protected string _Handle_name;
        
        protected string _Receive_name;
        
        protected string _Cargo_id;
        
        protected global::System.Int16? _Pos_code;
        
        protected string _Ep_sgn;
        
        protected global::System.Int16? _Up_dwn_mark;
        
        protected string _Mem_no;
        
        protected global::System.Int32? _Used_num;
        
        protected global::System.Decimal? _Used_weigh;
        
        protected string _Used_Flag;
        
        protected string _Begin_Use;
        
        protected string _End_Use;
        
        protected global::System.Int16? _Stock_code;
        
        protected string _Out_StockCode;
        
        protected global::System.Int16? _Fac_type;
        
        protected string _Bill_NO;
        
        protected string _Print_Flag;
        
        protected string _Clyj;
        
        protected string _CheckChange_date;
        
        protected string _CheckPerson_name;
        
        protected string _Erp_stockid;
        
        protected global::System.Int32? _Erp_RowId;
        
        protected string _Cargo_ck_id;
        
        protected string _Pro_Date;
        
        protected string _Limit_Date;
        
        protected string _Area_Code;
        
        protected global::System.Decimal? _Unit_Weight;
        
        protected string _Oper_time;
        
        protected string _Xuni_Dep;
        
        protected global::System.Int16? _In_K3;
        
        protected string _Allow_Use;
        
        protected string _MSGID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Pst_Minstock left, global::Mesnac.Entity.Pst_Minstock right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Pst_Minstock left, global::Mesnac.Entity.Pst_Minstock right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long Serial_Id {
            get {
                return this._Serial_Id;
            }
            set {
                this.OnPropertyChanged("Serial_Id", this._Serial_Id, value);
                this._Serial_Id = value;
            }
        }
        
        public string Mater_barcode {
            get {
                return this._Mater_barcode;
            }
            set {
                this.OnPropertyChanged("Mater_barcode", this._Mater_barcode, value);
                this._Mater_barcode = value;
            }
        }
        
        public short Bus_class {
            get {
                return this._Bus_class;
            }
            set {
                this.OnPropertyChanged("Bus_class", this._Bus_class, value);
                this._Bus_class = value;
            }
        }
        
        public string Stock_date {
            get {
                return this._Stock_date;
            }
            set {
                this.OnPropertyChanged("Stock_date", this._Stock_date, value);
                this._Stock_date = value;
            }
        }
        
        public int Fac_id {
            get {
                return this._Fac_id;
            }
            set {
                this.OnPropertyChanged("Fac_id", this._Fac_id, value);
                this._Fac_id = value;
            }
        }
        
        public string Mater_code {
            get {
                return this._Mater_code;
            }
            set {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }
        
        public global::System.Int32? Profac_name {
            get {
                return this._Profac_name;
            }
            set {
                this.OnPropertyChanged("Profac_name", this._Profac_name, value);
                this._Profac_name = value;
            }
        }
        
        public string Mater_batch {
            get {
                return this._Mater_batch;
            }
            set {
                this.OnPropertyChanged("Mater_batch", this._Mater_batch, value);
                this._Mater_batch = value;
            }
        }
        
        public string Mater_brand {
            get {
                return this._Mater_brand;
            }
            set {
                this.OnPropertyChanged("Mater_brand", this._Mater_brand, value);
                this._Mater_brand = value;
            }
        }
        
        public global::System.Int32? Plan_num {
            get {
                return this._Plan_num;
            }
            set {
                this.OnPropertyChanged("Plan_num", this._Plan_num, value);
                this._Plan_num = value;
            }
        }
        
        public global::System.Decimal? Plan_weig {
            get {
                return this._Plan_weig;
            }
            set {
                this.OnPropertyChanged("Plan_weig", this._Plan_weig, value);
                this._Plan_weig = value;
            }
        }
        
        public global::System.Int32? Real_num {
            get {
                return this._Real_num;
            }
            set {
                this.OnPropertyChanged("Real_num", this._Real_num, value);
                this._Real_num = value;
            }
        }
        
        public global::System.Decimal? Real_weig {
            get {
                return this._Real_weig;
            }
            set {
                this.OnPropertyChanged("Real_weig", this._Real_weig, value);
                this._Real_weig = value;
            }
        }
        
        public global::System.Decimal? Real_price {
            get {
                return this._Real_price;
            }
            set {
                this.OnPropertyChanged("Real_price", this._Real_price, value);
                this._Real_price = value;
            }
        }
        
        public global::System.Decimal? Real_sum {
            get {
                return this._Real_sum;
            }
            set {
                this.OnPropertyChanged("Real_sum", this._Real_sum, value);
                this._Real_sum = value;
            }
        }
        
        public string Test_no {
            get {
                return this._Test_no;
            }
            set {
                this.OnPropertyChanged("Test_no", this._Test_no, value);
                this._Test_no = value;
            }
        }
        
        public string Test_result {
            get {
                return this._Test_result;
            }
            set {
                this.OnPropertyChanged("Test_result", this._Test_result, value);
                this._Test_result = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string Receive_name {
            get {
                return this._Receive_name;
            }
            set {
                this.OnPropertyChanged("Receive_name", this._Receive_name, value);
                this._Receive_name = value;
            }
        }
        
        public string Cargo_id {
            get {
                return this._Cargo_id;
            }
            set {
                this.OnPropertyChanged("Cargo_id", this._Cargo_id, value);
                this._Cargo_id = value;
            }
        }
        
        public global::System.Int16? Pos_code {
            get {
                return this._Pos_code;
            }
            set {
                this.OnPropertyChanged("Pos_code", this._Pos_code, value);
                this._Pos_code = value;
            }
        }
        
        public string Ep_sgn {
            get {
                return this._Ep_sgn;
            }
            set {
                this.OnPropertyChanged("Ep_sgn", this._Ep_sgn, value);
                this._Ep_sgn = value;
            }
        }
        
        public global::System.Int16? Up_dwn_mark {
            get {
                return this._Up_dwn_mark;
            }
            set {
                this.OnPropertyChanged("Up_dwn_mark", this._Up_dwn_mark, value);
                this._Up_dwn_mark = value;
            }
        }
        
        public string Mem_no {
            get {
                return this._Mem_no;
            }
            set {
                this.OnPropertyChanged("Mem_no", this._Mem_no, value);
                this._Mem_no = value;
            }
        }
        
        public global::System.Int32? Used_num {
            get {
                return this._Used_num;
            }
            set {
                this.OnPropertyChanged("Used_num", this._Used_num, value);
                this._Used_num = value;
            }
        }
        
        public global::System.Decimal? Used_weigh {
            get {
                return this._Used_weigh;
            }
            set {
                this.OnPropertyChanged("Used_weigh", this._Used_weigh, value);
                this._Used_weigh = value;
            }
        }
        
        public string Used_Flag {
            get {
                return this._Used_Flag;
            }
            set {
                this.OnPropertyChanged("Used_Flag", this._Used_Flag, value);
                this._Used_Flag = value;
            }
        }
        
        public string Begin_Use {
            get {
                return this._Begin_Use;
            }
            set {
                this.OnPropertyChanged("Begin_Use", this._Begin_Use, value);
                this._Begin_Use = value;
            }
        }
        
        public string End_Use {
            get {
                return this._End_Use;
            }
            set {
                this.OnPropertyChanged("End_Use", this._End_Use, value);
                this._End_Use = value;
            }
        }
        
        public global::System.Int16? Stock_code {
            get {
                return this._Stock_code;
            }
            set {
                this.OnPropertyChanged("Stock_code", this._Stock_code, value);
                this._Stock_code = value;
            }
        }
        
        public string Out_StockCode {
            get {
                return this._Out_StockCode;
            }
            set {
                this.OnPropertyChanged("Out_StockCode", this._Out_StockCode, value);
                this._Out_StockCode = value;
            }
        }
        
        public global::System.Int16? Fac_type {
            get {
                return this._Fac_type;
            }
            set {
                this.OnPropertyChanged("Fac_type", this._Fac_type, value);
                this._Fac_type = value;
            }
        }
        
        public string Bill_NO {
            get {
                return this._Bill_NO;
            }
            set {
                this.OnPropertyChanged("Bill_NO", this._Bill_NO, value);
                this._Bill_NO = value;
            }
        }
        
        public string Print_Flag {
            get {
                return this._Print_Flag;
            }
            set {
                this.OnPropertyChanged("Print_Flag", this._Print_Flag, value);
                this._Print_Flag = value;
            }
        }
        
        public string Clyj {
            get {
                return this._Clyj;
            }
            set {
                this.OnPropertyChanged("Clyj", this._Clyj, value);
                this._Clyj = value;
            }
        }
        
        public string CheckChange_date {
            get {
                return this._CheckChange_date;
            }
            set {
                this.OnPropertyChanged("CheckChange_date", this._CheckChange_date, value);
                this._CheckChange_date = value;
            }
        }
        
        public string CheckPerson_name {
            get {
                return this._CheckPerson_name;
            }
            set {
                this.OnPropertyChanged("CheckPerson_name", this._CheckPerson_name, value);
                this._CheckPerson_name = value;
            }
        }
        
        public string Erp_stockid {
            get {
                return this._Erp_stockid;
            }
            set {
                this.OnPropertyChanged("Erp_stockid", this._Erp_stockid, value);
                this._Erp_stockid = value;
            }
        }
        
        public global::System.Int32? Erp_RowId {
            get {
                return this._Erp_RowId;
            }
            set {
                this.OnPropertyChanged("Erp_RowId", this._Erp_RowId, value);
                this._Erp_RowId = value;
            }
        }
        
        public string Cargo_ck_id {
            get {
                return this._Cargo_ck_id;
            }
            set {
                this.OnPropertyChanged("Cargo_ck_id", this._Cargo_ck_id, value);
                this._Cargo_ck_id = value;
            }
        }
        
        public string Pro_Date {
            get {
                return this._Pro_Date;
            }
            set {
                this.OnPropertyChanged("Pro_Date", this._Pro_Date, value);
                this._Pro_Date = value;
            }
        }
        
        public string Limit_Date {
            get {
                return this._Limit_Date;
            }
            set {
                this.OnPropertyChanged("Limit_Date", this._Limit_Date, value);
                this._Limit_Date = value;
            }
        }
        
        public string Area_Code {
            get {
                return this._Area_Code;
            }
            set {
                this.OnPropertyChanged("Area_Code", this._Area_Code, value);
                this._Area_Code = value;
            }
        }
        
        public global::System.Decimal? Unit_Weight {
            get {
                return this._Unit_Weight;
            }
            set {
                this.OnPropertyChanged("Unit_Weight", this._Unit_Weight, value);
                this._Unit_Weight = value;
            }
        }
        
        public string Oper_time {
            get {
                return this._Oper_time;
            }
            set {
                this.OnPropertyChanged("Oper_time", this._Oper_time, value);
                this._Oper_time = value;
            }
        }
        
        public string Xuni_Dep {
            get {
                return this._Xuni_Dep;
            }
            set {
                this.OnPropertyChanged("Xuni_Dep", this._Xuni_Dep, value);
                this._Xuni_Dep = value;
            }
        }
        
        public global::System.Int16? In_K3 {
            get {
                return this._In_K3;
            }
            set {
                this.OnPropertyChanged("In_K3", this._In_K3, value);
                this._In_K3 = value;
            }
        }
        
        public string Allow_Use {
            get {
                return this._Allow_Use;
            }
            set {
                this.OnPropertyChanged("Allow_Use", this._Allow_Use, value);
                this._Allow_Use = value;
            }
        }
        
        public string MSGID {
            get {
                return this._MSGID;
            }
            set {
                this.OnPropertyChanged("MSGID", this._MSGID, value);
                this._MSGID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Pst_Minstock._Pst_MinstockEntityConfiguration == null)) {
                Pst_Minstock._Pst_MinstockEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Pst_Minstock");
            }
            return Pst_Minstock._Pst_MinstockEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serial_Id,
                    this._Mater_barcode,
                    this._Bus_class,
                    this._Stock_date,
                    this._Fac_id,
                    this._Mater_code,
                    this._Profac_name,
                    this._Mater_batch,
                    this._Mater_brand,
                    this._Plan_num,
                    this._Plan_weig,
                    this._Real_num,
                    this._Real_weig,
                    this._Real_price,
                    this._Real_sum,
                    this._Test_no,
                    this._Test_result,
                    this._Handle_name,
                    this._Receive_name,
                    this._Cargo_id,
                    this._Pos_code,
                    this._Ep_sgn,
                    this._Up_dwn_mark,
                    this._Mem_no,
                    this._Used_num,
                    this._Used_weigh,
                    this._Used_Flag,
                    this._Begin_Use,
                    this._End_Use,
                    this._Stock_code,
                    this._Out_StockCode,
                    this._Fac_type,
                    this._Bill_NO,
                    this._Print_Flag,
                    this._Clyj,
                    this._CheckChange_date,
                    this._CheckPerson_name,
                    this._Erp_stockid,
                    this._Erp_RowId,
                    this._Cargo_ck_id,
                    this._Pro_Date,
                    this._Limit_Date,
                    this._Area_Code,
                    this._Unit_Weight,
                    this._Oper_time,
                    this._Xuni_Dep,
                    this._In_K3,
                    this._Allow_Use,
                    this._MSGID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serial_Id = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mater_barcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Bus_class = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Stock_date = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Fac_id = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mater_code = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Profac_name = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Mater_batch = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Mater_brand = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Plan_num = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Plan_weig = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Real_num = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Real_weig = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Real_price = reader.GetDecimal(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Real_sum = reader.GetDecimal(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Test_no = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Test_result = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Handle_name = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Receive_name = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Cargo_id = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Pos_code = reader.GetInt16(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Ep_sgn = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Up_dwn_mark = reader.GetInt16(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Mem_no = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Used_num = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Used_weigh = reader.GetDecimal(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._Used_Flag = reader.GetString(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._Begin_Use = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._End_Use = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._Stock_code = reader.GetInt16(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._Out_StockCode = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._Fac_type = reader.GetInt16(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._Bill_NO = reader.GetString(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._Print_Flag = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._Clyj = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._CheckChange_date = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._CheckPerson_name = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._Erp_stockid = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._Erp_RowId = reader.GetInt32(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._Cargo_ck_id = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._Pro_Date = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._Limit_Date = reader.GetString(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._Area_Code = reader.GetString(42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._Unit_Weight = reader.GetDecimal(43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._Oper_time = reader.GetString(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._Xuni_Dep = reader.GetString(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._In_K3 = reader.GetInt16(46);
            }
            if ((false == reader.IsDBNull(47))) {
                this._Allow_Use = reader.GetString(47);
            }
            if ((false == reader.IsDBNull(48))) {
                this._MSGID = reader.GetString(48);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serial_Id = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mater_barcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Bus_class = ((short)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Stock_date = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Fac_id = ((int)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mater_code = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Profac_name = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Mater_batch = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Mater_brand = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Plan_num = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Plan_weig = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Real_num = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Real_weig = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Real_price = ((System.Nullable<decimal>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Real_sum = ((System.Nullable<decimal>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Test_no = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Test_result = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Handle_name = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Receive_name = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Cargo_id = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Pos_code = ((System.Nullable<short>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Ep_sgn = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Up_dwn_mark = ((System.Nullable<short>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Mem_no = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Used_num = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Used_weigh = ((System.Nullable<decimal>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._Used_Flag = ((string)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._Begin_Use = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._End_Use = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._Stock_code = ((System.Nullable<short>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._Out_StockCode = ((string)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._Fac_type = ((System.Nullable<short>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._Bill_NO = ((string)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._Print_Flag = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._Clyj = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._CheckChange_date = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._CheckPerson_name = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._Erp_stockid = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._Erp_RowId = ((System.Nullable<int>)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._Cargo_ck_id = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._Pro_Date = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._Limit_Date = ((string)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._Area_Code = ((string)(row[42]));
            }
            if ((false == row.IsNull(43))) {
                this._Unit_Weight = ((System.Nullable<decimal>)(row[43]));
            }
            if ((false == row.IsNull(44))) {
                this._Oper_time = ((string)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._Xuni_Dep = ((string)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._In_K3 = ((System.Nullable<short>)(row[46]));
            }
            if ((false == row.IsNull(47))) {
                this._Allow_Use = ((string)(row[47]));
            }
            if ((false == row.IsNull(48))) {
                this._MSGID = ((string)(row[48]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Pst_Minstock).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Pst_Minstock)(obj)).isAttached) 
                        && (this.Serial_Id == ((global::Mesnac.Entity.Pst_Minstock)(obj)).Serial_Id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serial_Id = new NBear.Common.PropertyItem("Serial_Id", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Mater_barcode = new NBear.Common.PropertyItem("Mater_barcode", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Bus_class = new NBear.Common.PropertyItem("Bus_class", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Stock_date = new NBear.Common.PropertyItem("Stock_date", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Fac_id = new NBear.Common.PropertyItem("Fac_id", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Profac_name = new NBear.Common.PropertyItem("Profac_name", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Mater_batch = new NBear.Common.PropertyItem("Mater_batch", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Mater_brand = new NBear.Common.PropertyItem("Mater_brand", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Plan_num = new NBear.Common.PropertyItem("Plan_num", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Plan_weig = new NBear.Common.PropertyItem("Plan_weig", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Real_num = new NBear.Common.PropertyItem("Real_num", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Real_weig = new NBear.Common.PropertyItem("Real_weig", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Real_price = new NBear.Common.PropertyItem("Real_price", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Real_sum = new NBear.Common.PropertyItem("Real_sum", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Test_no = new NBear.Common.PropertyItem("Test_no", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Test_result = new NBear.Common.PropertyItem("Test_result", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Receive_name = new NBear.Common.PropertyItem("Receive_name", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Cargo_id = new NBear.Common.PropertyItem("Cargo_id", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Pos_code = new NBear.Common.PropertyItem("Pos_code", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Ep_sgn = new NBear.Common.PropertyItem("Ep_sgn", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Up_dwn_mark = new NBear.Common.PropertyItem("Up_dwn_mark", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Mem_no = new NBear.Common.PropertyItem("Mem_no", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Used_num = new NBear.Common.PropertyItem("Used_num", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Used_weigh = new NBear.Common.PropertyItem("Used_weigh", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Used_Flag = new NBear.Common.PropertyItem("Used_Flag", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Begin_Use = new NBear.Common.PropertyItem("Begin_Use", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _End_Use = new NBear.Common.PropertyItem("End_Use", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Stock_code = new NBear.Common.PropertyItem("Stock_code", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Out_StockCode = new NBear.Common.PropertyItem("Out_StockCode", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Fac_type = new NBear.Common.PropertyItem("Fac_type", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Bill_NO = new NBear.Common.PropertyItem("Bill_NO", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Print_Flag = new NBear.Common.PropertyItem("Print_Flag", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Clyj = new NBear.Common.PropertyItem("Clyj", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _CheckChange_date = new NBear.Common.PropertyItem("CheckChange_date", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _CheckPerson_name = new NBear.Common.PropertyItem("CheckPerson_name", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Erp_stockid = new NBear.Common.PropertyItem("Erp_stockid", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Erp_RowId = new NBear.Common.PropertyItem("Erp_RowId", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Cargo_ck_id = new NBear.Common.PropertyItem("Cargo_ck_id", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Pro_Date = new NBear.Common.PropertyItem("Pro_Date", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Limit_Date = new NBear.Common.PropertyItem("Limit_Date", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Area_Code = new NBear.Common.PropertyItem("Area_Code", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Unit_Weight = new NBear.Common.PropertyItem("Unit_Weight", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Oper_time = new NBear.Common.PropertyItem("Oper_time", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Xuni_Dep = new NBear.Common.PropertyItem("Xuni_Dep", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _In_K3 = new NBear.Common.PropertyItem("In_K3", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _Allow_Use = new NBear.Common.PropertyItem("Allow_Use", "Mesnac.Entity.Pst_Minstock");
            
            protected NBear.Common.PropertyItem _MSGID = new NBear.Common.PropertyItem("MSGID", "Mesnac.Entity.Pst_Minstock");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serial_Id {
                get {
                    if ((aliasName == null)) {
                        return _Serial_Id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_Id", _Serial_Id.EntityConfiguration, _Serial_Id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Mater_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_barcode", _Mater_barcode.EntityConfiguration, _Mater_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Bus_class {
                get {
                    if ((aliasName == null)) {
                        return _Bus_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Bus_class", _Bus_class.EntityConfiguration, _Bus_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_date {
                get {
                    if ((aliasName == null)) {
                        return _Stock_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_date", _Stock_date.EntityConfiguration, _Stock_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_id {
                get {
                    if ((aliasName == null)) {
                        return _Fac_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_id", _Fac_id.EntityConfiguration, _Fac_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Profac_name {
                get {
                    if ((aliasName == null)) {
                        return _Profac_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Profac_name", _Profac_name.EntityConfiguration, _Profac_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_batch {
                get {
                    if ((aliasName == null)) {
                        return _Mater_batch;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_batch", _Mater_batch.EntityConfiguration, _Mater_batch.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_brand {
                get {
                    if ((aliasName == null)) {
                        return _Mater_brand;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_brand", _Mater_brand.EntityConfiguration, _Mater_brand.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_num {
                get {
                    if ((aliasName == null)) {
                        return _Plan_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_num", _Plan_num.EntityConfiguration, _Plan_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_weig {
                get {
                    if ((aliasName == null)) {
                        return _Plan_weig;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_weig", _Plan_weig.EntityConfiguration, _Plan_weig.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_num {
                get {
                    if ((aliasName == null)) {
                        return _Real_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_num", _Real_num.EntityConfiguration, _Real_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_weig {
                get {
                    if ((aliasName == null)) {
                        return _Real_weig;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_weig", _Real_weig.EntityConfiguration, _Real_weig.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_price {
                get {
                    if ((aliasName == null)) {
                        return _Real_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_price", _Real_price.EntityConfiguration, _Real_price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_sum {
                get {
                    if ((aliasName == null)) {
                        return _Real_sum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_sum", _Real_sum.EntityConfiguration, _Real_sum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Test_no {
                get {
                    if ((aliasName == null)) {
                        return _Test_no;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Test_no", _Test_no.EntityConfiguration, _Test_no.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Test_result {
                get {
                    if ((aliasName == null)) {
                        return _Test_result;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Test_result", _Test_result.EntityConfiguration, _Test_result.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Receive_name {
                get {
                    if ((aliasName == null)) {
                        return _Receive_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Receive_name", _Receive_name.EntityConfiguration, _Receive_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Cargo_id {
                get {
                    if ((aliasName == null)) {
                        return _Cargo_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Cargo_id", _Cargo_id.EntityConfiguration, _Cargo_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pos_code {
                get {
                    if ((aliasName == null)) {
                        return _Pos_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pos_code", _Pos_code.EntityConfiguration, _Pos_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ep_sgn {
                get {
                    if ((aliasName == null)) {
                        return _Ep_sgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ep_sgn", _Ep_sgn.EntityConfiguration, _Ep_sgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Up_dwn_mark {
                get {
                    if ((aliasName == null)) {
                        return _Up_dwn_mark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Up_dwn_mark", _Up_dwn_mark.EntityConfiguration, _Up_dwn_mark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_no {
                get {
                    if ((aliasName == null)) {
                        return _Mem_no;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_no", _Mem_no.EntityConfiguration, _Mem_no.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_num {
                get {
                    if ((aliasName == null)) {
                        return _Used_num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_num", _Used_num.EntityConfiguration, _Used_num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_weigh {
                get {
                    if ((aliasName == null)) {
                        return _Used_weigh;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_weigh", _Used_weigh.EntityConfiguration, _Used_weigh.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Used_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_Flag", _Used_Flag.EntityConfiguration, _Used_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Begin_Use {
                get {
                    if ((aliasName == null)) {
                        return _Begin_Use;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Begin_Use", _Begin_Use.EntityConfiguration, _Begin_Use.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem End_Use {
                get {
                    if ((aliasName == null)) {
                        return _End_Use;
                    }
                    else {
                        return new NBear.Common.PropertyItem("End_Use", _End_Use.EntityConfiguration, _End_Use.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stock_code {
                get {
                    if ((aliasName == null)) {
                        return _Stock_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stock_code", _Stock_code.EntityConfiguration, _Stock_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Out_StockCode {
                get {
                    if ((aliasName == null)) {
                        return _Out_StockCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Out_StockCode", _Out_StockCode.EntityConfiguration, _Out_StockCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_type {
                get {
                    if ((aliasName == null)) {
                        return _Fac_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_type", _Fac_type.EntityConfiguration, _Fac_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Bill_NO {
                get {
                    if ((aliasName == null)) {
                        return _Bill_NO;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Bill_NO", _Bill_NO.EntityConfiguration, _Bill_NO.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Print_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Print_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Print_Flag", _Print_Flag.EntityConfiguration, _Print_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Clyj {
                get {
                    if ((aliasName == null)) {
                        return _Clyj;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Clyj", _Clyj.EntityConfiguration, _Clyj.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckChange_date {
                get {
                    if ((aliasName == null)) {
                        return _CheckChange_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckChange_date", _CheckChange_date.EntityConfiguration, _CheckChange_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckPerson_name {
                get {
                    if ((aliasName == null)) {
                        return _CheckPerson_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckPerson_name", _CheckPerson_name.EntityConfiguration, _CheckPerson_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Erp_stockid {
                get {
                    if ((aliasName == null)) {
                        return _Erp_stockid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Erp_stockid", _Erp_stockid.EntityConfiguration, _Erp_stockid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Erp_RowId {
                get {
                    if ((aliasName == null)) {
                        return _Erp_RowId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Erp_RowId", _Erp_RowId.EntityConfiguration, _Erp_RowId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Cargo_ck_id {
                get {
                    if ((aliasName == null)) {
                        return _Cargo_ck_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Cargo_ck_id", _Cargo_ck_id.EntityConfiguration, _Cargo_ck_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pro_Date {
                get {
                    if ((aliasName == null)) {
                        return _Pro_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pro_Date", _Pro_Date.EntityConfiguration, _Pro_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Limit_Date {
                get {
                    if ((aliasName == null)) {
                        return _Limit_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Limit_Date", _Limit_Date.EntityConfiguration, _Limit_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Area_Code {
                get {
                    if ((aliasName == null)) {
                        return _Area_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Area_Code", _Area_Code.EntityConfiguration, _Area_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Unit_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Unit_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Unit_Weight", _Unit_Weight.EntityConfiguration, _Unit_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oper_time {
                get {
                    if ((aliasName == null)) {
                        return _Oper_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oper_time", _Oper_time.EntityConfiguration, _Oper_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Xuni_Dep {
                get {
                    if ((aliasName == null)) {
                        return _Xuni_Dep;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Xuni_Dep", _Xuni_Dep.EntityConfiguration, _Xuni_Dep.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_K3 {
                get {
                    if ((aliasName == null)) {
                        return _In_K3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_K3", _In_K3.EntityConfiguration, _In_K3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Allow_Use {
                get {
                    if ((aliasName == null)) {
                        return _Allow_Use;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Allow_Use", _Allow_Use.EntityConfiguration, _Allow_Use.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MSGID {
                get {
                    if ((aliasName == null)) {
                        return _MSGID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MSGID", _MSGID.EntityConfiguration, _MSGID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
