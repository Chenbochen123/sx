//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_ClassUserArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_ClassUser> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_ClassUser\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_ClassUser\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"Objid\" type=\"System.Int32\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ob" +
        "jid\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNul" +
        "l=\"true\" />\r\n    <Property name=\"ClassId\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"ClassId\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlT" +
        "ype=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Job\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Job\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Na" +
        "me\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"Name\" mappingColumnType=\"System.String\" s" +
        "qlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>" +
        "\r\n</EntityConfiguration>")]
    public partial class Ppt_ClassUser : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_ClassUserEntityConfiguration;
        
        protected int _Objid;
        
        protected global::System.Int32? _ClassId;
        
        protected string _Job;
        
        protected string _Name;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_ClassUser left, global::Mesnac.Entity.Ppt_ClassUser right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_ClassUser left, global::Mesnac.Entity.Ppt_ClassUser right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Objid {
            get {
                return this._Objid;
            }
            set {
                this.OnPropertyChanged("Objid", this._Objid, value);
                this._Objid = value;
            }
        }
        
        public global::System.Int32? ClassId {
            get {
                return this._ClassId;
            }
            set {
                this.OnPropertyChanged("ClassId", this._ClassId, value);
                this._ClassId = value;
            }
        }
        
        public string Job {
            get {
                return this._Job;
            }
            set {
                this.OnPropertyChanged("Job", this._Job, value);
                this._Job = value;
            }
        }
        
        public string Name {
            get {
                return this._Name;
            }
            set {
                this.OnPropertyChanged("Name", this._Name, value);
                this._Name = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_ClassUser._Ppt_ClassUserEntityConfiguration == null)) {
                Ppt_ClassUser._Ppt_ClassUserEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_ClassUser");
            }
            return Ppt_ClassUser._Ppt_ClassUserEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Objid,
                    this._ClassId,
                    this._Job,
                    this._Name};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Objid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._ClassId = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Job = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Name = reader.GetString(3);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Objid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._ClassId = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Job = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Name = ((string)(row[3]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_ClassUser).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_ClassUser)(obj)).isAttached) 
                        && (this.Objid == ((global::Mesnac.Entity.Ppt_ClassUser)(obj)).Objid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Objid = new NBear.Common.PropertyItem("Objid", "Mesnac.Entity.Ppt_ClassUser");
            
            protected NBear.Common.PropertyItem _ClassId = new NBear.Common.PropertyItem("ClassId", "Mesnac.Entity.Ppt_ClassUser");
            
            protected NBear.Common.PropertyItem _Job = new NBear.Common.PropertyItem("Job", "Mesnac.Entity.Ppt_ClassUser");
            
            protected NBear.Common.PropertyItem _Name = new NBear.Common.PropertyItem("Name", "Mesnac.Entity.Ppt_ClassUser");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Objid {
                get {
                    if ((aliasName == null)) {
                        return _Objid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Objid", _Objid.EntityConfiguration, _Objid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ClassId {
                get {
                    if ((aliasName == null)) {
                        return _ClassId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ClassId", _ClassId.EntityConfiguration, _ClassId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Job {
                get {
                    if ((aliasName == null)) {
                        return _Job;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Job", _Job.EntityConfiguration, _Job.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Name {
                get {
                    if ((aliasName == null)) {
                        return _Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Name", _Name.EntityConfiguration, _Name.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
