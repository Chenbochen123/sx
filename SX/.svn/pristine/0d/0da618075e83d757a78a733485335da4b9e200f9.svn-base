//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptEquipRubTimeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptEquipRubTime> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PptEquipRubTime\" isReadOnly=\"false\" isAutoPreLoad=\"false\" is" +
        "BatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PptEquipRubTime\" batchSize=\"" +
        "10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int64\" isInherited" +
        "=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"ObjID\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"PlanDate\" type=\"System.Nullable`1[System" +
        ".DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"PlanDate\" mappingColumnType=\"System.Nullable`1[System." +
        "DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"ShiftID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"EquipCode\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipCode\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SerialCount\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"SerialCount\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"DoneAllRTime\" type=\"System.Nullable`1[System.Int64]\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"DoneAllRTime\" mappingColumnType=\"System.Nullable`1[System.Int64]\" sqlT" +
        "ype=\"bigint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Entit" +
        "yConfiguration>")]
    public partial class PptEquipRubTime : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptEquipRubTimeEntityConfiguration;
        
        protected long _ObjID;
        
        protected global::System.DateTime? _PlanDate;
        
        protected string _ShiftID;
        
        protected string _EquipCode;
        
        protected string _MaterCode;
        
        protected global::System.Int32? _SerialCount;
        
        protected global::System.Int64? _DoneAllRTime;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptEquipRubTime left, global::Mesnac.Entity.PptEquipRubTime right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptEquipRubTime left, global::Mesnac.Entity.PptEquipRubTime right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.DateTime? PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.Int32? SerialCount {
            get {
                return this._SerialCount;
            }
            set {
                this.OnPropertyChanged("SerialCount", this._SerialCount, value);
                this._SerialCount = value;
            }
        }
        
        public global::System.Int64? DoneAllRTime {
            get {
                return this._DoneAllRTime;
            }
            set {
                this.OnPropertyChanged("DoneAllRTime", this._DoneAllRTime, value);
                this._DoneAllRTime = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptEquipRubTime._PptEquipRubTimeEntityConfiguration == null)) {
                PptEquipRubTime._PptEquipRubTimeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptEquipRubTime");
            }
            return PptEquipRubTime._PptEquipRubTimeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._PlanDate,
                    this._ShiftID,
                    this._EquipCode,
                    this._MaterCode,
                    this._SerialCount,
                    this._DoneAllRTime};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PlanDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ShiftID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._EquipCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._MaterCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._SerialCount = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._DoneAllRTime = reader.GetInt64(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PlanDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2))) {
                this._ShiftID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._EquipCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._MaterCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._SerialCount = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._DoneAllRTime = ((System.Nullable<long>)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptEquipRubTime).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptEquipRubTime)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PptEquipRubTime)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PptEquipRubTime");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PptEquipRubTime");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PptEquipRubTime");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PptEquipRubTime");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PptEquipRubTime");
            
            protected NBear.Common.PropertyItem _SerialCount = new NBear.Common.PropertyItem("SerialCount", "Mesnac.Entity.PptEquipRubTime");
            
            protected NBear.Common.PropertyItem _DoneAllRTime = new NBear.Common.PropertyItem("DoneAllRTime", "Mesnac.Entity.PptEquipRubTime");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialCount {
                get {
                    if ((aliasName == null)) {
                        return _SerialCount;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialCount", _SerialCount.EntityConfiguration, _SerialCount.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DoneAllRTime {
                get {
                    if ((aliasName == null)) {
                        return _DoneAllRTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DoneAllRTime", _DoneAllRTime.EntityConfiguration, _DoneAllRTime.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
