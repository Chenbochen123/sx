//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstmminjarArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Pstmminjar>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.Pstmminjar\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"Pstmminjar\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"JarID\" type=\"System.Int64\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JarID\" m" +
        "appingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\" isNotNull=\"" +
        "true\" />\r\n    <Property name=\"Materbarcode\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"M" +
        "aterbarcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StoragePlaceID\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "StockDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StockDate\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.S" +
        "tring\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"MaterCode\" mappingColumnType=\"System." +
        "String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"EquipCode\" type=\"System.String\" isInherited=\"false\" sqlDefaultValu" +
        "e=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftDate\" type=\"System.Nul" +
        "lable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"ShiftDate\" mappingColumnType=\"System.Nul" +
        "lable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"ShiftID\" type=\"System.Nullable`1[System.Int16]\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"ShiftID\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"" +
        "smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InTime\"" +
        " type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"InTime\" mappingColumnTy" +
        "pe=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"RealNum\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"RealNum\" mappingColumnType=\"System" +
        ".Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"RealWeight\" type=\"System.Nullable`1[System.Decimal]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"RealWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sql" +
        "Type=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ha" +
        "ndLename\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"HandLename\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Usedweigh\" type=\"System.Nullable`1[System.Decimal]\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Usedweigh\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"dec" +
        "imal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"UsedFlag\" t" +
        "ype=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'1\'\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UsedFlag\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"ClearFlag\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ClearFlag\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"AuditFlag\" type=\"System.Nullable`1[System.Int32" +
        "]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"AuditFlag\" mappingColumnType=\"System.Nullable`1[System.Int32]\" " +
        "sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Ina" +
        "ccountDuration\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"InaccountDuration\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(6)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"InaccountFlag\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"I" +
        "naccountFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguratio" +
        "n>")]
    public partial class Pstmminjar : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstmminjarEntityConfiguration;

        protected long _JarID;

        protected string _Materbarcode;

        protected string _StoragePlaceID;

        protected global::System.DateTime? _StockDate;

        protected string _MaterCode;

        protected string _EquipCode;

        protected global::System.DateTime? _ShiftDate;

        protected global::System.Int16? _ShiftID;

        protected global::System.DateTime? _InTime;

        protected global::System.Int32? _RealNum;

        protected global::System.Decimal? _RealWeight;

        protected string _HandLename;

        protected global::System.Decimal? _Usedweigh;

        protected string _UsedFlag;

        protected string _ClearFlag;

        protected global::System.Int32? _AuditFlag;

        protected string _InaccountDuration;

        protected string _InaccountFlag;

        protected string _DeleteFlag;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.Pstmminjar left, global::Mesnac.Entity.Pstmminjar right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.Pstmminjar left, global::Mesnac.Entity.Pstmminjar right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public long JarID
        {
            get
            {
                return this._JarID;
            }
            set
            {
                this.OnPropertyChanged("JarID", this._JarID, value);
                this._JarID = value;
            }
        }

        public string Materbarcode
        {
            get
            {
                return this._Materbarcode;
            }
            set
            {
                this.OnPropertyChanged("Materbarcode", this._Materbarcode, value);
                this._Materbarcode = value;
            }
        }

        public string StoragePlaceID
        {
            get
            {
                return this._StoragePlaceID;
            }
            set
            {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }

        public global::System.DateTime? StockDate
        {
            get
            {
                return this._StockDate;
            }
            set
            {
                this.OnPropertyChanged("StockDate", this._StockDate, value);
                this._StockDate = value;
            }
        }

        public string MaterCode
        {
            get
            {
                return this._MaterCode;
            }
            set
            {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public global::System.DateTime? ShiftDate
        {
            get
            {
                return this._ShiftDate;
            }
            set
            {
                this.OnPropertyChanged("ShiftDate", this._ShiftDate, value);
                this._ShiftDate = value;
            }
        }

        public global::System.Int16? ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public global::System.DateTime? InTime
        {
            get
            {
                return this._InTime;
            }
            set
            {
                this.OnPropertyChanged("InTime", this._InTime, value);
                this._InTime = value;
            }
        }

        public global::System.Int32? RealNum
        {
            get
            {
                return this._RealNum;
            }
            set
            {
                this.OnPropertyChanged("RealNum", this._RealNum, value);
                this._RealNum = value;
            }
        }

        public global::System.Decimal? RealWeight
        {
            get
            {
                return this._RealWeight;
            }
            set
            {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }

        public string HandLename
        {
            get
            {
                return this._HandLename;
            }
            set
            {
                this.OnPropertyChanged("HandLename", this._HandLename, value);
                this._HandLename = value;
            }
        }

        public global::System.Decimal? Usedweigh
        {
            get
            {
                return this._Usedweigh;
            }
            set
            {
                this.OnPropertyChanged("Usedweigh", this._Usedweigh, value);
                this._Usedweigh = value;
            }
        }

        public string UsedFlag
        {
            get
            {
                return this._UsedFlag;
            }
            set
            {
                this.OnPropertyChanged("UsedFlag", this._UsedFlag, value);
                this._UsedFlag = value;
            }
        }

        public string ClearFlag
        {
            get
            {
                return this._ClearFlag;
            }
            set
            {
                this.OnPropertyChanged("ClearFlag", this._ClearFlag, value);
                this._ClearFlag = value;
            }
        }

        public global::System.Int32? AuditFlag
        {
            get
            {
                return this._AuditFlag;
            }
            set
            {
                this.OnPropertyChanged("AuditFlag", this._AuditFlag, value);
                this._AuditFlag = value;
            }
        }

        public string InaccountDuration
        {
            get
            {
                return this._InaccountDuration;
            }
            set
            {
                this.OnPropertyChanged("InaccountDuration", this._InaccountDuration, value);
                this._InaccountDuration = value;
            }
        }

        public string InaccountFlag
        {
            get
            {
                return this._InaccountFlag;
            }
            set
            {
                this.OnPropertyChanged("InaccountFlag", this._InaccountFlag, value);
                this._InaccountFlag = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((Pstmminjar._PstmminjarEntityConfiguration == null))
            {
                Pstmminjar._PstmminjarEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Pstmminjar");
            }
            return Pstmminjar._PstmminjarEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._JarID,
                    this._Materbarcode,
                    this._StoragePlaceID,
                    this._StockDate,
                    this._MaterCode,
                    this._EquipCode,
                    this._ShiftDate,
                    this._ShiftID,
                    this._InTime,
                    this._RealNum,
                    this._RealWeight,
                    this._HandLename,
                    this._Usedweigh,
                    this._UsedFlag,
                    this._ClearFlag,
                    this._AuditFlag,
                    this._InaccountDuration,
                    this._InaccountFlag,
                    this._DeleteFlag};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._JarID = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._Materbarcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._StoragePlaceID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._StockDate = this.GetDateTime(reader, 3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._MaterCode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._EquipCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._ShiftDate = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ShiftID = reader.GetInt16(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._InTime = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._RealNum = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._RealWeight = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._HandLename = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._Usedweigh = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._UsedFlag = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._ClearFlag = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._AuditFlag = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._InaccountDuration = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._InaccountFlag = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._DeleteFlag = reader.GetString(18);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._JarID = ((long)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._Materbarcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._StoragePlaceID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._StockDate = this.GetDateTime(row, 3);
            }
            if ((false == row.IsNull(4)))
            {
                this._MaterCode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._EquipCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._ShiftDate = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7)))
            {
                this._ShiftID = ((System.Nullable<short>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._InTime = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9)))
            {
                this._RealNum = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._RealWeight = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._HandLename = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._Usedweigh = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._UsedFlag = ((string)(row[13]));
            }
            if ((false == row.IsNull(14)))
            {
                this._ClearFlag = ((string)(row[14]));
            }
            if ((false == row.IsNull(15)))
            {
                this._AuditFlag = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16)))
            {
                this._InaccountDuration = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._InaccountFlag = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._DeleteFlag = ((string)(row[18]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Pstmminjar).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Pstmminjar)(obj)).isAttached)
                        && (this.JarID == ((global::Mesnac.Entity.Pstmminjar)(obj)).JarID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _JarID = new NBear.Common.PropertyItem("JarID", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _Materbarcode = new NBear.Common.PropertyItem("Materbarcode", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _StockDate = new NBear.Common.PropertyItem("StockDate", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _ShiftDate = new NBear.Common.PropertyItem("ShiftDate", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _InTime = new NBear.Common.PropertyItem("InTime", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _RealNum = new NBear.Common.PropertyItem("RealNum", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _HandLename = new NBear.Common.PropertyItem("HandLename", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _Usedweigh = new NBear.Common.PropertyItem("Usedweigh", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _UsedFlag = new NBear.Common.PropertyItem("UsedFlag", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _ClearFlag = new NBear.Common.PropertyItem("ClearFlag", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _AuditFlag = new NBear.Common.PropertyItem("AuditFlag", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _InaccountDuration = new NBear.Common.PropertyItem("InaccountDuration", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _InaccountFlag = new NBear.Common.PropertyItem("InaccountFlag", "Mesnac.Entity.Pstmminjar");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.Pstmminjar");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem JarID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _JarID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("JarID", _JarID.EntityConfiguration, _JarID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Materbarcode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Materbarcode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Materbarcode", _Materbarcode.EntityConfiguration, _Materbarcode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StoragePlaceID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StoragePlaceID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StockDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StockDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StockDate", _StockDate.EntityConfiguration, _StockDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaterCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaterCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftDate", _ShiftDate.EntityConfiguration, _ShiftDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InTime", _InTime.EntityConfiguration, _InTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealNum
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealNum;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealNum", _RealNum.EntityConfiguration, _RealNum.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RealWeight
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RealWeight;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem HandLename
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _HandLename;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("HandLename", _HandLename.EntityConfiguration, _HandLename.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Usedweigh
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Usedweigh;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Usedweigh", _Usedweigh.EntityConfiguration, _Usedweigh.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem UsedFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UsedFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("UsedFlag", _UsedFlag.EntityConfiguration, _UsedFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ClearFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ClearFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ClearFlag", _ClearFlag.EntityConfiguration, _ClearFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AuditFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AuditFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AuditFlag", _AuditFlag.EntityConfiguration, _AuditFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InaccountDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InaccountDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InaccountDuration", _InaccountDuration.EntityConfiguration, _InaccountDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem InaccountFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _InaccountFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("InaccountFlag", _InaccountFlag.EntityConfiguration, _InaccountFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
