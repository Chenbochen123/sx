//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmRubberBackNormalLogArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmRubberBackNormalLog> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmRubberBackNormalLog\" isReadOnly=\"false\" isAutoPreLoad=\"fa" +
        "lse\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmRubberBackNormalLo" +
        "g\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"StorageID\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvar" +
        "char(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Storage" +
        "PlaceID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Barcode\" mapping" +
        "ColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"SourceStorageID\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"SourceStorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SourceStoragePlace" +
        "ID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"SourceStoragePlaceID\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"RecordDate\" type=\"System.Nullable`1[System.DateTime]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"RecordDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlT" +
        "ype=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Op" +
        "erPerson\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"OperPerson\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "</Properties>\r\n</EntityConfiguration>")]
    public partial class PpmRubberBackNormalLog : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmRubberBackNormalLogEntityConfiguration;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected string _Barcode;
        
        protected string _SourceStorageID;
        
        protected string _SourceStoragePlaceID;
        
        protected global::System.DateTime? _RecordDate;
        
        protected string _OperPerson;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmRubberBackNormalLog left, global::Mesnac.Entity.PpmRubberBackNormalLog right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmRubberBackNormalLog left, global::Mesnac.Entity.PpmRubberBackNormalLog right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public string SourceStorageID {
            get {
                return this._SourceStorageID;
            }
            set {
                this.OnPropertyChanged("SourceStorageID", this._SourceStorageID, value);
                this._SourceStorageID = value;
            }
        }
        
        public string SourceStoragePlaceID {
            get {
                return this._SourceStoragePlaceID;
            }
            set {
                this.OnPropertyChanged("SourceStoragePlaceID", this._SourceStoragePlaceID, value);
                this._SourceStoragePlaceID = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public string OperPerson {
            get {
                return this._OperPerson;
            }
            set {
                this.OnPropertyChanged("OperPerson", this._OperPerson, value);
                this._OperPerson = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmRubberBackNormalLog._PpmRubberBackNormalLogEntityConfiguration == null)) {
                PpmRubberBackNormalLog._PpmRubberBackNormalLogEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmRubberBackNormalLog");
            }
            return PpmRubberBackNormalLog._PpmRubberBackNormalLogEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._StorageID,
                    this._StoragePlaceID,
                    this._Barcode,
                    this._SourceStorageID,
                    this._SourceStoragePlaceID,
                    this._RecordDate,
                    this._OperPerson};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._StorageID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._StoragePlaceID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Barcode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SourceStorageID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._SourceStoragePlaceID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RecordDate = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._OperPerson = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._StorageID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._StoragePlaceID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Barcode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._SourceStorageID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._SourceStoragePlaceID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._RecordDate = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6))) {
                this._OperPerson = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmRubberBackNormalLog).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PpmRubberBackNormalLog)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            protected NBear.Common.PropertyItem _SourceStorageID = new NBear.Common.PropertyItem("SourceStorageID", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            protected NBear.Common.PropertyItem _SourceStoragePlaceID = new NBear.Common.PropertyItem("SourceStoragePlaceID", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            protected NBear.Common.PropertyItem _OperPerson = new NBear.Common.PropertyItem("OperPerson", "Mesnac.Entity.PpmRubberBackNormalLog");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceStorageID {
                get {
                    if ((aliasName == null)) {
                        return _SourceStorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceStorageID", _SourceStorageID.EntityConfiguration, _SourceStorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceStoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _SourceStoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceStoragePlaceID", _SourceStoragePlaceID.EntityConfiguration, _SourceStoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperPerson {
                get {
                    if ((aliasName == null)) {
                        return _OperPerson;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperPerson", _OperPerson.EntityConfiguration, _OperPerson.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
