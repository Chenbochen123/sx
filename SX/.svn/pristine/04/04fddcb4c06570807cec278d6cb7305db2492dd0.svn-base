//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class SysPageActionArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.SysPageAction> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.SysPageAction\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"SysPageAction\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"O" +
        "bjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNu" +
        "ll=\"true\" />\r\n    <Property name=\"PageMenuID\" type=\"System.Nullable`1[System.Int" +
        "32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"PageMenuID\" mappingColumnType=\"System.Nullable`1[System.Int32" +
        "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "ActionID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ActionID\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"ActionName\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"ActionName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ActionUrl\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"ActionUrl\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sh" +
        "owName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"ShowName\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"IcoName\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IcoName\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"RecordTime\" type=\"System.Nullable`1[System" +
        ".DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"RecordTime\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"SeqIdx\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SeqI" +
        "dx\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(" +
        "1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigur" +
        "ation>")]
    public partial class SysPageAction : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _SysPageActionEntityConfiguration;
        
        protected int _ObjID;
        
        protected global::System.Int32? _PageMenuID;
        
        protected global::System.Int32? _ActionID;
        
        protected string _ActionName;
        
        protected string _ActionUrl;
        
        protected string _ShowName;
        
        protected string _Remark;
        
        protected string _IcoName;
        
        protected global::System.DateTime? _RecordTime;
        
        protected global::System.Int32? _SeqIdx;
        
        protected string _DeleteFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.SysPageAction left, global::Mesnac.Entity.SysPageAction right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.SysPageAction left, global::Mesnac.Entity.SysPageAction right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.Int32? PageMenuID {
            get {
                return this._PageMenuID;
            }
            set {
                this.OnPropertyChanged("PageMenuID", this._PageMenuID, value);
                this._PageMenuID = value;
            }
        }
        
        public global::System.Int32? ActionID {
            get {
                return this._ActionID;
            }
            set {
                this.OnPropertyChanged("ActionID", this._ActionID, value);
                this._ActionID = value;
            }
        }
        
        public string ActionName {
            get {
                return this._ActionName;
            }
            set {
                this.OnPropertyChanged("ActionName", this._ActionName, value);
                this._ActionName = value;
            }
        }
        
        public string ActionUrl {
            get {
                return this._ActionUrl;
            }
            set {
                this.OnPropertyChanged("ActionUrl", this._ActionUrl, value);
                this._ActionUrl = value;
            }
        }
        
        public string ShowName {
            get {
                return this._ShowName;
            }
            set {
                this.OnPropertyChanged("ShowName", this._ShowName, value);
                this._ShowName = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string IcoName {
            get {
                return this._IcoName;
            }
            set {
                this.OnPropertyChanged("IcoName", this._IcoName, value);
                this._IcoName = value;
            }
        }
        
        public global::System.DateTime? RecordTime {
            get {
                return this._RecordTime;
            }
            set {
                this.OnPropertyChanged("RecordTime", this._RecordTime, value);
                this._RecordTime = value;
            }
        }
        
        public global::System.Int32? SeqIdx {
            get {
                return this._SeqIdx;
            }
            set {
                this.OnPropertyChanged("SeqIdx", this._SeqIdx, value);
                this._SeqIdx = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((SysPageAction._SysPageActionEntityConfiguration == null)) {
                SysPageAction._SysPageActionEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.SysPageAction");
            }
            return SysPageAction._SysPageActionEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._PageMenuID,
                    this._ActionID,
                    this._ActionName,
                    this._ActionUrl,
                    this._ShowName,
                    this._Remark,
                    this._IcoName,
                    this._RecordTime,
                    this._SeqIdx,
                    this._DeleteFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PageMenuID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ActionID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ActionName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ActionUrl = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._ShowName = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Remark = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._IcoName = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._RecordTime = this.GetDateTime(reader, 8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._SeqIdx = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._DeleteFlag = reader.GetString(10);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PageMenuID = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ActionID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ActionName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ActionUrl = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._ShowName = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Remark = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._IcoName = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._RecordTime = this.GetDateTime(row, 8);
            }
            if ((false == row.IsNull(9))) {
                this._SeqIdx = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._DeleteFlag = ((string)(row[10]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.SysPageAction).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.SysPageAction)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.SysPageAction)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _PageMenuID = new NBear.Common.PropertyItem("PageMenuID", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _ActionID = new NBear.Common.PropertyItem("ActionID", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _ActionName = new NBear.Common.PropertyItem("ActionName", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _ActionUrl = new NBear.Common.PropertyItem("ActionUrl", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _ShowName = new NBear.Common.PropertyItem("ShowName", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _IcoName = new NBear.Common.PropertyItem("IcoName", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _RecordTime = new NBear.Common.PropertyItem("RecordTime", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _SeqIdx = new NBear.Common.PropertyItem("SeqIdx", "Mesnac.Entity.SysPageAction");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.SysPageAction");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PageMenuID {
                get {
                    if ((aliasName == null)) {
                        return _PageMenuID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PageMenuID", _PageMenuID.EntityConfiguration, _PageMenuID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ActionID {
                get {
                    if ((aliasName == null)) {
                        return _ActionID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ActionID", _ActionID.EntityConfiguration, _ActionID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ActionName {
                get {
                    if ((aliasName == null)) {
                        return _ActionName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ActionName", _ActionName.EntityConfiguration, _ActionName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ActionUrl {
                get {
                    if ((aliasName == null)) {
                        return _ActionUrl;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ActionUrl", _ActionUrl.EntityConfiguration, _ActionUrl.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShowName {
                get {
                    if ((aliasName == null)) {
                        return _ShowName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShowName", _ShowName.EntityConfiguration, _ShowName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IcoName {
                get {
                    if ((aliasName == null)) {
                        return _IcoName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IcoName", _IcoName.EntityConfiguration, _IcoName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordTime {
                get {
                    if ((aliasName == null)) {
                        return _RecordTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordTime", _RecordTime.EntityConfiguration, _RecordTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SeqIdx {
                get {
                    if ((aliasName == null)) {
                        return _SeqIdx;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SeqIdx", _SeqIdx.EntityConfiguration, _SeqIdx.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
