//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_ShiftimeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_Shiftime> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_Shiftime\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_Shiftime\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"Fac_id\" type=\"System.Int16\" isInherited=\"fal" +
        "se\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Fac_id\" mappingColumnType=\"System.Int16\" sqlType=\"smallint\" " +
        "isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Shift_dt\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Shift_dt\" mappingColumnType=\"System.String\" sqlType=\"c" +
        "har(10)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Dept_code\"" +
        " type=\"System.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Dept_code\" mappingColumnType=\"System.Int16\" s" +
        "qlType=\"smallint\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"S" +
        "hift_id\" type=\"System.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Shift_id\" mappingColumnType=\"System.I" +
        "nt16\" sqlType=\"smallint\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property " +
        "name=\"Shift_class\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shift_cl" +
        "ass\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_start\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Shift_start\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shif" +
        "t_end\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"Shift_end\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Propert" +
        "ies>\r\n</EntityConfiguration>")]
    public partial class Ppt_Shiftime : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_ShiftimeEntityConfiguration;
        
        protected short _Fac_id;
        
        protected string _Shift_dt;
        
        protected short _Dept_code;
        
        protected short _Shift_id;
        
        protected global::System.Int16? _Shift_class;
        
        protected string _Shift_start;
        
        protected string _Shift_end;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_Shiftime left, global::Mesnac.Entity.Ppt_Shiftime right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_Shiftime left, global::Mesnac.Entity.Ppt_Shiftime right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public short Fac_id {
            get {
                return this._Fac_id;
            }
            set {
                this.OnPropertyChanged("Fac_id", this._Fac_id, value);
                this._Fac_id = value;
            }
        }
        
        public string Shift_dt {
            get {
                return this._Shift_dt;
            }
            set {
                this.OnPropertyChanged("Shift_dt", this._Shift_dt, value);
                this._Shift_dt = value;
            }
        }
        
        public short Dept_code {
            get {
                return this._Dept_code;
            }
            set {
                this.OnPropertyChanged("Dept_code", this._Dept_code, value);
                this._Dept_code = value;
            }
        }
        
        public short Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public global::System.Int16? Shift_class {
            get {
                return this._Shift_class;
            }
            set {
                this.OnPropertyChanged("Shift_class", this._Shift_class, value);
                this._Shift_class = value;
            }
        }
        
        public string Shift_start {
            get {
                return this._Shift_start;
            }
            set {
                this.OnPropertyChanged("Shift_start", this._Shift_start, value);
                this._Shift_start = value;
            }
        }
        
        public string Shift_end {
            get {
                return this._Shift_end;
            }
            set {
                this.OnPropertyChanged("Shift_end", this._Shift_end, value);
                this._Shift_end = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_Shiftime._Ppt_ShiftimeEntityConfiguration == null)) {
                Ppt_Shiftime._Ppt_ShiftimeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_Shiftime");
            }
            return Ppt_Shiftime._Ppt_ShiftimeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Fac_id,
                    this._Shift_dt,
                    this._Dept_code,
                    this._Shift_id,
                    this._Shift_class,
                    this._Shift_start,
                    this._Shift_end};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Fac_id = reader.GetInt16(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Shift_dt = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Dept_code = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Shift_id = reader.GetInt16(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Shift_class = reader.GetInt16(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Shift_start = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Shift_end = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Fac_id = ((short)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Shift_dt = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Dept_code = ((short)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Shift_id = ((short)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Shift_class = ((System.Nullable<short>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Shift_start = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Shift_end = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_Shiftime).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((((this.isAttached && ((global::Mesnac.Entity.Ppt_Shiftime)(obj)).isAttached) 
                        && (this.Fac_id == ((global::Mesnac.Entity.Ppt_Shiftime)(obj)).Fac_id)) 
                        && (this.Shift_dt == ((global::Mesnac.Entity.Ppt_Shiftime)(obj)).Shift_dt)) 
                        && (this.Dept_code == ((global::Mesnac.Entity.Ppt_Shiftime)(obj)).Dept_code)) 
                        && (this.Shift_id == ((global::Mesnac.Entity.Ppt_Shiftime)(obj)).Shift_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Fac_id = new NBear.Common.PropertyItem("Fac_id", "Mesnac.Entity.Ppt_Shiftime");
            
            protected NBear.Common.PropertyItem _Shift_dt = new NBear.Common.PropertyItem("Shift_dt", "Mesnac.Entity.Ppt_Shiftime");
            
            protected NBear.Common.PropertyItem _Dept_code = new NBear.Common.PropertyItem("Dept_code", "Mesnac.Entity.Ppt_Shiftime");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_Shiftime");
            
            protected NBear.Common.PropertyItem _Shift_class = new NBear.Common.PropertyItem("Shift_class", "Mesnac.Entity.Ppt_Shiftime");
            
            protected NBear.Common.PropertyItem _Shift_start = new NBear.Common.PropertyItem("Shift_start", "Mesnac.Entity.Ppt_Shiftime");
            
            protected NBear.Common.PropertyItem _Shift_end = new NBear.Common.PropertyItem("Shift_end", "Mesnac.Entity.Ppt_Shiftime");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Fac_id {
                get {
                    if ((aliasName == null)) {
                        return _Fac_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_id", _Fac_id.EntityConfiguration, _Fac_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_dt {
                get {
                    if ((aliasName == null)) {
                        return _Shift_dt;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_dt", _Shift_dt.EntityConfiguration, _Shift_dt.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dept_code {
                get {
                    if ((aliasName == null)) {
                        return _Dept_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dept_code", _Dept_code.EntityConfiguration, _Dept_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_class", _Shift_class.EntityConfiguration, _Shift_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_start {
                get {
                    if ((aliasName == null)) {
                        return _Shift_start;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_start", _Shift_start.EntityConfiguration, _Shift_start.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_end {
                get {
                    if ((aliasName == null)) {
                        return _Shift_end;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_end", _Shift_end.EntityConfiguration, _Shift_end.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
