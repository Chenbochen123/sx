//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_MaintainPlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_MaintainPlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_MaintainPlan\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_MaintainPlan\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"Mp_planid\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Mp_planid\" mappingColumnType=\"System.String\" sqlType=\"char(11)\" isPrim" +
        "aryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mp_code\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Mp_code\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_code\" type=" +
        "\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_code\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Equip_class\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_class\" " +
        "mappingColumnType=\"System.String\" sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"Mp_plandate\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Mp_plandate\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_planday\" type=\"System.Nul" +
        "lable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"Mp_planday\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Mp_realend\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_real" +
        "end\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"Mp_realday\" type=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Mp_realday\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Plan_state\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Plan_state\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"Handle_name\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Han" +
        "dle_name\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_result\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Mp_result\" mappingColumnType=\"System.String\" sqlType=\"varchar(255)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_import\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Mp_import\" mappingColumnType=\"System.String\" sqlType" +
        "=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_typ" +
        "e\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Mp_type\" mappingColumnType=\"System.String\"" +
        " sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Mp_StandId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_StandId\" m" +
        "appingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Ifnot_BJ\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Ifnot_BJ\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_resulted\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Mp_resulted\" mappingColumnType=\"System.String\" sqlType" +
        "=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_inf" +
        "o\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Mp_info\" mappingColumnType=\"System.String\"" +
        " sqlType=\"nvarchar(300)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Mp_memo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_memo\" mappingColumnType=\"" +
        "System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"Repairuser\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Repairuser\"" +
        " mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_MaintainPlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_MaintainPlanEntityConfiguration;
        
        protected string _Mp_planid;
        
        protected string _Mp_code;
        
        protected string _Equip_code;
        
        protected string _Equip_class;
        
        protected string _Mp_plandate;
        
        protected global::System.Decimal? _Mp_planday;
        
        protected string _Mp_realend;
        
        protected global::System.Decimal? _Mp_realday;
        
        protected string _Plan_state;
        
        protected string _Handle_name;
        
        protected string _Mp_result;
        
        protected string _Mp_import;
        
        protected string _Mp_type;
        
        protected global::System.Int32? _Mp_StandId;
        
        protected string _Ifnot_BJ;
        
        protected string _Mp_resulted;
        
        protected string _Mp_info;
        
        protected string _Mp_memo;
        
        protected string _Repairuser;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_MaintainPlan left, global::Mesnac.Entity.Eqm_MaintainPlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_MaintainPlan left, global::Mesnac.Entity.Eqm_MaintainPlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mp_planid {
            get {
                return this._Mp_planid;
            }
            set {
                this.OnPropertyChanged("Mp_planid", this._Mp_planid, value);
                this._Mp_planid = value;
            }
        }
        
        public string Mp_code {
            get {
                return this._Mp_code;
            }
            set {
                this.OnPropertyChanged("Mp_code", this._Mp_code, value);
                this._Mp_code = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public string Equip_class {
            get {
                return this._Equip_class;
            }
            set {
                this.OnPropertyChanged("Equip_class", this._Equip_class, value);
                this._Equip_class = value;
            }
        }
        
        public string Mp_plandate {
            get {
                return this._Mp_plandate;
            }
            set {
                this.OnPropertyChanged("Mp_plandate", this._Mp_plandate, value);
                this._Mp_plandate = value;
            }
        }
        
        public global::System.Decimal? Mp_planday {
            get {
                return this._Mp_planday;
            }
            set {
                this.OnPropertyChanged("Mp_planday", this._Mp_planday, value);
                this._Mp_planday = value;
            }
        }
        
        public string Mp_realend {
            get {
                return this._Mp_realend;
            }
            set {
                this.OnPropertyChanged("Mp_realend", this._Mp_realend, value);
                this._Mp_realend = value;
            }
        }
        
        public global::System.Decimal? Mp_realday {
            get {
                return this._Mp_realday;
            }
            set {
                this.OnPropertyChanged("Mp_realday", this._Mp_realday, value);
                this._Mp_realday = value;
            }
        }
        
        public string Plan_state {
            get {
                return this._Plan_state;
            }
            set {
                this.OnPropertyChanged("Plan_state", this._Plan_state, value);
                this._Plan_state = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string Mp_result {
            get {
                return this._Mp_result;
            }
            set {
                this.OnPropertyChanged("Mp_result", this._Mp_result, value);
                this._Mp_result = value;
            }
        }
        
        public string Mp_import {
            get {
                return this._Mp_import;
            }
            set {
                this.OnPropertyChanged("Mp_import", this._Mp_import, value);
                this._Mp_import = value;
            }
        }
        
        public string Mp_type {
            get {
                return this._Mp_type;
            }
            set {
                this.OnPropertyChanged("Mp_type", this._Mp_type, value);
                this._Mp_type = value;
            }
        }
        
        public global::System.Int32? Mp_StandId {
            get {
                return this._Mp_StandId;
            }
            set {
                this.OnPropertyChanged("Mp_StandId", this._Mp_StandId, value);
                this._Mp_StandId = value;
            }
        }
        
        public string Ifnot_BJ {
            get {
                return this._Ifnot_BJ;
            }
            set {
                this.OnPropertyChanged("Ifnot_BJ", this._Ifnot_BJ, value);
                this._Ifnot_BJ = value;
            }
        }
        
        public string Mp_resulted {
            get {
                return this._Mp_resulted;
            }
            set {
                this.OnPropertyChanged("Mp_resulted", this._Mp_resulted, value);
                this._Mp_resulted = value;
            }
        }
        
        public string Mp_info {
            get {
                return this._Mp_info;
            }
            set {
                this.OnPropertyChanged("Mp_info", this._Mp_info, value);
                this._Mp_info = value;
            }
        }
        
        public string Mp_memo {
            get {
                return this._Mp_memo;
            }
            set {
                this.OnPropertyChanged("Mp_memo", this._Mp_memo, value);
                this._Mp_memo = value;
            }
        }
        
        public string Repairuser {
            get {
                return this._Repairuser;
            }
            set {
                this.OnPropertyChanged("Repairuser", this._Repairuser, value);
                this._Repairuser = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_MaintainPlan._Eqm_MaintainPlanEntityConfiguration == null)) {
                Eqm_MaintainPlan._Eqm_MaintainPlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_MaintainPlan");
            }
            return Eqm_MaintainPlan._Eqm_MaintainPlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mp_planid,
                    this._Mp_code,
                    this._Equip_code,
                    this._Equip_class,
                    this._Mp_plandate,
                    this._Mp_planday,
                    this._Mp_realend,
                    this._Mp_realday,
                    this._Plan_state,
                    this._Handle_name,
                    this._Mp_result,
                    this._Mp_import,
                    this._Mp_type,
                    this._Mp_StandId,
                    this._Ifnot_BJ,
                    this._Mp_resulted,
                    this._Mp_info,
                    this._Mp_memo,
                    this._Repairuser};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mp_planid = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Mp_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Equip_class = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mp_plandate = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mp_planday = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mp_realend = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Mp_realday = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Plan_state = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Handle_name = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Mp_result = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Mp_import = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Mp_type = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Mp_StandId = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Ifnot_BJ = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Mp_resulted = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Mp_info = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Mp_memo = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Repairuser = reader.GetString(18);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mp_planid = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Mp_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Equip_class = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Mp_plandate = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mp_planday = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Mp_realend = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Mp_realday = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Plan_state = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Handle_name = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Mp_result = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Mp_import = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Mp_type = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Mp_StandId = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Ifnot_BJ = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Mp_resulted = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Mp_info = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Mp_memo = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Repairuser = ((string)(row[18]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_MaintainPlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_MaintainPlan)(obj)).isAttached) 
                        && (this.Mp_planid == ((global::Mesnac.Entity.Eqm_MaintainPlan)(obj)).Mp_planid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mp_planid = new NBear.Common.PropertyItem("Mp_planid", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_code = new NBear.Common.PropertyItem("Mp_code", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Equip_class = new NBear.Common.PropertyItem("Equip_class", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_plandate = new NBear.Common.PropertyItem("Mp_plandate", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_planday = new NBear.Common.PropertyItem("Mp_planday", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_realend = new NBear.Common.PropertyItem("Mp_realend", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_realday = new NBear.Common.PropertyItem("Mp_realday", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Plan_state = new NBear.Common.PropertyItem("Plan_state", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_result = new NBear.Common.PropertyItem("Mp_result", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_import = new NBear.Common.PropertyItem("Mp_import", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_type = new NBear.Common.PropertyItem("Mp_type", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_StandId = new NBear.Common.PropertyItem("Mp_StandId", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Ifnot_BJ = new NBear.Common.PropertyItem("Ifnot_BJ", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_resulted = new NBear.Common.PropertyItem("Mp_resulted", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_info = new NBear.Common.PropertyItem("Mp_info", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Mp_memo = new NBear.Common.PropertyItem("Mp_memo", "Mesnac.Entity.Eqm_MaintainPlan");
            
            protected NBear.Common.PropertyItem _Repairuser = new NBear.Common.PropertyItem("Repairuser", "Mesnac.Entity.Eqm_MaintainPlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mp_planid {
                get {
                    if ((aliasName == null)) {
                        return _Mp_planid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_planid", _Mp_planid.EntityConfiguration, _Mp_planid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_code", _Mp_code.EntityConfiguration, _Mp_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_class {
                get {
                    if ((aliasName == null)) {
                        return _Equip_class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_class", _Equip_class.EntityConfiguration, _Equip_class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_plandate {
                get {
                    if ((aliasName == null)) {
                        return _Mp_plandate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_plandate", _Mp_plandate.EntityConfiguration, _Mp_plandate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_planday {
                get {
                    if ((aliasName == null)) {
                        return _Mp_planday;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_planday", _Mp_planday.EntityConfiguration, _Mp_planday.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_realend {
                get {
                    if ((aliasName == null)) {
                        return _Mp_realend;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_realend", _Mp_realend.EntityConfiguration, _Mp_realend.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_realday {
                get {
                    if ((aliasName == null)) {
                        return _Mp_realday;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_realday", _Mp_realday.EntityConfiguration, _Mp_realday.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_state {
                get {
                    if ((aliasName == null)) {
                        return _Plan_state;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_state", _Plan_state.EntityConfiguration, _Plan_state.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_result {
                get {
                    if ((aliasName == null)) {
                        return _Mp_result;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_result", _Mp_result.EntityConfiguration, _Mp_result.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_import {
                get {
                    if ((aliasName == null)) {
                        return _Mp_import;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_import", _Mp_import.EntityConfiguration, _Mp_import.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_type {
                get {
                    if ((aliasName == null)) {
                        return _Mp_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_type", _Mp_type.EntityConfiguration, _Mp_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_StandId {
                get {
                    if ((aliasName == null)) {
                        return _Mp_StandId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_StandId", _Mp_StandId.EntityConfiguration, _Mp_StandId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ifnot_BJ {
                get {
                    if ((aliasName == null)) {
                        return _Ifnot_BJ;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ifnot_BJ", _Ifnot_BJ.EntityConfiguration, _Ifnot_BJ.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_resulted {
                get {
                    if ((aliasName == null)) {
                        return _Mp_resulted;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_resulted", _Mp_resulted.EntityConfiguration, _Mp_resulted.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_info {
                get {
                    if ((aliasName == null)) {
                        return _Mp_info;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_info", _Mp_info.EntityConfiguration, _Mp_info.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_memo {
                get {
                    if ((aliasName == null)) {
                        return _Mp_memo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_memo", _Mp_memo.EntityConfiguration, _Mp_memo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Repairuser {
                get {
                    if ((aliasName == null)) {
                        return _Repairuser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Repairuser", _Repairuser.EntityConfiguration, _Repairuser.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
