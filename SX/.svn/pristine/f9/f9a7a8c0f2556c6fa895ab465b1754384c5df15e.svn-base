//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class JCZL_WorkShopArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.JCZL_WorkShop> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.JCZL_WorkShop\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"JCZL_WorkShop\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"WorkShop_Code\" type=\"System.Int32\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"WorkShop_Code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKe" +
        "y=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"WorkShop_Name\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"WorkShop_Name\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Fac_C" +
        "ode\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fac_Code\" mappingColum" +
        "nType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(30)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Depcode\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Depcode\" mappingColumnType=\"System.String\" sqlType=\"char(2)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Depcode2\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Depcode2\" mappingColumnType=\"System.String\" sqlType=\"char(2" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfigura" +
        "tion>")]
    public partial class JCZL_WorkShop : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _JCZL_WorkShopEntityConfiguration;
        
        protected int _WorkShop_Code;
        
        protected string _WorkShop_Name;
        
        protected global::System.Int32? _Fac_Code;
        
        protected string _Remark;
        
        protected string _Depcode;
        
        protected string _Depcode2;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.JCZL_WorkShop left, global::Mesnac.Entity.JCZL_WorkShop right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.JCZL_WorkShop left, global::Mesnac.Entity.JCZL_WorkShop right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int WorkShop_Code {
            get {
                return this._WorkShop_Code;
            }
            set {
                this.OnPropertyChanged("WorkShop_Code", this._WorkShop_Code, value);
                this._WorkShop_Code = value;
            }
        }
        
        public string WorkShop_Name {
            get {
                return this._WorkShop_Name;
            }
            set {
                this.OnPropertyChanged("WorkShop_Name", this._WorkShop_Name, value);
                this._WorkShop_Name = value;
            }
        }
        
        public global::System.Int32? Fac_Code {
            get {
                return this._Fac_Code;
            }
            set {
                this.OnPropertyChanged("Fac_Code", this._Fac_Code, value);
                this._Fac_Code = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Depcode {
            get {
                return this._Depcode;
            }
            set {
                this.OnPropertyChanged("Depcode", this._Depcode, value);
                this._Depcode = value;
            }
        }
        
        public string Depcode2 {
            get {
                return this._Depcode2;
            }
            set {
                this.OnPropertyChanged("Depcode2", this._Depcode2, value);
                this._Depcode2 = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((JCZL_WorkShop._JCZL_WorkShopEntityConfiguration == null)) {
                JCZL_WorkShop._JCZL_WorkShopEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.JCZL_WorkShop");
            }
            return JCZL_WorkShop._JCZL_WorkShopEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._WorkShop_Code,
                    this._WorkShop_Name,
                    this._Fac_Code,
                    this._Remark,
                    this._Depcode,
                    this._Depcode2};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._WorkShop_Code = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._WorkShop_Name = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Fac_Code = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Remark = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Depcode = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Depcode2 = reader.GetString(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._WorkShop_Code = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._WorkShop_Name = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Fac_Code = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Remark = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Depcode = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Depcode2 = ((string)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.JCZL_WorkShop).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.JCZL_WorkShop)(obj)).isAttached) 
                        && (this.WorkShop_Code == ((global::Mesnac.Entity.JCZL_WorkShop)(obj)).WorkShop_Code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _WorkShop_Code = new NBear.Common.PropertyItem("WorkShop_Code", "Mesnac.Entity.JCZL_WorkShop");
            
            protected NBear.Common.PropertyItem _WorkShop_Name = new NBear.Common.PropertyItem("WorkShop_Name", "Mesnac.Entity.JCZL_WorkShop");
            
            protected NBear.Common.PropertyItem _Fac_Code = new NBear.Common.PropertyItem("Fac_Code", "Mesnac.Entity.JCZL_WorkShop");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.JCZL_WorkShop");
            
            protected NBear.Common.PropertyItem _Depcode = new NBear.Common.PropertyItem("Depcode", "Mesnac.Entity.JCZL_WorkShop");
            
            protected NBear.Common.PropertyItem _Depcode2 = new NBear.Common.PropertyItem("Depcode2", "Mesnac.Entity.JCZL_WorkShop");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem WorkShop_Code {
                get {
                    if ((aliasName == null)) {
                        return _WorkShop_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShop_Code", _WorkShop_Code.EntityConfiguration, _WorkShop_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShop_Name {
                get {
                    if ((aliasName == null)) {
                        return _WorkShop_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShop_Name", _WorkShop_Name.EntityConfiguration, _WorkShop_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_Code {
                get {
                    if ((aliasName == null)) {
                        return _Fac_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_Code", _Fac_Code.EntityConfiguration, _Fac_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Depcode {
                get {
                    if ((aliasName == null)) {
                        return _Depcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Depcode", _Depcode.EntityConfiguration, _Depcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Depcode2 {
                get {
                    if ((aliasName == null)) {
                        return _Depcode2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Depcode2", _Depcode2.EntityConfiguration, _Depcode2.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
