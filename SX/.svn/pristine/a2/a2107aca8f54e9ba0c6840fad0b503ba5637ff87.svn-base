//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_GeLiJiArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_GeLiJi> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_GeLiJi\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"Ppt_GeLiJi\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"Plan_Date\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pl" +
        "an_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"Workshop\" type=\"System.Int16\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Workshop\" mappingColumnType=\"System.Int16\" sqlType=\"smallint\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_Code\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Equip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5" +
        ")\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Shift_id\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Shift_id\" mappingColumnType=\"System.String\" sqlType" +
        "=\"char(2)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Shift_Cl" +
        "ass\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Shift_Class\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Mater_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater_Code\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Used_weight\" type=\"System.Nullable`1[System.Decimal]\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Used_weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sq" +
        "lType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"F" +
        "actory\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"Factory\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"Price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Price\"" +
        " mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Ppt_GeLiJi : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_GeLiJiEntityConfiguration;
        
        protected string _Plan_Date;
        
        protected short _Workshop;
        
        protected string _Equip_Code;
        
        protected string _Shift_id;
        
        protected string _Shift_Class;
        
        protected string _Mater_Code;
        
        protected global::System.Decimal? _Used_weight;
        
        protected string _Factory;
        
        protected global::System.Decimal? _Price;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_GeLiJi left, global::Mesnac.Entity.Ppt_GeLiJi right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_GeLiJi left, global::Mesnac.Entity.Ppt_GeLiJi right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Plan_Date {
            get {
                return this._Plan_Date;
            }
            set {
                this.OnPropertyChanged("Plan_Date", this._Plan_Date, value);
                this._Plan_Date = value;
            }
        }
        
        public short Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public string Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public string Shift_Class {
            get {
                return this._Shift_Class;
            }
            set {
                this.OnPropertyChanged("Shift_Class", this._Shift_Class, value);
                this._Shift_Class = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public global::System.Decimal? Used_weight {
            get {
                return this._Used_weight;
            }
            set {
                this.OnPropertyChanged("Used_weight", this._Used_weight, value);
                this._Used_weight = value;
            }
        }
        
        public string Factory {
            get {
                return this._Factory;
            }
            set {
                this.OnPropertyChanged("Factory", this._Factory, value);
                this._Factory = value;
            }
        }
        
        public global::System.Decimal? Price {
            get {
                return this._Price;
            }
            set {
                this.OnPropertyChanged("Price", this._Price, value);
                this._Price = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_GeLiJi._Ppt_GeLiJiEntityConfiguration == null)) {
                Ppt_GeLiJi._Ppt_GeLiJiEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_GeLiJi");
            }
            return Ppt_GeLiJi._Ppt_GeLiJiEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Plan_Date,
                    this._Workshop,
                    this._Equip_Code,
                    this._Shift_id,
                    this._Shift_Class,
                    this._Mater_Code,
                    this._Used_weight,
                    this._Factory,
                    this._Price};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Plan_Date = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Workshop = reader.GetInt16(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Shift_id = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Shift_Class = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Mater_Code = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Used_weight = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Factory = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Price = reader.GetDecimal(8);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Plan_Date = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Workshop = ((short)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Shift_id = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Shift_Class = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Mater_Code = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Used_weight = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Factory = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Price = ((System.Nullable<decimal>)(row[8]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_GeLiJi).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.Ppt_GeLiJi)(obj)).isAttached) 
                        && (this.Plan_Date == ((global::Mesnac.Entity.Ppt_GeLiJi)(obj)).Plan_Date)) 
                        && (this.Equip_Code == ((global::Mesnac.Entity.Ppt_GeLiJi)(obj)).Equip_Code)) 
                        && (this.Shift_id == ((global::Mesnac.Entity.Ppt_GeLiJi)(obj)).Shift_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Plan_Date = new NBear.Common.PropertyItem("Plan_Date", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Shift_Class = new NBear.Common.PropertyItem("Shift_Class", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Used_weight = new NBear.Common.PropertyItem("Used_weight", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Factory = new NBear.Common.PropertyItem("Factory", "Mesnac.Entity.Ppt_GeLiJi");
            
            protected NBear.Common.PropertyItem _Price = new NBear.Common.PropertyItem("Price", "Mesnac.Entity.Ppt_GeLiJi");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Plan_Date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Date", _Plan_Date.EntityConfiguration, _Plan_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Class", _Shift_Class.EntityConfiguration, _Shift_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_weight {
                get {
                    if ((aliasName == null)) {
                        return _Used_weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_weight", _Used_weight.EntityConfiguration, _Used_weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Factory {
                get {
                    if ((aliasName == null)) {
                        return _Factory;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Factory", _Factory.EntityConfiguration, _Factory.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Price {
                get {
                    if ((aliasName == null)) {
                        return _Price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Price", _Price.EntityConfiguration, _Price.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
