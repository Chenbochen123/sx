//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmRubberStoreinDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmRubberStoreinDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmRubberStoreinDetail\" isReadOnly=\"false\" isAutoPreLoad=\"fa" +
        "lse\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmRubberStoreinDetai" +
        "l\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(3" +
        "6)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Barcode\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(18)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Orde" +
        "rID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"OrderID\" mappingColumnType=\"System.Int32\"" +
        " sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Prod" +
        "uctNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"ProductNo\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"nvarchar(18)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"StoragePlaceID\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoragePlaceID\" " +
        "mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"MaterCode\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"MaterCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ProcDate\" type=\"System." +
        "Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"ProcDate\" mappingColumnType=\"System.N" +
        "ullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"InputNum\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"InputNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PieceWei" +
        "ght\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PieceWeight\" mapping" +
        "ColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"InputWeight\" type=\"System.Nullab" +
        "le`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"InputWeight\" mappingColumnType=\"System.Nulla" +
        "ble`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"RecordDate\" type=\"System.Nullable`1[System.DateTime]\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"RecordDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" s" +
        "qlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"SourceBillNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"SourceBillNo\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"SourceOrderID\" type=\"System.Nullable`1[System.Int32]\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"SourceOrderID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" s" +
        "qlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Noti" +
        "ceNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"NoticeNo\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=" +
        "\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PpmRubberStoreinDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmRubberStoreinDetailEntityConfiguration;
        
        protected string _BillNo;
        
        protected string _Barcode;
        
        protected int _OrderID;
        
        protected string _ProductNo;
        
        protected string _StoragePlaceID;
        
        protected string _MaterCode;
        
        protected global::System.DateTime? _ProcDate;
        
        protected global::System.Int32? _InputNum;
        
        protected global::System.Decimal? _PieceWeight;
        
        protected global::System.Decimal? _InputWeight;
        
        protected global::System.DateTime? _RecordDate;
        
        protected string _SourceBillNo;
        
        protected global::System.Int32? _SourceOrderID;
        
        protected string _NoticeNo;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmRubberStoreinDetail left, global::Mesnac.Entity.PpmRubberStoreinDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmRubberStoreinDetail left, global::Mesnac.Entity.PpmRubberStoreinDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string BillNo {
            get {
                return this._BillNo;
            }
            set {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public string ProductNo {
            get {
                return this._ProductNo;
            }
            set {
                this.OnPropertyChanged("ProductNo", this._ProductNo, value);
                this._ProductNo = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.DateTime? ProcDate {
            get {
                return this._ProcDate;
            }
            set {
                this.OnPropertyChanged("ProcDate", this._ProcDate, value);
                this._ProcDate = value;
            }
        }
        
        public global::System.Int32? InputNum {
            get {
                return this._InputNum;
            }
            set {
                this.OnPropertyChanged("InputNum", this._InputNum, value);
                this._InputNum = value;
            }
        }
        
        public global::System.Decimal? PieceWeight {
            get {
                return this._PieceWeight;
            }
            set {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }
        
        public global::System.Decimal? InputWeight {
            get {
                return this._InputWeight;
            }
            set {
                this.OnPropertyChanged("InputWeight", this._InputWeight, value);
                this._InputWeight = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public string SourceBillNo {
            get {
                return this._SourceBillNo;
            }
            set {
                this.OnPropertyChanged("SourceBillNo", this._SourceBillNo, value);
                this._SourceBillNo = value;
            }
        }
        
        public global::System.Int32? SourceOrderID {
            get {
                return this._SourceOrderID;
            }
            set {
                this.OnPropertyChanged("SourceOrderID", this._SourceOrderID, value);
                this._SourceOrderID = value;
            }
        }
        
        public string NoticeNo {
            get {
                return this._NoticeNo;
            }
            set {
                this.OnPropertyChanged("NoticeNo", this._NoticeNo, value);
                this._NoticeNo = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmRubberStoreinDetail._PpmRubberStoreinDetailEntityConfiguration == null)) {
                PpmRubberStoreinDetail._PpmRubberStoreinDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmRubberStoreinDetail");
            }
            return PpmRubberStoreinDetail._PpmRubberStoreinDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._BillNo,
                    this._Barcode,
                    this._OrderID,
                    this._ProductNo,
                    this._StoragePlaceID,
                    this._MaterCode,
                    this._ProcDate,
                    this._InputNum,
                    this._PieceWeight,
                    this._InputWeight,
                    this._RecordDate,
                    this._SourceBillNo,
                    this._SourceOrderID,
                    this._NoticeNo,
                    this._DeleteFlag,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Barcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._OrderID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ProductNo = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._StoragePlaceID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ProcDate = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._InputNum = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._PieceWeight = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._InputWeight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._RecordDate = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._SourceBillNo = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._SourceOrderID = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._NoticeNo = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._DeleteFlag = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Remark = reader.GetString(15);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Barcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._OrderID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ProductNo = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._StoragePlaceID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ProcDate = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7))) {
                this._InputNum = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._PieceWeight = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._InputWeight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._RecordDate = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._SourceBillNo = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._SourceOrderID = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._NoticeNo = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._DeleteFlag = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Remark = ((string)(row[15]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmRubberStoreinDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PpmRubberStoreinDetail)(obj)).isAttached) 
                        && (this.BillNo == ((global::Mesnac.Entity.PpmRubberStoreinDetail)(obj)).BillNo)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PpmRubberStoreinDetail)(obj)).Barcode)) 
                        && (this.OrderID == ((global::Mesnac.Entity.PpmRubberStoreinDetail)(obj)).OrderID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _ProductNo = new NBear.Common.PropertyItem("ProductNo", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _ProcDate = new NBear.Common.PropertyItem("ProcDate", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _InputNum = new NBear.Common.PropertyItem("InputNum", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _InputWeight = new NBear.Common.PropertyItem("InputWeight", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _SourceBillNo = new NBear.Common.PropertyItem("SourceBillNo", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _SourceOrderID = new NBear.Common.PropertyItem("SourceOrderID", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _NoticeNo = new NBear.Common.PropertyItem("NoticeNo", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PpmRubberStoreinDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem BillNo {
                get {
                    if ((aliasName == null)) {
                        return _BillNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProductNo {
                get {
                    if ((aliasName == null)) {
                        return _ProductNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProductNo", _ProductNo.EntityConfiguration, _ProductNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProcDate {
                get {
                    if ((aliasName == null)) {
                        return _ProcDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProcDate", _ProcDate.EntityConfiguration, _ProcDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputNum {
                get {
                    if ((aliasName == null)) {
                        return _InputNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputNum", _InputNum.EntityConfiguration, _InputNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PieceWeight {
                get {
                    if ((aliasName == null)) {
                        return _PieceWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InputWeight {
                get {
                    if ((aliasName == null)) {
                        return _InputWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InputWeight", _InputWeight.EntityConfiguration, _InputWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceBillNo {
                get {
                    if ((aliasName == null)) {
                        return _SourceBillNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceBillNo", _SourceBillNo.EntityConfiguration, _SourceBillNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SourceOrderID {
                get {
                    if ((aliasName == null)) {
                        return _SourceOrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SourceOrderID", _SourceOrderID.EntityConfiguration, _SourceOrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NoticeNo {
                get {
                    if ((aliasName == null)) {
                        return _NoticeNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NoticeNo", _NoticeNo.EntityConfiguration, _NoticeNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
