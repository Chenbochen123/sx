//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasMaterialStaticGroupArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasMaterialStaticGroup> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.BasMaterialStaticGroup\" isReadOnly=\"false\" isAutoPreLoad=\"fa" +
        "lse\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"BasMaterialStaticGrou" +
        "p\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int3" +
        "2\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryK" +
        "ey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"MajorTypeID\" type=\"System.Int" +
        "32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"MajorTypeID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinorTypeID\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"MinorTypeID\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mat" +
        "erialCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"MaterialCode\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"MaterialName\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterialName\" m" +
        "appingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"MaterialGroup\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"MaterialGroup\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"" +
        "System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </" +
        "Properties>\r\n</EntityConfiguration>")]
    public partial class BasMaterialStaticGroup : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasMaterialStaticGroupEntityConfiguration;
        
        protected int _ObjID;
        
        protected int _MajorTypeID;
        
        protected string _MinorTypeID;
        
        protected string _MaterialCode;
        
        protected string _MaterialName;
        
        protected string _MaterialGroup;
        
        protected string _DeleteFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasMaterialStaticGroup left, global::Mesnac.Entity.BasMaterialStaticGroup right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasMaterialStaticGroup left, global::Mesnac.Entity.BasMaterialStaticGroup right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public int MajorTypeID {
            get {
                return this._MajorTypeID;
            }
            set {
                this.OnPropertyChanged("MajorTypeID", this._MajorTypeID, value);
                this._MajorTypeID = value;
            }
        }
        
        public string MinorTypeID {
            get {
                return this._MinorTypeID;
            }
            set {
                this.OnPropertyChanged("MinorTypeID", this._MinorTypeID, value);
                this._MinorTypeID = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }
        
        public string MaterialGroup {
            get {
                return this._MaterialGroup;
            }
            set {
                this.OnPropertyChanged("MaterialGroup", this._MaterialGroup, value);
                this._MaterialGroup = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasMaterialStaticGroup._BasMaterialStaticGroupEntityConfiguration == null)) {
                BasMaterialStaticGroup._BasMaterialStaticGroupEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasMaterialStaticGroup");
            }
            return BasMaterialStaticGroup._BasMaterialStaticGroupEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._MajorTypeID,
                    this._MinorTypeID,
                    this._MaterialCode,
                    this._MaterialName,
                    this._MaterialGroup,
                    this._DeleteFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._MajorTypeID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._MinorTypeID = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MaterialCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._MaterialName = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterialGroup = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._DeleteFlag = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._MajorTypeID = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._MinorTypeID = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MaterialCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._MaterialName = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterialGroup = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._DeleteFlag = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasMaterialStaticGroup).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasMaterialStaticGroup)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.BasMaterialStaticGroup)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasMaterialStaticGroup");
            
            protected NBear.Common.PropertyItem _MajorTypeID = new NBear.Common.PropertyItem("MajorTypeID", "Mesnac.Entity.BasMaterialStaticGroup");
            
            protected NBear.Common.PropertyItem _MinorTypeID = new NBear.Common.PropertyItem("MinorTypeID", "Mesnac.Entity.BasMaterialStaticGroup");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.BasMaterialStaticGroup");
            
            protected NBear.Common.PropertyItem _MaterialName = new NBear.Common.PropertyItem("MaterialName", "Mesnac.Entity.BasMaterialStaticGroup");
            
            protected NBear.Common.PropertyItem _MaterialGroup = new NBear.Common.PropertyItem("MaterialGroup", "Mesnac.Entity.BasMaterialStaticGroup");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasMaterialStaticGroup");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MajorTypeID {
                get {
                    if ((aliasName == null)) {
                        return _MajorTypeID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MajorTypeID", _MajorTypeID.EntityConfiguration, _MajorTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinorTypeID {
                get {
                    if ((aliasName == null)) {
                        return _MinorTypeID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinorTypeID", _MinorTypeID.EntityConfiguration, _MinorTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialGroup {
                get {
                    if ((aliasName == null)) {
                        return _MaterialGroup;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialGroup", _MaterialGroup.EntityConfiguration, _MaterialGroup.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
