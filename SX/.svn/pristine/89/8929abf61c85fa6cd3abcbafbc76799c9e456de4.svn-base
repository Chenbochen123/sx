//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class BasUserArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.BasUser> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.BasUser\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatchUpda" +
        "te=\"false\" isRelation=\"false\" mappingName=\"BasUser\" batchSize=\"10\">\r\n  <Properti" +
        "es>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" mappingC" +
        "olumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"UserName\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UserName\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"UserPWD\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Us" +
        "erPWD\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"RealName\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"RealName\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Sex\" type=\"System.In" +
        "t32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Sex\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Telephone\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Telephone\" mappingColumnType=\"System.String\" sqlType=\"nvarchar" +
        "(11)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WorkBarcode" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"WorkBarcode\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"DeptCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeptCode\" mappingColumnType" +
        "=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"WorkID\" type=\"System.Nullable`1[System.Int32]\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"WorkID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System.String\" sqlType=\"char(" +
        "2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WorkShopID\" t" +
        "ype=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"WorkShopID\" mappingColumnType=\"System.Int32\" sql" +
        "Type=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"HRCode" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"HRCode\" mappingColumnType=\"System.String\" sq" +
        "lType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"ERPCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"ERPCode\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" map" +
        "pingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"IsEmployee\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"IsEmployee\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class BasUser : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _BasUserEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _UserName;
        
        protected string _UserPWD;
        
        protected string _RealName;
        
        protected int _Sex;
        
        protected string _Telephone;
        
        protected string _WorkBarcode;
        
        protected string _DeptCode;
        
        protected global::System.Int32? _WorkID;
        
        protected string _ShiftID;
        
        protected int _WorkShopID;
        
        protected string _HRCode;
        
        protected string _ERPCode;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _IsEmployee;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.BasUser left, global::Mesnac.Entity.BasUser right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.BasUser left, global::Mesnac.Entity.BasUser right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string UserName {
            get {
                return this._UserName;
            }
            set {
                this.OnPropertyChanged("UserName", this._UserName, value);
                this._UserName = value;
            }
        }
        
        public string UserPWD {
            get {
                return this._UserPWD;
            }
            set {
                this.OnPropertyChanged("UserPWD", this._UserPWD, value);
                this._UserPWD = value;
            }
        }
        
        public string RealName {
            get {
                return this._RealName;
            }
            set {
                this.OnPropertyChanged("RealName", this._RealName, value);
                this._RealName = value;
            }
        }
        
        public int Sex {
            get {
                return this._Sex;
            }
            set {
                this.OnPropertyChanged("Sex", this._Sex, value);
                this._Sex = value;
            }
        }
        
        public string Telephone {
            get {
                return this._Telephone;
            }
            set {
                this.OnPropertyChanged("Telephone", this._Telephone, value);
                this._Telephone = value;
            }
        }
        
        public string WorkBarcode {
            get {
                return this._WorkBarcode;
            }
            set {
                this.OnPropertyChanged("WorkBarcode", this._WorkBarcode, value);
                this._WorkBarcode = value;
            }
        }
        
        public string DeptCode {
            get {
                return this._DeptCode;
            }
            set {
                this.OnPropertyChanged("DeptCode", this._DeptCode, value);
                this._DeptCode = value;
            }
        }
        
        public global::System.Int32? WorkID {
            get {
                return this._WorkID;
            }
            set {
                this.OnPropertyChanged("WorkID", this._WorkID, value);
                this._WorkID = value;
            }
        }
        
        public string ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public int WorkShopID {
            get {
                return this._WorkShopID;
            }
            set {
                this.OnPropertyChanged("WorkShopID", this._WorkShopID, value);
                this._WorkShopID = value;
            }
        }
        
        public string HRCode {
            get {
                return this._HRCode;
            }
            set {
                this.OnPropertyChanged("HRCode", this._HRCode, value);
                this._HRCode = value;
            }
        }
        
        public string ERPCode {
            get {
                return this._ERPCode;
            }
            set {
                this.OnPropertyChanged("ERPCode", this._ERPCode, value);
                this._ERPCode = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string IsEmployee {
            get {
                return this._IsEmployee;
            }
            set {
                this.OnPropertyChanged("IsEmployee", this._IsEmployee, value);
                this._IsEmployee = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((BasUser._BasUserEntityConfiguration == null)) {
                BasUser._BasUserEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.BasUser");
            }
            return BasUser._BasUserEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._UserName,
                    this._UserPWD,
                    this._RealName,
                    this._Sex,
                    this._Telephone,
                    this._WorkBarcode,
                    this._DeptCode,
                    this._WorkID,
                    this._ShiftID,
                    this._WorkShopID,
                    this._HRCode,
                    this._ERPCode,
                    this._DeleteFlag,
                    this._Remark,
                    this._IsEmployee};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._UserName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._UserPWD = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RealName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Sex = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Telephone = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._WorkBarcode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._DeptCode = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._WorkID = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ShiftID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._WorkShopID = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._HRCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._ERPCode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._DeleteFlag = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Remark = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._IsEmployee = reader.GetString(15);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._UserName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._UserPWD = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RealName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Sex = ((int)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Telephone = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._WorkBarcode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._DeptCode = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._WorkID = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ShiftID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._WorkShopID = ((int)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._HRCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._ERPCode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._DeleteFlag = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Remark = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._IsEmployee = ((string)(row[15]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.BasUser).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.BasUser)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _UserName = new NBear.Common.PropertyItem("UserName", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _UserPWD = new NBear.Common.PropertyItem("UserPWD", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _RealName = new NBear.Common.PropertyItem("RealName", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Sex = new NBear.Common.PropertyItem("Sex", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Telephone = new NBear.Common.PropertyItem("Telephone", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _WorkBarcode = new NBear.Common.PropertyItem("WorkBarcode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _DeptCode = new NBear.Common.PropertyItem("DeptCode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _WorkID = new NBear.Common.PropertyItem("WorkID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _WorkShopID = new NBear.Common.PropertyItem("WorkShopID", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _HRCode = new NBear.Common.PropertyItem("HRCode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _ERPCode = new NBear.Common.PropertyItem("ERPCode", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.BasUser");
            
            protected NBear.Common.PropertyItem _IsEmployee = new NBear.Common.PropertyItem("IsEmployee", "Mesnac.Entity.BasUser");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserName {
                get {
                    if ((aliasName == null)) {
                        return _UserName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserName", _UserName.EntityConfiguration, _UserName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserPWD {
                get {
                    if ((aliasName == null)) {
                        return _UserPWD;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserPWD", _UserPWD.EntityConfiguration, _UserPWD.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealName {
                get {
                    if ((aliasName == null)) {
                        return _RealName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealName", _RealName.EntityConfiguration, _RealName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Sex {
                get {
                    if ((aliasName == null)) {
                        return _Sex;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Sex", _Sex.EntityConfiguration, _Sex.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Telephone {
                get {
                    if ((aliasName == null)) {
                        return _Telephone;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Telephone", _Telephone.EntityConfiguration, _Telephone.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkBarcode {
                get {
                    if ((aliasName == null)) {
                        return _WorkBarcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkBarcode", _WorkBarcode.EntityConfiguration, _WorkBarcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeptCode {
                get {
                    if ((aliasName == null)) {
                        return _DeptCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeptCode", _DeptCode.EntityConfiguration, _DeptCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkID {
                get {
                    if ((aliasName == null)) {
                        return _WorkID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkID", _WorkID.EntityConfiguration, _WorkID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShopID {
                get {
                    if ((aliasName == null)) {
                        return _WorkShopID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShopID", _WorkShopID.EntityConfiguration, _WorkShopID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem HRCode {
                get {
                    if ((aliasName == null)) {
                        return _HRCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("HRCode", _HRCode.EntityConfiguration, _HRCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ERPCode {
                get {
                    if ((aliasName == null)) {
                        return _ERPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ERPCode", _ERPCode.EntityConfiguration, _ERPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsEmployee {
                get {
                    if ((aliasName == null)) {
                        return _IsEmployee;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsEmployee", _IsEmployee.EntityConfiguration, _IsEmployee.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
