//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class EqmMaintainRecordArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmMaintainRecord>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.EqmMaintainRecord\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmMaintainRecord\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInher" +
        "ited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" " +
        "isNotNull=\"true\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftID\" type=\"System.Nulla" +
        "ble`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"ShiftID\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"ClassName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ClassName\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"f" +
        "alse\" />\r\n    <Property name=\"StartTime\" type=\"System.DateTime\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"St" +
        "artTime\" mappingColumnType=\"System.DateTime\" sqlType=\"datetime\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"EndTime\" type=\"System.Nullable`1[" +
        "System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"EndTime\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"StopTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"StopTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FaultTypeID\" type=\"S" +
        "ystem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"FaultTypeID\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"StopMainTypeID\" type=\"System.String\" isInherited=\"fa" +
        "lse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"S" +
        "topMainTypeID\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StopTypeID\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"StopTypeID\" mappingColumnType=\"System.String\" sqlType=\"char(3)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FaultID\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"FaultID\" mappingColumnType=\"System.String\" sqlType=\"" +
        "char(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StopReas" +
        "on\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"StopReason\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"DealDesc\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DealDesc\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"ReportTime\" type=\"System.Nullable`1[System.DateTime]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"ReportTime\" mappingColumnType=\"System.Nullable`1[System.DateTime" +
        "]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"MaintainStartTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "MaintainStartTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlTyp" +
        "e=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Main" +
        "tainEndTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaintainEnd" +
        "Time\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Maintainers\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"Maintainers\" mappingColumnType=\"System.String\" sq" +
        "lType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Status\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Status\" mappingColumnType=\"Syste" +
        "m.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"UserID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UserID\" mappingColumnType=" +
        "\"System.String\" sqlType=\"varchar(8)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"AffirmOper\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"AffirmOper\" m" +
        "appingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ReportDuration\" type=\"System.I" +
        "nt32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"ReportDuration\" mappingColumnType=\"System.Int32\" sqlType=\"in" +
        "t\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RespondDuratio" +
        "n\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"RespondDuration\" mappingColumnType=\"System." +
        "Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property na" +
        "me=\"SparePartOutNo\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SparePartOutNo\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class EqmMaintainRecord : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _EqmMaintainRecordEntityConfiguration;

        protected int _ObjID;

        protected string _EquipCode;

        protected global::System.Int32? _ShiftID;

        protected string _ClassName;

        protected global::System.DateTime _StartTime;

        protected global::System.DateTime? _EndTime;

        protected global::System.Int32? _StopTime;

        protected global::System.Int32? _FaultTypeID;

        protected string _StopMainTypeID;

        protected string _StopTypeID;

        protected string _FaultID;

        protected string _StopReason;

        protected string _DealDesc;

        protected global::System.DateTime? _ReportTime;

        protected global::System.DateTime? _MaintainStartTime;

        protected global::System.DateTime? _MaintainEndTime;

        protected string _Maintainers;

        protected string _Status;

        protected string _UserID;

        protected string _AffirmOper;

        protected string _Remark;

        protected int _ReportDuration;

        protected int _RespondDuration;

        protected string _SparePartOutNo;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.EqmMaintainRecord left, global::Mesnac.Entity.EqmMaintainRecord right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.EqmMaintainRecord left, global::Mesnac.Entity.EqmMaintainRecord right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public int ObjID
        {
            get
            {
                return this._ObjID;
            }
            set
            {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }

        public string EquipCode
        {
            get
            {
                return this._EquipCode;
            }
            set
            {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }

        public global::System.Int32? ShiftID
        {
            get
            {
                return this._ShiftID;
            }
            set
            {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }

        public string ClassName
        {
            get
            {
                return this._ClassName;
            }
            set
            {
                this.OnPropertyChanged("ClassName", this._ClassName, value);
                this._ClassName = value;
            }
        }

        public global::System.DateTime StartTime
        {
            get
            {
                return this._StartTime;
            }
            set
            {
                this.OnPropertyChanged("StartTime", this._StartTime, value);
                this._StartTime = value;
            }
        }

        public global::System.DateTime? EndTime
        {
            get
            {
                return this._EndTime;
            }
            set
            {
                this.OnPropertyChanged("EndTime", this._EndTime, value);
                this._EndTime = value;
            }
        }

        public global::System.Int32? StopTime
        {
            get
            {
                return this._StopTime;
            }
            set
            {
                this.OnPropertyChanged("StopTime", this._StopTime, value);
                this._StopTime = value;
            }
        }

        public global::System.Int32? FaultTypeID
        {
            get
            {
                return this._FaultTypeID;
            }
            set
            {
                this.OnPropertyChanged("FaultTypeID", this._FaultTypeID, value);
                this._FaultTypeID = value;
            }
        }

        public string StopMainTypeID
        {
            get
            {
                return this._StopMainTypeID;
            }
            set
            {
                this.OnPropertyChanged("StopMainTypeID", this._StopMainTypeID, value);
                this._StopMainTypeID = value;
            }
        }

        public string StopTypeID
        {
            get
            {
                return this._StopTypeID;
            }
            set
            {
                this.OnPropertyChanged("StopTypeID", this._StopTypeID, value);
                this._StopTypeID = value;
            }
        }

        public string FaultID
        {
            get
            {
                return this._FaultID;
            }
            set
            {
                this.OnPropertyChanged("FaultID", this._FaultID, value);
                this._FaultID = value;
            }
        }

        public string StopReason
        {
            get
            {
                return this._StopReason;
            }
            set
            {
                this.OnPropertyChanged("StopReason", this._StopReason, value);
                this._StopReason = value;
            }
        }

        public string DealDesc
        {
            get
            {
                return this._DealDesc;
            }
            set
            {
                this.OnPropertyChanged("DealDesc", this._DealDesc, value);
                this._DealDesc = value;
            }
        }

        public global::System.DateTime? ReportTime
        {
            get
            {
                return this._ReportTime;
            }
            set
            {
                this.OnPropertyChanged("ReportTime", this._ReportTime, value);
                this._ReportTime = value;
            }
        }

        public global::System.DateTime? MaintainStartTime
        {
            get
            {
                return this._MaintainStartTime;
            }
            set
            {
                this.OnPropertyChanged("MaintainStartTime", this._MaintainStartTime, value);
                this._MaintainStartTime = value;
            }
        }

        public global::System.DateTime? MaintainEndTime
        {
            get
            {
                return this._MaintainEndTime;
            }
            set
            {
                this.OnPropertyChanged("MaintainEndTime", this._MaintainEndTime, value);
                this._MaintainEndTime = value;
            }
        }

        public string Maintainers
        {
            get
            {
                return this._Maintainers;
            }
            set
            {
                this.OnPropertyChanged("Maintainers", this._Maintainers, value);
                this._Maintainers = value;
            }
        }

        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                this.OnPropertyChanged("Status", this._Status, value);
                this._Status = value;
            }
        }

        public string UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }

        public string AffirmOper
        {
            get
            {
                return this._AffirmOper;
            }
            set
            {
                this.OnPropertyChanged("AffirmOper", this._AffirmOper, value);
                this._AffirmOper = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public int ReportDuration
        {
            get
            {
                return this._ReportDuration;
            }
            set
            {
                this.OnPropertyChanged("ReportDuration", this._ReportDuration, value);
                this._ReportDuration = value;
            }
        }

        public int RespondDuration
        {
            get
            {
                return this._RespondDuration;
            }
            set
            {
                this.OnPropertyChanged("RespondDuration", this._RespondDuration, value);
                this._RespondDuration = value;
            }
        }

        public string SparePartOutNo
        {
            get
            {
                return this._SparePartOutNo;
            }
            set
            {
                this.OnPropertyChanged("SparePartOutNo", this._SparePartOutNo, value);
                this._SparePartOutNo = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((EqmMaintainRecord._EqmMaintainRecordEntityConfiguration == null))
            {
                EqmMaintainRecord._EqmMaintainRecordEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmMaintainRecord");
            }
            return EqmMaintainRecord._EqmMaintainRecordEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._ObjID,
                    this._EquipCode,
                    this._ShiftID,
                    this._ClassName,
                    this._StartTime,
                    this._EndTime,
                    this._StopTime,
                    this._FaultTypeID,
                    this._StopMainTypeID,
                    this._StopTypeID,
                    this._FaultID,
                    this._StopReason,
                    this._DealDesc,
                    this._ReportTime,
                    this._MaintainStartTime,
                    this._MaintainEndTime,
                    this._Maintainers,
                    this._Status,
                    this._UserID,
                    this._AffirmOper,
                    this._Remark,
                    this._ReportDuration,
                    this._RespondDuration,
                    this._SparePartOutNo};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._ShiftID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._ClassName = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._StartTime = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._EndTime = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._StopTime = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._FaultTypeID = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._StopMainTypeID = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._StopTypeID = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._FaultID = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._StopReason = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12)))
            {
                this._DealDesc = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13)))
            {
                this._ReportTime = this.GetDateTime(reader, 13);
            }
            if ((false == reader.IsDBNull(14)))
            {
                this._MaintainStartTime = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15)))
            {
                this._MaintainEndTime = this.GetDateTime(reader, 15);
            }
            if ((false == reader.IsDBNull(16)))
            {
                this._Maintainers = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17)))
            {
                this._Status = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18)))
            {
                this._UserID = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19)))
            {
                this._AffirmOper = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20)))
            {
                this._Remark = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21)))
            {
                this._ReportDuration = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22)))
            {
                this._RespondDuration = reader.GetInt32(22);
            }
            if ((false == reader.IsDBNull(23)))
            {
                this._SparePartOutNo = reader.GetString(23);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2)))
            {
                this._ShiftID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._ClassName = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._StartTime = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5)))
            {
                this._EndTime = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6)))
            {
                this._StopTime = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._FaultTypeID = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._StopMainTypeID = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._StopTypeID = ((string)(row[9]));
            }
            if ((false == row.IsNull(10)))
            {
                this._FaultID = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._StopReason = ((string)(row[11]));
            }
            if ((false == row.IsNull(12)))
            {
                this._DealDesc = ((string)(row[12]));
            }
            if ((false == row.IsNull(13)))
            {
                this._ReportTime = this.GetDateTime(row, 13);
            }
            if ((false == row.IsNull(14)))
            {
                this._MaintainStartTime = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15)))
            {
                this._MaintainEndTime = this.GetDateTime(row, 15);
            }
            if ((false == row.IsNull(16)))
            {
                this._Maintainers = ((string)(row[16]));
            }
            if ((false == row.IsNull(17)))
            {
                this._Status = ((string)(row[17]));
            }
            if ((false == row.IsNull(18)))
            {
                this._UserID = ((string)(row[18]));
            }
            if ((false == row.IsNull(19)))
            {
                this._AffirmOper = ((string)(row[19]));
            }
            if ((false == row.IsNull(20)))
            {
                this._Remark = ((string)(row[20]));
            }
            if ((false == row.IsNull(21)))
            {
                this._ReportDuration = ((int)(row[21]));
            }
            if ((false == row.IsNull(22)))
            {
                this._RespondDuration = ((int)(row[22]));
            }
            if ((false == row.IsNull(23)))
            {
                this._SparePartOutNo = ((string)(row[23]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmMaintainRecord).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmMaintainRecord)(obj)).isAttached)
                        && (this.ObjID == ((global::Mesnac.Entity.EqmMaintainRecord)(obj)).ObjID));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _ClassName = new NBear.Common.PropertyItem("ClassName", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _StartTime = new NBear.Common.PropertyItem("StartTime", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _EndTime = new NBear.Common.PropertyItem("EndTime", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _StopTime = new NBear.Common.PropertyItem("StopTime", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _FaultTypeID = new NBear.Common.PropertyItem("FaultTypeID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _StopMainTypeID = new NBear.Common.PropertyItem("StopMainTypeID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _StopTypeID = new NBear.Common.PropertyItem("StopTypeID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _FaultID = new NBear.Common.PropertyItem("FaultID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _StopReason = new NBear.Common.PropertyItem("StopReason", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _DealDesc = new NBear.Common.PropertyItem("DealDesc", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _ReportTime = new NBear.Common.PropertyItem("ReportTime", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _MaintainStartTime = new NBear.Common.PropertyItem("MaintainStartTime", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _MaintainEndTime = new NBear.Common.PropertyItem("MaintainEndTime", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _Maintainers = new NBear.Common.PropertyItem("Maintainers", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _Status = new NBear.Common.PropertyItem("Status", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _UserID = new NBear.Common.PropertyItem("UserID", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _AffirmOper = new NBear.Common.PropertyItem("AffirmOper", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _ReportDuration = new NBear.Common.PropertyItem("ReportDuration", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _RespondDuration = new NBear.Common.PropertyItem("RespondDuration", "Mesnac.Entity.EqmMaintainRecord");

            protected NBear.Common.PropertyItem _SparePartOutNo = new NBear.Common.PropertyItem("SparePartOutNo", "Mesnac.Entity.EqmMaintainRecord");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem ObjID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ObjID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EquipCode
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EquipCode;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ShiftID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ShiftID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ClassName
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ClassName;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ClassName", _ClassName.EntityConfiguration, _ClassName.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StartTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StartTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StartTime", _StartTime.EntityConfiguration, _StartTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem EndTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _EndTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("EndTime", _EndTime.EntityConfiguration, _EndTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StopTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StopTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StopTime", _StopTime.EntityConfiguration, _StopTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FaultTypeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FaultTypeID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FaultTypeID", _FaultTypeID.EntityConfiguration, _FaultTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StopMainTypeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StopMainTypeID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StopMainTypeID", _StopMainTypeID.EntityConfiguration, _StopMainTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StopTypeID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StopTypeID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StopTypeID", _StopTypeID.EntityConfiguration, _StopTypeID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem FaultID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _FaultID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("FaultID", _FaultID.EntityConfiguration, _FaultID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem StopReason
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _StopReason;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("StopReason", _StopReason.EntityConfiguration, _StopReason.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DealDesc
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DealDesc;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DealDesc", _DealDesc.EntityConfiguration, _DealDesc.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReportTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReportTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReportTime", _ReportTime.EntityConfiguration, _ReportTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaintainStartTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaintainStartTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaintainStartTime", _MaintainStartTime.EntityConfiguration, _MaintainStartTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MaintainEndTime
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MaintainEndTime;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MaintainEndTime", _MaintainEndTime.EntityConfiguration, _MaintainEndTime.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Maintainers
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Maintainers;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Maintainers", _Maintainers.EntityConfiguration, _Maintainers.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Status
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Status;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Status", _Status.EntityConfiguration, _Status.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem UserID
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _UserID;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AffirmOper
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AffirmOper;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AffirmOper", _AffirmOper.EntityConfiguration, _AffirmOper.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ReportDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ReportDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ReportDuration", _ReportDuration.EntityConfiguration, _ReportDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem RespondDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _RespondDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("RespondDuration", _RespondDuration.EntityConfiguration, _RespondDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SparePartOutNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SparePartOutNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SparePartOutNo", _SparePartOutNo.EntityConfiguration, _SparePartOutNo.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
