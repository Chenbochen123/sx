//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class EqmRepairProtectPlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmRepairProtectPlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.EqmRepairProtectPlan\" isReadOnly=\"false\" isAutoPreLoad=\"fals" +
        "e\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmRepairProtectPlan\" b" +
        "atchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"" +
        "true\" isNotNull=\"true\" />\r\n    <Property name=\"EquipName\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"EquipName\" mappingColumnType=\"System.String\" sqlType=\"varchar(100)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlTy" +
        "pe=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"RepairProtectPlanContent\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RepairProtectPlanC" +
        "ontent\" mappingColumnType=\"System.String\" sqlType=\"ntext\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"RepairDate\" type=\"System.Nullable`1[Sys" +
        "tem.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"RepairDate\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"RepairTime\" type=\"System.Nullable`1[System.Int32]\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"RepairTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ResponseUser\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"ResponseUser\" mappingColumnType=\"System.String\"" +
        " sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"NeedStopTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"NeedSt" +
        "opTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PlanStopTime\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"PlanStopTime\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"FinishCondition\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"FinishCondition\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"FinishDate\" type=\"System.Nullable`1[System.DateTi" +
        "me]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"FinishDate\" mappingColumnType=\"System.Nullable`1[System.DateT" +
        "ime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"FinishUser\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"FinishUser\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Verification\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Veri" +
        "fication\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(500)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ConfirmUser\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"ConfirmUser\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ConfirmD" +
        "ate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ConfirmDate\" mappin" +
        "gColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"S" +
        "ystem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"n" +
        "varchar(500)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Pla" +
        "nName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"PlanName\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"PlanMonth\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanMonth\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class EqmRepairProtectPlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _EqmRepairProtectPlanEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _EquipName;
        
        protected string _EquipCode;
        
        protected string _RepairProtectPlanContent;
        
        protected global::System.DateTime? _RepairDate;
        
        protected global::System.Int32? _RepairTime;
        
        protected string _ResponseUser;
        
        protected global::System.Int32? _NeedStopTime;
        
        protected string _PlanStopTime;
        
        protected string _FinishCondition;
        
        protected global::System.DateTime? _FinishDate;
        
        protected string _FinishUser;
        
        protected string _Verification;
        
        protected string _ConfirmUser;
        
        protected global::System.DateTime? _ConfirmDate;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _PlanName;
        
        protected string _PlanMonth;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.EqmRepairProtectPlan left, global::Mesnac.Entity.EqmRepairProtectPlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.EqmRepairProtectPlan left, global::Mesnac.Entity.EqmRepairProtectPlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string EquipName {
            get {
                return this._EquipName;
            }
            set {
                this.OnPropertyChanged("EquipName", this._EquipName, value);
                this._EquipName = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string RepairProtectPlanContent {
            get {
                return this._RepairProtectPlanContent;
            }
            set {
                this.OnPropertyChanged("RepairProtectPlanContent", this._RepairProtectPlanContent, value);
                this._RepairProtectPlanContent = value;
            }
        }
        
        public global::System.DateTime? RepairDate {
            get {
                return this._RepairDate;
            }
            set {
                this.OnPropertyChanged("RepairDate", this._RepairDate, value);
                this._RepairDate = value;
            }
        }
        
        public global::System.Int32? RepairTime {
            get {
                return this._RepairTime;
            }
            set {
                this.OnPropertyChanged("RepairTime", this._RepairTime, value);
                this._RepairTime = value;
            }
        }
        
        public string ResponseUser {
            get {
                return this._ResponseUser;
            }
            set {
                this.OnPropertyChanged("ResponseUser", this._ResponseUser, value);
                this._ResponseUser = value;
            }
        }
        
        public global::System.Int32? NeedStopTime {
            get {
                return this._NeedStopTime;
            }
            set {
                this.OnPropertyChanged("NeedStopTime", this._NeedStopTime, value);
                this._NeedStopTime = value;
            }
        }
        
        public string PlanStopTime {
            get {
                return this._PlanStopTime;
            }
            set {
                this.OnPropertyChanged("PlanStopTime", this._PlanStopTime, value);
                this._PlanStopTime = value;
            }
        }
        
        public string FinishCondition {
            get {
                return this._FinishCondition;
            }
            set {
                this.OnPropertyChanged("FinishCondition", this._FinishCondition, value);
                this._FinishCondition = value;
            }
        }
        
        public global::System.DateTime? FinishDate {
            get {
                return this._FinishDate;
            }
            set {
                this.OnPropertyChanged("FinishDate", this._FinishDate, value);
                this._FinishDate = value;
            }
        }
        
        public string FinishUser {
            get {
                return this._FinishUser;
            }
            set {
                this.OnPropertyChanged("FinishUser", this._FinishUser, value);
                this._FinishUser = value;
            }
        }
        
        public string Verification {
            get {
                return this._Verification;
            }
            set {
                this.OnPropertyChanged("Verification", this._Verification, value);
                this._Verification = value;
            }
        }
        
        public string ConfirmUser {
            get {
                return this._ConfirmUser;
            }
            set {
                this.OnPropertyChanged("ConfirmUser", this._ConfirmUser, value);
                this._ConfirmUser = value;
            }
        }
        
        public global::System.DateTime? ConfirmDate {
            get {
                return this._ConfirmDate;
            }
            set {
                this.OnPropertyChanged("ConfirmDate", this._ConfirmDate, value);
                this._ConfirmDate = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string PlanName {
            get {
                return this._PlanName;
            }
            set {
                this.OnPropertyChanged("PlanName", this._PlanName, value);
                this._PlanName = value;
            }
        }
        
        public string PlanMonth {
            get {
                return this._PlanMonth;
            }
            set {
                this.OnPropertyChanged("PlanMonth", this._PlanMonth, value);
                this._PlanMonth = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((EqmRepairProtectPlan._EqmRepairProtectPlanEntityConfiguration == null)) {
                EqmRepairProtectPlan._EqmRepairProtectPlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmRepairProtectPlan");
            }
            return EqmRepairProtectPlan._EqmRepairProtectPlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._EquipName,
                    this._EquipCode,
                    this._RepairProtectPlanContent,
                    this._RepairDate,
                    this._RepairTime,
                    this._ResponseUser,
                    this._NeedStopTime,
                    this._PlanStopTime,
                    this._FinishCondition,
                    this._FinishDate,
                    this._FinishUser,
                    this._Verification,
                    this._ConfirmUser,
                    this._ConfirmDate,
                    this._DeleteFlag,
                    this._Remark,
                    this._PlanName,
                    this._PlanMonth};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipName = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EquipCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RepairProtectPlanContent = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RepairDate = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RepairTime = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ResponseUser = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._NeedStopTime = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._PlanStopTime = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._FinishCondition = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._FinishDate = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._FinishUser = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Verification = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._ConfirmUser = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._ConfirmDate = this.GetDateTime(reader, 14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._DeleteFlag = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Remark = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._PlanName = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._PlanMonth = reader.GetString(18);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EquipName = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._EquipCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RepairProtectPlanContent = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._RepairDate = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5))) {
                this._RepairTime = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ResponseUser = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._NeedStopTime = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._PlanStopTime = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._FinishCondition = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._FinishDate = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._FinishUser = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Verification = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._ConfirmUser = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._ConfirmDate = this.GetDateTime(row, 14);
            }
            if ((false == row.IsNull(15))) {
                this._DeleteFlag = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Remark = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._PlanName = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._PlanMonth = ((string)(row[18]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmRepairProtectPlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmRepairProtectPlan)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.EqmRepairProtectPlan)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _EquipName = new NBear.Common.PropertyItem("EquipName", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _RepairProtectPlanContent = new NBear.Common.PropertyItem("RepairProtectPlanContent", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _RepairDate = new NBear.Common.PropertyItem("RepairDate", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _RepairTime = new NBear.Common.PropertyItem("RepairTime", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _ResponseUser = new NBear.Common.PropertyItem("ResponseUser", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _NeedStopTime = new NBear.Common.PropertyItem("NeedStopTime", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _PlanStopTime = new NBear.Common.PropertyItem("PlanStopTime", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _FinishCondition = new NBear.Common.PropertyItem("FinishCondition", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _FinishDate = new NBear.Common.PropertyItem("FinishDate", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _FinishUser = new NBear.Common.PropertyItem("FinishUser", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _Verification = new NBear.Common.PropertyItem("Verification", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _ConfirmUser = new NBear.Common.PropertyItem("ConfirmUser", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _ConfirmDate = new NBear.Common.PropertyItem("ConfirmDate", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _PlanName = new NBear.Common.PropertyItem("PlanName", "Mesnac.Entity.EqmRepairProtectPlan");
            
            protected NBear.Common.PropertyItem _PlanMonth = new NBear.Common.PropertyItem("PlanMonth", "Mesnac.Entity.EqmRepairProtectPlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipName {
                get {
                    if ((aliasName == null)) {
                        return _EquipName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipName", _EquipName.EntityConfiguration, _EquipName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RepairProtectPlanContent {
                get {
                    if ((aliasName == null)) {
                        return _RepairProtectPlanContent;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RepairProtectPlanContent", _RepairProtectPlanContent.EntityConfiguration, _RepairProtectPlanContent.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RepairDate {
                get {
                    if ((aliasName == null)) {
                        return _RepairDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RepairDate", _RepairDate.EntityConfiguration, _RepairDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RepairTime {
                get {
                    if ((aliasName == null)) {
                        return _RepairTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RepairTime", _RepairTime.EntityConfiguration, _RepairTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ResponseUser {
                get {
                    if ((aliasName == null)) {
                        return _ResponseUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ResponseUser", _ResponseUser.EntityConfiguration, _ResponseUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem NeedStopTime {
                get {
                    if ((aliasName == null)) {
                        return _NeedStopTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("NeedStopTime", _NeedStopTime.EntityConfiguration, _NeedStopTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanStopTime {
                get {
                    if ((aliasName == null)) {
                        return _PlanStopTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanStopTime", _PlanStopTime.EntityConfiguration, _PlanStopTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FinishCondition {
                get {
                    if ((aliasName == null)) {
                        return _FinishCondition;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FinishCondition", _FinishCondition.EntityConfiguration, _FinishCondition.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FinishDate {
                get {
                    if ((aliasName == null)) {
                        return _FinishDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FinishDate", _FinishDate.EntityConfiguration, _FinishDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FinishUser {
                get {
                    if ((aliasName == null)) {
                        return _FinishUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FinishUser", _FinishUser.EntityConfiguration, _FinishUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Verification {
                get {
                    if ((aliasName == null)) {
                        return _Verification;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Verification", _Verification.EntityConfiguration, _Verification.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ConfirmUser {
                get {
                    if ((aliasName == null)) {
                        return _ConfirmUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ConfirmUser", _ConfirmUser.EntityConfiguration, _ConfirmUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ConfirmDate {
                get {
                    if ((aliasName == null)) {
                        return _ConfirmDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ConfirmDate", _ConfirmDate.EntityConfiguration, _ConfirmDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanName {
                get {
                    if ((aliasName == null)) {
                        return _PlanName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanName", _PlanName.EntityConfiguration, _PlanName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanMonth {
                get {
                    if ((aliasName == null)) {
                        return _PlanMonth;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanMonth", _PlanMonth.EntityConfiguration, _PlanMonth.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
