//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_SetTimeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_SetTime> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_SetTime\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatc" +
        "hUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_SetTime\" batchSize=\"10\">\r\n  " +
        "<Properties>\r\n    <Property name=\"OBJID\" type=\"System.Int32\" isInherited=\"false\"" +
        " isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OBJID\"" +
        " mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"DeptType\" type=\"System.Int32\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeptT" +
        "ype\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNul" +
        "l=\"true\" />\r\n    <Property name=\"Shift_id\" type=\"System.Int32\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shi" +
        "ft_id\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotN" +
        "ull=\"true\" />\r\n    <Property name=\"Shift_Name\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Shift_Name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Start_Time\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Start_Time\" mappingColumnType=\"System.String\" sqlType=\"char" +
        "(8)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Stop_Time\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Stop_Time\" mappingColumnType=\"System.String\" s" +
        "qlType=\"char(8)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "UseFlag\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"" +
        "false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"f" +
        "alse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPr" +
        "opertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UseFlag\" mappingCo" +
        "lumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" is" +
        "NotNull=\"false\" />\r\n    <Property name=\"DayFlag\" type=\"System.Nullable`1[System." +
        "Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"DayFlag\" mappingColumnType=\"System.Nullable`1[System.Int32" +
        "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</E" +
        "ntityConfiguration>")]
    public partial class Ppt_SetTime : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_SetTimeEntityConfiguration;
        
        protected int _OBJID;
        
        protected int _DeptType;
        
        protected int _Shift_id;
        
        protected string _Shift_Name;
        
        protected string _Start_Time;
        
        protected string _Stop_Time;
        
        protected global::System.Int32? _UseFlag;
        
        protected global::System.Int32? _DayFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_SetTime left, global::Mesnac.Entity.Ppt_SetTime right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_SetTime left, global::Mesnac.Entity.Ppt_SetTime right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int OBJID {
            get {
                return this._OBJID;
            }
            set {
                this.OnPropertyChanged("OBJID", this._OBJID, value);
                this._OBJID = value;
            }
        }
        
        public int DeptType {
            get {
                return this._DeptType;
            }
            set {
                this.OnPropertyChanged("DeptType", this._DeptType, value);
                this._DeptType = value;
            }
        }
        
        public int Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public string Shift_Name {
            get {
                return this._Shift_Name;
            }
            set {
                this.OnPropertyChanged("Shift_Name", this._Shift_Name, value);
                this._Shift_Name = value;
            }
        }
        
        public string Start_Time {
            get {
                return this._Start_Time;
            }
            set {
                this.OnPropertyChanged("Start_Time", this._Start_Time, value);
                this._Start_Time = value;
            }
        }
        
        public string Stop_Time {
            get {
                return this._Stop_Time;
            }
            set {
                this.OnPropertyChanged("Stop_Time", this._Stop_Time, value);
                this._Stop_Time = value;
            }
        }
        
        public global::System.Int32? UseFlag {
            get {
                return this._UseFlag;
            }
            set {
                this.OnPropertyChanged("UseFlag", this._UseFlag, value);
                this._UseFlag = value;
            }
        }
        
        public global::System.Int32? DayFlag {
            get {
                return this._DayFlag;
            }
            set {
                this.OnPropertyChanged("DayFlag", this._DayFlag, value);
                this._DayFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_SetTime._Ppt_SetTimeEntityConfiguration == null)) {
                Ppt_SetTime._Ppt_SetTimeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_SetTime");
            }
            return Ppt_SetTime._Ppt_SetTimeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._OBJID,
                    this._DeptType,
                    this._Shift_id,
                    this._Shift_Name,
                    this._Start_Time,
                    this._Stop_Time,
                    this._UseFlag,
                    this._DayFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._OBJID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._DeptType = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Shift_id = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Shift_Name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Start_Time = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Stop_Time = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._UseFlag = reader.GetInt32(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._DayFlag = reader.GetInt32(7);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._OBJID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._DeptType = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Shift_id = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Shift_Name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Start_Time = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Stop_Time = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._UseFlag = ((System.Nullable<int>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._DayFlag = ((System.Nullable<int>)(row[7]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_SetTime).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return (((this.isAttached && ((global::Mesnac.Entity.Ppt_SetTime)(obj)).isAttached) 
                        && (this.DeptType == ((global::Mesnac.Entity.Ppt_SetTime)(obj)).DeptType)) 
                        && (this.Shift_id == ((global::Mesnac.Entity.Ppt_SetTime)(obj)).Shift_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _OBJID = new NBear.Common.PropertyItem("OBJID", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _DeptType = new NBear.Common.PropertyItem("DeptType", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _Shift_Name = new NBear.Common.PropertyItem("Shift_Name", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _Start_Time = new NBear.Common.PropertyItem("Start_Time", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _Stop_Time = new NBear.Common.PropertyItem("Stop_Time", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _UseFlag = new NBear.Common.PropertyItem("UseFlag", "Mesnac.Entity.Ppt_SetTime");
            
            protected NBear.Common.PropertyItem _DayFlag = new NBear.Common.PropertyItem("DayFlag", "Mesnac.Entity.Ppt_SetTime");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem OBJID {
                get {
                    if ((aliasName == null)) {
                        return _OBJID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OBJID", _OBJID.EntityConfiguration, _OBJID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeptType {
                get {
                    if ((aliasName == null)) {
                        return _DeptType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeptType", _DeptType.EntityConfiguration, _DeptType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Name {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Name", _Shift_Name.EntityConfiguration, _Shift_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Start_Time {
                get {
                    if ((aliasName == null)) {
                        return _Start_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Start_Time", _Start_Time.EntityConfiguration, _Start_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stop_Time {
                get {
                    if ((aliasName == null)) {
                        return _Stop_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stop_Time", _Stop_Time.EntityConfiguration, _Stop_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UseFlag {
                get {
                    if ((aliasName == null)) {
                        return _UseFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UseFlag", _UseFlag.EntityConfiguration, _UseFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DayFlag {
                get {
                    if ((aliasName == null)) {
                        return _DayFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DayFlag", _DayFlag.EntityConfiguration, _DayFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
