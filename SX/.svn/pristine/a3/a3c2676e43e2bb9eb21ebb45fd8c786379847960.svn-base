//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_RunHuaYouArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_RunHuaYou> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_RunHuaYou\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_RunHuaYou\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"Serialid\" type=\"System.Int32\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Serialid\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" is" +
        "NotNull=\"true\" />\r\n    <Property name=\"Plan_Date\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"Plan_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Workshop\" type=\"System.Nulla" +
        "ble`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Workshop\" mappingColumnType=\"System.Nullable`" +
        "1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Equip_Code\" type=\"System.String\" isInherited=\"false\" sqlDefau" +
        "ltValue=\"\'01001\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Equip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_id\" type=\"Syste" +
        "m.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Shift_id\" mappingColumnType=\"System.String\" sqlType=\"cha" +
        "r(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_Class" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Shift_Class\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"Mater_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater_Code\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"Used_weight\" type=\"System.Nullable`1[System.Decimal]\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Used_weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlTy" +
        "pe=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Fact" +
        "ory\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Factory\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Price\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Price\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"LYWeight\" type=\"System.Null" +
        "able`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"LYWeight\" mappingColumnType=\"System.Nullab" +
        "le`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Ppt_RunHuaYou : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_RunHuaYouEntityConfiguration;
        
        protected int _Serialid;
        
        protected string _Plan_Date;
        
        protected global::System.Int16? _Workshop;
        
        protected string _Equip_Code;
        
        protected string _Shift_id;
        
        protected string _Shift_Class;
        
        protected string _Mater_Code;
        
        protected global::System.Decimal? _Used_weight;
        
        protected string _Factory;
        
        protected global::System.Decimal? _Price;
        
        protected global::System.Decimal? _LYWeight;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_RunHuaYou left, global::Mesnac.Entity.Ppt_RunHuaYou right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_RunHuaYou left, global::Mesnac.Entity.Ppt_RunHuaYou right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public string Plan_Date {
            get {
                return this._Plan_Date;
            }
            set {
                this.OnPropertyChanged("Plan_Date", this._Plan_Date, value);
                this._Plan_Date = value;
            }
        }
        
        public global::System.Int16? Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public string Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public string Shift_Class {
            get {
                return this._Shift_Class;
            }
            set {
                this.OnPropertyChanged("Shift_Class", this._Shift_Class, value);
                this._Shift_Class = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public global::System.Decimal? Used_weight {
            get {
                return this._Used_weight;
            }
            set {
                this.OnPropertyChanged("Used_weight", this._Used_weight, value);
                this._Used_weight = value;
            }
        }
        
        public string Factory {
            get {
                return this._Factory;
            }
            set {
                this.OnPropertyChanged("Factory", this._Factory, value);
                this._Factory = value;
            }
        }
        
        public global::System.Decimal? Price {
            get {
                return this._Price;
            }
            set {
                this.OnPropertyChanged("Price", this._Price, value);
                this._Price = value;
            }
        }
        
        public global::System.Decimal? LYWeight {
            get {
                return this._LYWeight;
            }
            set {
                this.OnPropertyChanged("LYWeight", this._LYWeight, value);
                this._LYWeight = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_RunHuaYou._Ppt_RunHuaYouEntityConfiguration == null)) {
                Ppt_RunHuaYou._Ppt_RunHuaYouEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_RunHuaYou");
            }
            return Ppt_RunHuaYou._Ppt_RunHuaYouEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serialid,
                    this._Plan_Date,
                    this._Workshop,
                    this._Equip_Code,
                    this._Shift_id,
                    this._Shift_Class,
                    this._Mater_Code,
                    this._Used_weight,
                    this._Factory,
                    this._Price,
                    this._LYWeight};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serialid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Plan_Date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Workshop = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Equip_Code = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Shift_id = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Shift_Class = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mater_Code = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Used_weight = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Factory = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Price = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._LYWeight = reader.GetDecimal(10);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serialid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Plan_Date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Workshop = ((System.Nullable<short>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Equip_Code = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Shift_id = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Shift_Class = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Mater_Code = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Used_weight = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Factory = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Price = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._LYWeight = ((System.Nullable<decimal>)(row[10]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_RunHuaYou).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Ppt_RunHuaYou)(obj)).isAttached) 
                        && (this.Serialid == ((global::Mesnac.Entity.Ppt_RunHuaYou)(obj)).Serialid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Plan_Date = new NBear.Common.PropertyItem("Plan_Date", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Shift_Class = new NBear.Common.PropertyItem("Shift_Class", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Used_weight = new NBear.Common.PropertyItem("Used_weight", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Factory = new NBear.Common.PropertyItem("Factory", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _Price = new NBear.Common.PropertyItem("Price", "Mesnac.Entity.Ppt_RunHuaYou");
            
            protected NBear.Common.PropertyItem _LYWeight = new NBear.Common.PropertyItem("LYWeight", "Mesnac.Entity.Ppt_RunHuaYou");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_Date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Date", _Plan_Date.EntityConfiguration, _Plan_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Class {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Class;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Class", _Shift_Class.EntityConfiguration, _Shift_Class.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Used_weight {
                get {
                    if ((aliasName == null)) {
                        return _Used_weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Used_weight", _Used_weight.EntityConfiguration, _Used_weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Factory {
                get {
                    if ((aliasName == null)) {
                        return _Factory;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Factory", _Factory.EntityConfiguration, _Factory.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Price {
                get {
                    if ((aliasName == null)) {
                        return _Price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Price", _Price.EntityConfiguration, _Price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LYWeight {
                get {
                    if ((aliasName == null)) {
                        return _LYWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LYWeight", _LYWeight.EntityConfiguration, _LYWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
