//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Pmt_RecipeArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Pmt_Recipe> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Pmt_Recipe\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"Pmt_Recipe\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" i" +
        "sReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" m" +
        "appingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"Equip_Code\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equi" +
        "p_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"true\" " +
        "isNotNull=\"true\" />\r\n    <Property name=\"Mater_Code\" type=\"System.String\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Mater_Code\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrima" +
        "ryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Edt_Code\" type=\"System.Int" +
        "32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Edt_Code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPri" +
        "maryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Mater_Name\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"Mater_Name\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Recip" +
        "e_Type\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultVal" +
        "ue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Recipe_Type\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"User_EdtCode\" t" +
        "ype=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"User_EdtCode\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Recipe_State\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"" +
        "\'1\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"R" +
        "ecipe_State\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Define_Date\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Define_Date\" mappingColumnType=\"System.String\" sqlType=\"char(19)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Modify_Time\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Modify_Time\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Done_Time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefau" +
        "ltValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Done_Time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"" +
        "int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shelf_Num\" t" +
        "ype=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(5)\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shelf_" +
        "Num\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Total_Weight\" type=\"System" +
        ".Nullable`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0.00)\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Total_Weight" +
        "\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Fill_Coef\" type=\"System" +
        ".Nullable`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0.00)\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fill_Coef\" m" +
        "appingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CB_RecycleType\" type=\"Syst" +
        "em.String\" isInherited=\"false\" sqlDefaultValue=\"\'2\'\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"CB_RecycleType\" mappingColumnType" +
        "=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"CB_RecycleTime\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"CB_RecycleTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlTy" +
        "pe=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OverTemp" +
        "_MinTime\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultV" +
        "alue=\"(100)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"OverTemp_MinTime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sql" +
        "Type=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OverTi" +
        "me_Time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultVa" +
        "lue=\"(300)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"OverTime_Time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType" +
        "=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"OverTemp_T" +
        "emp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=" +
        "\"(150)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"OverTemp_Temp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"in" +
        "t\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Max_InPolyTemp" +
        "\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(1" +
        "00)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"M" +
        "ax_InPolyTemp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Min_InPolyTemp\" " +
        "type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(20)" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Min_" +
        "InPolyTemp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"In_PolyTime\" type=\"" +
        "System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(25)\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"In_PolyTim" +
        "e\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"In_CarbonTime\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(40)\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"In_CarbonTime\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"In_OilTime\" type=\"System.Nullable" +
        "`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(25)\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"In_OilTime\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"In_PowderTime\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(25)\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"In_PowderTime\" mappingColumnType=" +
        "\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Roll_SpeedDiff\" type=\"System.Nullable`1[System.In" +
        "t32]\" isInherited=\"false\" sqlDefaultValue=\"(5)\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"Roll_SpeedDiff\" mappingColumnType=\"Sys" +
        "tem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Ram_PressDiff\" type=\"System.Nullable`1[System.Int32]\"" +
        " isInherited=\"false\" sqlDefaultValue=\"(5)\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"Ram_PressDiff\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Is_UseAreaTemp\" type=\"System.String\" isInherited=\"false\" sq" +
        "lDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"Is_UseAreaTemp\" mappingColumnType=\"System.String\" sqlType=\"char(1)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Side_Temp\" type" +
        "=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Side_Temp" +
        "\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Side_TempDiff\" type=\"System.N" +
        "ullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Side_TempDiff\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Roll_Temp\" type=\"System.Nullable`1[" +
        "System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"Roll_Temp\" mappingColumnType=" +
        "\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Roll_TempDiff\" type=\"System.Nullable`1[System.Int" +
        "32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Roll_TempDiff\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"Ddoor_Temp\" type=\"System.Nullable`1[System.Int32]\" isIn" +
        "herited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"Ddoor_Temp\" mappingColumnType=\"System.Nullable`1" +
        "[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Ddoor_TempDiff\" type=\"System.Nullable`1[System.Int32]\" isInherited=" +
        "\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Ddoor_TempDiff\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Oper_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Oper_Code\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Mem_Note\" type=\"System.String\" isInherited=\"false\" sql" +
        "DefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Mem_Note\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(60)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Recipe_Code\" type" +
        "=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"Recipe_Code\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Start_datetime\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Sta" +
        "rt_datetime\" mappingColumnType=\"System.String\" sqlType=\"char(19)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"End_datetime\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"End_datetime\" mappingColumnType=\"System." +
        "String\" sqlType=\"char(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"Equip_prior\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=" +
        "\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Equip_prior\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Recipe_typecode\" type=\"System.St" +
        "ring\" isInherited=\"false\" sqlDefaultValue=\"\'\'\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Recipe_typecode\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(14)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <P" +
        "roperty name=\"Rub_typecode\" type=\"System.String\" isInherited=\"false\" sqlDefaultV" +
        "alue=\"\'    \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Rub_typecode\" mappingColumnType=\"System.String\" sqlType=\"char(4)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Rub_type\" type=\"System." +
        "String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Rub_type\" mappingColumnType=\"System." +
        "String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"Mkind_code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'" +
        " \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mk" +
        "ind_code\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Ikind_code\" type=\"System.String\" is" +
        "Inherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false" +
        "\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isR" +
        "elationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeriali" +
        "zationIgnore=\"false\" mappingName=\"Ikind_code\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(2)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Congl_rang\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Congl_rang" +
        "\" mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Sds_temp\" type=\"System.Nullable`1[System.I" +
        "nt32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Sds_temp\" mappingColumnType=\"System.Nullable`1[System.Int32" +
        "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Mini_time\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefault" +
        "Value=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Mini_time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"in" +
        "t\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Audit_flag\" ty" +
        "pe=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Audit_flag\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"Audit_name\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Audit_name\"" +
        " mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Audit_date\" type=\"System.String\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Audit_date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Recipe_Dic\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Recipe_Dic\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Stay_tim" +
        "e\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(" +
        "0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"St" +
        "ay_time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Rearch_code\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Rearch_code\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"B" +
        "lack_reuse\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Black_reuse\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Reuse_time\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Reuse_time\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Expire_time\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Expire_time\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=" +
        "\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Over_temp\" " +
        "type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"Over_temp\" mappingColumnTyp" +
        "e=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Max_temp\" type=\"System.Nullable`1[System.Int32]" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Max_temp\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sq" +
        "lType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Min_t" +
        "emp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Min_temp\" mappingColum" +
        "nType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"If_not\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "If_not\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Zz_temp\" type=\"System.Nullable`1[Syst" +
        "em.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Zz_temp\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"Xlm_temp\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Xlm_temp\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_Use\" type=\"System.Nullable`1[S" +
        "ystem.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Plan_Use\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"In_XLtime\" type=\"System.Nullable`1[System.Int32]\" i" +
        "sInherited=\"false\" sqlDefaultValue=\"(10)\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"In_XLtime\" mappingColumnType=\"System.Nullabl" +
        "e`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    " +
        "<Property name=\"PJ_alarmtime\" type=\"System.Nullable`1[System.Int32]\" isInherited" +
        "=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"PJ_alarmtime\" mappingColumnType=\"System.Nullable`1[Syst" +
        "em.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properti" +
        "es>\r\n</EntityConfiguration>")]
    public partial class Pmt_Recipe : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Pmt_RecipeEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _Equip_Code;
        
        protected string _Mater_Code;
        
        protected int _Edt_Code;
        
        protected string _Mater_Name;
        
        protected global::System.Int32? _Recipe_Type;
        
        protected string _User_EdtCode;
        
        protected string _Recipe_State;
        
        protected string _Define_Date;
        
        protected string _Modify_Time;
        
        protected global::System.Int32? _Done_Time;
        
        protected global::System.Int32? _Shelf_Num;
        
        protected global::System.Decimal? _Total_Weight;
        
        protected global::System.Decimal? _Fill_Coef;
        
        protected string _CB_RecycleType;
        
        protected global::System.Int32? _CB_RecycleTime;
        
        protected global::System.Int32? _OverTemp_MinTime;
        
        protected global::System.Int32? _OverTime_Time;
        
        protected global::System.Int32? _OverTemp_Temp;
        
        protected global::System.Int32? _Max_InPolyTemp;
        
        protected global::System.Int32? _Min_InPolyTemp;
        
        protected global::System.Int32? _In_PolyTime;
        
        protected global::System.Int32? _In_CarbonTime;
        
        protected global::System.Int32? _In_OilTime;
        
        protected global::System.Int32? _In_PowderTime;
        
        protected global::System.Int32? _Roll_SpeedDiff;
        
        protected global::System.Int32? _Ram_PressDiff;
        
        protected string _Is_UseAreaTemp;
        
        protected global::System.Int32? _Side_Temp;
        
        protected global::System.Int32? _Side_TempDiff;
        
        protected global::System.Int32? _Roll_Temp;
        
        protected global::System.Int32? _Roll_TempDiff;
        
        protected global::System.Int32? _Ddoor_Temp;
        
        protected global::System.Int32? _Ddoor_TempDiff;
        
        protected string _Oper_Code;
        
        protected string _Mem_Note;
        
        protected string _Recipe_Code;
        
        protected string _Start_datetime;
        
        protected string _End_datetime;
        
        protected string _Equip_prior;
        
        protected string _Recipe_typecode;
        
        protected string _Rub_typecode;
        
        protected string _Rub_type;
        
        protected string _Mkind_code;
        
        protected string _Ikind_code;
        
        protected string _Congl_rang;
        
        protected global::System.Int32? _Sds_temp;
        
        protected global::System.Int32? _Mini_time;
        
        protected string _Audit_flag;
        
        protected string _Audit_name;
        
        protected string _Audit_date;
        
        protected string _Recipe_Dic;
        
        protected global::System.Int32? _Stay_time;
        
        protected string _Rearch_code;

        protected global::System.Int32? _Black_reuse;
        
        protected global::System.Int32? _Reuse_time;
        
        protected global::System.Int32? _Expire_time;
        
        protected global::System.Int32? _Over_temp;
        
        protected global::System.Int32? _Max_temp;
        
        protected global::System.Int32? _Min_temp;
        
        protected string _If_not;
        
        protected global::System.Int32? _Zz_temp;
        
        protected global::System.Int32? _Xlm_temp;
        
        protected global::System.Int32? _Plan_Use;
        
        protected global::System.Int32? _In_XLtime;
        
        protected global::System.Int32? _PJ_alarmtime;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Pmt_Recipe left, global::Mesnac.Entity.Pmt_Recipe right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Pmt_Recipe left, global::Mesnac.Entity.Pmt_Recipe right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public string Mater_Code {
            get {
                return this._Mater_Code;
            }
            set {
                this.OnPropertyChanged("Mater_Code", this._Mater_Code, value);
                this._Mater_Code = value;
            }
        }
        
        public int Edt_Code {
            get {
                return this._Edt_Code;
            }
            set {
                this.OnPropertyChanged("Edt_Code", this._Edt_Code, value);
                this._Edt_Code = value;
            }
        }
        
        public string Mater_Name {
            get {
                return this._Mater_Name;
            }
            set {
                this.OnPropertyChanged("Mater_Name", this._Mater_Name, value);
                this._Mater_Name = value;
            }
        }
        
        public global::System.Int32? Recipe_Type {
            get {
                return this._Recipe_Type;
            }
            set {
                this.OnPropertyChanged("Recipe_Type", this._Recipe_Type, value);
                this._Recipe_Type = value;
            }
        }
        
        public string User_EdtCode {
            get {
                return this._User_EdtCode;
            }
            set {
                this.OnPropertyChanged("User_EdtCode", this._User_EdtCode, value);
                this._User_EdtCode = value;
            }
        }
        
        public string Recipe_State {
            get {
                return this._Recipe_State;
            }
            set {
                this.OnPropertyChanged("Recipe_State", this._Recipe_State, value);
                this._Recipe_State = value;
            }
        }
        
        public string Define_Date {
            get {
                return this._Define_Date;
            }
            set {
                this.OnPropertyChanged("Define_Date", this._Define_Date, value);
                this._Define_Date = value;
            }
        }
        
        public string Modify_Time {
            get {
                return this._Modify_Time;
            }
            set {
                this.OnPropertyChanged("Modify_Time", this._Modify_Time, value);
                this._Modify_Time = value;
            }
        }
        
        public global::System.Int32? Done_Time {
            get {
                return this._Done_Time;
            }
            set {
                this.OnPropertyChanged("Done_Time", this._Done_Time, value);
                this._Done_Time = value;
            }
        }
        
        public global::System.Int32? Shelf_Num {
            get {
                return this._Shelf_Num;
            }
            set {
                this.OnPropertyChanged("Shelf_Num", this._Shelf_Num, value);
                this._Shelf_Num = value;
            }
        }
        
        public global::System.Decimal? Total_Weight {
            get {
                return this._Total_Weight;
            }
            set {
                this.OnPropertyChanged("Total_Weight", this._Total_Weight, value);
                this._Total_Weight = value;
            }
        }
        
        public global::System.Decimal? Fill_Coef {
            get {
                return this._Fill_Coef;
            }
            set {
                this.OnPropertyChanged("Fill_Coef", this._Fill_Coef, value);
                this._Fill_Coef = value;
            }
        }
        
        public string CB_RecycleType {
            get {
                return this._CB_RecycleType;
            }
            set {
                this.OnPropertyChanged("CB_RecycleType", this._CB_RecycleType, value);
                this._CB_RecycleType = value;
            }
        }
        
        public global::System.Int32? CB_RecycleTime {
            get {
                return this._CB_RecycleTime;
            }
            set {
                this.OnPropertyChanged("CB_RecycleTime", this._CB_RecycleTime, value);
                this._CB_RecycleTime = value;
            }
        }
        
        public global::System.Int32? OverTemp_MinTime {
            get {
                return this._OverTemp_MinTime;
            }
            set {
                this.OnPropertyChanged("OverTemp_MinTime", this._OverTemp_MinTime, value);
                this._OverTemp_MinTime = value;
            }
        }
        
        public global::System.Int32? OverTime_Time {
            get {
                return this._OverTime_Time;
            }
            set {
                this.OnPropertyChanged("OverTime_Time", this._OverTime_Time, value);
                this._OverTime_Time = value;
            }
        }
        
        public global::System.Int32? OverTemp_Temp {
            get {
                return this._OverTemp_Temp;
            }
            set {
                this.OnPropertyChanged("OverTemp_Temp", this._OverTemp_Temp, value);
                this._OverTemp_Temp = value;
            }
        }
        
        public global::System.Int32? Max_InPolyTemp {
            get {
                return this._Max_InPolyTemp;
            }
            set {
                this.OnPropertyChanged("Max_InPolyTemp", this._Max_InPolyTemp, value);
                this._Max_InPolyTemp = value;
            }
        }
        
        public global::System.Int32? Min_InPolyTemp {
            get {
                return this._Min_InPolyTemp;
            }
            set {
                this.OnPropertyChanged("Min_InPolyTemp", this._Min_InPolyTemp, value);
                this._Min_InPolyTemp = value;
            }
        }
        
        public global::System.Int32? In_PolyTime {
            get {
                return this._In_PolyTime;
            }
            set {
                this.OnPropertyChanged("In_PolyTime", this._In_PolyTime, value);
                this._In_PolyTime = value;
            }
        }
        
        public global::System.Int32? In_CarbonTime {
            get {
                return this._In_CarbonTime;
            }
            set {
                this.OnPropertyChanged("In_CarbonTime", this._In_CarbonTime, value);
                this._In_CarbonTime = value;
            }
        }
        
        public global::System.Int32? In_OilTime {
            get {
                return this._In_OilTime;
            }
            set {
                this.OnPropertyChanged("In_OilTime", this._In_OilTime, value);
                this._In_OilTime = value;
            }
        }
        
        public global::System.Int32? In_PowderTime {
            get {
                return this._In_PowderTime;
            }
            set {
                this.OnPropertyChanged("In_PowderTime", this._In_PowderTime, value);
                this._In_PowderTime = value;
            }
        }
        
        public global::System.Int32? Roll_SpeedDiff {
            get {
                return this._Roll_SpeedDiff;
            }
            set {
                this.OnPropertyChanged("Roll_SpeedDiff", this._Roll_SpeedDiff, value);
                this._Roll_SpeedDiff = value;
            }
        }
        
        public global::System.Int32? Ram_PressDiff {
            get {
                return this._Ram_PressDiff;
            }
            set {
                this.OnPropertyChanged("Ram_PressDiff", this._Ram_PressDiff, value);
                this._Ram_PressDiff = value;
            }
        }
        
        public string Is_UseAreaTemp {
            get {
                return this._Is_UseAreaTemp;
            }
            set {
                this.OnPropertyChanged("Is_UseAreaTemp", this._Is_UseAreaTemp, value);
                this._Is_UseAreaTemp = value;
            }
        }
        
        public global::System.Int32? Side_Temp {
            get {
                return this._Side_Temp;
            }
            set {
                this.OnPropertyChanged("Side_Temp", this._Side_Temp, value);
                this._Side_Temp = value;
            }
        }
        
        public global::System.Int32? Side_TempDiff {
            get {
                return this._Side_TempDiff;
            }
            set {
                this.OnPropertyChanged("Side_TempDiff", this._Side_TempDiff, value);
                this._Side_TempDiff = value;
            }
        }
        
        public global::System.Int32? Roll_Temp {
            get {
                return this._Roll_Temp;
            }
            set {
                this.OnPropertyChanged("Roll_Temp", this._Roll_Temp, value);
                this._Roll_Temp = value;
            }
        }
        
        public global::System.Int32? Roll_TempDiff {
            get {
                return this._Roll_TempDiff;
            }
            set {
                this.OnPropertyChanged("Roll_TempDiff", this._Roll_TempDiff, value);
                this._Roll_TempDiff = value;
            }
        }
        
        public global::System.Int32? Ddoor_Temp {
            get {
                return this._Ddoor_Temp;
            }
            set {
                this.OnPropertyChanged("Ddoor_Temp", this._Ddoor_Temp, value);
                this._Ddoor_Temp = value;
            }
        }
        
        public global::System.Int32? Ddoor_TempDiff {
            get {
                return this._Ddoor_TempDiff;
            }
            set {
                this.OnPropertyChanged("Ddoor_TempDiff", this._Ddoor_TempDiff, value);
                this._Ddoor_TempDiff = value;
            }
        }
        
        public string Oper_Code {
            get {
                return this._Oper_Code;
            }
            set {
                this.OnPropertyChanged("Oper_Code", this._Oper_Code, value);
                this._Oper_Code = value;
            }
        }
        
        public string Mem_Note {
            get {
                return this._Mem_Note;
            }
            set {
                this.OnPropertyChanged("Mem_Note", this._Mem_Note, value);
                this._Mem_Note = value;
            }
        }
        
        public string Recipe_Code {
            get {
                return this._Recipe_Code;
            }
            set {
                this.OnPropertyChanged("Recipe_Code", this._Recipe_Code, value);
                this._Recipe_Code = value;
            }
        }
        
        public string Start_datetime {
            get {
                return this._Start_datetime;
            }
            set {
                this.OnPropertyChanged("Start_datetime", this._Start_datetime, value);
                this._Start_datetime = value;
            }
        }
        
        public string End_datetime {
            get {
                return this._End_datetime;
            }
            set {
                this.OnPropertyChanged("End_datetime", this._End_datetime, value);
                this._End_datetime = value;
            }
        }
        
        public string Equip_prior {
            get {
                return this._Equip_prior;
            }
            set {
                this.OnPropertyChanged("Equip_prior", this._Equip_prior, value);
                this._Equip_prior = value;
            }
        }
        
        public string Recipe_typecode {
            get {
                return this._Recipe_typecode;
            }
            set {
                this.OnPropertyChanged("Recipe_typecode", this._Recipe_typecode, value);
                this._Recipe_typecode = value;
            }
        }
        
        public string Rub_typecode {
            get {
                return this._Rub_typecode;
            }
            set {
                this.OnPropertyChanged("Rub_typecode", this._Rub_typecode, value);
                this._Rub_typecode = value;
            }
        }
        
        public string Rub_type {
            get {
                return this._Rub_type;
            }
            set {
                this.OnPropertyChanged("Rub_type", this._Rub_type, value);
                this._Rub_type = value;
            }
        }
        
        public string Mkind_code {
            get {
                return this._Mkind_code;
            }
            set {
                this.OnPropertyChanged("Mkind_code", this._Mkind_code, value);
                this._Mkind_code = value;
            }
        }
        
        public string Ikind_code {
            get {
                return this._Ikind_code;
            }
            set {
                this.OnPropertyChanged("Ikind_code", this._Ikind_code, value);
                this._Ikind_code = value;
            }
        }
        
        public string Congl_rang {
            get {
                return this._Congl_rang;
            }
            set {
                this.OnPropertyChanged("Congl_rang", this._Congl_rang, value);
                this._Congl_rang = value;
            }
        }
        
        public global::System.Int32? Sds_temp {
            get {
                return this._Sds_temp;
            }
            set {
                this.OnPropertyChanged("Sds_temp", this._Sds_temp, value);
                this._Sds_temp = value;
            }
        }
        
        public global::System.Int32? Mini_time {
            get {
                return this._Mini_time;
            }
            set {
                this.OnPropertyChanged("Mini_time", this._Mini_time, value);
                this._Mini_time = value;
            }
        }
        
        public string Audit_flag {
            get {
                return this._Audit_flag;
            }
            set {
                this.OnPropertyChanged("Audit_flag", this._Audit_flag, value);
                this._Audit_flag = value;
            }
        }
        
        public string Audit_name {
            get {
                return this._Audit_name;
            }
            set {
                this.OnPropertyChanged("Audit_name", this._Audit_name, value);
                this._Audit_name = value;
            }
        }
        
        public string Audit_date {
            get {
                return this._Audit_date;
            }
            set {
                this.OnPropertyChanged("Audit_date", this._Audit_date, value);
                this._Audit_date = value;
            }
        }
        
        public string Recipe_Dic {
            get {
                return this._Recipe_Dic;
            }
            set {
                this.OnPropertyChanged("Recipe_Dic", this._Recipe_Dic, value);
                this._Recipe_Dic = value;
            }
        }
        
        public global::System.Int32? Stay_time {
            get {
                return this._Stay_time;
            }
            set {
                this.OnPropertyChanged("Stay_time", this._Stay_time, value);
                this._Stay_time = value;
            }
        }
        
        public string Rearch_code {
            get {
                return this._Rearch_code;
            }
            set {
                this.OnPropertyChanged("Rearch_code", this._Rearch_code, value);
                this._Rearch_code = value;
            }
        }

        public global::System.Int32? Black_reuse
        {
            get {
                return this._Black_reuse;
            }
            set {
                this.OnPropertyChanged("Black_reuse", this._Black_reuse, value);
                this._Black_reuse = value;
            }
        }
        
        public global::System.Int32? Reuse_time {
            get {
                return this._Reuse_time;
            }
            set {
                this.OnPropertyChanged("Reuse_time", this._Reuse_time, value);
                this._Reuse_time = value;
            }
        }
        
        public global::System.Int32? Expire_time {
            get {
                return this._Expire_time;
            }
            set {
                this.OnPropertyChanged("Expire_time", this._Expire_time, value);
                this._Expire_time = value;
            }
        }
        
        public global::System.Int32? Over_temp {
            get {
                return this._Over_temp;
            }
            set {
                this.OnPropertyChanged("Over_temp", this._Over_temp, value);
                this._Over_temp = value;
            }
        }
        
        public global::System.Int32? Max_temp {
            get {
                return this._Max_temp;
            }
            set {
                this.OnPropertyChanged("Max_temp", this._Max_temp, value);
                this._Max_temp = value;
            }
        }
        
        public global::System.Int32? Min_temp {
            get {
                return this._Min_temp;
            }
            set {
                this.OnPropertyChanged("Min_temp", this._Min_temp, value);
                this._Min_temp = value;
            }
        }
        
        public string If_not {
            get {
                return this._If_not;
            }
            set {
                this.OnPropertyChanged("If_not", this._If_not, value);
                this._If_not = value;
            }
        }
        
        public global::System.Int32? Zz_temp {
            get {
                return this._Zz_temp;
            }
            set {
                this.OnPropertyChanged("Zz_temp", this._Zz_temp, value);
                this._Zz_temp = value;
            }
        }
        
        public global::System.Int32? Xlm_temp {
            get {
                return this._Xlm_temp;
            }
            set {
                this.OnPropertyChanged("Xlm_temp", this._Xlm_temp, value);
                this._Xlm_temp = value;
            }
        }
        
        public global::System.Int32? Plan_Use {
            get {
                return this._Plan_Use;
            }
            set {
                this.OnPropertyChanged("Plan_Use", this._Plan_Use, value);
                this._Plan_Use = value;
            }
        }
        
        public global::System.Int32? In_XLtime {
            get {
                return this._In_XLtime;
            }
            set {
                this.OnPropertyChanged("In_XLtime", this._In_XLtime, value);
                this._In_XLtime = value;
            }
        }
        
        public global::System.Int32? PJ_alarmtime {
            get {
                return this._PJ_alarmtime;
            }
            set {
                this.OnPropertyChanged("PJ_alarmtime", this._PJ_alarmtime, value);
                this._PJ_alarmtime = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Pmt_Recipe._Pmt_RecipeEntityConfiguration == null)) {
                Pmt_Recipe._Pmt_RecipeEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Pmt_Recipe");
            }
            return Pmt_Recipe._Pmt_RecipeEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._Equip_Code,
                    this._Mater_Code,
                    this._Edt_Code,
                    this._Mater_Name,
                    this._Recipe_Type,
                    this._User_EdtCode,
                    this._Recipe_State,
                    this._Define_Date,
                    this._Modify_Time,
                    this._Done_Time,
                    this._Shelf_Num,
                    this._Total_Weight,
                    this._Fill_Coef,
                    this._CB_RecycleType,
                    this._CB_RecycleTime,
                    this._OverTemp_MinTime,
                    this._OverTime_Time,
                    this._OverTemp_Temp,
                    this._Max_InPolyTemp,
                    this._Min_InPolyTemp,
                    this._In_PolyTime,
                    this._In_CarbonTime,
                    this._In_OilTime,
                    this._In_PowderTime,
                    this._Roll_SpeedDiff,
                    this._Ram_PressDiff,
                    this._Is_UseAreaTemp,
                    this._Side_Temp,
                    this._Side_TempDiff,
                    this._Roll_Temp,
                    this._Roll_TempDiff,
                    this._Ddoor_Temp,
                    this._Ddoor_TempDiff,
                    this._Oper_Code,
                    this._Mem_Note,
                    this._Recipe_Code,
                    this._Start_datetime,
                    this._End_datetime,
                    this._Equip_prior,
                    this._Recipe_typecode,
                    this._Rub_typecode,
                    this._Rub_type,
                    this._Mkind_code,
                    this._Ikind_code,
                    this._Congl_rang,
                    this._Sds_temp,
                    this._Mini_time,
                    this._Audit_flag,
                    this._Audit_name,
                    this._Audit_date,
                    this._Recipe_Dic,
                    this._Stay_time,
                    this._Rearch_code,
                    this._Black_reuse,
                    this._Reuse_time,
                    this._Expire_time,
                    this._Over_temp,
                    this._Max_temp,
                    this._Min_temp,
                    this._If_not,
                    this._Zz_temp,
                    this._Xlm_temp,
                    this._Plan_Use,
                    this._In_XLtime,
                    this._PJ_alarmtime};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_Code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mater_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Edt_Code = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mater_Name = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Recipe_Type = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._User_EdtCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Recipe_State = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Define_Date = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Modify_Time = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Done_Time = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Shelf_Num = reader.GetInt32(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Total_Weight = reader.GetDecimal(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Fill_Coef = reader.GetDecimal(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._CB_RecycleType = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._CB_RecycleTime = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._OverTemp_MinTime = reader.GetInt32(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._OverTime_Time = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._OverTemp_Temp = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Max_InPolyTemp = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Min_InPolyTemp = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._In_PolyTime = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._In_CarbonTime = reader.GetInt32(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._In_OilTime = reader.GetInt32(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._In_PowderTime = reader.GetInt32(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Roll_SpeedDiff = reader.GetInt32(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._Ram_PressDiff = reader.GetInt32(26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._Is_UseAreaTemp = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Side_Temp = reader.GetInt32(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._Side_TempDiff = reader.GetInt32(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._Roll_Temp = reader.GetInt32(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._Roll_TempDiff = reader.GetInt32(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._Ddoor_Temp = reader.GetInt32(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._Ddoor_TempDiff = reader.GetInt32(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._Oper_Code = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._Mem_Note = reader.GetString(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._Recipe_Code = reader.GetString(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._Start_datetime = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._End_datetime = reader.GetString(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._Equip_prior = reader.GetString(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._Recipe_typecode = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._Rub_typecode = reader.GetString(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._Rub_type = reader.GetString(42);
            }
            if ((false == reader.IsDBNull(43))) {
                this._Mkind_code = reader.GetString(43);
            }
            if ((false == reader.IsDBNull(44))) {
                this._Ikind_code = reader.GetString(44);
            }
            if ((false == reader.IsDBNull(45))) {
                this._Congl_rang = reader.GetString(45);
            }
            if ((false == reader.IsDBNull(46))) {
                this._Sds_temp = reader.GetInt32(46);
            }
            if ((false == reader.IsDBNull(47))) {
                this._Mini_time = reader.GetInt32(47);
            }
            if ((false == reader.IsDBNull(48))) {
                this._Audit_flag = reader.GetString(48);
            }
            if ((false == reader.IsDBNull(49))) {
                this._Audit_name = reader.GetString(49);
            }
            if ((false == reader.IsDBNull(50))) {
                this._Audit_date = reader.GetString(50);
            }
            if ((false == reader.IsDBNull(51))) {
                this._Recipe_Dic = reader.GetString(51);
            }
            if ((false == reader.IsDBNull(52))) {
                this._Stay_time = reader.GetInt32(52);
            }
            if ((false == reader.IsDBNull(53))) {
                this._Rearch_code = reader.GetString(53);
            }
            if ((false == reader.IsDBNull(54))) {
                this._Black_reuse = reader.GetInt32(54);
            }
            if ((false == reader.IsDBNull(55))) {
                this._Reuse_time = reader.GetInt32(55);
            }
            if ((false == reader.IsDBNull(56))) {
                this._Expire_time = reader.GetInt32(56);
            }
            if ((false == reader.IsDBNull(57))) {
                this._Over_temp = reader.GetInt32(57);
            }
            if ((false == reader.IsDBNull(58))) {
                this._Max_temp = reader.GetInt32(58);
            }
            if ((false == reader.IsDBNull(59))) {
                this._Min_temp = reader.GetInt32(59);
            }
            if ((false == reader.IsDBNull(60))) {
                this._If_not = reader.GetString(60);
            }
            if ((false == reader.IsDBNull(61))) {
                this._Zz_temp = reader.GetInt32(61);
            }
            if ((false == reader.IsDBNull(62))) {
                this._Xlm_temp = reader.GetInt32(62);
            }
            if ((false == reader.IsDBNull(63))) {
                this._Plan_Use = reader.GetInt32(63);
            }
            if ((false == reader.IsDBNull(64))) {
                this._In_XLtime = reader.GetInt32(64);
            }
            if ((false == reader.IsDBNull(65))) {
                this._PJ_alarmtime = reader.GetInt32(65);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_Code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mater_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Edt_Code = ((int)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Mater_Name = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Recipe_Type = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._User_EdtCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Recipe_State = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Define_Date = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Modify_Time = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Done_Time = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Shelf_Num = ((System.Nullable<int>)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Total_Weight = ((System.Nullable<decimal>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Fill_Coef = ((System.Nullable<decimal>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._CB_RecycleType = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._CB_RecycleTime = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._OverTemp_MinTime = ((System.Nullable<int>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._OverTime_Time = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._OverTemp_Temp = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Max_InPolyTemp = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Min_InPolyTemp = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._In_PolyTime = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._In_CarbonTime = ((System.Nullable<int>)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._In_OilTime = ((System.Nullable<int>)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._In_PowderTime = ((System.Nullable<int>)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Roll_SpeedDiff = ((System.Nullable<int>)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._Ram_PressDiff = ((System.Nullable<int>)(row[26]));
            }
            if ((false == row.IsNull(27))) {
                this._Is_UseAreaTemp = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._Side_Temp = ((System.Nullable<int>)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._Side_TempDiff = ((System.Nullable<int>)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._Roll_Temp = ((System.Nullable<int>)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._Roll_TempDiff = ((System.Nullable<int>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._Ddoor_Temp = ((System.Nullable<int>)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._Ddoor_TempDiff = ((System.Nullable<int>)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._Oper_Code = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._Mem_Note = ((string)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._Recipe_Code = ((string)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._Start_datetime = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._End_datetime = ((string)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._Equip_prior = ((string)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._Recipe_typecode = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._Rub_typecode = ((string)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._Rub_type = ((string)(row[42]));
            }
            if ((false == row.IsNull(43))) {
                this._Mkind_code = ((string)(row[43]));
            }
            if ((false == row.IsNull(44))) {
                this._Ikind_code = ((string)(row[44]));
            }
            if ((false == row.IsNull(45))) {
                this._Congl_rang = ((string)(row[45]));
            }
            if ((false == row.IsNull(46))) {
                this._Sds_temp = ((System.Nullable<int>)(row[46]));
            }
            if ((false == row.IsNull(47))) {
                this._Mini_time = ((System.Nullable<int>)(row[47]));
            }
            if ((false == row.IsNull(48))) {
                this._Audit_flag = ((string)(row[48]));
            }
            if ((false == row.IsNull(49))) {
                this._Audit_name = ((string)(row[49]));
            }
            if ((false == row.IsNull(50))) {
                this._Audit_date = ((string)(row[50]));
            }
            if ((false == row.IsNull(51))) {
                this._Recipe_Dic = ((string)(row[51]));
            }
            if ((false == row.IsNull(52))) {
                this._Stay_time = ((System.Nullable<int>)(row[52]));
            }
            if ((false == row.IsNull(53))) {
                this._Rearch_code = ((string)(row[53]));
            }
            if ((false == row.IsNull(54))) {
                this._Black_reuse = ((System.Nullable<int>)(row[54]));
            }
            if ((false == row.IsNull(55))) {
                this._Reuse_time = ((System.Nullable<int>)(row[55]));
            }
            if ((false == row.IsNull(56))) {
                this._Expire_time = ((System.Nullable<int>)(row[56]));
            }
            if ((false == row.IsNull(57))) {
                this._Over_temp = ((System.Nullable<int>)(row[57]));
            }
            if ((false == row.IsNull(58))) {
                this._Max_temp = ((System.Nullable<int>)(row[58]));
            }
            if ((false == row.IsNull(59))) {
                this._Min_temp = ((System.Nullable<int>)(row[59]));
            }
            if ((false == row.IsNull(60))) {
                this._If_not = ((string)(row[60]));
            }
            if ((false == row.IsNull(61))) {
                this._Zz_temp = ((System.Nullable<int>)(row[61]));
            }
            if ((false == row.IsNull(62))) {
                this._Xlm_temp = ((System.Nullable<int>)(row[62]));
            }
            if ((false == row.IsNull(63))) {
                this._Plan_Use = ((System.Nullable<int>)(row[63]));
            }
            if ((false == row.IsNull(64))) {
                this._In_XLtime = ((System.Nullable<int>)(row[64]));
            }
            if ((false == row.IsNull(65))) {
                this._PJ_alarmtime = ((System.Nullable<int>)(row[65]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Pmt_Recipe).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.Pmt_Recipe)(obj)).isAttached) 
                        && (this.Equip_Code == ((global::Mesnac.Entity.Pmt_Recipe)(obj)).Equip_Code)) 
                        && (this.Mater_Code == ((global::Mesnac.Entity.Pmt_Recipe)(obj)).Mater_Code)) 
                        && (this.Edt_Code == ((global::Mesnac.Entity.Pmt_Recipe)(obj)).Edt_Code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Mater_Code = new NBear.Common.PropertyItem("Mater_Code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Edt_Code = new NBear.Common.PropertyItem("Edt_Code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Mater_Name = new NBear.Common.PropertyItem("Mater_Name", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Recipe_Type = new NBear.Common.PropertyItem("Recipe_Type", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _User_EdtCode = new NBear.Common.PropertyItem("User_EdtCode", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Recipe_State = new NBear.Common.PropertyItem("Recipe_State", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Define_Date = new NBear.Common.PropertyItem("Define_Date", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Modify_Time = new NBear.Common.PropertyItem("Modify_Time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Done_Time = new NBear.Common.PropertyItem("Done_Time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Shelf_Num = new NBear.Common.PropertyItem("Shelf_Num", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Total_Weight = new NBear.Common.PropertyItem("Total_Weight", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Fill_Coef = new NBear.Common.PropertyItem("Fill_Coef", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _CB_RecycleType = new NBear.Common.PropertyItem("CB_RecycleType", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _CB_RecycleTime = new NBear.Common.PropertyItem("CB_RecycleTime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _OverTemp_MinTime = new NBear.Common.PropertyItem("OverTemp_MinTime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _OverTime_Time = new NBear.Common.PropertyItem("OverTime_Time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _OverTemp_Temp = new NBear.Common.PropertyItem("OverTemp_Temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Max_InPolyTemp = new NBear.Common.PropertyItem("Max_InPolyTemp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Min_InPolyTemp = new NBear.Common.PropertyItem("Min_InPolyTemp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _In_PolyTime = new NBear.Common.PropertyItem("In_PolyTime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _In_CarbonTime = new NBear.Common.PropertyItem("In_CarbonTime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _In_OilTime = new NBear.Common.PropertyItem("In_OilTime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _In_PowderTime = new NBear.Common.PropertyItem("In_PowderTime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Roll_SpeedDiff = new NBear.Common.PropertyItem("Roll_SpeedDiff", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Ram_PressDiff = new NBear.Common.PropertyItem("Ram_PressDiff", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Is_UseAreaTemp = new NBear.Common.PropertyItem("Is_UseAreaTemp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Side_Temp = new NBear.Common.PropertyItem("Side_Temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Side_TempDiff = new NBear.Common.PropertyItem("Side_TempDiff", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Roll_Temp = new NBear.Common.PropertyItem("Roll_Temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Roll_TempDiff = new NBear.Common.PropertyItem("Roll_TempDiff", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Ddoor_Temp = new NBear.Common.PropertyItem("Ddoor_Temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Ddoor_TempDiff = new NBear.Common.PropertyItem("Ddoor_TempDiff", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Oper_Code = new NBear.Common.PropertyItem("Oper_Code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Mem_Note = new NBear.Common.PropertyItem("Mem_Note", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Recipe_Code = new NBear.Common.PropertyItem("Recipe_Code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Start_datetime = new NBear.Common.PropertyItem("Start_datetime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _End_datetime = new NBear.Common.PropertyItem("End_datetime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Equip_prior = new NBear.Common.PropertyItem("Equip_prior", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Recipe_typecode = new NBear.Common.PropertyItem("Recipe_typecode", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Rub_typecode = new NBear.Common.PropertyItem("Rub_typecode", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Rub_type = new NBear.Common.PropertyItem("Rub_type", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Mkind_code = new NBear.Common.PropertyItem("Mkind_code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Ikind_code = new NBear.Common.PropertyItem("Ikind_code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Congl_rang = new NBear.Common.PropertyItem("Congl_rang", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Sds_temp = new NBear.Common.PropertyItem("Sds_temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Mini_time = new NBear.Common.PropertyItem("Mini_time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Audit_flag = new NBear.Common.PropertyItem("Audit_flag", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Audit_name = new NBear.Common.PropertyItem("Audit_name", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Audit_date = new NBear.Common.PropertyItem("Audit_date", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Recipe_Dic = new NBear.Common.PropertyItem("Recipe_Dic", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Stay_time = new NBear.Common.PropertyItem("Stay_time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Rearch_code = new NBear.Common.PropertyItem("Rearch_code", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Black_reuse = new NBear.Common.PropertyItem("Black_reuse", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Reuse_time = new NBear.Common.PropertyItem("Reuse_time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Expire_time = new NBear.Common.PropertyItem("Expire_time", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Over_temp = new NBear.Common.PropertyItem("Over_temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Max_temp = new NBear.Common.PropertyItem("Max_temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Min_temp = new NBear.Common.PropertyItem("Min_temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _If_not = new NBear.Common.PropertyItem("If_not", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Zz_temp = new NBear.Common.PropertyItem("Zz_temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Xlm_temp = new NBear.Common.PropertyItem("Xlm_temp", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _Plan_Use = new NBear.Common.PropertyItem("Plan_Use", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _In_XLtime = new NBear.Common.PropertyItem("In_XLtime", "Mesnac.Entity.Pmt_Recipe");
            
            protected NBear.Common.PropertyItem _PJ_alarmtime = new NBear.Common.PropertyItem("PJ_alarmtime", "Mesnac.Entity.Pmt_Recipe");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Code", _Mater_Code.EntityConfiguration, _Mater_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Edt_Code {
                get {
                    if ((aliasName == null)) {
                        return _Edt_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Edt_Code", _Edt_Code.EntityConfiguration, _Edt_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_Name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_Name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_Name", _Mater_Name.EntityConfiguration, _Mater_Name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_Type {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_Type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_Type", _Recipe_Type.EntityConfiguration, _Recipe_Type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem User_EdtCode {
                get {
                    if ((aliasName == null)) {
                        return _User_EdtCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("User_EdtCode", _User_EdtCode.EntityConfiguration, _User_EdtCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_State {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_State;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_State", _Recipe_State.EntityConfiguration, _Recipe_State.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Define_Date {
                get {
                    if ((aliasName == null)) {
                        return _Define_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Define_Date", _Define_Date.EntityConfiguration, _Define_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Modify_Time {
                get {
                    if ((aliasName == null)) {
                        return _Modify_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Modify_Time", _Modify_Time.EntityConfiguration, _Modify_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Done_Time {
                get {
                    if ((aliasName == null)) {
                        return _Done_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Done_Time", _Done_Time.EntityConfiguration, _Done_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelf_Num {
                get {
                    if ((aliasName == null)) {
                        return _Shelf_Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelf_Num", _Shelf_Num.EntityConfiguration, _Shelf_Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Total_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Total_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Total_Weight", _Total_Weight.EntityConfiguration, _Total_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fill_Coef {
                get {
                    if ((aliasName == null)) {
                        return _Fill_Coef;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fill_Coef", _Fill_Coef.EntityConfiguration, _Fill_Coef.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CB_RecycleType {
                get {
                    if ((aliasName == null)) {
                        return _CB_RecycleType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CB_RecycleType", _CB_RecycleType.EntityConfiguration, _CB_RecycleType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CB_RecycleTime {
                get {
                    if ((aliasName == null)) {
                        return _CB_RecycleTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CB_RecycleTime", _CB_RecycleTime.EntityConfiguration, _CB_RecycleTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTemp_MinTime {
                get {
                    if ((aliasName == null)) {
                        return _OverTemp_MinTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTemp_MinTime", _OverTemp_MinTime.EntityConfiguration, _OverTemp_MinTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTime_Time {
                get {
                    if ((aliasName == null)) {
                        return _OverTime_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTime_Time", _OverTime_Time.EntityConfiguration, _OverTime_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OverTemp_Temp {
                get {
                    if ((aliasName == null)) {
                        return _OverTemp_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OverTemp_Temp", _OverTemp_Temp.EntityConfiguration, _OverTemp_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_InPolyTemp {
                get {
                    if ((aliasName == null)) {
                        return _Max_InPolyTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_InPolyTemp", _Max_InPolyTemp.EntityConfiguration, _Max_InPolyTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Min_InPolyTemp {
                get {
                    if ((aliasName == null)) {
                        return _Min_InPolyTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Min_InPolyTemp", _Min_InPolyTemp.EntityConfiguration, _Min_InPolyTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_PolyTime {
                get {
                    if ((aliasName == null)) {
                        return _In_PolyTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_PolyTime", _In_PolyTime.EntityConfiguration, _In_PolyTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_CarbonTime {
                get {
                    if ((aliasName == null)) {
                        return _In_CarbonTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_CarbonTime", _In_CarbonTime.EntityConfiguration, _In_CarbonTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_OilTime {
                get {
                    if ((aliasName == null)) {
                        return _In_OilTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_OilTime", _In_OilTime.EntityConfiguration, _In_OilTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_PowderTime {
                get {
                    if ((aliasName == null)) {
                        return _In_PowderTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_PowderTime", _In_PowderTime.EntityConfiguration, _In_PowderTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Roll_SpeedDiff {
                get {
                    if ((aliasName == null)) {
                        return _Roll_SpeedDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Roll_SpeedDiff", _Roll_SpeedDiff.EntityConfiguration, _Roll_SpeedDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ram_PressDiff {
                get {
                    if ((aliasName == null)) {
                        return _Ram_PressDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ram_PressDiff", _Ram_PressDiff.EntityConfiguration, _Ram_PressDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Is_UseAreaTemp {
                get {
                    if ((aliasName == null)) {
                        return _Is_UseAreaTemp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Is_UseAreaTemp", _Is_UseAreaTemp.EntityConfiguration, _Is_UseAreaTemp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Side_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Side_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Side_Temp", _Side_Temp.EntityConfiguration, _Side_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Side_TempDiff {
                get {
                    if ((aliasName == null)) {
                        return _Side_TempDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Side_TempDiff", _Side_TempDiff.EntityConfiguration, _Side_TempDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Roll_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Roll_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Roll_Temp", _Roll_Temp.EntityConfiguration, _Roll_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Roll_TempDiff {
                get {
                    if ((aliasName == null)) {
                        return _Roll_TempDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Roll_TempDiff", _Roll_TempDiff.EntityConfiguration, _Roll_TempDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ddoor_Temp {
                get {
                    if ((aliasName == null)) {
                        return _Ddoor_Temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ddoor_Temp", _Ddoor_Temp.EntityConfiguration, _Ddoor_Temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ddoor_TempDiff {
                get {
                    if ((aliasName == null)) {
                        return _Ddoor_TempDiff;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ddoor_TempDiff", _Ddoor_TempDiff.EntityConfiguration, _Ddoor_TempDiff.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Oper_Code {
                get {
                    if ((aliasName == null)) {
                        return _Oper_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Oper_Code", _Oper_Code.EntityConfiguration, _Oper_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_Note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_Note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_Note", _Mem_Note.EntityConfiguration, _Mem_Note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_Code {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_Code", _Recipe_Code.EntityConfiguration, _Recipe_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Start_datetime {
                get {
                    if ((aliasName == null)) {
                        return _Start_datetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Start_datetime", _Start_datetime.EntityConfiguration, _Start_datetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem End_datetime {
                get {
                    if ((aliasName == null)) {
                        return _End_datetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("End_datetime", _End_datetime.EntityConfiguration, _End_datetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_prior {
                get {
                    if ((aliasName == null)) {
                        return _Equip_prior;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_prior", _Equip_prior.EntityConfiguration, _Equip_prior.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_typecode {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_typecode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_typecode", _Recipe_typecode.EntityConfiguration, _Recipe_typecode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Rub_typecode {
                get {
                    if ((aliasName == null)) {
                        return _Rub_typecode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Rub_typecode", _Rub_typecode.EntityConfiguration, _Rub_typecode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Rub_type {
                get {
                    if ((aliasName == null)) {
                        return _Rub_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Rub_type", _Rub_type.EntityConfiguration, _Rub_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mkind_code {
                get {
                    if ((aliasName == null)) {
                        return _Mkind_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mkind_code", _Mkind_code.EntityConfiguration, _Mkind_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ikind_code {
                get {
                    if ((aliasName == null)) {
                        return _Ikind_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ikind_code", _Ikind_code.EntityConfiguration, _Ikind_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Congl_rang {
                get {
                    if ((aliasName == null)) {
                        return _Congl_rang;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Congl_rang", _Congl_rang.EntityConfiguration, _Congl_rang.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Sds_temp {
                get {
                    if ((aliasName == null)) {
                        return _Sds_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Sds_temp", _Sds_temp.EntityConfiguration, _Sds_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mini_time {
                get {
                    if ((aliasName == null)) {
                        return _Mini_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mini_time", _Mini_time.EntityConfiguration, _Mini_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Audit_flag {
                get {
                    if ((aliasName == null)) {
                        return _Audit_flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Audit_flag", _Audit_flag.EntityConfiguration, _Audit_flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Audit_name {
                get {
                    if ((aliasName == null)) {
                        return _Audit_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Audit_name", _Audit_name.EntityConfiguration, _Audit_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Audit_date {
                get {
                    if ((aliasName == null)) {
                        return _Audit_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Audit_date", _Audit_date.EntityConfiguration, _Audit_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_Dic {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_Dic;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_Dic", _Recipe_Dic.EntityConfiguration, _Recipe_Dic.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Stay_time {
                get {
                    if ((aliasName == null)) {
                        return _Stay_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Stay_time", _Stay_time.EntityConfiguration, _Stay_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Rearch_code {
                get {
                    if ((aliasName == null)) {
                        return _Rearch_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Rearch_code", _Rearch_code.EntityConfiguration, _Rearch_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Black_reuse {
                get {
                    if ((aliasName == null)) {
                        return _Black_reuse;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Black_reuse", _Black_reuse.EntityConfiguration, _Black_reuse.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Reuse_time {
                get {
                    if ((aliasName == null)) {
                        return _Reuse_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Reuse_time", _Reuse_time.EntityConfiguration, _Reuse_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Expire_time {
                get {
                    if ((aliasName == null)) {
                        return _Expire_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Expire_time", _Expire_time.EntityConfiguration, _Expire_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Over_temp {
                get {
                    if ((aliasName == null)) {
                        return _Over_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Over_temp", _Over_temp.EntityConfiguration, _Over_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Max_temp {
                get {
                    if ((aliasName == null)) {
                        return _Max_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Max_temp", _Max_temp.EntityConfiguration, _Max_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Min_temp {
                get {
                    if ((aliasName == null)) {
                        return _Min_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Min_temp", _Min_temp.EntityConfiguration, _Min_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem If_not {
                get {
                    if ((aliasName == null)) {
                        return _If_not;
                    }
                    else {
                        return new NBear.Common.PropertyItem("If_not", _If_not.EntityConfiguration, _If_not.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Zz_temp {
                get {
                    if ((aliasName == null)) {
                        return _Zz_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Zz_temp", _Zz_temp.EntityConfiguration, _Zz_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Xlm_temp {
                get {
                    if ((aliasName == null)) {
                        return _Xlm_temp;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Xlm_temp", _Xlm_temp.EntityConfiguration, _Xlm_temp.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_Use {
                get {
                    if ((aliasName == null)) {
                        return _Plan_Use;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_Use", _Plan_Use.EntityConfiguration, _Plan_Use.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_XLtime {
                get {
                    if ((aliasName == null)) {
                        return _In_XLtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_XLtime", _In_XLtime.EntityConfiguration, _In_XLtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PJ_alarmtime {
                get {
                    if ((aliasName == null)) {
                        return _PJ_alarmtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PJ_alarmtime", _PJ_alarmtime.EntityConfiguration, _PJ_alarmtime.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
