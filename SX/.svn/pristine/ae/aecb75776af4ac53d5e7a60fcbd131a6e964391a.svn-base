//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptShiftTimeRuleArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptShiftTimeRule> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PptShiftTimeRule\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PptShiftTimeRule\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherit" +
        "ed=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" is" +
        "NotNull=\"true\" />\r\n    <Property name=\"ProcedureID\" type=\"System.Nullable`1[Syst" +
        "em.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"ProcedureID\" mappingColumnType=\"System.Nullable`1[Syste" +
        "m.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"SerialID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SerialID\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftClass1ID\" type=\"System.Nul" +
        "lable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"ShiftClass1ID\" mappingColumnType=\"System.Nu" +
        "llable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"ShiftClass2ID\" type=\"System.Nullable`1[System.Int32]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"ShiftClass2ID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlT" +
        "ype=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiftCl" +
        "ass3ID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiftClass3ID\" mapp" +
        "ingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PptShiftTimeRule : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptShiftTimeRuleEntityConfiguration;
        
        protected int _ObjID;
        
        protected global::System.Int32? _ProcedureID;
        
        protected global::System.Int32? _SerialID;
        
        protected global::System.Int32? _ShiftClass1ID;
        
        protected global::System.Int32? _ShiftClass2ID;
        
        protected global::System.Int32? _ShiftClass3ID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptShiftTimeRule left, global::Mesnac.Entity.PptShiftTimeRule right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptShiftTimeRule left, global::Mesnac.Entity.PptShiftTimeRule right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public global::System.Int32? ProcedureID {
            get {
                return this._ProcedureID;
            }
            set {
                this.OnPropertyChanged("ProcedureID", this._ProcedureID, value);
                this._ProcedureID = value;
            }
        }
        
        public global::System.Int32? SerialID {
            get {
                return this._SerialID;
            }
            set {
                this.OnPropertyChanged("SerialID", this._SerialID, value);
                this._SerialID = value;
            }
        }
        
        public global::System.Int32? ShiftClass1ID {
            get {
                return this._ShiftClass1ID;
            }
            set {
                this.OnPropertyChanged("ShiftClass1ID", this._ShiftClass1ID, value);
                this._ShiftClass1ID = value;
            }
        }
        
        public global::System.Int32? ShiftClass2ID {
            get {
                return this._ShiftClass2ID;
            }
            set {
                this.OnPropertyChanged("ShiftClass2ID", this._ShiftClass2ID, value);
                this._ShiftClass2ID = value;
            }
        }
        
        public global::System.Int32? ShiftClass3ID {
            get {
                return this._ShiftClass3ID;
            }
            set {
                this.OnPropertyChanged("ShiftClass3ID", this._ShiftClass3ID, value);
                this._ShiftClass3ID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptShiftTimeRule._PptShiftTimeRuleEntityConfiguration == null)) {
                PptShiftTimeRule._PptShiftTimeRuleEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptShiftTimeRule");
            }
            return PptShiftTimeRule._PptShiftTimeRuleEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._ProcedureID,
                    this._SerialID,
                    this._ShiftClass1ID,
                    this._ShiftClass2ID,
                    this._ShiftClass3ID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._ProcedureID = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._SerialID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._ShiftClass1ID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._ShiftClass2ID = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._ShiftClass3ID = reader.GetInt32(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._ProcedureID = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._SerialID = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._ShiftClass1ID = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._ShiftClass2ID = ((System.Nullable<int>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._ShiftClass3ID = ((System.Nullable<int>)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptShiftTimeRule).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptShiftTimeRule)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.PptShiftTimeRule)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PptShiftTimeRule");
            
            protected NBear.Common.PropertyItem _ProcedureID = new NBear.Common.PropertyItem("ProcedureID", "Mesnac.Entity.PptShiftTimeRule");
            
            protected NBear.Common.PropertyItem _SerialID = new NBear.Common.PropertyItem("SerialID", "Mesnac.Entity.PptShiftTimeRule");
            
            protected NBear.Common.PropertyItem _ShiftClass1ID = new NBear.Common.PropertyItem("ShiftClass1ID", "Mesnac.Entity.PptShiftTimeRule");
            
            protected NBear.Common.PropertyItem _ShiftClass2ID = new NBear.Common.PropertyItem("ShiftClass2ID", "Mesnac.Entity.PptShiftTimeRule");
            
            protected NBear.Common.PropertyItem _ShiftClass3ID = new NBear.Common.PropertyItem("ShiftClass3ID", "Mesnac.Entity.PptShiftTimeRule");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProcedureID {
                get {
                    if ((aliasName == null)) {
                        return _ProcedureID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProcedureID", _ProcedureID.EntityConfiguration, _ProcedureID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialID {
                get {
                    if ((aliasName == null)) {
                        return _SerialID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialID", _SerialID.EntityConfiguration, _SerialID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftClass1ID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftClass1ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftClass1ID", _ShiftClass1ID.EntityConfiguration, _ShiftClass1ID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftClass2ID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftClass2ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftClass2ID", _ShiftClass2ID.EntityConfiguration, _ShiftClass2ID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftClass3ID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftClass3ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftClass3ID", _ShiftClass3ID.EntityConfiguration, _ShiftClass3ID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
