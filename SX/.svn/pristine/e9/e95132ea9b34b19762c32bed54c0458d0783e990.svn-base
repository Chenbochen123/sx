//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_EquipArchivesArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_EquipArchives> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_EquipArchives\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_EquipArchives\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"Iid\" type=\"System.Int64\" isInherit" +
        "ed=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"Iid\" mappingColumnType=\"System.Int64\" sqlType=\"bigint\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"Etype\" type=\"System.Nullable`1[System.In" +
        "t32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Etype\" mappingColumnType=\"System.Nullable`1[System.Int32]\" s" +
        "qlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Seri" +
        "alid\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fal" +
        "se\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fals" +
        "e\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPrope" +
        "rtyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Serialid\" mappingColu" +
        "mnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Depname\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Depname\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Workshop\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Workshop\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_No\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Equip_No\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"E" +
        "quip_Code\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Equip_Code\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"Equip_name\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip_name\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Equip_Spec\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Equip_Spec\" mappingColumnType=\"System.String\" sqlType=\"varchar(40)\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_param\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Equip_param\" mappingColumnType=\"System.String\" sqlType=\"va" +
        "rchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_" +
        "Type\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit" +
        "=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fal" +
        "se\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" is" +
        "SerializationIgnore=\"false\" mappingName=\"Equip_Type\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"Made_fac\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Made_fac\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Made_date\" type=\"System.String\" isInherited=\"false\" i" +
        "sReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isF" +
        "riendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false" +
        "\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Made_da" +
        "te\" mappingColumnType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Fac_no\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Fac_no\" mappingColumnType=\"System.String\" sqlType=\"varchar(40)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Use_pos\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"Use_pos\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Use_dep\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Use_dep\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"B" +
        "uy_date\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"Buy_date\" mappingColumnType=\"System." +
        "String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Use_date\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Use_date\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(30)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Equip_State\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Equip" +
        "_State\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_source\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Equip_source\" mappingColumnType=\"System.String\" sqlType=\"varchar" +
        "(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Use_No\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"Use_No\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"N" +
        "um_value1\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Num_value1\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Num_value2\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Num_value2\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Num_value" +
        "3\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Num_value3\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Mem1\" type=\"System.String\" isInheri" +
        "ted=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuer" +
        "y=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPr" +
        "operty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapping" +
        "Name=\"Mem1\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mem2\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\"" +
        " isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" is" +
        "IndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" " +
        "mappingName=\"Mem2\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Check_date\" type=\"Sys" +
        "tem.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"Check_date\" mappingColumnType=\"Sy" +
        "stem.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Check_next\" type=\"System.Nullable`1[System.D" +
        "ateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"Check_next\" mappingColumnType=\"System.Nullable`1[System." +
        "DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Check_no\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Check_no\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"CYCLE\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"CYCLE\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguratio" +
        "n>")]
    public partial class Eqm_EquipArchives : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_EquipArchivesEntityConfiguration;
        
        protected long _Iid;
        
        protected global::System.Int32? _Etype;
        
        protected global::System.Int32? _Serialid;
        
        protected string _Depname;
        
        protected string _Workshop;
        
        protected string _Equip_No;
        
        protected string _Equip_Code;
        
        protected string _Equip_name;
        
        protected string _Equip_Spec;
        
        protected string _Equip_param;
        
        protected string _Equip_Type;
        
        protected string _Made_fac;
        
        protected string _Made_date;
        
        protected string _Fac_no;
        
        protected string _Use_pos;
        
        protected string _Use_dep;
        
        protected string _Buy_date;
        
        protected string _Use_date;
        
        protected string _Equip_State;
        
        protected string _Equip_source;
        
        protected string _Use_No;
        
        protected global::System.Decimal? _Num_value1;
        
        protected string _Num_value2;
        
        protected global::System.Decimal? _Num_value3;
        
        protected string _Mem1;
        
        protected string _Mem2;
        
        protected global::System.DateTime? _Check_date;
        
        protected global::System.DateTime? _Check_next;
        
        protected string _Check_no;
        
        protected global::System.Int32? _CYCLE;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_EquipArchives left, global::Mesnac.Entity.Eqm_EquipArchives right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_EquipArchives left, global::Mesnac.Entity.Eqm_EquipArchives right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public long Iid {
            get {
                return this._Iid;
            }
            set {
                this.OnPropertyChanged("Iid", this._Iid, value);
                this._Iid = value;
            }
        }
        
        public global::System.Int32? Etype {
            get {
                return this._Etype;
            }
            set {
                this.OnPropertyChanged("Etype", this._Etype, value);
                this._Etype = value;
            }
        }
        
        public global::System.Int32? Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public string Depname {
            get {
                return this._Depname;
            }
            set {
                this.OnPropertyChanged("Depname", this._Depname, value);
                this._Depname = value;
            }
        }
        
        public string Workshop {
            get {
                return this._Workshop;
            }
            set {
                this.OnPropertyChanged("Workshop", this._Workshop, value);
                this._Workshop = value;
            }
        }
        
        public string Equip_No {
            get {
                return this._Equip_No;
            }
            set {
                this.OnPropertyChanged("Equip_No", this._Equip_No, value);
                this._Equip_No = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public string Equip_name {
            get {
                return this._Equip_name;
            }
            set {
                this.OnPropertyChanged("Equip_name", this._Equip_name, value);
                this._Equip_name = value;
            }
        }
        
        public string Equip_Spec {
            get {
                return this._Equip_Spec;
            }
            set {
                this.OnPropertyChanged("Equip_Spec", this._Equip_Spec, value);
                this._Equip_Spec = value;
            }
        }
        
        public string Equip_param {
            get {
                return this._Equip_param;
            }
            set {
                this.OnPropertyChanged("Equip_param", this._Equip_param, value);
                this._Equip_param = value;
            }
        }
        
        public string Equip_Type {
            get {
                return this._Equip_Type;
            }
            set {
                this.OnPropertyChanged("Equip_Type", this._Equip_Type, value);
                this._Equip_Type = value;
            }
        }
        
        public string Made_fac {
            get {
                return this._Made_fac;
            }
            set {
                this.OnPropertyChanged("Made_fac", this._Made_fac, value);
                this._Made_fac = value;
            }
        }
        
        public string Made_date {
            get {
                return this._Made_date;
            }
            set {
                this.OnPropertyChanged("Made_date", this._Made_date, value);
                this._Made_date = value;
            }
        }
        
        public string Fac_no {
            get {
                return this._Fac_no;
            }
            set {
                this.OnPropertyChanged("Fac_no", this._Fac_no, value);
                this._Fac_no = value;
            }
        }
        
        public string Use_pos {
            get {
                return this._Use_pos;
            }
            set {
                this.OnPropertyChanged("Use_pos", this._Use_pos, value);
                this._Use_pos = value;
            }
        }
        
        public string Use_dep {
            get {
                return this._Use_dep;
            }
            set {
                this.OnPropertyChanged("Use_dep", this._Use_dep, value);
                this._Use_dep = value;
            }
        }
        
        public string Buy_date {
            get {
                return this._Buy_date;
            }
            set {
                this.OnPropertyChanged("Buy_date", this._Buy_date, value);
                this._Buy_date = value;
            }
        }
        
        public string Use_date {
            get {
                return this._Use_date;
            }
            set {
                this.OnPropertyChanged("Use_date", this._Use_date, value);
                this._Use_date = value;
            }
        }
        
        public string Equip_State {
            get {
                return this._Equip_State;
            }
            set {
                this.OnPropertyChanged("Equip_State", this._Equip_State, value);
                this._Equip_State = value;
            }
        }
        
        public string Equip_source {
            get {
                return this._Equip_source;
            }
            set {
                this.OnPropertyChanged("Equip_source", this._Equip_source, value);
                this._Equip_source = value;
            }
        }
        
        public string Use_No {
            get {
                return this._Use_No;
            }
            set {
                this.OnPropertyChanged("Use_No", this._Use_No, value);
                this._Use_No = value;
            }
        }
        
        public global::System.Decimal? Num_value1 {
            get {
                return this._Num_value1;
            }
            set {
                this.OnPropertyChanged("Num_value1", this._Num_value1, value);
                this._Num_value1 = value;
            }
        }
        
        public string Num_value2 {
            get {
                return this._Num_value2;
            }
            set {
                this.OnPropertyChanged("Num_value2", this._Num_value2, value);
                this._Num_value2 = value;
            }
        }
        
        public global::System.Decimal? Num_value3 {
            get {
                return this._Num_value3;
            }
            set {
                this.OnPropertyChanged("Num_value3", this._Num_value3, value);
                this._Num_value3 = value;
            }
        }
        
        public string Mem1 {
            get {
                return this._Mem1;
            }
            set {
                this.OnPropertyChanged("Mem1", this._Mem1, value);
                this._Mem1 = value;
            }
        }
        
        public string Mem2 {
            get {
                return this._Mem2;
            }
            set {
                this.OnPropertyChanged("Mem2", this._Mem2, value);
                this._Mem2 = value;
            }
        }
        
        public global::System.DateTime? Check_date {
            get {
                return this._Check_date;
            }
            set {
                this.OnPropertyChanged("Check_date", this._Check_date, value);
                this._Check_date = value;
            }
        }
        
        public global::System.DateTime? Check_next {
            get {
                return this._Check_next;
            }
            set {
                this.OnPropertyChanged("Check_next", this._Check_next, value);
                this._Check_next = value;
            }
        }
        
        public string Check_no {
            get {
                return this._Check_no;
            }
            set {
                this.OnPropertyChanged("Check_no", this._Check_no, value);
                this._Check_no = value;
            }
        }
        
        public global::System.Int32? CYCLE {
            get {
                return this._CYCLE;
            }
            set {
                this.OnPropertyChanged("CYCLE", this._CYCLE, value);
                this._CYCLE = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_EquipArchives._Eqm_EquipArchivesEntityConfiguration == null)) {
                Eqm_EquipArchives._Eqm_EquipArchivesEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_EquipArchives");
            }
            return Eqm_EquipArchives._Eqm_EquipArchivesEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Iid,
                    this._Etype,
                    this._Serialid,
                    this._Depname,
                    this._Workshop,
                    this._Equip_No,
                    this._Equip_Code,
                    this._Equip_name,
                    this._Equip_Spec,
                    this._Equip_param,
                    this._Equip_Type,
                    this._Made_fac,
                    this._Made_date,
                    this._Fac_no,
                    this._Use_pos,
                    this._Use_dep,
                    this._Buy_date,
                    this._Use_date,
                    this._Equip_State,
                    this._Equip_source,
                    this._Use_No,
                    this._Num_value1,
                    this._Num_value2,
                    this._Num_value3,
                    this._Mem1,
                    this._Mem2,
                    this._Check_date,
                    this._Check_next,
                    this._Check_no,
                    this._CYCLE};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Iid = reader.GetInt64(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Etype = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Serialid = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Depname = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Workshop = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Equip_No = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Equip_Code = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Equip_name = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Equip_Spec = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Equip_param = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Equip_Type = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Made_fac = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Made_date = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Fac_no = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Use_pos = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Use_dep = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Buy_date = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Use_date = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Equip_State = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Equip_source = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Use_No = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Num_value1 = reader.GetDecimal(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Num_value2 = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Num_value3 = reader.GetDecimal(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Mem1 = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Mem2 = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._Check_date = this.GetDateTime(reader, 26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._Check_next = this.GetDateTime(reader, 27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Check_no = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._CYCLE = reader.GetInt32(29);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Iid = ((long)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Etype = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Serialid = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Depname = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Workshop = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Equip_No = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Equip_Code = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Equip_name = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Equip_Spec = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Equip_param = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Equip_Type = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Made_fac = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Made_date = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Fac_no = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Use_pos = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Use_dep = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Buy_date = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Use_date = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Equip_State = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Equip_source = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Use_No = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Num_value1 = ((System.Nullable<decimal>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Num_value2 = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Num_value3 = ((System.Nullable<decimal>)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Mem1 = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Mem2 = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._Check_date = this.GetDateTime(row, 26);
            }
            if ((false == row.IsNull(27))) {
                this._Check_next = this.GetDateTime(row, 27);
            }
            if ((false == row.IsNull(28))) {
                this._Check_no = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._CYCLE = ((System.Nullable<int>)(row[29]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_EquipArchives).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_EquipArchives)(obj)).isAttached) 
                        && (this.Iid == ((global::Mesnac.Entity.Eqm_EquipArchives)(obj)).Iid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Iid = new NBear.Common.PropertyItem("Iid", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Etype = new NBear.Common.PropertyItem("Etype", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Depname = new NBear.Common.PropertyItem("Depname", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Workshop = new NBear.Common.PropertyItem("Workshop", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_No = new NBear.Common.PropertyItem("Equip_No", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_name = new NBear.Common.PropertyItem("Equip_name", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_Spec = new NBear.Common.PropertyItem("Equip_Spec", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_param = new NBear.Common.PropertyItem("Equip_param", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_Type = new NBear.Common.PropertyItem("Equip_Type", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Made_fac = new NBear.Common.PropertyItem("Made_fac", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Made_date = new NBear.Common.PropertyItem("Made_date", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Fac_no = new NBear.Common.PropertyItem("Fac_no", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Use_pos = new NBear.Common.PropertyItem("Use_pos", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Use_dep = new NBear.Common.PropertyItem("Use_dep", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Buy_date = new NBear.Common.PropertyItem("Buy_date", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Use_date = new NBear.Common.PropertyItem("Use_date", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_State = new NBear.Common.PropertyItem("Equip_State", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Equip_source = new NBear.Common.PropertyItem("Equip_source", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Use_No = new NBear.Common.PropertyItem("Use_No", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Num_value1 = new NBear.Common.PropertyItem("Num_value1", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Num_value2 = new NBear.Common.PropertyItem("Num_value2", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Num_value3 = new NBear.Common.PropertyItem("Num_value3", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Mem1 = new NBear.Common.PropertyItem("Mem1", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Mem2 = new NBear.Common.PropertyItem("Mem2", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Check_date = new NBear.Common.PropertyItem("Check_date", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Check_next = new NBear.Common.PropertyItem("Check_next", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _Check_no = new NBear.Common.PropertyItem("Check_no", "Mesnac.Entity.Eqm_EquipArchives");
            
            protected NBear.Common.PropertyItem _CYCLE = new NBear.Common.PropertyItem("CYCLE", "Mesnac.Entity.Eqm_EquipArchives");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Iid {
                get {
                    if ((aliasName == null)) {
                        return _Iid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Iid", _Iid.EntityConfiguration, _Iid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Etype {
                get {
                    if ((aliasName == null)) {
                        return _Etype;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Etype", _Etype.EntityConfiguration, _Etype.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Depname {
                get {
                    if ((aliasName == null)) {
                        return _Depname;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Depname", _Depname.EntityConfiguration, _Depname.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Workshop {
                get {
                    if ((aliasName == null)) {
                        return _Workshop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Workshop", _Workshop.EntityConfiguration, _Workshop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_No {
                get {
                    if ((aliasName == null)) {
                        return _Equip_No;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_No", _Equip_No.EntityConfiguration, _Equip_No.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_name {
                get {
                    if ((aliasName == null)) {
                        return _Equip_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_name", _Equip_name.EntityConfiguration, _Equip_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Spec {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Spec;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Spec", _Equip_Spec.EntityConfiguration, _Equip_Spec.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_param {
                get {
                    if ((aliasName == null)) {
                        return _Equip_param;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_param", _Equip_param.EntityConfiguration, _Equip_param.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Type {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Type", _Equip_Type.EntityConfiguration, _Equip_Type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Made_fac {
                get {
                    if ((aliasName == null)) {
                        return _Made_fac;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Made_fac", _Made_fac.EntityConfiguration, _Made_fac.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Made_date {
                get {
                    if ((aliasName == null)) {
                        return _Made_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Made_date", _Made_date.EntityConfiguration, _Made_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_no {
                get {
                    if ((aliasName == null)) {
                        return _Fac_no;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_no", _Fac_no.EntityConfiguration, _Fac_no.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Use_pos {
                get {
                    if ((aliasName == null)) {
                        return _Use_pos;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Use_pos", _Use_pos.EntityConfiguration, _Use_pos.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Use_dep {
                get {
                    if ((aliasName == null)) {
                        return _Use_dep;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Use_dep", _Use_dep.EntityConfiguration, _Use_dep.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Buy_date {
                get {
                    if ((aliasName == null)) {
                        return _Buy_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Buy_date", _Buy_date.EntityConfiguration, _Buy_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Use_date {
                get {
                    if ((aliasName == null)) {
                        return _Use_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Use_date", _Use_date.EntityConfiguration, _Use_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_State {
                get {
                    if ((aliasName == null)) {
                        return _Equip_State;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_State", _Equip_State.EntityConfiguration, _Equip_State.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_source {
                get {
                    if ((aliasName == null)) {
                        return _Equip_source;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_source", _Equip_source.EntityConfiguration, _Equip_source.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Use_No {
                get {
                    if ((aliasName == null)) {
                        return _Use_No;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Use_No", _Use_No.EntityConfiguration, _Use_No.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Num_value1 {
                get {
                    if ((aliasName == null)) {
                        return _Num_value1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Num_value1", _Num_value1.EntityConfiguration, _Num_value1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Num_value2 {
                get {
                    if ((aliasName == null)) {
                        return _Num_value2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Num_value2", _Num_value2.EntityConfiguration, _Num_value2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Num_value3 {
                get {
                    if ((aliasName == null)) {
                        return _Num_value3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Num_value3", _Num_value3.EntityConfiguration, _Num_value3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem1 {
                get {
                    if ((aliasName == null)) {
                        return _Mem1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem1", _Mem1.EntityConfiguration, _Mem1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem2 {
                get {
                    if ((aliasName == null)) {
                        return _Mem2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem2", _Mem2.EntityConfiguration, _Mem2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_date {
                get {
                    if ((aliasName == null)) {
                        return _Check_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_date", _Check_date.EntityConfiguration, _Check_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_next {
                get {
                    if ((aliasName == null)) {
                        return _Check_next;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_next", _Check_next.EntityConfiguration, _Check_next.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_no {
                get {
                    if ((aliasName == null)) {
                        return _Check_no;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_no", _Check_no.EntityConfiguration, _Check_no.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CYCLE {
                get {
                    if ((aliasName == null)) {
                        return _CYCLE;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CYCLE", _CYCLE.EntityConfiguration, _CYCLE.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
