//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_MainDailyArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_MainDaily> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_MainDaily\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBa" +
        "tchUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_MainDaily\" batchSize=\"10\">" +
        "\r\n  <Properties>\r\n    <Property name=\"MainDaily_ID\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"MainDaily_ID\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isP" +
        "rimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Equip_code\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Equip_code\" mappingColumnType=\"System.String\" sqlType=\"" +
        "char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_id" +
        "\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shift_id\" mappingColumnTy" +
        "pe=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"Mp_Date\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"Mp_Date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_StartTime\" type=\"System.Nulla" +
        "ble`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Mp_StartTime\" mappingColumnType=\"System.Nu" +
        "llable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"MP_EndTime\" type=\"System.Nullable`1[System.DateTime" +
        "]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"MP_EndTime\" mappingColumnType=\"System.Nullable`1[System.DateTim" +
        "e]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Mp_time\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_time\" m" +
        "appingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Handle_name\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Handle_name\" mappingColumnType=\"System.String\" sqlType=\"nv" +
        "archar(30)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MP_Ty" +
        "pe\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"MP_Type\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"Mp_reason\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_reason\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"ntext\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"Mp_result\" type=\"System.String\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mp_result\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"ntext\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"In_Date\" type=\"System.String\" isInherited=\"false\" is" +
        "ReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFr" +
        "iendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\"" +
        " isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"In_Date\"" +
        " mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"Worker_barcode\" type=\"System.String\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Worker_barcode\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mem_BJ\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"Mem_BJ\" mappingColumnType=\"System.String\" sqlType=\"varchar" +
        "(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Finish_fla" +
        "g\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(" +
        "1)\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Fi" +
        "nish_flag\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"IsBaiBan\" type=\"Syst" +
        "em.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnl" +
        "y=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"IsBaiBan\" mappi" +
        "ngColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Mp_Code\" type=\"System.String\" isInhe" +
        "rited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Mp_Code\" mappingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(5" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ConfirmUser\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"ConfirmUser\" mappingColumnType=\"System.String" +
        "\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"MP_cuoshi\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"MP_cuoshi\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"YuSuanFY\" type=\"System.Nullable`1[System.Decimal]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"YuSuanFY\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType" +
        "=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShiJiF" +
        "Y\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ShiJiFY\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_MainDaily : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_MainDailyEntityConfiguration;
        
        protected string _MainDaily_ID;
        
        protected string _Equip_code;
        
        protected global::System.Int16? _Shift_id;
        
        protected string _Mp_Date;
        
        protected global::System.DateTime? _Mp_StartTime;
        
        protected global::System.DateTime? _MP_EndTime;
        
        protected global::System.Decimal? _Mp_time;
        
        protected string _Handle_name;
        
        protected string _MP_Type;
        
        protected string _Mp_reason;
        
        protected string _Mp_result;
        
        protected string _In_Date;
        
        protected string _Worker_barcode;
        
        protected string _Mem_BJ;
        
        protected global::System.Int32? _Finish_flag;
        
        protected global::System.Int32? _IsBaiBan;
        
        protected string _Mp_Code;
        
        protected string _Remark;
        
        protected string _ConfirmUser;
        
        protected string _MP_cuoshi;
        
        protected global::System.Decimal? _YuSuanFY;
        
        protected global::System.Decimal? _ShiJiFY;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_MainDaily left, global::Mesnac.Entity.Eqm_MainDaily right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_MainDaily left, global::Mesnac.Entity.Eqm_MainDaily right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string MainDaily_ID {
            get {
                return this._MainDaily_ID;
            }
            set {
                this.OnPropertyChanged("MainDaily_ID", this._MainDaily_ID, value);
                this._MainDaily_ID = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public global::System.Int16? Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public string Mp_Date {
            get {
                return this._Mp_Date;
            }
            set {
                this.OnPropertyChanged("Mp_Date", this._Mp_Date, value);
                this._Mp_Date = value;
            }
        }
        
        public global::System.DateTime? Mp_StartTime {
            get {
                return this._Mp_StartTime;
            }
            set {
                this.OnPropertyChanged("Mp_StartTime", this._Mp_StartTime, value);
                this._Mp_StartTime = value;
            }
        }
        
        public global::System.DateTime? MP_EndTime {
            get {
                return this._MP_EndTime;
            }
            set {
                this.OnPropertyChanged("MP_EndTime", this._MP_EndTime, value);
                this._MP_EndTime = value;
            }
        }
        
        public global::System.Decimal? Mp_time {
            get {
                return this._Mp_time;
            }
            set {
                this.OnPropertyChanged("Mp_time", this._Mp_time, value);
                this._Mp_time = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string MP_Type {
            get {
                return this._MP_Type;
            }
            set {
                this.OnPropertyChanged("MP_Type", this._MP_Type, value);
                this._MP_Type = value;
            }
        }
        
        public string Mp_reason {
            get {
                return this._Mp_reason;
            }
            set {
                this.OnPropertyChanged("Mp_reason", this._Mp_reason, value);
                this._Mp_reason = value;
            }
        }
        
        public string Mp_result {
            get {
                return this._Mp_result;
            }
            set {
                this.OnPropertyChanged("Mp_result", this._Mp_result, value);
                this._Mp_result = value;
            }
        }
        
        public string In_Date {
            get {
                return this._In_Date;
            }
            set {
                this.OnPropertyChanged("In_Date", this._In_Date, value);
                this._In_Date = value;
            }
        }
        
        public string Worker_barcode {
            get {
                return this._Worker_barcode;
            }
            set {
                this.OnPropertyChanged("Worker_barcode", this._Worker_barcode, value);
                this._Worker_barcode = value;
            }
        }
        
        public string Mem_BJ {
            get {
                return this._Mem_BJ;
            }
            set {
                this.OnPropertyChanged("Mem_BJ", this._Mem_BJ, value);
                this._Mem_BJ = value;
            }
        }
        
        public global::System.Int32? Finish_flag {
            get {
                return this._Finish_flag;
            }
            set {
                this.OnPropertyChanged("Finish_flag", this._Finish_flag, value);
                this._Finish_flag = value;
            }
        }
        
        public global::System.Int32? IsBaiBan {
            get {
                return this._IsBaiBan;
            }
            set {
                this.OnPropertyChanged("IsBaiBan", this._IsBaiBan, value);
                this._IsBaiBan = value;
            }
        }
        
        public string Mp_Code {
            get {
                return this._Mp_Code;
            }
            set {
                this.OnPropertyChanged("Mp_Code", this._Mp_Code, value);
                this._Mp_Code = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string ConfirmUser {
            get {
                return this._ConfirmUser;
            }
            set {
                this.OnPropertyChanged("ConfirmUser", this._ConfirmUser, value);
                this._ConfirmUser = value;
            }
        }
        
        public string MP_cuoshi {
            get {
                return this._MP_cuoshi;
            }
            set {
                this.OnPropertyChanged("MP_cuoshi", this._MP_cuoshi, value);
                this._MP_cuoshi = value;
            }
        }
        
        public global::System.Decimal? YuSuanFY {
            get {
                return this._YuSuanFY;
            }
            set {
                this.OnPropertyChanged("YuSuanFY", this._YuSuanFY, value);
                this._YuSuanFY = value;
            }
        }
        
        public global::System.Decimal? ShiJiFY {
            get {
                return this._ShiJiFY;
            }
            set {
                this.OnPropertyChanged("ShiJiFY", this._ShiJiFY, value);
                this._ShiJiFY = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_MainDaily._Eqm_MainDailyEntityConfiguration == null)) {
                Eqm_MainDaily._Eqm_MainDailyEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_MainDaily");
            }
            return Eqm_MainDaily._Eqm_MainDailyEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._MainDaily_ID,
                    this._Equip_code,
                    this._Shift_id,
                    this._Mp_Date,
                    this._Mp_StartTime,
                    this._MP_EndTime,
                    this._Mp_time,
                    this._Handle_name,
                    this._MP_Type,
                    this._Mp_reason,
                    this._Mp_result,
                    this._In_Date,
                    this._Worker_barcode,
                    this._Mem_BJ,
                    this._Finish_flag,
                    this._IsBaiBan,
                    this._Mp_Code,
                    this._Remark,
                    this._ConfirmUser,
                    this._MP_cuoshi,
                    this._YuSuanFY,
                    this._ShiJiFY};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._MainDaily_ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Shift_id = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mp_Date = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Mp_StartTime = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MP_EndTime = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Mp_time = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Handle_name = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._MP_Type = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Mp_reason = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Mp_result = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._In_Date = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Worker_barcode = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Mem_BJ = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Finish_flag = reader.GetInt32(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._IsBaiBan = reader.GetInt32(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Mp_Code = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Remark = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._ConfirmUser = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._MP_cuoshi = reader.GetString(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._YuSuanFY = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._ShiJiFY = reader.GetDecimal(21);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._MainDaily_ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Shift_id = ((System.Nullable<short>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mp_Date = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Mp_StartTime = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5))) {
                this._MP_EndTime = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6))) {
                this._Mp_time = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Handle_name = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._MP_Type = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Mp_reason = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Mp_result = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._In_Date = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Worker_barcode = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Mem_BJ = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Finish_flag = ((System.Nullable<int>)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._IsBaiBan = ((System.Nullable<int>)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Mp_Code = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Remark = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._ConfirmUser = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._MP_cuoshi = ((string)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._YuSuanFY = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._ShiJiFY = ((System.Nullable<decimal>)(row[21]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_MainDaily).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_MainDaily)(obj)).isAttached) 
                        && (this.MainDaily_ID == ((global::Mesnac.Entity.Eqm_MainDaily)(obj)).MainDaily_ID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _MainDaily_ID = new NBear.Common.PropertyItem("MainDaily_ID", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mp_Date = new NBear.Common.PropertyItem("Mp_Date", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mp_StartTime = new NBear.Common.PropertyItem("Mp_StartTime", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _MP_EndTime = new NBear.Common.PropertyItem("MP_EndTime", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mp_time = new NBear.Common.PropertyItem("Mp_time", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _MP_Type = new NBear.Common.PropertyItem("MP_Type", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mp_reason = new NBear.Common.PropertyItem("Mp_reason", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mp_result = new NBear.Common.PropertyItem("Mp_result", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _In_Date = new NBear.Common.PropertyItem("In_Date", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Worker_barcode = new NBear.Common.PropertyItem("Worker_barcode", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mem_BJ = new NBear.Common.PropertyItem("Mem_BJ", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Finish_flag = new NBear.Common.PropertyItem("Finish_flag", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _IsBaiBan = new NBear.Common.PropertyItem("IsBaiBan", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Mp_Code = new NBear.Common.PropertyItem("Mp_Code", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _ConfirmUser = new NBear.Common.PropertyItem("ConfirmUser", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _MP_cuoshi = new NBear.Common.PropertyItem("MP_cuoshi", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _YuSuanFY = new NBear.Common.PropertyItem("YuSuanFY", "Mesnac.Entity.Eqm_MainDaily");
            
            protected NBear.Common.PropertyItem _ShiJiFY = new NBear.Common.PropertyItem("ShiJiFY", "Mesnac.Entity.Eqm_MainDaily");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem MainDaily_ID {
                get {
                    if ((aliasName == null)) {
                        return _MainDaily_ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MainDaily_ID", _MainDaily_ID.EntityConfiguration, _MainDaily_ID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_Date {
                get {
                    if ((aliasName == null)) {
                        return _Mp_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_Date", _Mp_Date.EntityConfiguration, _Mp_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_StartTime {
                get {
                    if ((aliasName == null)) {
                        return _Mp_StartTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_StartTime", _Mp_StartTime.EntityConfiguration, _Mp_StartTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MP_EndTime {
                get {
                    if ((aliasName == null)) {
                        return _MP_EndTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MP_EndTime", _MP_EndTime.EntityConfiguration, _MP_EndTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_time {
                get {
                    if ((aliasName == null)) {
                        return _Mp_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_time", _Mp_time.EntityConfiguration, _Mp_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MP_Type {
                get {
                    if ((aliasName == null)) {
                        return _MP_Type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MP_Type", _MP_Type.EntityConfiguration, _MP_Type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_reason {
                get {
                    if ((aliasName == null)) {
                        return _Mp_reason;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_reason", _Mp_reason.EntityConfiguration, _Mp_reason.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_result {
                get {
                    if ((aliasName == null)) {
                        return _Mp_result;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_result", _Mp_result.EntityConfiguration, _Mp_result.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem In_Date {
                get {
                    if ((aliasName == null)) {
                        return _In_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("In_Date", _In_Date.EntityConfiguration, _In_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Worker_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Worker_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Worker_barcode", _Worker_barcode.EntityConfiguration, _Worker_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_BJ {
                get {
                    if ((aliasName == null)) {
                        return _Mem_BJ;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_BJ", _Mem_BJ.EntityConfiguration, _Mem_BJ.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Finish_flag {
                get {
                    if ((aliasName == null)) {
                        return _Finish_flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Finish_flag", _Finish_flag.EntityConfiguration, _Finish_flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsBaiBan {
                get {
                    if ((aliasName == null)) {
                        return _IsBaiBan;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsBaiBan", _IsBaiBan.EntityConfiguration, _IsBaiBan.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mp_Code {
                get {
                    if ((aliasName == null)) {
                        return _Mp_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mp_Code", _Mp_Code.EntityConfiguration, _Mp_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ConfirmUser {
                get {
                    if ((aliasName == null)) {
                        return _ConfirmUser;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ConfirmUser", _ConfirmUser.EntityConfiguration, _ConfirmUser.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MP_cuoshi {
                get {
                    if ((aliasName == null)) {
                        return _MP_cuoshi;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MP_cuoshi", _MP_cuoshi.EntityConfiguration, _MP_cuoshi.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem YuSuanFY {
                get {
                    if ((aliasName == null)) {
                        return _YuSuanFY;
                    }
                    else {
                        return new NBear.Common.PropertyItem("YuSuanFY", _YuSuanFY.EntityConfiguration, _YuSuanFY.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiJiFY {
                get {
                    if ((aliasName == null)) {
                        return _ShiJiFY;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiJiFY", _ShiJiFY.EntityConfiguration, _ShiJiFY.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
