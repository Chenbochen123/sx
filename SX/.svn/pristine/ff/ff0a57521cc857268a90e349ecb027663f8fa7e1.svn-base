//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PptPlanArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PptPlan> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PptPlan\" isReadOnly=\"true\" isAutoPreLoad=\"false\" isBatchUpda" +
        "te=\"false\" isRelation=\"false\" mappingName=\"PptPlan\" batchSize=\"10\">\r\n  <Properti" +
        "es>\r\n    <Property name=\"PlanID\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanID\" mappi" +
        "ngColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"PlanDate\" type=\"System.Nullable`1[System.DateTime" +
        "]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"PlanDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\"" +
        " sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"RecipeEquipCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeEquipCode\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"RecipeMaterialCode\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "RecipeMaterialCode\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeMaterialName\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"RecipeMaterialName\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"RecipeVersionID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"f" +
        "alse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"R" +
        "ecipeVersionID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RecipeUserVersi" +
        "on\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"RecipeUserVersion\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"ShiftID\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Sh" +
        "iftID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ClassID\" type=\"System.Nu" +
        "llable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fa" +
        "lse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" " +
        "isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeri" +
        "alizationIgnore=\"false\" mappingName=\"ClassID\" mappingColumnType=\"System.Nullable" +
        "`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"SerialNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"fa" +
        "lse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Se" +
        "rialNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PriLevel\" type=\"System" +
        ".Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"PriLevel\" mappingColumnType=\"System.Null" +
        "able`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"RecipeName\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey" +
        "=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInde" +
        "xPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"RecipeName\" map" +
        "pingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"RecipeType\" type=\"System.Nullable`1[System." +
        "Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"RecipeType\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Runtype\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Runtype\" mappingColumnType=\"System." +
        "String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"PrintType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PrintType\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"PlanSource\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanSource\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"TotalWeight\" type=\"System.Nullable`1[System.Dec" +
        "imal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"TotalWeight\" mappingColumnType=\"System.Nullable`1[System.Dec" +
        "imal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"PlanNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isRe" +
        "adOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanNum\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"fa" +
        "lse\" isNotNull=\"false\" />\r\n    <Property name=\"PlanWeight\" type=\"System.Nullable" +
        "`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"PlanWeight\" mappingColumnType=\"System.Nullable`" +
        "1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"RealNum\" type=\"System.Nullable`1[System.Int32]\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"RealNum\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealWeight\" type=\"Sys" +
        "tem.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"true\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"RealWeight\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"UrgencyState\" type=\"System.Nullable`1[System.Int" +
        "32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"UrgencyState\" mappingColumnType=\"System.Nullable`1[System.Int3" +
        "2]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"PlanState\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"PlanState\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"OperDatetime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"OperDatetime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"d" +
        "atetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PlanEndT" +
        "ime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"PlanEndTime\" mapping" +
        "ColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"RealStartTime\" type=\"System.Nu" +
        "llable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"RealStartTime\" mappingColumnType=\"System" +
        ".Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"RealEndtime\" type=\"System.Nullable`1[System.Date" +
        "Time]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"RealEndtime\" mappingColumnType=\"System.Nullable`1[System.Dat" +
        "eTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"OperCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OperCode\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"Revisesgn\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrien" +
        "dKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" is" +
        "IndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Revisesgn\" " +
        "mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n    <Property name=\"SAP_BillNo\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"SAP_BillNo\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"Message\" type=\"System.String\" i" +
        "sInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Message\" mappingColumnType=\"System.String\" sqlType=\"varchar(200)\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ShowFlag\" type=\"Sys" +
        "tem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"ShowFlag\" mappingColumnType=\"System.N" +
        "ullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />" +
        "\r\n    <Property name=\"UserID\" type=\"System.String\" isInherited=\"false\" isReadOnl" +
        "y=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UserID\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Mem_note\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mem_n" +
        "ote\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQu" +
        "ery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndex" +
        "Property=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappi" +
        "ngName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimar" +
        "yKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FanLianNum\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"FanLianNum\" mappingColumnType=\"System.Nul" +
        "lable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"AvgTime\" type=\"System.Nullable`1[System.Decimal]\" isInherite" +
        "d=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"AvgTime\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decim" +
        "al\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CJName\" type=" +
        "\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"CJName\" mappingColumnType=\"System.String\" sqlType=\"" +
        "varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CJwe" +
        "ight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"t" +
        "rue\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CJweight\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Shelfnum\" type=\"System.Nullable`1[S" +
        "ystem.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Shelfnum\" mappingColumnType=\"System.Nullable`1[System" +
        ".Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"SmallCreate\" type=\"System.Nullable`1[System.Int32]\" isInherit" +
        "ed=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"SmallCreate\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"in" +
        "t\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CreatePlanFlag" +
        "\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"CreatePlanFlag\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Propertie" +
        "s>\r\n</EntityConfiguration>")]
    public partial class PptPlan : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PptPlanEntityConfiguration;
        
        protected string _PlanID;
        
        protected global::System.DateTime? _PlanDate;
        
        protected string _RecipeEquipCode;
        
        protected string _RecipeMaterialCode;
        
        protected string _RecipeMaterialName;
        
        protected global::System.Int32? _RecipeVersionID;
        
        protected string _RecipeUserVersion;
        
        protected global::System.Int32? _ShiftID;
        
        protected global::System.Int32? _ClassID;
        
        protected global::System.Int32? _SerialNum;
        
        protected global::System.Int32? _PriLevel;
        
        protected string _RecipeName;
        
        protected global::System.Int32? _RecipeType;
        
        protected string _Runtype;
        
        protected string _PrintType;
        
        protected string _PlanSource;
        
        protected global::System.Decimal? _TotalWeight;
        
        protected global::System.Int32? _PlanNum;
        
        protected global::System.Decimal? _PlanWeight;
        
        protected global::System.Int32? _RealNum;
        
        protected global::System.Decimal? _RealWeight;
        
        protected global::System.Int32? _UrgencyState;
        
        protected string _PlanState;
        
        protected global::System.DateTime? _OperDatetime;
        
        protected global::System.DateTime? _PlanEndTime;
        
        protected global::System.DateTime? _RealStartTime;
        
        protected global::System.DateTime? _RealEndtime;
        
        protected string _OperCode;
        
        protected string _Revisesgn;
        
        protected string _SAP_BillNo;
        
        protected string _Message;
        
        protected global::System.Int32? _ShowFlag;
        
        protected string _UserID;
        
        protected string _Mem_note;
        
        protected string _Remark;
        
        protected global::System.Int32? _FanLianNum;
        
        protected global::System.Decimal? _AvgTime;
        
        protected string _CJName;
        
        protected global::System.Decimal? _CJweight;
        
        protected global::System.Int32? _Shelfnum;
        
        protected string _DeleteFlag;
        
        protected global::System.Int32? _SmallCreate;
        
        protected string _CreatePlanFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PptPlan left, global::Mesnac.Entity.PptPlan right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PptPlan left, global::Mesnac.Entity.PptPlan right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string PlanID {
            get {
                return this._PlanID;
            }
            set {
                this.OnPropertyChanged("PlanID", this._PlanID, value);
                this._PlanID = value;
            }
        }
        
        public global::System.DateTime? PlanDate {
            get {
                return this._PlanDate;
            }
            set {
                this.OnPropertyChanged("PlanDate", this._PlanDate, value);
                this._PlanDate = value;
            }
        }
        
        public string RecipeEquipCode {
            get {
                return this._RecipeEquipCode;
            }
            set {
                this.OnPropertyChanged("RecipeEquipCode", this._RecipeEquipCode, value);
                this._RecipeEquipCode = value;
            }
        }
        
        public string RecipeMaterialCode {
            get {
                return this._RecipeMaterialCode;
            }
            set {
                this.OnPropertyChanged("RecipeMaterialCode", this._RecipeMaterialCode, value);
                this._RecipeMaterialCode = value;
            }
        }
        
        public string RecipeMaterialName {
            get {
                return this._RecipeMaterialName;
            }
            set {
                this.OnPropertyChanged("RecipeMaterialName", this._RecipeMaterialName, value);
                this._RecipeMaterialName = value;
            }
        }
        
        public global::System.Int32? RecipeVersionID {
            get {
                return this._RecipeVersionID;
            }
            set {
                this.OnPropertyChanged("RecipeVersionID", this._RecipeVersionID, value);
                this._RecipeVersionID = value;
            }
        }
        
        public string RecipeUserVersion {
            get {
                return this._RecipeUserVersion;
            }
            set {
                this.OnPropertyChanged("RecipeUserVersion", this._RecipeUserVersion, value);
                this._RecipeUserVersion = value;
            }
        }
        
        public global::System.Int32? ShiftID {
            get {
                return this._ShiftID;
            }
            set {
                this.OnPropertyChanged("ShiftID", this._ShiftID, value);
                this._ShiftID = value;
            }
        }
        
        public global::System.Int32? ClassID {
            get {
                return this._ClassID;
            }
            set {
                this.OnPropertyChanged("ClassID", this._ClassID, value);
                this._ClassID = value;
            }
        }
        
        public global::System.Int32? SerialNum {
            get {
                return this._SerialNum;
            }
            set {
                this.OnPropertyChanged("SerialNum", this._SerialNum, value);
                this._SerialNum = value;
            }
        }
        
        public global::System.Int32? PriLevel {
            get {
                return this._PriLevel;
            }
            set {
                this.OnPropertyChanged("PriLevel", this._PriLevel, value);
                this._PriLevel = value;
            }
        }
        
        public string RecipeName {
            get {
                return this._RecipeName;
            }
            set {
                this.OnPropertyChanged("RecipeName", this._RecipeName, value);
                this._RecipeName = value;
            }
        }
        
        public global::System.Int32? RecipeType {
            get {
                return this._RecipeType;
            }
            set {
                this.OnPropertyChanged("RecipeType", this._RecipeType, value);
                this._RecipeType = value;
            }
        }
        
        public string Runtype {
            get {
                return this._Runtype;
            }
            set {
                this.OnPropertyChanged("Runtype", this._Runtype, value);
                this._Runtype = value;
            }
        }
        
        public string PrintType {
            get {
                return this._PrintType;
            }
            set {
                this.OnPropertyChanged("PrintType", this._PrintType, value);
                this._PrintType = value;
            }
        }
        
        public string PlanSource {
            get {
                return this._PlanSource;
            }
            set {
                this.OnPropertyChanged("PlanSource", this._PlanSource, value);
                this._PlanSource = value;
            }
        }
        
        public global::System.Decimal? TotalWeight {
            get {
                return this._TotalWeight;
            }
            set {
                this.OnPropertyChanged("TotalWeight", this._TotalWeight, value);
                this._TotalWeight = value;
            }
        }
        
        public global::System.Int32? PlanNum {
            get {
                return this._PlanNum;
            }
            set {
                this.OnPropertyChanged("PlanNum", this._PlanNum, value);
                this._PlanNum = value;
            }
        }
        
        public global::System.Decimal? PlanWeight {
            get {
                return this._PlanWeight;
            }
            set {
                this.OnPropertyChanged("PlanWeight", this._PlanWeight, value);
                this._PlanWeight = value;
            }
        }
        
        public global::System.Int32? RealNum {
            get {
                return this._RealNum;
            }
            set {
                this.OnPropertyChanged("RealNum", this._RealNum, value);
                this._RealNum = value;
            }
        }
        
        public global::System.Decimal? RealWeight {
            get {
                return this._RealWeight;
            }
            set {
                this.OnPropertyChanged("RealWeight", this._RealWeight, value);
                this._RealWeight = value;
            }
        }
        
        public global::System.Int32? UrgencyState {
            get {
                return this._UrgencyState;
            }
            set {
                this.OnPropertyChanged("UrgencyState", this._UrgencyState, value);
                this._UrgencyState = value;
            }
        }
        
        public string PlanState {
            get {
                return this._PlanState;
            }
            set {
                this.OnPropertyChanged("PlanState", this._PlanState, value);
                this._PlanState = value;
            }
        }
        
        public global::System.DateTime? OperDatetime {
            get {
                return this._OperDatetime;
            }
            set {
                this.OnPropertyChanged("OperDatetime", this._OperDatetime, value);
                this._OperDatetime = value;
            }
        }
        
        public global::System.DateTime? PlanEndTime {
            get {
                return this._PlanEndTime;
            }
            set {
                this.OnPropertyChanged("PlanEndTime", this._PlanEndTime, value);
                this._PlanEndTime = value;
            }
        }
        
        public global::System.DateTime? RealStartTime {
            get {
                return this._RealStartTime;
            }
            set {
                this.OnPropertyChanged("RealStartTime", this._RealStartTime, value);
                this._RealStartTime = value;
            }
        }
        
        public global::System.DateTime? RealEndtime {
            get {
                return this._RealEndtime;
            }
            set {
                this.OnPropertyChanged("RealEndtime", this._RealEndtime, value);
                this._RealEndtime = value;
            }
        }
        
        public string OperCode {
            get {
                return this._OperCode;
            }
            set {
                this.OnPropertyChanged("OperCode", this._OperCode, value);
                this._OperCode = value;
            }
        }
        
        public string Revisesgn {
            get {
                return this._Revisesgn;
            }
            set {
                this.OnPropertyChanged("Revisesgn", this._Revisesgn, value);
                this._Revisesgn = value;
            }
        }
        
        public string SAP_BillNo {
            get {
                return this._SAP_BillNo;
            }
            set {
                this.OnPropertyChanged("SAP_BillNo", this._SAP_BillNo, value);
                this._SAP_BillNo = value;
            }
        }
        
        public string Message {
            get {
                return this._Message;
            }
            set {
                this.OnPropertyChanged("Message", this._Message, value);
                this._Message = value;
            }
        }
        
        public global::System.Int32? ShowFlag {
            get {
                return this._ShowFlag;
            }
            set {
                this.OnPropertyChanged("ShowFlag", this._ShowFlag, value);
                this._ShowFlag = value;
            }
        }
        
        public string UserID {
            get {
                return this._UserID;
            }
            set {
                this.OnPropertyChanged("UserID", this._UserID, value);
                this._UserID = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public global::System.Int32? FanLianNum {
            get {
                return this._FanLianNum;
            }
            set {
                this.OnPropertyChanged("FanLianNum", this._FanLianNum, value);
                this._FanLianNum = value;
            }
        }
        
        public global::System.Decimal? AvgTime {
            get {
                return this._AvgTime;
            }
            set {
                this.OnPropertyChanged("AvgTime", this._AvgTime, value);
                this._AvgTime = value;
            }
        }
        
        public string CJName {
            get {
                return this._CJName;
            }
            set {
                this.OnPropertyChanged("CJName", this._CJName, value);
                this._CJName = value;
            }
        }
        
        public global::System.Decimal? CJweight {
            get {
                return this._CJweight;
            }
            set {
                this.OnPropertyChanged("CJweight", this._CJweight, value);
                this._CJweight = value;
            }
        }
        
        public global::System.Int32? Shelfnum {
            get {
                return this._Shelfnum;
            }
            set {
                this.OnPropertyChanged("Shelfnum", this._Shelfnum, value);
                this._Shelfnum = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public global::System.Int32? SmallCreate {
            get {
                return this._SmallCreate;
            }
            set {
                this.OnPropertyChanged("SmallCreate", this._SmallCreate, value);
                this._SmallCreate = value;
            }
        }
        
        public string CreatePlanFlag {
            get {
                return this._CreatePlanFlag;
            }
            set {
                this.OnPropertyChanged("CreatePlanFlag", this._CreatePlanFlag, value);
                this._CreatePlanFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PptPlan._PptPlanEntityConfiguration == null)) {
                PptPlan._PptPlanEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PptPlan");
            }
            return PptPlan._PptPlanEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._PlanID,
                    this._PlanDate,
                    this._RecipeEquipCode,
                    this._RecipeMaterialCode,
                    this._RecipeMaterialName,
                    this._RecipeVersionID,
                    this._RecipeUserVersion,
                    this._ShiftID,
                    this._ClassID,
                    this._SerialNum,
                    this._PriLevel,
                    this._RecipeName,
                    this._RecipeType,
                    this._Runtype,
                    this._PrintType,
                    this._PlanSource,
                    this._TotalWeight,
                    this._PlanNum,
                    this._PlanWeight,
                    this._RealNum,
                    this._RealWeight,
                    this._UrgencyState,
                    this._PlanState,
                    this._OperDatetime,
                    this._PlanEndTime,
                    this._RealStartTime,
                    this._RealEndtime,
                    this._OperCode,
                    this._Revisesgn,
                    this._SAP_BillNo,
                    this._Message,
                    this._ShowFlag,
                    this._UserID,
                    this._Mem_note,
                    this._Remark,
                    this._FanLianNum,
                    this._AvgTime,
                    this._CJName,
                    this._CJweight,
                    this._Shelfnum,
                    this._DeleteFlag,
                    this._SmallCreate,
                    this._CreatePlanFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._PlanID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._PlanDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._RecipeEquipCode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._RecipeMaterialCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._RecipeMaterialName = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RecipeVersionID = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._RecipeUserVersion = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._ShiftID = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ClassID = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._SerialNum = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._PriLevel = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._RecipeName = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._RecipeType = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Runtype = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._PrintType = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._PlanSource = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._TotalWeight = reader.GetDecimal(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._PlanNum = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._PlanWeight = reader.GetDecimal(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._RealNum = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._RealWeight = reader.GetDecimal(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._UrgencyState = reader.GetInt32(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._PlanState = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._OperDatetime = this.GetDateTime(reader, 23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._PlanEndTime = this.GetDateTime(reader, 24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._RealStartTime = this.GetDateTime(reader, 25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._RealEndtime = this.GetDateTime(reader, 26);
            }
            if ((false == reader.IsDBNull(27))) {
                this._OperCode = reader.GetString(27);
            }
            if ((false == reader.IsDBNull(28))) {
                this._Revisesgn = reader.GetString(28);
            }
            if ((false == reader.IsDBNull(29))) {
                this._SAP_BillNo = reader.GetString(29);
            }
            if ((false == reader.IsDBNull(30))) {
                this._Message = reader.GetString(30);
            }
            if ((false == reader.IsDBNull(31))) {
                this._ShowFlag = reader.GetInt32(31);
            }
            if ((false == reader.IsDBNull(32))) {
                this._UserID = reader.GetString(32);
            }
            if ((false == reader.IsDBNull(33))) {
                this._Mem_note = reader.GetString(33);
            }
            if ((false == reader.IsDBNull(34))) {
                this._Remark = reader.GetString(34);
            }
            if ((false == reader.IsDBNull(35))) {
                this._FanLianNum = reader.GetInt32(35);
            }
            if ((false == reader.IsDBNull(36))) {
                this._AvgTime = reader.GetDecimal(36);
            }
            if ((false == reader.IsDBNull(37))) {
                this._CJName = reader.GetString(37);
            }
            if ((false == reader.IsDBNull(38))) {
                this._CJweight = reader.GetDecimal(38);
            }
            if ((false == reader.IsDBNull(39))) {
                this._Shelfnum = reader.GetInt32(39);
            }
            if ((false == reader.IsDBNull(40))) {
                this._DeleteFlag = reader.GetString(40);
            }
            if ((false == reader.IsDBNull(41))) {
                this._SmallCreate = reader.GetInt32(41);
            }
            if ((false == reader.IsDBNull(42))) {
                this._CreatePlanFlag = reader.GetString(42);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._PlanID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._PlanDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2))) {
                this._RecipeEquipCode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._RecipeMaterialCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._RecipeMaterialName = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._RecipeVersionID = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._RecipeUserVersion = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._ShiftID = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ClassID = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._SerialNum = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._PriLevel = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._RecipeName = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._RecipeType = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Runtype = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._PrintType = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._PlanSource = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._TotalWeight = ((System.Nullable<decimal>)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._PlanNum = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._PlanWeight = ((System.Nullable<decimal>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._RealNum = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._RealWeight = ((System.Nullable<decimal>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._UrgencyState = ((System.Nullable<int>)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._PlanState = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._OperDatetime = this.GetDateTime(row, 23);
            }
            if ((false == row.IsNull(24))) {
                this._PlanEndTime = this.GetDateTime(row, 24);
            }
            if ((false == row.IsNull(25))) {
                this._RealStartTime = this.GetDateTime(row, 25);
            }
            if ((false == row.IsNull(26))) {
                this._RealEndtime = this.GetDateTime(row, 26);
            }
            if ((false == row.IsNull(27))) {
                this._OperCode = ((string)(row[27]));
            }
            if ((false == row.IsNull(28))) {
                this._Revisesgn = ((string)(row[28]));
            }
            if ((false == row.IsNull(29))) {
                this._SAP_BillNo = ((string)(row[29]));
            }
            if ((false == row.IsNull(30))) {
                this._Message = ((string)(row[30]));
            }
            if ((false == row.IsNull(31))) {
                this._ShowFlag = ((System.Nullable<int>)(row[31]));
            }
            if ((false == row.IsNull(32))) {
                this._UserID = ((string)(row[32]));
            }
            if ((false == row.IsNull(33))) {
                this._Mem_note = ((string)(row[33]));
            }
            if ((false == row.IsNull(34))) {
                this._Remark = ((string)(row[34]));
            }
            if ((false == row.IsNull(35))) {
                this._FanLianNum = ((System.Nullable<int>)(row[35]));
            }
            if ((false == row.IsNull(36))) {
                this._AvgTime = ((System.Nullable<decimal>)(row[36]));
            }
            if ((false == row.IsNull(37))) {
                this._CJName = ((string)(row[37]));
            }
            if ((false == row.IsNull(38))) {
                this._CJweight = ((System.Nullable<decimal>)(row[38]));
            }
            if ((false == row.IsNull(39))) {
                this._Shelfnum = ((System.Nullable<int>)(row[39]));
            }
            if ((false == row.IsNull(40))) {
                this._DeleteFlag = ((string)(row[40]));
            }
            if ((false == row.IsNull(41))) {
                this._SmallCreate = ((System.Nullable<int>)(row[41]));
            }
            if ((false == row.IsNull(42))) {
                this._CreatePlanFlag = ((string)(row[42]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PptPlan).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PptPlan)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _PlanID = new NBear.Common.PropertyItem("PlanID", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PlanDate = new NBear.Common.PropertyItem("PlanDate", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeEquipCode = new NBear.Common.PropertyItem("RecipeEquipCode", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeMaterialCode = new NBear.Common.PropertyItem("RecipeMaterialCode", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeMaterialName = new NBear.Common.PropertyItem("RecipeMaterialName", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeVersionID = new NBear.Common.PropertyItem("RecipeVersionID", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeUserVersion = new NBear.Common.PropertyItem("RecipeUserVersion", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _ShiftID = new NBear.Common.PropertyItem("ShiftID", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _ClassID = new NBear.Common.PropertyItem("ClassID", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _SerialNum = new NBear.Common.PropertyItem("SerialNum", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PriLevel = new NBear.Common.PropertyItem("PriLevel", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeName = new NBear.Common.PropertyItem("RecipeName", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RecipeType = new NBear.Common.PropertyItem("RecipeType", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _Runtype = new NBear.Common.PropertyItem("Runtype", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PrintType = new NBear.Common.PropertyItem("PrintType", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PlanSource = new NBear.Common.PropertyItem("PlanSource", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _TotalWeight = new NBear.Common.PropertyItem("TotalWeight", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PlanNum = new NBear.Common.PropertyItem("PlanNum", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PlanWeight = new NBear.Common.PropertyItem("PlanWeight", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RealNum = new NBear.Common.PropertyItem("RealNum", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RealWeight = new NBear.Common.PropertyItem("RealWeight", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _UrgencyState = new NBear.Common.PropertyItem("UrgencyState", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PlanState = new NBear.Common.PropertyItem("PlanState", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _OperDatetime = new NBear.Common.PropertyItem("OperDatetime", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _PlanEndTime = new NBear.Common.PropertyItem("PlanEndTime", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RealStartTime = new NBear.Common.PropertyItem("RealStartTime", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _RealEndtime = new NBear.Common.PropertyItem("RealEndtime", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _OperCode = new NBear.Common.PropertyItem("OperCode", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _Revisesgn = new NBear.Common.PropertyItem("Revisesgn", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _SAP_BillNo = new NBear.Common.PropertyItem("SAP_BillNo", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _Message = new NBear.Common.PropertyItem("Message", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _ShowFlag = new NBear.Common.PropertyItem("ShowFlag", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _UserID = new NBear.Common.PropertyItem("UserID", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _FanLianNum = new NBear.Common.PropertyItem("FanLianNum", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _AvgTime = new NBear.Common.PropertyItem("AvgTime", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _CJName = new NBear.Common.PropertyItem("CJName", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _CJweight = new NBear.Common.PropertyItem("CJweight", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _Shelfnum = new NBear.Common.PropertyItem("Shelfnum", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _SmallCreate = new NBear.Common.PropertyItem("SmallCreate", "Mesnac.Entity.PptPlan");
            
            protected NBear.Common.PropertyItem _CreatePlanFlag = new NBear.Common.PropertyItem("CreatePlanFlag", "Mesnac.Entity.PptPlan");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem PlanID {
                get {
                    if ((aliasName == null)) {
                        return _PlanID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanID", _PlanID.EntityConfiguration, _PlanID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanDate {
                get {
                    if ((aliasName == null)) {
                        return _PlanDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanDate", _PlanDate.EntityConfiguration, _PlanDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeEquipCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeEquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeEquipCode", _RecipeEquipCode.EntityConfiguration, _RecipeEquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeMaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _RecipeMaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeMaterialCode", _RecipeMaterialCode.EntityConfiguration, _RecipeMaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeMaterialName {
                get {
                    if ((aliasName == null)) {
                        return _RecipeMaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeMaterialName", _RecipeMaterialName.EntityConfiguration, _RecipeMaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeVersionID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeVersionID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeVersionID", _RecipeVersionID.EntityConfiguration, _RecipeVersionID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeUserVersion {
                get {
                    if ((aliasName == null)) {
                        return _RecipeUserVersion;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeUserVersion", _RecipeUserVersion.EntityConfiguration, _RecipeUserVersion.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShiftID {
                get {
                    if ((aliasName == null)) {
                        return _ShiftID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShiftID", _ShiftID.EntityConfiguration, _ShiftID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ClassID {
                get {
                    if ((aliasName == null)) {
                        return _ClassID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ClassID", _ClassID.EntityConfiguration, _ClassID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SerialNum {
                get {
                    if ((aliasName == null)) {
                        return _SerialNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SerialNum", _SerialNum.EntityConfiguration, _SerialNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PriLevel {
                get {
                    if ((aliasName == null)) {
                        return _PriLevel;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PriLevel", _PriLevel.EntityConfiguration, _PriLevel.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeName {
                get {
                    if ((aliasName == null)) {
                        return _RecipeName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeName", _RecipeName.EntityConfiguration, _RecipeName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeType {
                get {
                    if ((aliasName == null)) {
                        return _RecipeType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeType", _RecipeType.EntityConfiguration, _RecipeType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Runtype {
                get {
                    if ((aliasName == null)) {
                        return _Runtype;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Runtype", _Runtype.EntityConfiguration, _Runtype.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrintType {
                get {
                    if ((aliasName == null)) {
                        return _PrintType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrintType", _PrintType.EntityConfiguration, _PrintType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanSource {
                get {
                    if ((aliasName == null)) {
                        return _PlanSource;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanSource", _PlanSource.EntityConfiguration, _PlanSource.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem TotalWeight {
                get {
                    if ((aliasName == null)) {
                        return _TotalWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("TotalWeight", _TotalWeight.EntityConfiguration, _TotalWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanNum {
                get {
                    if ((aliasName == null)) {
                        return _PlanNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanNum", _PlanNum.EntityConfiguration, _PlanNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanWeight {
                get {
                    if ((aliasName == null)) {
                        return _PlanWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanWeight", _PlanWeight.EntityConfiguration, _PlanWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealNum {
                get {
                    if ((aliasName == null)) {
                        return _RealNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealNum", _RealNum.EntityConfiguration, _RealNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealWeight {
                get {
                    if ((aliasName == null)) {
                        return _RealWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealWeight", _RealWeight.EntityConfiguration, _RealWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UrgencyState {
                get {
                    if ((aliasName == null)) {
                        return _UrgencyState;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UrgencyState", _UrgencyState.EntityConfiguration, _UrgencyState.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanState {
                get {
                    if ((aliasName == null)) {
                        return _PlanState;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanState", _PlanState.EntityConfiguration, _PlanState.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperDatetime {
                get {
                    if ((aliasName == null)) {
                        return _OperDatetime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperDatetime", _OperDatetime.EntityConfiguration, _OperDatetime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PlanEndTime {
                get {
                    if ((aliasName == null)) {
                        return _PlanEndTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PlanEndTime", _PlanEndTime.EntityConfiguration, _PlanEndTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealStartTime {
                get {
                    if ((aliasName == null)) {
                        return _RealStartTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealStartTime", _RealStartTime.EntityConfiguration, _RealStartTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RealEndtime {
                get {
                    if ((aliasName == null)) {
                        return _RealEndtime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RealEndtime", _RealEndtime.EntityConfiguration, _RealEndtime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperCode {
                get {
                    if ((aliasName == null)) {
                        return _OperCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperCode", _OperCode.EntityConfiguration, _OperCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Revisesgn {
                get {
                    if ((aliasName == null)) {
                        return _Revisesgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Revisesgn", _Revisesgn.EntityConfiguration, _Revisesgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAP_BillNo {
                get {
                    if ((aliasName == null)) {
                        return _SAP_BillNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAP_BillNo", _SAP_BillNo.EntityConfiguration, _SAP_BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Message {
                get {
                    if ((aliasName == null)) {
                        return _Message;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Message", _Message.EntityConfiguration, _Message.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ShowFlag {
                get {
                    if ((aliasName == null)) {
                        return _ShowFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ShowFlag", _ShowFlag.EntityConfiguration, _ShowFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UserID {
                get {
                    if ((aliasName == null)) {
                        return _UserID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UserID", _UserID.EntityConfiguration, _UserID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FanLianNum {
                get {
                    if ((aliasName == null)) {
                        return _FanLianNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FanLianNum", _FanLianNum.EntityConfiguration, _FanLianNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AvgTime {
                get {
                    if ((aliasName == null)) {
                        return _AvgTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AvgTime", _AvgTime.EntityConfiguration, _AvgTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CJName {
                get {
                    if ((aliasName == null)) {
                        return _CJName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CJName", _CJName.EntityConfiguration, _CJName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CJweight {
                get {
                    if ((aliasName == null)) {
                        return _CJweight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CJweight", _CJweight.EntityConfiguration, _CJweight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shelfnum {
                get {
                    if ((aliasName == null)) {
                        return _Shelfnum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shelfnum", _Shelfnum.EntityConfiguration, _Shelfnum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SmallCreate {
                get {
                    if ((aliasName == null)) {
                        return _SmallCreate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SmallCreate", _SmallCreate.EntityConfiguration, _SmallCreate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CreatePlanFlag {
                get {
                    if ((aliasName == null)) {
                        return _CreatePlanFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CreatePlanFlag", _CreatePlanFlag.EntityConfiguration, _CreatePlanFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
