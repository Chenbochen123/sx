//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class EqmSparePartArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmSparePart> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.EqmSparePart\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBat" +
        "chUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmSparePart\" batchSize=\"10\">\r\n" +
        "  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"fals" +
        "e\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"ObjI" +
        "D\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=" +
        "\"true\" />\r\n    <Property name=\"SparePartCode\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"SparePartCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SparePartMainType\" type" +
        "=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"SparePartMainType\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prop" +
        "erty name=\"SparePartDetailType\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"SparePartDeta" +
        "ilType\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"SparePartName\" type=\"System.Str" +
        "ing\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"SparePartName\" mappingColumnType=\"System.String\" sqlType=\"nva" +
        "rchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Spare" +
        "PartOtherName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"SparePartOtherName\" mappingCol" +
        "umnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"SparePartSimpleName\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"SparePartSimpleName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(" +
        "200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SparePartSt" +
        "andards\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"SparePartStandards\" mappingColumnTyp" +
        "e=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\"" +
        " />\r\n    <Property name=\"UnitCode\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"UnitCode\" " +
        "mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"MinorUnitCode\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"MinorUnitCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Price\" type=\"" +
        "System.Nullable`1[System.Decimal]\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Price\" ma" +
        "ppingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"numeric\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SAPCode\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"SAPCode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DefineDate\" t" +
        "ype=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlDefaultValue=\"ge" +
        "tdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"DefineDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"d" +
        "atetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DeleteFl" +
        "ag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"Ext_1\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"fa" +
        "lse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fal" +
        "se\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProp" +
        "ertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ext_1\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"Ext_2\" type=\"System.String\" isInherited=\"false\" isRe" +
        "adOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFrie" +
        "ndKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" i" +
        "sIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Ext_2\" map" +
        "pingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"Ext_3\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Ext_3\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Ext_4\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Ext_4\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(200)\" isPri" +
        "maryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class EqmSparePart : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _EqmSparePartEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _SparePartCode;
        
        protected string _SparePartMainType;
        
        protected string _SparePartDetailType;
        
        protected string _SparePartName;
        
        protected string _SparePartOtherName;
        
        protected string _SparePartSimpleName;
        
        protected string _SparePartStandards;
        
        protected string _UnitCode;
        
        protected string _MinorUnitCode;
        
        protected global::System.Decimal? _Price;
        
        protected string _SAPCode;
        
        protected global::System.DateTime? _DefineDate;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _Ext_1;
        
        protected string _Ext_2;
        
        protected string _Ext_3;
        
        protected string _Ext_4;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.EqmSparePart left, global::Mesnac.Entity.EqmSparePart right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.EqmSparePart left, global::Mesnac.Entity.EqmSparePart right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string SparePartCode {
            get {
                return this._SparePartCode;
            }
            set {
                this.OnPropertyChanged("SparePartCode", this._SparePartCode, value);
                this._SparePartCode = value;
            }
        }
        
        public string SparePartMainType {
            get {
                return this._SparePartMainType;
            }
            set {
                this.OnPropertyChanged("SparePartMainType", this._SparePartMainType, value);
                this._SparePartMainType = value;
            }
        }
        
        public string SparePartDetailType {
            get {
                return this._SparePartDetailType;
            }
            set {
                this.OnPropertyChanged("SparePartDetailType", this._SparePartDetailType, value);
                this._SparePartDetailType = value;
            }
        }
        
        public string SparePartName {
            get {
                return this._SparePartName;
            }
            set {
                this.OnPropertyChanged("SparePartName", this._SparePartName, value);
                this._SparePartName = value;
            }
        }
        
        public string SparePartOtherName {
            get {
                return this._SparePartOtherName;
            }
            set {
                this.OnPropertyChanged("SparePartOtherName", this._SparePartOtherName, value);
                this._SparePartOtherName = value;
            }
        }
        
        public string SparePartSimpleName {
            get {
                return this._SparePartSimpleName;
            }
            set {
                this.OnPropertyChanged("SparePartSimpleName", this._SparePartSimpleName, value);
                this._SparePartSimpleName = value;
            }
        }
        
        public string SparePartStandards {
            get {
                return this._SparePartStandards;
            }
            set {
                this.OnPropertyChanged("SparePartStandards", this._SparePartStandards, value);
                this._SparePartStandards = value;
            }
        }
        
        public string UnitCode {
            get {
                return this._UnitCode;
            }
            set {
                this.OnPropertyChanged("UnitCode", this._UnitCode, value);
                this._UnitCode = value;
            }
        }
        
        public string MinorUnitCode {
            get {
                return this._MinorUnitCode;
            }
            set {
                this.OnPropertyChanged("MinorUnitCode", this._MinorUnitCode, value);
                this._MinorUnitCode = value;
            }
        }
        
        public global::System.Decimal? Price {
            get {
                return this._Price;
            }
            set {
                this.OnPropertyChanged("Price", this._Price, value);
                this._Price = value;
            }
        }
        
        public string SAPCode {
            get {
                return this._SAPCode;
            }
            set {
                this.OnPropertyChanged("SAPCode", this._SAPCode, value);
                this._SAPCode = value;
            }
        }
        
        public global::System.DateTime? DefineDate {
            get {
                return this._DefineDate;
            }
            set {
                this.OnPropertyChanged("DefineDate", this._DefineDate, value);
                this._DefineDate = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Ext_1 {
            get {
                return this._Ext_1;
            }
            set {
                this.OnPropertyChanged("Ext_1", this._Ext_1, value);
                this._Ext_1 = value;
            }
        }
        
        public string Ext_2 {
            get {
                return this._Ext_2;
            }
            set {
                this.OnPropertyChanged("Ext_2", this._Ext_2, value);
                this._Ext_2 = value;
            }
        }
        
        public string Ext_3 {
            get {
                return this._Ext_3;
            }
            set {
                this.OnPropertyChanged("Ext_3", this._Ext_3, value);
                this._Ext_3 = value;
            }
        }
        
        public string Ext_4 {
            get {
                return this._Ext_4;
            }
            set {
                this.OnPropertyChanged("Ext_4", this._Ext_4, value);
                this._Ext_4 = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((EqmSparePart._EqmSparePartEntityConfiguration == null)) {
                EqmSparePart._EqmSparePartEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmSparePart");
            }
            return EqmSparePart._EqmSparePartEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._SparePartCode,
                    this._SparePartMainType,
                    this._SparePartDetailType,
                    this._SparePartName,
                    this._SparePartOtherName,
                    this._SparePartSimpleName,
                    this._SparePartStandards,
                    this._UnitCode,
                    this._MinorUnitCode,
                    this._Price,
                    this._SAPCode,
                    this._DefineDate,
                    this._DeleteFlag,
                    this._Remark,
                    this._Ext_1,
                    this._Ext_2,
                    this._Ext_3,
                    this._Ext_4};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._SparePartCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._SparePartMainType = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._SparePartDetailType = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._SparePartName = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._SparePartOtherName = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._SparePartSimpleName = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._SparePartStandards = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._UnitCode = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._MinorUnitCode = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Price = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._SAPCode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._DefineDate = this.GetDateTime(reader, 12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._DeleteFlag = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Remark = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Ext_1 = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Ext_2 = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Ext_3 = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Ext_4 = reader.GetString(18);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._SparePartCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._SparePartMainType = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._SparePartDetailType = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._SparePartName = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._SparePartOtherName = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._SparePartSimpleName = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._SparePartStandards = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._UnitCode = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._MinorUnitCode = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Price = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._SAPCode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._DefineDate = this.GetDateTime(row, 12);
            }
            if ((false == row.IsNull(13))) {
                this._DeleteFlag = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Remark = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Ext_1 = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Ext_2 = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Ext_3 = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Ext_4 = ((string)(row[18]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmSparePart).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmSparePart)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.EqmSparePart)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartCode = new NBear.Common.PropertyItem("SparePartCode", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartMainType = new NBear.Common.PropertyItem("SparePartMainType", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartDetailType = new NBear.Common.PropertyItem("SparePartDetailType", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartName = new NBear.Common.PropertyItem("SparePartName", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartOtherName = new NBear.Common.PropertyItem("SparePartOtherName", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartSimpleName = new NBear.Common.PropertyItem("SparePartSimpleName", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SparePartStandards = new NBear.Common.PropertyItem("SparePartStandards", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _UnitCode = new NBear.Common.PropertyItem("UnitCode", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _MinorUnitCode = new NBear.Common.PropertyItem("MinorUnitCode", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _Price = new NBear.Common.PropertyItem("Price", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _SAPCode = new NBear.Common.PropertyItem("SAPCode", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _DefineDate = new NBear.Common.PropertyItem("DefineDate", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _Ext_1 = new NBear.Common.PropertyItem("Ext_1", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _Ext_2 = new NBear.Common.PropertyItem("Ext_2", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _Ext_3 = new NBear.Common.PropertyItem("Ext_3", "Mesnac.Entity.EqmSparePart");
            
            protected NBear.Common.PropertyItem _Ext_4 = new NBear.Common.PropertyItem("Ext_4", "Mesnac.Entity.EqmSparePart");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartCode {
                get {
                    if ((aliasName == null)) {
                        return _SparePartCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartCode", _SparePartCode.EntityConfiguration, _SparePartCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartMainType {
                get {
                    if ((aliasName == null)) {
                        return _SparePartMainType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartMainType", _SparePartMainType.EntityConfiguration, _SparePartMainType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartDetailType {
                get {
                    if ((aliasName == null)) {
                        return _SparePartDetailType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartDetailType", _SparePartDetailType.EntityConfiguration, _SparePartDetailType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartName {
                get {
                    if ((aliasName == null)) {
                        return _SparePartName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartName", _SparePartName.EntityConfiguration, _SparePartName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartOtherName {
                get {
                    if ((aliasName == null)) {
                        return _SparePartOtherName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartOtherName", _SparePartOtherName.EntityConfiguration, _SparePartOtherName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartSimpleName {
                get {
                    if ((aliasName == null)) {
                        return _SparePartSimpleName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartSimpleName", _SparePartSimpleName.EntityConfiguration, _SparePartSimpleName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SparePartStandards {
                get {
                    if ((aliasName == null)) {
                        return _SparePartStandards;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SparePartStandards", _SparePartStandards.EntityConfiguration, _SparePartStandards.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UnitCode {
                get {
                    if ((aliasName == null)) {
                        return _UnitCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UnitCode", _UnitCode.EntityConfiguration, _UnitCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinorUnitCode {
                get {
                    if ((aliasName == null)) {
                        return _MinorUnitCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinorUnitCode", _MinorUnitCode.EntityConfiguration, _MinorUnitCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Price {
                get {
                    if ((aliasName == null)) {
                        return _Price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Price", _Price.EntityConfiguration, _Price.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SAPCode {
                get {
                    if ((aliasName == null)) {
                        return _SAPCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SAPCode", _SAPCode.EntityConfiguration, _SAPCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DefineDate {
                get {
                    if ((aliasName == null)) {
                        return _DefineDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DefineDate", _DefineDate.EntityConfiguration, _DefineDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_1 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_1;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_1", _Ext_1.EntityConfiguration, _Ext_1.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_2 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_2;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_2", _Ext_2.EntityConfiguration, _Ext_2.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_3 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_3;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_3", _Ext_3.EntityConfiguration, _Ext_3.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Ext_4 {
                get {
                    if ((aliasName == null)) {
                        return _Ext_4;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Ext_4", _Ext_4.EntityConfiguration, _Ext_4.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
