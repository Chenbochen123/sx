//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtRecipeWeightMidArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtRecipeWeightMid> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtRecipeWeightMid\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtRecipeWeightMid\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"MainMaterCode\" type=\"System.Stri" +
        "ng\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"MainMaterCode\" mappingColumnType=\"System.String\" sqlType=\"char" +
        "(12)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"EquipCode\" mappingColumnType=\"System.String\" " +
        "sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"EdtCode\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EdtCode\" mappingC" +
        "olumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"WeightID\" type=\"System.Nullable`1[Syste" +
        "m.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"WeightID\" mappingColumnType=\"System.Nullable`1[System.In" +
        "t32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"WeightType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"WeightType\" mappingColumnType=" +
        "\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"MaterialCode\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterialCode\" " +
        "mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"MaterialName\" type=\"System.String\" isInherit" +
        "ed=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery" +
        "=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPro" +
        "perty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingN" +
        "ame=\"MaterialName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(80)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"SetWeight\" type=\"Syst" +
        "em.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"SetWeight\" mappingColumnType=\"Syste" +
        "m.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"ErrorAllow\" type=\"System.Nullable`1[System.Decima" +
        "l]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"ErrorAllow\" mappingColumnType=\"System.Nullable`1[System.Decima" +
        "l]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"ErrorAllowMove\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Erro" +
        "rAllowMove\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decim" +
        "al\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CreateDate\" t" +
        "ype=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"CreateDate\" mappingColumn" +
        "Type=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"UpdateDate\" type=\"System.Nullable`1[" +
        "System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"UpdateDate\" mappingColumnType=\"System.Nullable`1" +
        "[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"RecipeObjID\" type=\"System.Nullable`1[System.Int32]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"RecipeObjID\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=" +
        "\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfig" +
        "uration>")]
    public partial class PmtRecipeWeightMid : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtRecipeWeightMidEntityConfiguration;
        
        protected string _MainMaterCode;
        
        protected string _EquipCode;
        
        protected global::System.Int32? _EdtCode;
        
        protected global::System.Int32? _WeightID;
        
        protected string _WeightType;
        
        protected string _MaterialCode;
        
        protected string _MaterialName;
        
        protected global::System.Decimal? _SetWeight;
        
        protected global::System.Decimal? _ErrorAllow;
        
        protected global::System.Decimal? _ErrorAllowMove;
        
        protected global::System.DateTime? _CreateDate;
        
        protected global::System.DateTime? _UpdateDate;
        
        protected global::System.Int32? _RecipeObjID;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtRecipeWeightMid left, global::Mesnac.Entity.PmtRecipeWeightMid right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtRecipeWeightMid left, global::Mesnac.Entity.PmtRecipeWeightMid right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string MainMaterCode {
            get {
                return this._MainMaterCode;
            }
            set {
                this.OnPropertyChanged("MainMaterCode", this._MainMaterCode, value);
                this._MainMaterCode = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public global::System.Int32? EdtCode {
            get {
                return this._EdtCode;
            }
            set {
                this.OnPropertyChanged("EdtCode", this._EdtCode, value);
                this._EdtCode = value;
            }
        }
        
        public global::System.Int32? WeightID {
            get {
                return this._WeightID;
            }
            set {
                this.OnPropertyChanged("WeightID", this._WeightID, value);
                this._WeightID = value;
            }
        }
        
        public string WeightType {
            get {
                return this._WeightType;
            }
            set {
                this.OnPropertyChanged("WeightType", this._WeightType, value);
                this._WeightType = value;
            }
        }
        
        public string MaterialCode {
            get {
                return this._MaterialCode;
            }
            set {
                this.OnPropertyChanged("MaterialCode", this._MaterialCode, value);
                this._MaterialCode = value;
            }
        }
        
        public string MaterialName {
            get {
                return this._MaterialName;
            }
            set {
                this.OnPropertyChanged("MaterialName", this._MaterialName, value);
                this._MaterialName = value;
            }
        }
        
        public global::System.Decimal? SetWeight {
            get {
                return this._SetWeight;
            }
            set {
                this.OnPropertyChanged("SetWeight", this._SetWeight, value);
                this._SetWeight = value;
            }
        }
        
        public global::System.Decimal? ErrorAllow {
            get {
                return this._ErrorAllow;
            }
            set {
                this.OnPropertyChanged("ErrorAllow", this._ErrorAllow, value);
                this._ErrorAllow = value;
            }
        }
        
        public global::System.Decimal? ErrorAllowMove {
            get {
                return this._ErrorAllowMove;
            }
            set {
                this.OnPropertyChanged("ErrorAllowMove", this._ErrorAllowMove, value);
                this._ErrorAllowMove = value;
            }
        }
        
        public global::System.DateTime? CreateDate {
            get {
                return this._CreateDate;
            }
            set {
                this.OnPropertyChanged("CreateDate", this._CreateDate, value);
                this._CreateDate = value;
            }
        }
        
        public global::System.DateTime? UpdateDate {
            get {
                return this._UpdateDate;
            }
            set {
                this.OnPropertyChanged("UpdateDate", this._UpdateDate, value);
                this._UpdateDate = value;
            }
        }
        
        public global::System.Int32? RecipeObjID {
            get {
                return this._RecipeObjID;
            }
            set {
                this.OnPropertyChanged("RecipeObjID", this._RecipeObjID, value);
                this._RecipeObjID = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtRecipeWeightMid._PmtRecipeWeightMidEntityConfiguration == null)) {
                PmtRecipeWeightMid._PmtRecipeWeightMidEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtRecipeWeightMid");
            }
            return PmtRecipeWeightMid._PmtRecipeWeightMidEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._MainMaterCode,
                    this._EquipCode,
                    this._EdtCode,
                    this._WeightID,
                    this._WeightType,
                    this._MaterialCode,
                    this._MaterialName,
                    this._SetWeight,
                    this._ErrorAllow,
                    this._ErrorAllowMove,
                    this._CreateDate,
                    this._UpdateDate,
                    this._RecipeObjID};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._MainMaterCode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._EdtCode = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._WeightID = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._WeightType = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterialCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterialName = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._SetWeight = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._ErrorAllow = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._ErrorAllowMove = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._CreateDate = this.GetDateTime(reader, 10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._UpdateDate = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._RecipeObjID = reader.GetInt32(12);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._MainMaterCode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._EdtCode = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._WeightID = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._WeightType = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterialCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._MaterialName = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._SetWeight = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._ErrorAllow = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._ErrorAllowMove = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._CreateDate = this.GetDateTime(row, 10);
            }
            if ((false == row.IsNull(11))) {
                this._UpdateDate = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._RecipeObjID = ((System.Nullable<int>)(row[12]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtRecipeWeightMid).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtRecipeWeightMid)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _MainMaterCode = new NBear.Common.PropertyItem("MainMaterCode", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _EdtCode = new NBear.Common.PropertyItem("EdtCode", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _WeightID = new NBear.Common.PropertyItem("WeightID", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _WeightType = new NBear.Common.PropertyItem("WeightType", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _MaterialCode = new NBear.Common.PropertyItem("MaterialCode", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _MaterialName = new NBear.Common.PropertyItem("MaterialName", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _SetWeight = new NBear.Common.PropertyItem("SetWeight", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _ErrorAllow = new NBear.Common.PropertyItem("ErrorAllow", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _ErrorAllowMove = new NBear.Common.PropertyItem("ErrorAllowMove", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _CreateDate = new NBear.Common.PropertyItem("CreateDate", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _UpdateDate = new NBear.Common.PropertyItem("UpdateDate", "Mesnac.Entity.PmtRecipeWeightMid");
            
            protected NBear.Common.PropertyItem _RecipeObjID = new NBear.Common.PropertyItem("RecipeObjID", "Mesnac.Entity.PmtRecipeWeightMid");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem MainMaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MainMaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MainMaterCode", _MainMaterCode.EntityConfiguration, _MainMaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EdtCode {
                get {
                    if ((aliasName == null)) {
                        return _EdtCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EdtCode", _EdtCode.EntityConfiguration, _EdtCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WeightID {
                get {
                    if ((aliasName == null)) {
                        return _WeightID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WeightID", _WeightID.EntityConfiguration, _WeightID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WeightType {
                get {
                    if ((aliasName == null)) {
                        return _WeightType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WeightType", _WeightType.EntityConfiguration, _WeightType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterialCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialCode", _MaterialCode.EntityConfiguration, _MaterialCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterialName {
                get {
                    if ((aliasName == null)) {
                        return _MaterialName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterialName", _MaterialName.EntityConfiguration, _MaterialName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem SetWeight {
                get {
                    if ((aliasName == null)) {
                        return _SetWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("SetWeight", _SetWeight.EntityConfiguration, _SetWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErrorAllow {
                get {
                    if ((aliasName == null)) {
                        return _ErrorAllow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErrorAllow", _ErrorAllow.EntityConfiguration, _ErrorAllow.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ErrorAllowMove {
                get {
                    if ((aliasName == null)) {
                        return _ErrorAllowMove;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ErrorAllowMove", _ErrorAllowMove.EntityConfiguration, _ErrorAllowMove.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CreateDate {
                get {
                    if ((aliasName == null)) {
                        return _CreateDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CreateDate", _CreateDate.EntityConfiguration, _CreateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem UpdateDate {
                get {
                    if ((aliasName == null)) {
                        return _UpdateDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("UpdateDate", _UpdateDate.EntityConfiguration, _UpdateDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecipeObjID {
                get {
                    if ((aliasName == null)) {
                        return _RecipeObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecipeObjID", _RecipeObjID.EntityConfiguration, _RecipeObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
