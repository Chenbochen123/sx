//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PpmRubberAdjustingDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PpmRubberAdjustingDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PpmRubberAdjustingDetail\" isReadOnly=\"false\" isAutoPreLoad=\"" +
        "false\" isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PpmRubberAdjustingD" +
        "etail\" batchSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Barcode\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"nvarchar(18)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"" +
        "OrderID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"OrderID\" mappingColumnType=\"System.In" +
        "t32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"" +
        "StorageID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"StorageID\" mappingColumnType=\"Syst" +
        "em.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"StoragePlaceID\" type=\"System.String\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"StoragePlace" +
        "ID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"RecordDate\" type=\"System.Nullable`1[" +
        "System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"RecordDate\" mappingColumnType=\"System.Nullable`1" +
        "[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrimaryKey=\"false\" isNo" +
        "tNull=\"false\" />\r\n    <Property name=\"DecreaseOrAddFlag\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"DecreaseOrAddFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1" +
        ")\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"AdjustingNum\" " +
        "type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"AdjustingNum\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"PieceWeight\" type=\"System.Nullable`1[System." +
        "Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContai" +
        "ned=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey" +
        "=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgno" +
        "re=\"false\" mappingName=\"PieceWeight\" mappingColumnType=\"System.Nullable`1[System" +
        ".Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pro" +
        "perty name=\"AdjustingWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherite" +
        "d=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=" +
        "\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProp" +
        "erty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNa" +
        "me=\"AdjustingWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlTy" +
        "pe=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Entit" +
        "yConfiguration>")]
    public partial class PpmRubberAdjustingDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PpmRubberAdjustingDetailEntityConfiguration;
        
        protected string _BillNo;
        
        protected string _Barcode;
        
        protected int _OrderID;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected global::System.DateTime? _RecordDate;
        
        protected string _MaterCode;
        
        protected string _DecreaseOrAddFlag;
        
        protected global::System.Int32? _AdjustingNum;
        
        protected global::System.Decimal? _PieceWeight;
        
        protected global::System.Decimal? _AdjustingWeight;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PpmRubberAdjustingDetail left, global::Mesnac.Entity.PpmRubberAdjustingDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PpmRubberAdjustingDetail left, global::Mesnac.Entity.PpmRubberAdjustingDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string BillNo {
            get {
                return this._BillNo;
            }
            set {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public global::System.DateTime? RecordDate {
            get {
                return this._RecordDate;
            }
            set {
                this.OnPropertyChanged("RecordDate", this._RecordDate, value);
                this._RecordDate = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public string DecreaseOrAddFlag {
            get {
                return this._DecreaseOrAddFlag;
            }
            set {
                this.OnPropertyChanged("DecreaseOrAddFlag", this._DecreaseOrAddFlag, value);
                this._DecreaseOrAddFlag = value;
            }
        }
        
        public global::System.Int32? AdjustingNum {
            get {
                return this._AdjustingNum;
            }
            set {
                this.OnPropertyChanged("AdjustingNum", this._AdjustingNum, value);
                this._AdjustingNum = value;
            }
        }
        
        public global::System.Decimal? PieceWeight {
            get {
                return this._PieceWeight;
            }
            set {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }
        
        public global::System.Decimal? AdjustingWeight {
            get {
                return this._AdjustingWeight;
            }
            set {
                this.OnPropertyChanged("AdjustingWeight", this._AdjustingWeight, value);
                this._AdjustingWeight = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PpmRubberAdjustingDetail._PpmRubberAdjustingDetailEntityConfiguration == null)) {
                PpmRubberAdjustingDetail._PpmRubberAdjustingDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PpmRubberAdjustingDetail");
            }
            return PpmRubberAdjustingDetail._PpmRubberAdjustingDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._BillNo,
                    this._Barcode,
                    this._OrderID,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._RecordDate,
                    this._MaterCode,
                    this._DecreaseOrAddFlag,
                    this._AdjustingNum,
                    this._PieceWeight,
                    this._AdjustingWeight};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Barcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._OrderID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._StorageID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._StoragePlaceID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._RecordDate = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._MaterCode = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._DecreaseOrAddFlag = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._AdjustingNum = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._PieceWeight = reader.GetDecimal(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._AdjustingWeight = reader.GetDecimal(10);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Barcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._OrderID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._StorageID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._StoragePlaceID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._RecordDate = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6))) {
                this._MaterCode = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._DecreaseOrAddFlag = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._AdjustingNum = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._PieceWeight = ((System.Nullable<decimal>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._AdjustingWeight = ((System.Nullable<decimal>)(row[10]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PpmRubberAdjustingDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PpmRubberAdjustingDetail)(obj)).isAttached) 
                        && (this.BillNo == ((global::Mesnac.Entity.PpmRubberAdjustingDetail)(obj)).BillNo)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PpmRubberAdjustingDetail)(obj)).Barcode)) 
                        && (this.OrderID == ((global::Mesnac.Entity.PpmRubberAdjustingDetail)(obj)).OrderID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _RecordDate = new NBear.Common.PropertyItem("RecordDate", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _DecreaseOrAddFlag = new NBear.Common.PropertyItem("DecreaseOrAddFlag", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _AdjustingNum = new NBear.Common.PropertyItem("AdjustingNum", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            protected NBear.Common.PropertyItem _AdjustingWeight = new NBear.Common.PropertyItem("AdjustingWeight", "Mesnac.Entity.PpmRubberAdjustingDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem BillNo {
                get {
                    if ((aliasName == null)) {
                        return _BillNo;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem RecordDate {
                get {
                    if ((aliasName == null)) {
                        return _RecordDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("RecordDate", _RecordDate.EntityConfiguration, _RecordDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DecreaseOrAddFlag {
                get {
                    if ((aliasName == null)) {
                        return _DecreaseOrAddFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DecreaseOrAddFlag", _DecreaseOrAddFlag.EntityConfiguration, _DecreaseOrAddFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AdjustingNum {
                get {
                    if ((aliasName == null)) {
                        return _AdjustingNum;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AdjustingNum", _AdjustingNum.EntityConfiguration, _AdjustingNum.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PieceWeight {
                get {
                    if ((aliasName == null)) {
                        return _PieceWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AdjustingWeight {
                get {
                    if ((aliasName == null)) {
                        return _AdjustingWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AdjustingWeight", _AdjustingWeight.EntityConfiguration, _AdjustingWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
