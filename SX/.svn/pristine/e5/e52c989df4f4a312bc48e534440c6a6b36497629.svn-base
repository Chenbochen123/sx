//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class QmcCheckDataDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.QmcCheckDataDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.QmcCheckDataDetail\" isReadOnly=\"false\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"QmcCheckDataDetail\" batch" +
        "Size=\"10\">\r\n  <Properties>\r\n    <Property name=\"DetailId\" type=\"System.Int32\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"DetailId\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey" +
        "=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"CheckId\" type=\"System.Nullable`" +
        "1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" i" +
        "sContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRela" +
        "tionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializat" +
        "ionIgnore=\"false\" mappingName=\"CheckId\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"ItemDetailId\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Item" +
        "DetailId\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"CheckValue\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"CheckValue\" mappingColumnType=\"System.String\" sqlType=" +
        "\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Go" +
        "odCheckRange\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isComp" +
        "oundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyL" +
        "oad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"f" +
        "alse\" isSerializationIgnore=\"false\" mappingName=\"GoodCheckRange\" mappingColumnTy" +
        "pe=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"AutoCheckResult\" type=\"System.Nullable`1[System.Int32]\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"AutoCheckResult\" mappingColumnType=\"System.Nullable`1[System.Int32" +
        "]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "PrimeCheckRange\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isC" +
        "ompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLa" +
        "zyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc" +
        "=\"false\" isSerializationIgnore=\"false\" mappingName=\"PrimeCheckRange\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\" isNotNull=\"fal" +
        "se\" />\r\n    <Property name=\"IsPrime\" type=\"System.Nullable`1[System.Int32]\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"IsPrime\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"" +
        "int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"MinValue\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"MinValue\" mappingColumnType=\"System.String\" sql" +
        "Type=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"MaxValue\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"MaxValue\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"nvarchar(60)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "</Properties>\r\n</EntityConfiguration>")]
    public partial class QmcCheckDataDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _QmcCheckDataDetailEntityConfiguration;
        
        protected int _DetailId;
        
        protected global::System.Int32? _CheckId;
        
        protected global::System.Int32? _ItemDetailId;
        
        protected string _CheckValue;
        
        protected string _GoodCheckRange;
        
        protected global::System.Int32? _AutoCheckResult;
        
        protected string _PrimeCheckRange;
        
        protected global::System.Int32? _IsPrime;
        
        protected string _MinValue;
        
        protected string _MaxValue;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.QmcCheckDataDetail left, global::Mesnac.Entity.QmcCheckDataDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.QmcCheckDataDetail left, global::Mesnac.Entity.QmcCheckDataDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int DetailId {
            get {
                return this._DetailId;
            }
            set {
                this.OnPropertyChanged("DetailId", this._DetailId, value);
                this._DetailId = value;
            }
        }
        
        public global::System.Int32? CheckId {
            get {
                return this._CheckId;
            }
            set {
                this.OnPropertyChanged("CheckId", this._CheckId, value);
                this._CheckId = value;
            }
        }
        
        public global::System.Int32? ItemDetailId {
            get {
                return this._ItemDetailId;
            }
            set {
                this.OnPropertyChanged("ItemDetailId", this._ItemDetailId, value);
                this._ItemDetailId = value;
            }
        }
        
        public string CheckValue {
            get {
                return this._CheckValue;
            }
            set {
                this.OnPropertyChanged("CheckValue", this._CheckValue, value);
                this._CheckValue = value;
            }
        }
        
        public string GoodCheckRange {
            get {
                return this._GoodCheckRange;
            }
            set {
                this.OnPropertyChanged("GoodCheckRange", this._GoodCheckRange, value);
                this._GoodCheckRange = value;
            }
        }
        
        public global::System.Int32? AutoCheckResult {
            get {
                return this._AutoCheckResult;
            }
            set {
                this.OnPropertyChanged("AutoCheckResult", this._AutoCheckResult, value);
                this._AutoCheckResult = value;
            }
        }
        
        public string PrimeCheckRange {
            get {
                return this._PrimeCheckRange;
            }
            set {
                this.OnPropertyChanged("PrimeCheckRange", this._PrimeCheckRange, value);
                this._PrimeCheckRange = value;
            }
        }
        
        public global::System.Int32? IsPrime {
            get {
                return this._IsPrime;
            }
            set {
                this.OnPropertyChanged("IsPrime", this._IsPrime, value);
                this._IsPrime = value;
            }
        }
        
        public string MinValue {
            get {
                return this._MinValue;
            }
            set {
                this.OnPropertyChanged("MinValue", this._MinValue, value);
                this._MinValue = value;
            }
        }
        
        public string MaxValue {
            get {
                return this._MaxValue;
            }
            set {
                this.OnPropertyChanged("MaxValue", this._MaxValue, value);
                this._MaxValue = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((QmcCheckDataDetail._QmcCheckDataDetailEntityConfiguration == null)) {
                QmcCheckDataDetail._QmcCheckDataDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.QmcCheckDataDetail");
            }
            return QmcCheckDataDetail._QmcCheckDataDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._DetailId,
                    this._CheckId,
                    this._ItemDetailId,
                    this._CheckValue,
                    this._GoodCheckRange,
                    this._AutoCheckResult,
                    this._PrimeCheckRange,
                    this._IsPrime,
                    this._MinValue,
                    this._MaxValue};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._DetailId = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._CheckId = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ItemDetailId = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._CheckValue = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._GoodCheckRange = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._AutoCheckResult = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._PrimeCheckRange = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._IsPrime = reader.GetInt32(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._MinValue = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._MaxValue = reader.GetString(9);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._DetailId = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._CheckId = ((System.Nullable<int>)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ItemDetailId = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._CheckValue = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._GoodCheckRange = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._AutoCheckResult = ((System.Nullable<int>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._PrimeCheckRange = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._IsPrime = ((System.Nullable<int>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._MinValue = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._MaxValue = ((string)(row[9]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.QmcCheckDataDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.QmcCheckDataDetail)(obj)).isAttached) 
                        && (this.DetailId == ((global::Mesnac.Entity.QmcCheckDataDetail)(obj)).DetailId));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _DetailId = new NBear.Common.PropertyItem("DetailId", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _CheckId = new NBear.Common.PropertyItem("CheckId", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _ItemDetailId = new NBear.Common.PropertyItem("ItemDetailId", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _CheckValue = new NBear.Common.PropertyItem("CheckValue", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _GoodCheckRange = new NBear.Common.PropertyItem("GoodCheckRange", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _AutoCheckResult = new NBear.Common.PropertyItem("AutoCheckResult", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _PrimeCheckRange = new NBear.Common.PropertyItem("PrimeCheckRange", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _IsPrime = new NBear.Common.PropertyItem("IsPrime", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _MinValue = new NBear.Common.PropertyItem("MinValue", "Mesnac.Entity.QmcCheckDataDetail");
            
            protected NBear.Common.PropertyItem _MaxValue = new NBear.Common.PropertyItem("MaxValue", "Mesnac.Entity.QmcCheckDataDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem DetailId {
                get {
                    if ((aliasName == null)) {
                        return _DetailId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DetailId", _DetailId.EntityConfiguration, _DetailId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckId {
                get {
                    if ((aliasName == null)) {
                        return _CheckId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckId", _CheckId.EntityConfiguration, _CheckId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ItemDetailId {
                get {
                    if ((aliasName == null)) {
                        return _ItemDetailId;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ItemDetailId", _ItemDetailId.EntityConfiguration, _ItemDetailId.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem CheckValue {
                get {
                    if ((aliasName == null)) {
                        return _CheckValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("CheckValue", _CheckValue.EntityConfiguration, _CheckValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem GoodCheckRange {
                get {
                    if ((aliasName == null)) {
                        return _GoodCheckRange;
                    }
                    else {
                        return new NBear.Common.PropertyItem("GoodCheckRange", _GoodCheckRange.EntityConfiguration, _GoodCheckRange.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem AutoCheckResult {
                get {
                    if ((aliasName == null)) {
                        return _AutoCheckResult;
                    }
                    else {
                        return new NBear.Common.PropertyItem("AutoCheckResult", _AutoCheckResult.EntityConfiguration, _AutoCheckResult.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrimeCheckRange {
                get {
                    if ((aliasName == null)) {
                        return _PrimeCheckRange;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrimeCheckRange", _PrimeCheckRange.EntityConfiguration, _PrimeCheckRange.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem IsPrime {
                get {
                    if ((aliasName == null)) {
                        return _IsPrime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("IsPrime", _IsPrime.EntityConfiguration, _IsPrime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MinValue {
                get {
                    if ((aliasName == null)) {
                        return _MinValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MinValue", _MinValue.EntityConfiguration, _MinValue.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaxValue {
                get {
                    if ((aliasName == null)) {
                        return _MaxValue;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaxValue", _MaxValue.EntityConfiguration, _MaxValue.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
