//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PstStorgaeDetailArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstStorgaeDetail> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstStorgaeDetail\" isReadOnly=\"false\" isAutoPreLoad=\"false\" i" +
        "sBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstStorgaeDetail\" batchSize" +
        "=\"10\">\r\n  <Properties>\r\n    <Property name=\"ID\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"ID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"tr" +
        "ue\" isNotNull=\"true\" />\r\n    <Property name=\"Barcode\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(18)\" isPri" +
        "maryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"OrderID\" type=\"System.In" +
        "t32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"OrderID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPri" +
        "maryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StorageID\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContaine" +
        "d=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"" +
        "false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore" +
        "=\"false\" mappingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvar" +
        "char(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Storage" +
        "PlaceID\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundU" +
        "nit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"" +
        "false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\"" +
        " isSerializationIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n" +
        "    <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false\" isReadOn" +
        "ly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode\" map" +
        "pingColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"ProcDate\" type=\"System.Nullable`1[System.Da" +
        "teTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"ProcDate\" mappingColumnType=\"System.Nullable`1[System.Dat" +
        "eTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"PieceWeight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pi" +
        "eceWeight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decima" +
        "l\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"StoreInOut\" ty" +
        "pe=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"StoreInOut\" mappingColumnType=\"System.String\" s" +
        "qlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "Num\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Num\" mappingColumnType" +
        "=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"Weight\" type=\"System.Nullable`1[System.Decimal]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sql" +
        "Type=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Op" +
        "erDate\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly" +
        "=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=" +
        "\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndex" +
        "PropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OperDate\" mappin" +
        "gColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"InaccountDate\" type=\"System.N" +
        "ullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"InaccountDate\" mappingColumnType=\"Syst" +
        "em.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Rem" +
        "ark\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class PstStorgaeDetail : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PstStorgaeDetailEntityConfiguration;
        
        protected string _ID;
        
        protected string _Barcode;
        
        protected int _OrderID;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected string _MaterCode;
        
        protected global::System.DateTime? _ProcDate;
        
        protected global::System.Decimal? _PieceWeight;
        
        protected string _StoreInOut;
        
        protected global::System.Int32? _Num;
        
        protected global::System.Decimal? _Weight;
        
        protected global::System.DateTime? _OperDate;
        
        protected global::System.DateTime? _InaccountDate;
        
        protected string _Remark;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PstStorgaeDetail left, global::Mesnac.Entity.PstStorgaeDetail right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PstStorgaeDetail left, global::Mesnac.Entity.PstStorgaeDetail right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string ID {
            get {
                return this._ID;
            }
            set {
                this.OnPropertyChanged("ID", this._ID, value);
                this._ID = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int OrderID {
            get {
                return this._OrderID;
            }
            set {
                this.OnPropertyChanged("OrderID", this._OrderID, value);
                this._OrderID = value;
            }
        }
        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.DateTime? ProcDate {
            get {
                return this._ProcDate;
            }
            set {
                this.OnPropertyChanged("ProcDate", this._ProcDate, value);
                this._ProcDate = value;
            }
        }
        
        public global::System.Decimal? PieceWeight {
            get {
                return this._PieceWeight;
            }
            set {
                this.OnPropertyChanged("PieceWeight", this._PieceWeight, value);
                this._PieceWeight = value;
            }
        }
        
        public string StoreInOut {
            get {
                return this._StoreInOut;
            }
            set {
                this.OnPropertyChanged("StoreInOut", this._StoreInOut, value);
                this._StoreInOut = value;
            }
        }
        
        public global::System.Int32? Num {
            get {
                return this._Num;
            }
            set {
                this.OnPropertyChanged("Num", this._Num, value);
                this._Num = value;
            }
        }
        
        public global::System.Decimal? Weight {
            get {
                return this._Weight;
            }
            set {
                this.OnPropertyChanged("Weight", this._Weight, value);
                this._Weight = value;
            }
        }
        
        public global::System.DateTime? OperDate {
            get {
                return this._OperDate;
            }
            set {
                this.OnPropertyChanged("OperDate", this._OperDate, value);
                this._OperDate = value;
            }
        }
        
        public global::System.DateTime? InaccountDate {
            get {
                return this._InaccountDate;
            }
            set {
                this.OnPropertyChanged("InaccountDate", this._InaccountDate, value);
                this._InaccountDate = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PstStorgaeDetail._PstStorgaeDetailEntityConfiguration == null)) {
                PstStorgaeDetail._PstStorgaeDetailEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstStorgaeDetail");
            }
            return PstStorgaeDetail._PstStorgaeDetailEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ID,
                    this._Barcode,
                    this._OrderID,
                    this._StorageID,
                    this._StoragePlaceID,
                    this._MaterCode,
                    this._ProcDate,
                    this._PieceWeight,
                    this._StoreInOut,
                    this._Num,
                    this._Weight,
                    this._OperDate,
                    this._InaccountDate,
                    this._Remark};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Barcode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._OrderID = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._StorageID = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._StoragePlaceID = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._MaterCode = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._ProcDate = this.GetDateTime(reader, 6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._PieceWeight = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._StoreInOut = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Num = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Weight = reader.GetDecimal(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._OperDate = this.GetDateTime(reader, 11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._InaccountDate = this.GetDateTime(reader, 12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Remark = reader.GetString(13);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Barcode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._OrderID = ((int)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._StorageID = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._StoragePlaceID = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._MaterCode = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._ProcDate = this.GetDateTime(row, 6);
            }
            if ((false == row.IsNull(7))) {
                this._PieceWeight = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._StoreInOut = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Num = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Weight = ((System.Nullable<decimal>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._OperDate = this.GetDateTime(row, 11);
            }
            if ((false == row.IsNull(12))) {
                this._InaccountDate = this.GetDateTime(row, 12);
            }
            if ((false == row.IsNull(13))) {
                this._Remark = ((string)(row[13]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstStorgaeDetail).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PstStorgaeDetail)(obj)).isAttached) 
                        && (this.ID == ((global::Mesnac.Entity.PstStorgaeDetail)(obj)).ID)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PstStorgaeDetail)(obj)).Barcode)) 
                        && (this.OrderID == ((global::Mesnac.Entity.PstStorgaeDetail)(obj)).OrderID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ID = new NBear.Common.PropertyItem("ID", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _OrderID = new NBear.Common.PropertyItem("OrderID", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _ProcDate = new NBear.Common.PropertyItem("ProcDate", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _PieceWeight = new NBear.Common.PropertyItem("PieceWeight", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _StoreInOut = new NBear.Common.PropertyItem("StoreInOut", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _Num = new NBear.Common.PropertyItem("Num", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _Weight = new NBear.Common.PropertyItem("Weight", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _OperDate = new NBear.Common.PropertyItem("OperDate", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _InaccountDate = new NBear.Common.PropertyItem("InaccountDate", "Mesnac.Entity.PstStorgaeDetail");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstStorgaeDetail");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ID {
                get {
                    if ((aliasName == null)) {
                        return _ID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ID", _ID.EntityConfiguration, _ID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OrderID {
                get {
                    if ((aliasName == null)) {
                        return _OrderID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OrderID", _OrderID.EntityConfiguration, _OrderID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ProcDate {
                get {
                    if ((aliasName == null)) {
                        return _ProcDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ProcDate", _ProcDate.EntityConfiguration, _ProcDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PieceWeight {
                get {
                    if ((aliasName == null)) {
                        return _PieceWeight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PieceWeight", _PieceWeight.EntityConfiguration, _PieceWeight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoreInOut {
                get {
                    if ((aliasName == null)) {
                        return _StoreInOut;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoreInOut", _StoreInOut.EntityConfiguration, _StoreInOut.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Num {
                get {
                    if ((aliasName == null)) {
                        return _Num;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Num", _Num.EntityConfiguration, _Num.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight {
                get {
                    if ((aliasName == null)) {
                        return _Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight", _Weight.EntityConfiguration, _Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OperDate {
                get {
                    if ((aliasName == null)) {
                        return _OperDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OperDate", _OperDate.EntityConfiguration, _OperDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InaccountDate {
                get {
                    if ((aliasName == null)) {
                        return _InaccountDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InaccountDate", _InaccountDate.EntityConfiguration, _InaccountDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
