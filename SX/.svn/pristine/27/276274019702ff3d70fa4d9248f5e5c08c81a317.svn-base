//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_WeighArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_Weigh> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_Weigh\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"Ppt_Weigh\" batchSize=\"10\">\r\n  <Pro" +
        "perties>\r\n    <Property name=\"Barcode\" type=\"System.String\" isInherited=\"false\" " +
        "sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Barcode\" mappingColumnType=\"System.String\" sqlType=\"char(18)\" is" +
        "PrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Weight_id\" type=\"Syst" +
        "em.Int32\" isInherited=\"false\" sqlDefaultValue=\"(0)\" isReadOnly=\"false\" isCompoun" +
        "dUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad" +
        "=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fals" +
        "e\" isSerializationIgnore=\"false\" mappingName=\"Weight_id\" mappingColumnType=\"Syst" +
        "em.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property n" +
        "ame=\"Mater_code\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mater_" +
        "code\" mappingColumnType=\"System.String\" sqlType=\"char(13)\" isPrimaryKey=\"true\" i" +
        "sNotNull=\"true\" />\r\n    <Property name=\"Mater_name\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Mater_name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_code\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Equip_code\" mappingColumnType=\"S" +
        "ystem.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <" +
        "Property name=\"Set_weight\" type=\"System.Nullable`1[System.Decimal]\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"Set_weight\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"dec" +
        "imal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Real_weight" +
        "\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Real_weight\" mappingCol" +
        "umnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"fals" +
        "e\" isNotNull=\"false\" />\r\n    <Property name=\"Error_allow\" type=\"System.Nullable`" +
        "1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\"" +
        " isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRe" +
        "lationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializ" +
        "ationIgnore=\"false\" mappingName=\"Error_allow\" mappingColumnType=\"System.Nullable" +
        "`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"Error_out\" type=\"System.Nullable`1[System.Decimal]\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Error_out\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=" +
        "\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Warning" +
        "_sgn\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Warning_sgn\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Mater_qua\" type=\"System.String\" isInherited=\"fals" +
        "e\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Mater_qua\" mappingColumnType=\"System.String\" sqlType=\"char(1)" +
        "\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mater_barcode\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Mater_barcode\" mappingColumnType=\"System.Stri" +
        "ng\" sqlType=\"char(18)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Weigh_time\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue=\"\'   " +
        "              \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"Weigh_time\" mappingColumnType=\"System.String\" sqlType=\"char(19)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Weigh_type\" type=\"Sys" +
        "tem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Weigh_type\" mappingColumnType=\"System.String\" sqlType=" +
        "\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Wei" +
        "gh_state\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Weigh_state\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"char(4)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Pr" +
        "operty name=\"Unit_name\" type=\"System.String\" isInherited=\"false\" sqlDefaultValue" +
        "=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"Unit_name\" mappingColumnType=\"System.String\" sqlType=\"varchar(6)\" isPrimaryKey=" +
        "\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_id\" type=\"System.String\" " +
        "isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false" +
        "\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" i" +
        "sIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\"" +
        " mappingName=\"Plan_id\" mappingColumnType=\"System.String\" sqlType=\"char(12)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Plan_date\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Plan_date\" mappingColumnType=\"System.String\" sqlType=\"c" +
        "har(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Serial_i" +
        "d\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Serial_id\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotN" +
        "ull=\"false\" />\r\n    <Property name=\"Scale_Code\" type=\"System.Nullable`1[System.I" +
        "nt32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Scale_Code\" mappingColumnType=\"System.Nullable`1[System.Int" +
        "32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"Inserttime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" sqlD" +
        "efaultValue=\"getdate()\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"Inserttime\" mappingColumnType=\"System.Nullable`1[System.DateTi" +
        "me]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Propertie" +
        "s>\r\n</EntityConfiguration>")]
    public partial class Ppt_Weigh : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_WeighEntityConfiguration;
        
        protected string _Barcode;
        
        protected int _Weight_id;
        
        protected string _Mater_code;
        
        protected string _Mater_name;
        
        protected string _Equip_code;
        
        protected global::System.Decimal? _Set_weight;
        
        protected global::System.Decimal? _Real_weight;
        
        protected global::System.Decimal? _Error_allow;
        
        protected global::System.Decimal? _Error_out;
        
        protected string _Warning_sgn;
        
        protected string _Mater_qua;
        
        protected string _Mater_barcode;
        
        protected string _Weigh_time;
        
        protected string _Weigh_type;
        
        protected string _Weigh_state;
        
        protected string _Unit_name;
        
        protected string _Plan_id;
        
        protected string _Plan_date;
        
        protected global::System.Int32? _Serial_id;
        
        protected global::System.Int32? _Scale_Code;
        
        protected global::System.DateTime? _Inserttime;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_Weigh left, global::Mesnac.Entity.Ppt_Weigh right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_Weigh left, global::Mesnac.Entity.Ppt_Weigh right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public int Weight_id {
            get {
                return this._Weight_id;
            }
            set {
                this.OnPropertyChanged("Weight_id", this._Weight_id, value);
                this._Weight_id = value;
            }
        }
        
        public string Mater_code {
            get {
                return this._Mater_code;
            }
            set {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }
        
        public string Mater_name {
            get {
                return this._Mater_name;
            }
            set {
                this.OnPropertyChanged("Mater_name", this._Mater_name, value);
                this._Mater_name = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public global::System.Decimal? Set_weight {
            get {
                return this._Set_weight;
            }
            set {
                this.OnPropertyChanged("Set_weight", this._Set_weight, value);
                this._Set_weight = value;
            }
        }
        
        public global::System.Decimal? Real_weight {
            get {
                return this._Real_weight;
            }
            set {
                this.OnPropertyChanged("Real_weight", this._Real_weight, value);
                this._Real_weight = value;
            }
        }
        
        public global::System.Decimal? Error_allow {
            get {
                return this._Error_allow;
            }
            set {
                this.OnPropertyChanged("Error_allow", this._Error_allow, value);
                this._Error_allow = value;
            }
        }
        
        public global::System.Decimal? Error_out {
            get {
                return this._Error_out;
            }
            set {
                this.OnPropertyChanged("Error_out", this._Error_out, value);
                this._Error_out = value;
            }
        }
        
        public string Warning_sgn {
            get {
                return this._Warning_sgn;
            }
            set {
                this.OnPropertyChanged("Warning_sgn", this._Warning_sgn, value);
                this._Warning_sgn = value;
            }
        }
        
        public string Mater_qua {
            get {
                return this._Mater_qua;
            }
            set {
                this.OnPropertyChanged("Mater_qua", this._Mater_qua, value);
                this._Mater_qua = value;
            }
        }
        
        public string Mater_barcode {
            get {
                return this._Mater_barcode;
            }
            set {
                this.OnPropertyChanged("Mater_barcode", this._Mater_barcode, value);
                this._Mater_barcode = value;
            }
        }
        
        public string Weigh_time {
            get {
                return this._Weigh_time;
            }
            set {
                this.OnPropertyChanged("Weigh_time", this._Weigh_time, value);
                this._Weigh_time = value;
            }
        }
        
        public string Weigh_type {
            get {
                return this._Weigh_type;
            }
            set {
                this.OnPropertyChanged("Weigh_type", this._Weigh_type, value);
                this._Weigh_type = value;
            }
        }
        
        public string Weigh_state {
            get {
                return this._Weigh_state;
            }
            set {
                this.OnPropertyChanged("Weigh_state", this._Weigh_state, value);
                this._Weigh_state = value;
            }
        }
        
        public string Unit_name {
            get {
                return this._Unit_name;
            }
            set {
                this.OnPropertyChanged("Unit_name", this._Unit_name, value);
                this._Unit_name = value;
            }
        }
        
        public string Plan_id {
            get {
                return this._Plan_id;
            }
            set {
                this.OnPropertyChanged("Plan_id", this._Plan_id, value);
                this._Plan_id = value;
            }
        }
        
        public string Plan_date {
            get {
                return this._Plan_date;
            }
            set {
                this.OnPropertyChanged("Plan_date", this._Plan_date, value);
                this._Plan_date = value;
            }
        }
        
        public global::System.Int32? Serial_id {
            get {
                return this._Serial_id;
            }
            set {
                this.OnPropertyChanged("Serial_id", this._Serial_id, value);
                this._Serial_id = value;
            }
        }
        
        public global::System.Int32? Scale_Code {
            get {
                return this._Scale_Code;
            }
            set {
                this.OnPropertyChanged("Scale_Code", this._Scale_Code, value);
                this._Scale_Code = value;
            }
        }
        
        public global::System.DateTime? Inserttime {
            get {
                return this._Inserttime;
            }
            set {
                this.OnPropertyChanged("Inserttime", this._Inserttime, value);
                this._Inserttime = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_Weigh._Ppt_WeighEntityConfiguration == null)) {
                Ppt_Weigh._Ppt_WeighEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_Weigh");
            }
            return Ppt_Weigh._Ppt_WeighEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Barcode,
                    this._Weight_id,
                    this._Mater_code,
                    this._Mater_name,
                    this._Equip_code,
                    this._Set_weight,
                    this._Real_weight,
                    this._Error_allow,
                    this._Error_out,
                    this._Warning_sgn,
                    this._Mater_qua,
                    this._Mater_barcode,
                    this._Weigh_time,
                    this._Weigh_type,
                    this._Weigh_state,
                    this._Unit_name,
                    this._Plan_id,
                    this._Plan_date,
                    this._Serial_id,
                    this._Scale_Code,
                    this._Inserttime};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Barcode = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Weight_id = reader.GetInt32(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Mater_code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Mater_name = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Equip_code = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Set_weight = reader.GetDecimal(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Real_weight = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Error_allow = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Error_out = reader.GetDecimal(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Warning_sgn = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Mater_qua = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Mater_barcode = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Weigh_time = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Weigh_type = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Weigh_state = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._Unit_name = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Plan_id = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Plan_date = reader.GetString(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Serial_id = reader.GetInt32(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Scale_Code = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Inserttime = this.GetDateTime(reader, 20);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Barcode = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Weight_id = ((int)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Mater_code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Mater_name = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Equip_code = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Set_weight = ((System.Nullable<decimal>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Real_weight = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Error_allow = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Error_out = ((System.Nullable<decimal>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Warning_sgn = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Mater_qua = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Mater_barcode = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Weigh_time = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Weigh_type = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Weigh_state = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._Unit_name = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Plan_id = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Plan_date = ((string)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Serial_id = ((System.Nullable<int>)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Scale_Code = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Inserttime = this.GetDateTime(row, 20);
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_Weigh).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.Ppt_Weigh)(obj)).isAttached) 
                        && (this.Barcode == ((global::Mesnac.Entity.Ppt_Weigh)(obj)).Barcode)) 
                        && (this.Weight_id == ((global::Mesnac.Entity.Ppt_Weigh)(obj)).Weight_id)) 
                        && (this.Mater_code == ((global::Mesnac.Entity.Ppt_Weigh)(obj)).Mater_code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Weight_id = new NBear.Common.PropertyItem("Weight_id", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Mater_name = new NBear.Common.PropertyItem("Mater_name", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Set_weight = new NBear.Common.PropertyItem("Set_weight", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Real_weight = new NBear.Common.PropertyItem("Real_weight", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Error_allow = new NBear.Common.PropertyItem("Error_allow", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Error_out = new NBear.Common.PropertyItem("Error_out", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Warning_sgn = new NBear.Common.PropertyItem("Warning_sgn", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Mater_qua = new NBear.Common.PropertyItem("Mater_qua", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Mater_barcode = new NBear.Common.PropertyItem("Mater_barcode", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Weigh_time = new NBear.Common.PropertyItem("Weigh_time", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Weigh_type = new NBear.Common.PropertyItem("Weigh_type", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Weigh_state = new NBear.Common.PropertyItem("Weigh_state", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Unit_name = new NBear.Common.PropertyItem("Unit_name", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Plan_id = new NBear.Common.PropertyItem("Plan_id", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Plan_date = new NBear.Common.PropertyItem("Plan_date", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Serial_id = new NBear.Common.PropertyItem("Serial_id", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Scale_Code = new NBear.Common.PropertyItem("Scale_Code", "Mesnac.Entity.Ppt_Weigh");
            
            protected NBear.Common.PropertyItem _Inserttime = new NBear.Common.PropertyItem("Inserttime", "Mesnac.Entity.Ppt_Weigh");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight_id {
                get {
                    if ((aliasName == null)) {
                        return _Weight_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight_id", _Weight_id.EntityConfiguration, _Weight_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_name {
                get {
                    if ((aliasName == null)) {
                        return _Mater_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_name", _Mater_name.EntityConfiguration, _Mater_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_weight {
                get {
                    if ((aliasName == null)) {
                        return _Set_weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_weight", _Set_weight.EntityConfiguration, _Set_weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Real_weight {
                get {
                    if ((aliasName == null)) {
                        return _Real_weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Real_weight", _Real_weight.EntityConfiguration, _Real_weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Error_allow {
                get {
                    if ((aliasName == null)) {
                        return _Error_allow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Error_allow", _Error_allow.EntityConfiguration, _Error_allow.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Error_out {
                get {
                    if ((aliasName == null)) {
                        return _Error_out;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Error_out", _Error_out.EntityConfiguration, _Error_out.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Warning_sgn {
                get {
                    if ((aliasName == null)) {
                        return _Warning_sgn;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Warning_sgn", _Warning_sgn.EntityConfiguration, _Warning_sgn.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_qua {
                get {
                    if ((aliasName == null)) {
                        return _Mater_qua;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_qua", _Mater_qua.EntityConfiguration, _Mater_qua.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mater_barcode {
                get {
                    if ((aliasName == null)) {
                        return _Mater_barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_barcode", _Mater_barcode.EntityConfiguration, _Mater_barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weigh_time {
                get {
                    if ((aliasName == null)) {
                        return _Weigh_time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weigh_time", _Weigh_time.EntityConfiguration, _Weigh_time.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weigh_type {
                get {
                    if ((aliasName == null)) {
                        return _Weigh_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weigh_type", _Weigh_type.EntityConfiguration, _Weigh_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weigh_state {
                get {
                    if ((aliasName == null)) {
                        return _Weigh_state;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weigh_state", _Weigh_state.EntityConfiguration, _Weigh_state.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Unit_name {
                get {
                    if ((aliasName == null)) {
                        return _Unit_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Unit_name", _Unit_name.EntityConfiguration, _Unit_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_id {
                get {
                    if ((aliasName == null)) {
                        return _Plan_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_id", _Plan_id.EntityConfiguration, _Plan_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_date", _Plan_date.EntityConfiguration, _Plan_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Serial_id {
                get {
                    if ((aliasName == null)) {
                        return _Serial_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_id", _Serial_id.EntityConfiguration, _Serial_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Scale_Code {
                get {
                    if ((aliasName == null)) {
                        return _Scale_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Scale_Code", _Scale_Code.EntityConfiguration, _Scale_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Inserttime {
                get {
                    if ((aliasName == null)) {
                        return _Inserttime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Inserttime", _Inserttime.EntityConfiguration, _Inserttime.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
