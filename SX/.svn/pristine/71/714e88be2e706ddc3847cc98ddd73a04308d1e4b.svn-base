//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Ppt_WorkerArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Ppt_Worker> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Ppt_Worker\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatch" +
        "Update=\"false\" isRelation=\"false\" mappingName=\"Ppt_Worker\" batchSize=\"10\">\r\n  <P" +
        "roperties>\r\n    <Property name=\"Plan_date\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Pl" +
        "an_date\" mappingColumnType=\"System.String\" sqlType=\"char(10)\" isPrimaryKey=\"true" +
        "\" isNotNull=\"true\" />\r\n    <Property name=\"Equip_Code\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Equip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrim" +
        "aryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Shift_id\" type=\"System.In" +
        "t16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Shift_id\" mappingColumnType=\"System.Int16\" sqlType=\"smallint\"" +
        " isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Work_Type\" type=\"S" +
        "ystem.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Work_Type\" mappingColumnType=\"System.Int16\" sqlType=\"" +
        "smallint\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"Serial_id" +
        "\" type=\"System.Int16\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Serial_id\" mappingColumnType=\"System.Int16\" " +
        "sqlType=\"smallint\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"" +
        "Shift_Classid\" type=\"System.Nullable`1[System.Int16]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Shift_Classi" +
        "d\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sqlType=\"smallint\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"User_id\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"User_id\" mappingColumnType=\"System.String\" sqlType=\"varchar" +
        "(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"User_name\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"User_name\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Work_typeName\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Work_typeName\" mappingCo" +
        "lumnType=\"System.String\" sqlType=\"nvarchar(50)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"Work_Shop\" type=\"System.Nullable`1[System.Int16]\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Work_Shop\" mappingColumnType=\"System.Nullable`1[System.Int16]\" sq" +
        "lType=\"smallint\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</E" +
        "ntityConfiguration>")]
    public partial class Ppt_Worker : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Ppt_WorkerEntityConfiguration;
        
        protected string _Plan_date;
        
        protected string _Equip_Code;
        
        protected short _Shift_id;
        
        protected short _Work_Type;
        
        protected short _Serial_id;
        
        protected global::System.Int16? _Shift_Classid;
        
        protected string _User_id;
        
        protected string _User_name;
        
        protected string _Work_typeName;
        
        protected global::System.Int16? _Work_Shop;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Ppt_Worker left, global::Mesnac.Entity.Ppt_Worker right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Ppt_Worker left, global::Mesnac.Entity.Ppt_Worker right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Plan_date {
            get {
                return this._Plan_date;
            }
            set {
                this.OnPropertyChanged("Plan_date", this._Plan_date, value);
                this._Plan_date = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public short Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public short Work_Type {
            get {
                return this._Work_Type;
            }
            set {
                this.OnPropertyChanged("Work_Type", this._Work_Type, value);
                this._Work_Type = value;
            }
        }
        
        public short Serial_id {
            get {
                return this._Serial_id;
            }
            set {
                this.OnPropertyChanged("Serial_id", this._Serial_id, value);
                this._Serial_id = value;
            }
        }
        
        public global::System.Int16? Shift_Classid {
            get {
                return this._Shift_Classid;
            }
            set {
                this.OnPropertyChanged("Shift_Classid", this._Shift_Classid, value);
                this._Shift_Classid = value;
            }
        }
        
        public string User_id {
            get {
                return this._User_id;
            }
            set {
                this.OnPropertyChanged("User_id", this._User_id, value);
                this._User_id = value;
            }
        }
        
        public string User_name {
            get {
                return this._User_name;
            }
            set {
                this.OnPropertyChanged("User_name", this._User_name, value);
                this._User_name = value;
            }
        }
        
        public string Work_typeName {
            get {
                return this._Work_typeName;
            }
            set {
                this.OnPropertyChanged("Work_typeName", this._Work_typeName, value);
                this._Work_typeName = value;
            }
        }
        
        public global::System.Int16? Work_Shop {
            get {
                return this._Work_Shop;
            }
            set {
                this.OnPropertyChanged("Work_Shop", this._Work_Shop, value);
                this._Work_Shop = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Ppt_Worker._Ppt_WorkerEntityConfiguration == null)) {
                Ppt_Worker._Ppt_WorkerEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Ppt_Worker");
            }
            return Ppt_Worker._Ppt_WorkerEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Plan_date,
                    this._Equip_Code,
                    this._Shift_id,
                    this._Work_Type,
                    this._Serial_id,
                    this._Shift_Classid,
                    this._User_id,
                    this._User_name,
                    this._Work_typeName,
                    this._Work_Shop};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Plan_date = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_Code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Shift_id = reader.GetInt16(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Work_Type = reader.GetInt16(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Serial_id = reader.GetInt16(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Shift_Classid = reader.GetInt16(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._User_id = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._User_name = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Work_typeName = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Work_Shop = reader.GetInt16(9);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Plan_date = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_Code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Shift_id = ((short)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Work_Type = ((short)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Serial_id = ((short)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Shift_Classid = ((System.Nullable<short>)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._User_id = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._User_name = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Work_typeName = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Work_Shop = ((System.Nullable<short>)(row[9]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Ppt_Worker).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((((this.isAttached && ((global::Mesnac.Entity.Ppt_Worker)(obj)).isAttached) 
                        && (this.Plan_date == ((global::Mesnac.Entity.Ppt_Worker)(obj)).Plan_date)) 
                        && (this.Equip_Code == ((global::Mesnac.Entity.Ppt_Worker)(obj)).Equip_Code)) 
                        && (this.Shift_id == ((global::Mesnac.Entity.Ppt_Worker)(obj)).Shift_id)) 
                        && (this.Work_Type == ((global::Mesnac.Entity.Ppt_Worker)(obj)).Work_Type)) 
                        && (this.Serial_id == ((global::Mesnac.Entity.Ppt_Worker)(obj)).Serial_id));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Plan_date = new NBear.Common.PropertyItem("Plan_date", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Work_Type = new NBear.Common.PropertyItem("Work_Type", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Serial_id = new NBear.Common.PropertyItem("Serial_id", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Shift_Classid = new NBear.Common.PropertyItem("Shift_Classid", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _User_id = new NBear.Common.PropertyItem("User_id", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _User_name = new NBear.Common.PropertyItem("User_name", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Work_typeName = new NBear.Common.PropertyItem("Work_typeName", "Mesnac.Entity.Ppt_Worker");
            
            protected NBear.Common.PropertyItem _Work_Shop = new NBear.Common.PropertyItem("Work_Shop", "Mesnac.Entity.Ppt_Worker");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Plan_date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_date", _Plan_date.EntityConfiguration, _Plan_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_Type {
                get {
                    if ((aliasName == null)) {
                        return _Work_Type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_Type", _Work_Type.EntityConfiguration, _Work_Type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Serial_id {
                get {
                    if ((aliasName == null)) {
                        return _Serial_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serial_id", _Serial_id.EntityConfiguration, _Serial_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_Classid {
                get {
                    if ((aliasName == null)) {
                        return _Shift_Classid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_Classid", _Shift_Classid.EntityConfiguration, _Shift_Classid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem User_id {
                get {
                    if ((aliasName == null)) {
                        return _User_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("User_id", _User_id.EntityConfiguration, _User_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem User_name {
                get {
                    if ((aliasName == null)) {
                        return _User_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("User_name", _User_name.EntityConfiguration, _User_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_typeName {
                get {
                    if ((aliasName == null)) {
                        return _Work_typeName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_typeName", _Work_typeName.EntityConfiguration, _Work_typeName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Work_Shop {
                get {
                    if ((aliasName == null)) {
                        return _Work_Shop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Work_Shop", _Work_Shop.EntityConfiguration, _Work_Shop.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
