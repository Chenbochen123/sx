//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_DianArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_Dian> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_Dian\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchUp" +
        "date=\"false\" isRelation=\"false\" mappingName=\"Eqm_Dian\" batchSize=\"10\">\r\n  <Prope" +
        "rties>\r\n    <Property name=\"Serialid\" type=\"System.Int32\" isInherited=\"false\" is" +
        "ReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Serialid\"" +
        " mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNull=\"t" +
        "rue\" />\r\n    <Property name=\"Plan_date\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Plan_" +
        "date\" mappingColumnType=\"System.String\" sqlType=\"nchar(10)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Equip_Code\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Equip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Shift_id\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Shift_id\" mappingColumnType=\"System.Null" +
        "able`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n " +
        "   <Property name=\"Dian\" type=\"System.Nullable`1[System.Decimal]\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "Dian\" mappingColumnType=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" is" +
        "PrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Dian_price\" type=\"S" +
        "ystem.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"Dian_price\" mappingColumnType=\"S" +
        "ystem.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNu" +
        "ll=\"false\" />\r\n  </Properties>\r\n</EntityConfiguration>")]
    public partial class Eqm_Dian : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_DianEntityConfiguration;
        
        protected int _Serialid;
        
        protected string _Plan_date;
        
        protected string _Equip_Code;
        
        protected global::System.Int32? _Shift_id;
        
        protected global::System.Decimal? _Dian;
        
        protected global::System.Decimal? _Dian_price;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_Dian left, global::Mesnac.Entity.Eqm_Dian right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_Dian left, global::Mesnac.Entity.Eqm_Dian right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int Serialid {
            get {
                return this._Serialid;
            }
            set {
                this.OnPropertyChanged("Serialid", this._Serialid, value);
                this._Serialid = value;
            }
        }
        
        public string Plan_date {
            get {
                return this._Plan_date;
            }
            set {
                this.OnPropertyChanged("Plan_date", this._Plan_date, value);
                this._Plan_date = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public global::System.Int32? Shift_id {
            get {
                return this._Shift_id;
            }
            set {
                this.OnPropertyChanged("Shift_id", this._Shift_id, value);
                this._Shift_id = value;
            }
        }
        
        public global::System.Decimal? Dian {
            get {
                return this._Dian;
            }
            set {
                this.OnPropertyChanged("Dian", this._Dian, value);
                this._Dian = value;
            }
        }
        
        public global::System.Decimal? Dian_price {
            get {
                return this._Dian_price;
            }
            set {
                this.OnPropertyChanged("Dian_price", this._Dian_price, value);
                this._Dian_price = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_Dian._Eqm_DianEntityConfiguration == null)) {
                Eqm_Dian._Eqm_DianEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_Dian");
            }
            return Eqm_Dian._Eqm_DianEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Serialid,
                    this._Plan_date,
                    this._Equip_Code,
                    this._Shift_id,
                    this._Dian,
                    this._Dian_price};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Serialid = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Plan_date = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Equip_Code = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Shift_id = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Dian = reader.GetDecimal(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Dian_price = reader.GetDecimal(5);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Serialid = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Plan_date = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Equip_Code = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Shift_id = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Dian = ((System.Nullable<decimal>)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Dian_price = ((System.Nullable<decimal>)(row[5]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_Dian).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_Dian)(obj)).isAttached) 
                        && (this.Serialid == ((global::Mesnac.Entity.Eqm_Dian)(obj)).Serialid));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Serialid = new NBear.Common.PropertyItem("Serialid", "Mesnac.Entity.Eqm_Dian");
            
            protected NBear.Common.PropertyItem _Plan_date = new NBear.Common.PropertyItem("Plan_date", "Mesnac.Entity.Eqm_Dian");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.Eqm_Dian");
            
            protected NBear.Common.PropertyItem _Shift_id = new NBear.Common.PropertyItem("Shift_id", "Mesnac.Entity.Eqm_Dian");
            
            protected NBear.Common.PropertyItem _Dian = new NBear.Common.PropertyItem("Dian", "Mesnac.Entity.Eqm_Dian");
            
            protected NBear.Common.PropertyItem _Dian_price = new NBear.Common.PropertyItem("Dian_price", "Mesnac.Entity.Eqm_Dian");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Serialid {
                get {
                    if ((aliasName == null)) {
                        return _Serialid;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Serialid", _Serialid.EntityConfiguration, _Serialid.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Plan_date {
                get {
                    if ((aliasName == null)) {
                        return _Plan_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Plan_date", _Plan_date.EntityConfiguration, _Plan_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Shift_id {
                get {
                    if ((aliasName == null)) {
                        return _Shift_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Shift_id", _Shift_id.EntityConfiguration, _Shift_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dian {
                get {
                    if ((aliasName == null)) {
                        return _Dian;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dian", _Dian.EntityConfiguration, _Dian.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Dian_price {
                get {
                    if ((aliasName == null)) {
                        return _Dian_price;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Dian_price", _Dian_price.EntityConfiguration, _Dian_price.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
