//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class EqmFaultReasonArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.EqmFaultReason> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.EqmFaultReason\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isB" +
        "atchUpdate=\"false\" isRelation=\"false\" mappingName=\"EqmFaultReason\" batchSize=\"10" +
        "\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNot" +
        "Null=\"true\" />\r\n    <Property name=\"FaultID\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "FaultID\" mappingColumnType=\"System.String\" sqlType=\"char(6)\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"ReasonName\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"ReasonName\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(100)\"" +
        " isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"DealDesc\" type=\"" +
        "System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"DealDesc\" mappingColumnType=\"System.String\" sqlType" +
        "=\"nvarchar(100)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"" +
        "DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Pr" +
        "operties>\r\n</EntityConfiguration>")]
    public partial class EqmFaultReason : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _EqmFaultReasonEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _FaultID;
        
        protected string _ReasonName;
        
        protected string _DealDesc;
        
        protected string _DeleteFlag;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.EqmFaultReason left, global::Mesnac.Entity.EqmFaultReason right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.EqmFaultReason left, global::Mesnac.Entity.EqmFaultReason right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string FaultID {
            get {
                return this._FaultID;
            }
            set {
                this.OnPropertyChanged("FaultID", this._FaultID, value);
                this._FaultID = value;
            }
        }
        
        public string ReasonName {
            get {
                return this._ReasonName;
            }
            set {
                this.OnPropertyChanged("ReasonName", this._ReasonName, value);
                this._ReasonName = value;
            }
        }
        
        public string DealDesc {
            get {
                return this._DealDesc;
            }
            set {
                this.OnPropertyChanged("DealDesc", this._DealDesc, value);
                this._DealDesc = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((EqmFaultReason._EqmFaultReasonEntityConfiguration == null)) {
                EqmFaultReason._EqmFaultReasonEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.EqmFaultReason");
            }
            return EqmFaultReason._EqmFaultReasonEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._FaultID,
                    this._ReasonName,
                    this._DealDesc,
                    this._DeleteFlag};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._FaultID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._ReasonName = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._DealDesc = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._DeleteFlag = reader.GetString(4);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._FaultID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._ReasonName = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._DealDesc = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._DeleteFlag = ((string)(row[4]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.EqmFaultReason).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.EqmFaultReason)(obj)).isAttached) 
                        && (this.ObjID == ((global::Mesnac.Entity.EqmFaultReason)(obj)).ObjID));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.EqmFaultReason");
            
            protected NBear.Common.PropertyItem _FaultID = new NBear.Common.PropertyItem("FaultID", "Mesnac.Entity.EqmFaultReason");
            
            protected NBear.Common.PropertyItem _ReasonName = new NBear.Common.PropertyItem("ReasonName", "Mesnac.Entity.EqmFaultReason");
            
            protected NBear.Common.PropertyItem _DealDesc = new NBear.Common.PropertyItem("DealDesc", "Mesnac.Entity.EqmFaultReason");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.EqmFaultReason");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FaultID {
                get {
                    if ((aliasName == null)) {
                        return _FaultID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FaultID", _FaultID.EntityConfiguration, _FaultID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ReasonName {
                get {
                    if ((aliasName == null)) {
                        return _ReasonName;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ReasonName", _ReasonName.EntityConfiguration, _ReasonName.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DealDesc {
                get {
                    if ((aliasName == null)) {
                        return _DealDesc;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DealDesc", _DealDesc.EntityConfiguration, _DealDesc.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
