using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Mesnac.Entity;
using Ext.Net;
using Mesnac.Business.Implements;
using NBear.Common;
using System.Text.RegularExpressions;
using Mesnac.Data.Components;
using System.Data;
using System.Text;

public partial class Manager_Technology_Manage_FristCheck : Mesnac.Web.UI.Page
{
    protected Ppt_LotManager manager = new Ppt_LotManager();
    protected Pmt_equipManager equipManager = new Pmt_equipManager();
    protected Ppt_ShiftClassManager ClassManager = new Ppt_ShiftClassManager();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!X.IsAjaxRequest)
        {
            dStartDate.SetValue(DateTime.Now);
            dEndDate.SetValue(DateTime.Now.AddDays(1));
            bindClass();
            bindEquip();
            bindList();
        }
    }

    private DataSet getList()
    {

        return GetDataByParas();
    }

    private void bindClass()
    {
        cbxClass.Clear();
        WhereClip where = new WhereClip();
        EntityArrayList<Ppt_ShiftClass> list = ClassManager.GetListByWhereAndOrder(where, Ppt_ShiftClass._.Shift_ClassId.Asc);
        foreach (Ppt_ShiftClass type in list)
        {
            Ext.Net.ListItem item = new Ext.Net.ListItem(type.Shift_ClassName, type.Shift_ClassId);
            cbxClass.Items.Add(item);
        }
    }

    private void bindEquip()
    {
        cbxEquip.Clear();
        WhereClip where = new WhereClip();
        EntityArrayList<Pmt_equip> list = equipManager.GetListByWhereAndOrder(Pmt_equip._.Equip_class == "01", Pmt_equip._.Equip_code.Asc);
        foreach (Pmt_equip type in list)
        {
            Ext.Net.ListItem item = new Ext.Net.ListItem(type.Equip_name, type.Equip_code);
            cbxEquip.Items.Add(item);
        }
    }


    public System.Data.DataSet GetDataByParas()
    {
        StringBuilder sb = new StringBuilder();
        #region
        sb.AppendLine(@"select t1.*,t2.ShiftName,t3.shift_ClassName,t4.Equip_name,t1.Powder_DisTime * 0.1 as ROOLtemp,t1.Powder_Batch * 0.1 as CBtemp,t1.Small_Batch * 0.1 as XLMtemp from Ppt_Lot t1
left join PptShift t2  on t2.ObjID=t1.Shift_Id
left join Ppt_ShiftClass t3 on t3.shift_ClassId=t1.Shift_Class
left join Pmt_equip t4 on t4.Equip_code=t1.Equip_Code");
        sb.AppendLine("WHERE 1=1  ");
        sb.AppendLine("AND t1.Start_Datetime >='" + dStartDate.SelectedDate.ToString("yyyy-MM-dd HH:mm:ss") + "'");
        sb.AppendLine("AND t1.Start_Datetime <='" + dEndDate.SelectedDate.ToString("yyyy-MM-dd HH:mm:ss") + "'");
       
        if (!string.IsNullOrEmpty(cbxClass.SelectedItem.Value))
        {
            sb.AppendLine("AND t1.Shift_Class='" + cbxClass.SelectedItem.Value + "'");
        }
        if (!string.IsNullOrEmpty(cbxEquip.SelectedItem.Value))
        {
            sb.AppendLine("AND t1.Equip_Code='" + cbxEquip.SelectedItem.Value + "'");
        }
        #endregion

        NBear.Data.CustomSqlSection css = manager.GetBySql(sb.ToString());
        return css.ToDataSet();
    }


    private void bindList()
    {
        this.store.DataSource = getList();
        this.store.DataBind();
    }

    #region 按钮事件响应
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        bindList();
    }
    protected void btnExportSubmit_Click(object sender, EventArgs e)
    {
        DataSet ds = getList();
        //huiw,2013-10-28添加，判断不为空时才导出excel
        if (ds == null || ds.Tables[0].Rows.Count == 0)
        {
            X.Msg.Alert("提示", "未查询出数据！").Show();
        }
        else
        {
            for (int i = 0; i < ds.Tables[0].Columns.Count; i++)
            {
                bool isshow = false;
                DataColumn dc = ds.Tables[0].Columns[i];
                foreach (ColumnBase cb in this.pnlList.ColumnModel.Columns)
                {
                    if ((cb.DataIndex != null) && (cb.DataIndex.ToUpper() == dc.ColumnName.ToUpper()))
                    {
                        dc.ColumnName = cb.Text;
                        isshow = true;
                        break;
                    }
                }
                if (!isshow)
                {
                    ds.Tables[0].Columns.Remove(dc.ColumnName);
                    i--;
                }
            }
            new Mesnac.Util.Excel.ExcelDownload().ExcelFileDown(ds, "首件检查报表导出");
        }
    }

    #endregion


}