//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PmtRubWeightSettingArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PmtRubWeightSetting> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.PmtRubWeightSetting\" isReadOnly=\"true\" isAutoPreLoad=\"false\"" +
        " isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PmtRubWeightSetting\" batc" +
        "hSize=\"10\">\r\n  <Properties>\r\n    <Property name=\"ObjID\" type=\"System.Int32\" isIn" +
        "herited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"ObjID\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"EquipCode\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" i" +
        "sQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIn" +
        "dexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" ma" +
        "ppingName=\"EquipCode\" mappingColumnType=\"System.String\" sqlType=\"varchar(1)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"State\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"State\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" " +
        "isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"EquipElectricCurr" +
        "ent\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true" +
        "\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\"" +
        " isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropert" +
        "yDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"EquipElectricCurrent\" m" +
        "appingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"WeightSettingCtrl\" type=\"System." +
        "String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"WeightSettingCtrl\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Lo" +
        "ckType\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUni" +
        "t=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fa" +
        "lse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" i" +
        "sSerializationIgnore=\"false\" mappingName=\"LockType\" mappingColumnType=\"System.St" +
        "ring\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Prope" +
        "rty name=\"DeleteFlag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"true\"" +
        " isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" " +
        "isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProperty" +
        "Desc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DeleteFlag\" mappingColum" +
        "nType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isRea" +
        "dOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mapp" +
        "ingColumnType=\"System.String\" sqlType=\"varchar(1)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"Condition\" type=\"System.String\" isInherited=\"f" +
        "alse\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fals" +
        "e\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=" +
        "\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"C" +
        "ondition\" mappingColumnType=\"System.String\" sqlType=\"varchar(4)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"BarCtl\" type=\"System.Nullable`1[" +
        "System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"BarCtl\" mappingColumnType=\"System.Nullable`1[System." +
        "Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"DianLiu\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKe" +
        "y=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isInd" +
        "exPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"DianLiu\" mappi" +
        "ngColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false" +
        "\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_Code\" type=\"System.String\" isI" +
        "nherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"Equip_Code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"FIFO_Ctl\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"FIFO_Ctl\" mappingColumnType=\"System.Nulla" +
        "ble`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"FIFO_Day\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"" +
        "false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fal" +
        "se\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty" +
        "=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"" +
        "FIFO_Day\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Update_Time\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"true\" isCompoundUnit=\"false\" isCont" +
        "ained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationK" +
        "ey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIg" +
        "nore=\"false\" mappingName=\"Update_Time\" mappingColumnType=\"System.String\" sqlType" +
        "=\"varchar(19)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Ent" +
        "ityConfiguration>")]
    public partial class PmtRubWeightSetting : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PmtRubWeightSettingEntityConfiguration;
        
        protected int _ObjID;
        
        protected string _EquipCode;
        
        protected string _State;
        
        protected global::System.Int32? _EquipElectricCurrent;
        
        protected string _WeightSettingCtrl;
        
        protected string _LockType;
        
        protected string _DeleteFlag;
        
        protected string _Remark;
        
        protected string _Condition;
        
        protected global::System.Int32? _BarCtl;
        
        protected global::System.Int32? _DianLiu;
        
        protected string _Equip_Code;
        
        protected global::System.Int32? _FIFO_Ctl;
        
        protected global::System.Int32? _FIFO_Day;
        
        protected string _Update_Time;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PmtRubWeightSetting left, global::Mesnac.Entity.PmtRubWeightSetting right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PmtRubWeightSetting left, global::Mesnac.Entity.PmtRubWeightSetting right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string EquipCode {
            get {
                return this._EquipCode;
            }
            set {
                this.OnPropertyChanged("EquipCode", this._EquipCode, value);
                this._EquipCode = value;
            }
        }
        
        public string State {
            get {
                return this._State;
            }
            set {
                this.OnPropertyChanged("State", this._State, value);
                this._State = value;
            }
        }
        
        public global::System.Int32? EquipElectricCurrent {
            get {
                return this._EquipElectricCurrent;
            }
            set {
                this.OnPropertyChanged("EquipElectricCurrent", this._EquipElectricCurrent, value);
                this._EquipElectricCurrent = value;
            }
        }
        
        public string WeightSettingCtrl {
            get {
                return this._WeightSettingCtrl;
            }
            set {
                this.OnPropertyChanged("WeightSettingCtrl", this._WeightSettingCtrl, value);
                this._WeightSettingCtrl = value;
            }
        }
        
        public string LockType {
            get {
                return this._LockType;
            }
            set {
                this.OnPropertyChanged("LockType", this._LockType, value);
                this._LockType = value;
            }
        }
        
        public string DeleteFlag {
            get {
                return this._DeleteFlag;
            }
            set {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Condition {
            get {
                return this._Condition;
            }
            set {
                this.OnPropertyChanged("Condition", this._Condition, value);
                this._Condition = value;
            }
        }
        
        public global::System.Int32? BarCtl {
            get {
                return this._BarCtl;
            }
            set {
                this.OnPropertyChanged("BarCtl", this._BarCtl, value);
                this._BarCtl = value;
            }
        }
        
        public global::System.Int32? DianLiu {
            get {
                return this._DianLiu;
            }
            set {
                this.OnPropertyChanged("DianLiu", this._DianLiu, value);
                this._DianLiu = value;
            }
        }
        
        public string Equip_Code {
            get {
                return this._Equip_Code;
            }
            set {
                this.OnPropertyChanged("Equip_Code", this._Equip_Code, value);
                this._Equip_Code = value;
            }
        }
        
        public global::System.Int32? FIFO_Ctl {
            get {
                return this._FIFO_Ctl;
            }
            set {
                this.OnPropertyChanged("FIFO_Ctl", this._FIFO_Ctl, value);
                this._FIFO_Ctl = value;
            }
        }
        
        public global::System.Int32? FIFO_Day {
            get {
                return this._FIFO_Day;
            }
            set {
                this.OnPropertyChanged("FIFO_Day", this._FIFO_Day, value);
                this._FIFO_Day = value;
            }
        }
        
        public string Update_Time {
            get {
                return this._Update_Time;
            }
            set {
                this.OnPropertyChanged("Update_Time", this._Update_Time, value);
                this._Update_Time = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PmtRubWeightSetting._PmtRubWeightSettingEntityConfiguration == null)) {
                PmtRubWeightSetting._PmtRubWeightSettingEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PmtRubWeightSetting");
            }
            return PmtRubWeightSetting._PmtRubWeightSettingEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._ObjID,
                    this._EquipCode,
                    this._State,
                    this._EquipElectricCurrent,
                    this._WeightSettingCtrl,
                    this._LockType,
                    this._DeleteFlag,
                    this._Remark,
                    this._Condition,
                    this._BarCtl,
                    this._DianLiu,
                    this._Equip_Code,
                    this._FIFO_Ctl,
                    this._FIFO_Day,
                    this._Update_Time};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._ObjID = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._EquipCode = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._State = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._EquipElectricCurrent = reader.GetInt32(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._WeightSettingCtrl = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._LockType = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._DeleteFlag = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Remark = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Condition = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._BarCtl = reader.GetInt32(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._DianLiu = reader.GetInt32(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Equip_Code = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._FIFO_Ctl = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._FIFO_Day = reader.GetInt32(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Update_Time = reader.GetString(14);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._ObjID = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._EquipCode = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._State = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._EquipElectricCurrent = ((System.Nullable<int>)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._WeightSettingCtrl = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._LockType = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._DeleteFlag = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Remark = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Condition = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._BarCtl = ((System.Nullable<int>)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._DianLiu = ((System.Nullable<int>)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Equip_Code = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._FIFO_Ctl = ((System.Nullable<int>)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._FIFO_Day = ((System.Nullable<int>)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Update_Time = ((string)(row[14]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PmtRubWeightSetting).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PmtRubWeightSetting)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _EquipCode = new NBear.Common.PropertyItem("EquipCode", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _State = new NBear.Common.PropertyItem("State", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _EquipElectricCurrent = new NBear.Common.PropertyItem("EquipElectricCurrent", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _WeightSettingCtrl = new NBear.Common.PropertyItem("WeightSettingCtrl", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _LockType = new NBear.Common.PropertyItem("LockType", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _Condition = new NBear.Common.PropertyItem("Condition", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _BarCtl = new NBear.Common.PropertyItem("BarCtl", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _DianLiu = new NBear.Common.PropertyItem("DianLiu", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _Equip_Code = new NBear.Common.PropertyItem("Equip_Code", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _FIFO_Ctl = new NBear.Common.PropertyItem("FIFO_Ctl", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _FIFO_Day = new NBear.Common.PropertyItem("FIFO_Day", "Mesnac.Entity.PmtRubWeightSetting");
            
            protected NBear.Common.PropertyItem _Update_Time = new NBear.Common.PropertyItem("Update_Time", "Mesnac.Entity.PmtRubWeightSetting");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipCode {
                get {
                    if ((aliasName == null)) {
                        return _EquipCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipCode", _EquipCode.EntityConfiguration, _EquipCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem State {
                get {
                    if ((aliasName == null)) {
                        return _State;
                    }
                    else {
                        return new NBear.Common.PropertyItem("State", _State.EntityConfiguration, _State.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem EquipElectricCurrent {
                get {
                    if ((aliasName == null)) {
                        return _EquipElectricCurrent;
                    }
                    else {
                        return new NBear.Common.PropertyItem("EquipElectricCurrent", _EquipElectricCurrent.EntityConfiguration, _EquipElectricCurrent.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WeightSettingCtrl {
                get {
                    if ((aliasName == null)) {
                        return _WeightSettingCtrl;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WeightSettingCtrl", _WeightSettingCtrl.EntityConfiguration, _WeightSettingCtrl.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LockType {
                get {
                    if ((aliasName == null)) {
                        return _LockType;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LockType", _LockType.EntityConfiguration, _LockType.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DeleteFlag {
                get {
                    if ((aliasName == null)) {
                        return _DeleteFlag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Condition {
                get {
                    if ((aliasName == null)) {
                        return _Condition;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Condition", _Condition.EntityConfiguration, _Condition.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem BarCtl {
                get {
                    if ((aliasName == null)) {
                        return _BarCtl;
                    }
                    else {
                        return new NBear.Common.PropertyItem("BarCtl", _BarCtl.EntityConfiguration, _BarCtl.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem DianLiu {
                get {
                    if ((aliasName == null)) {
                        return _DianLiu;
                    }
                    else {
                        return new NBear.Common.PropertyItem("DianLiu", _DianLiu.EntityConfiguration, _DianLiu.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_Code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_Code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_Code", _Equip_Code.EntityConfiguration, _Equip_Code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FIFO_Ctl {
                get {
                    if ((aliasName == null)) {
                        return _FIFO_Ctl;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FIFO_Ctl", _FIFO_Ctl.EntityConfiguration, _FIFO_Ctl.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem FIFO_Day {
                get {
                    if ((aliasName == null)) {
                        return _FIFO_Day;
                    }
                    else {
                        return new NBear.Common.PropertyItem("FIFO_Day", _FIFO_Day.EntityConfiguration, _FIFO_Day.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Update_Time {
                get {
                    if ((aliasName == null)) {
                        return _Update_Time;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Update_Time", _Update_Time.EntityConfiguration, _Update_Time.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
