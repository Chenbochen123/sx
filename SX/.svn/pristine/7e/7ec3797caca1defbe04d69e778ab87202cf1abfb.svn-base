//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class TblWeightArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.TblWeight> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.TblWeight\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatchU" +
        "pdate=\"false\" isRelation=\"false\" mappingName=\"TblWeight\" batchSize=\"10\">\r\n  <Pro" +
        "perties>\r\n    <Property name=\"Mater_code\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Mat" +
        "er_code\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Equip_code\" type=\"System.String\"" +
        " isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fals" +
        "e\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" " +
        "isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false" +
        "\" mappingName=\"Equip_code\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Edt_code\" type=\"Sy" +
        "stem.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompound" +
        "Unit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=" +
        "\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false" +
        "\" isSerializationIgnore=\"false\" mappingName=\"Edt_code\" mappingColumnType=\"System" +
        ".Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" " +
        "/>\r\n    <Property name=\"Child_matercode\" type=\"System.String\" isInherited=\"false" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Chil" +
        "d_matercode\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Weight_type\" type=\"System.In" +
        "t32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"" +
        "false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fal" +
        "se\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"f" +
        "alse\" mappingName=\"Weight_type\" mappingColumnType=\"System.Int32\" sqlType=\"int\" i" +
        "sPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Weight_id\" type=\"S" +
        "ystem.Int32\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"Weight_id\" mappingColumnType=\"System.Int32\" sqlType=\"" +
        "int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Set_Weight\" " +
        "type=\"System.Nullable`1[System.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" " +
        "isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" i" +
        "sLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyD" +
        "esc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Set_Weight\" mappingColumn" +
        "Type=\"System.Nullable`1[System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" " +
        "isNotNull=\"false\" />\r\n    <Property name=\"Error_Allow\" type=\"System.Nullable`1[S" +
        "ystem.Decimal]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" is" +
        "Contained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelat" +
        "ionKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializati" +
        "onIgnore=\"false\" mappingName=\"Error_Allow\" mappingColumnType=\"System.Nullable`1[" +
        "System.Decimal]\" sqlType=\"decimal\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"Remark\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"f" +
        "alse\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"fa" +
        "lse\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPro" +
        "pertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Remark\" mappingColu" +
        "mnType=\"System.String\" sqlType=\"varchar(100)\" isPrimaryKey=\"false\" isNotNull=\"fa" +
        "lse\" />\r\n    <Property name=\"Weight_Prop\" type=\"System.String\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Wei" +
        "ght_Prop\" mappingColumnType=\"System.String\" sqlType=\"varchar(6)\" isPrimaryKey=\"f" +
        "alse\" isNotNull=\"false\" />\r\n    <Property name=\"Modify_Flag\" type=\"System.String" +
        "\" isInherited=\"false\" sqlDefaultValue=\"(1)\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Modify_Flag\" mappingColumnType=\"System.Str" +
        "ing\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Flag\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"Flag\" mappingColumnType=\"System.S" +
        "tring\" sqlType=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Propert" +
        "y name=\"ObjID\" type=\"System.Int32\" isInherited=\"false\" isReadOnly=\"true\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"ObjID\" mappingColumnType=\"System" +
        ".Int32\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property n" +
        "ame=\"B_Version\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCo" +
        "mpoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLaz" +
        "yLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=" +
        "\"false\" isSerializationIgnore=\"false\" mappingName=\"B_Version\" mappingColumnType=" +
        "\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r" +
        "\n    <Property name=\"R_Version\" type=\"System.String\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"R_Version\" ma" +
        "ppingColumnType=\"System.String\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNot" +
        "Null=\"false\" />\r\n    <Property name=\"S_Factory\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"S_Factory\" mappingColumnType=\"System.String\" sqlType=\"varchar(5)\" isPrimaryKe" +
        "y=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Recipe_type\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"Recipe_type\" mappingColumnType=\"System.String\" sqlType=\"varc" +
        "har(5)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Routing_t" +
        "ype\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"fals" +
        "e\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false" +
        "\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexProper" +
        "tyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Routing_type\" mappingC" +
        "olumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"Into_type\" type=\"System.String\" isInher" +
        "ited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQue" +
        "ry=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexP" +
        "roperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappin" +
        "gName=\"Into_type\" mappingColumnType=\"System.String\" sqlType=\"char(2)\" isPrimaryK" +
        "ey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Into_routing\" type=\"System." +
        "Nullable`1[System.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=" +
        "\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"fals" +
        "e\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isS" +
        "erializationIgnore=\"false\" mappingName=\"Into_routing\" mappingColumnType=\"System." +
        "Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"Supply_code\" type=\"System.String\" isInherited=\"false\" isR" +
        "eadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFri" +
        "endKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" " +
        "isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Supply_co" +
        "de\" mappingColumnType=\"System.String\" sqlType=\"varchar(50)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Packweight\" type=\"System.Nullable`1[S" +
        "ystem.Int32]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"Packweight\" mappingColumnType=\"System.Nullable`1[Sys" +
        "tem.Int32]\" sqlType=\"int\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Propert" +
        "ies>\r\n</EntityConfiguration>")]
    public partial class TblWeight : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _TblWeightEntityConfiguration;
        
        protected string _Mater_code;
        
        protected string _Equip_code;
        
        protected global::System.Int32? _Edt_code;
        
        protected string _Child_matercode;
        
        protected int _Weight_type;
        
        protected int _Weight_id;
        
        protected global::System.Decimal? _Set_Weight;
        
        protected global::System.Decimal? _Error_Allow;
        
        protected string _Remark;
        
        protected string _Weight_Prop;
        
        protected string _Modify_Flag;
        
        protected string _Flag;
        
        protected int _ObjID;
        
        protected string _B_Version;
        
        protected string _R_Version;
        
        protected string _S_Factory;
        
        protected string _Recipe_type;
        
        protected global::System.Int32? _Routing_type;
        
        protected string _Into_type;
        
        protected global::System.Int32? _Into_routing;
        
        protected string _Supply_code;
        
        protected global::System.Int32? _Packweight;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.TblWeight left, global::Mesnac.Entity.TblWeight right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.TblWeight left, global::Mesnac.Entity.TblWeight right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string Mater_code {
            get {
                return this._Mater_code;
            }
            set {
                this.OnPropertyChanged("Mater_code", this._Mater_code, value);
                this._Mater_code = value;
            }
        }
        
        public string Equip_code {
            get {
                return this._Equip_code;
            }
            set {
                this.OnPropertyChanged("Equip_code", this._Equip_code, value);
                this._Equip_code = value;
            }
        }
        
        public global::System.Int32? Edt_code {
            get {
                return this._Edt_code;
            }
            set {
                this.OnPropertyChanged("Edt_code", this._Edt_code, value);
                this._Edt_code = value;
            }
        }
        
        public string Child_matercode {
            get {
                return this._Child_matercode;
            }
            set {
                this.OnPropertyChanged("Child_matercode", this._Child_matercode, value);
                this._Child_matercode = value;
            }
        }
        
        public int Weight_type {
            get {
                return this._Weight_type;
            }
            set {
                this.OnPropertyChanged("Weight_type", this._Weight_type, value);
                this._Weight_type = value;
            }
        }
        
        public int Weight_id {
            get {
                return this._Weight_id;
            }
            set {
                this.OnPropertyChanged("Weight_id", this._Weight_id, value);
                this._Weight_id = value;
            }
        }
        
        public global::System.Decimal? Set_Weight {
            get {
                return this._Set_Weight;
            }
            set {
                this.OnPropertyChanged("Set_Weight", this._Set_Weight, value);
                this._Set_Weight = value;
            }
        }
        
        public global::System.Decimal? Error_Allow {
            get {
                return this._Error_Allow;
            }
            set {
                this.OnPropertyChanged("Error_Allow", this._Error_Allow, value);
                this._Error_Allow = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Weight_Prop {
            get {
                return this._Weight_Prop;
            }
            set {
                this.OnPropertyChanged("Weight_Prop", this._Weight_Prop, value);
                this._Weight_Prop = value;
            }
        }
        
        public string Modify_Flag {
            get {
                return this._Modify_Flag;
            }
            set {
                this.OnPropertyChanged("Modify_Flag", this._Modify_Flag, value);
                this._Modify_Flag = value;
            }
        }
        
        public string Flag {
            get {
                return this._Flag;
            }
            set {
                this.OnPropertyChanged("Flag", this._Flag, value);
                this._Flag = value;
            }
        }
        
        public int ObjID {
            get {
                return this._ObjID;
            }
            set {
                this.OnPropertyChanged("ObjID", this._ObjID, value);
                this._ObjID = value;
            }
        }
        
        public string B_Version {
            get {
                return this._B_Version;
            }
            set {
                this.OnPropertyChanged("B_Version", this._B_Version, value);
                this._B_Version = value;
            }
        }
        
        public string R_Version {
            get {
                return this._R_Version;
            }
            set {
                this.OnPropertyChanged("R_Version", this._R_Version, value);
                this._R_Version = value;
            }
        }
        
        public string S_Factory {
            get {
                return this._S_Factory;
            }
            set {
                this.OnPropertyChanged("S_Factory", this._S_Factory, value);
                this._S_Factory = value;
            }
        }
        
        public string Recipe_type {
            get {
                return this._Recipe_type;
            }
            set {
                this.OnPropertyChanged("Recipe_type", this._Recipe_type, value);
                this._Recipe_type = value;
            }
        }
        
        public global::System.Int32? Routing_type {
            get {
                return this._Routing_type;
            }
            set {
                this.OnPropertyChanged("Routing_type", this._Routing_type, value);
                this._Routing_type = value;
            }
        }
        
        public string Into_type {
            get {
                return this._Into_type;
            }
            set {
                this.OnPropertyChanged("Into_type", this._Into_type, value);
                this._Into_type = value;
            }
        }
        
        public global::System.Int32? Into_routing {
            get {
                return this._Into_routing;
            }
            set {
                this.OnPropertyChanged("Into_routing", this._Into_routing, value);
                this._Into_routing = value;
            }
        }
        
        public string Supply_code {
            get {
                return this._Supply_code;
            }
            set {
                this.OnPropertyChanged("Supply_code", this._Supply_code, value);
                this._Supply_code = value;
            }
        }
        
        public global::System.Int32? Packweight {
            get {
                return this._Packweight;
            }
            set {
                this.OnPropertyChanged("Packweight", this._Packweight, value);
                this._Packweight = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((TblWeight._TblWeightEntityConfiguration == null)) {
                TblWeight._TblWeightEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.TblWeight");
            }
            return TblWeight._TblWeightEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._Mater_code,
                    this._Equip_code,
                    this._Edt_code,
                    this._Child_matercode,
                    this._Weight_type,
                    this._Weight_id,
                    this._Set_Weight,
                    this._Error_Allow,
                    this._Remark,
                    this._Weight_Prop,
                    this._Modify_Flag,
                    this._Flag,
                    this._ObjID,
                    this._B_Version,
                    this._R_Version,
                    this._S_Factory,
                    this._Recipe_type,
                    this._Routing_type,
                    this._Into_type,
                    this._Into_routing,
                    this._Supply_code,
                    this._Packweight};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._Mater_code = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._Equip_code = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Edt_code = reader.GetInt32(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._Child_matercode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._Weight_type = reader.GetInt32(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._Weight_id = reader.GetInt32(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._Set_Weight = reader.GetDecimal(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Error_Allow = reader.GetDecimal(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._Remark = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Weight_Prop = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Modify_Flag = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Flag = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._ObjID = reader.GetInt32(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._B_Version = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._R_Version = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._S_Factory = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._Recipe_type = reader.GetString(16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Routing_type = reader.GetInt32(17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Into_type = reader.GetString(18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._Into_routing = reader.GetInt32(19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Supply_code = reader.GetString(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Packweight = reader.GetInt32(21);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._Mater_code = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._Equip_code = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Edt_code = ((System.Nullable<int>)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._Child_matercode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._Weight_type = ((int)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._Weight_id = ((int)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._Set_Weight = ((System.Nullable<decimal>)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Error_Allow = ((System.Nullable<decimal>)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._Remark = ((string)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Weight_Prop = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Modify_Flag = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Flag = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._ObjID = ((int)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._B_Version = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._R_Version = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._S_Factory = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._Recipe_type = ((string)(row[16]));
            }
            if ((false == row.IsNull(17))) {
                this._Routing_type = ((System.Nullable<int>)(row[17]));
            }
            if ((false == row.IsNull(18))) {
                this._Into_type = ((string)(row[18]));
            }
            if ((false == row.IsNull(19))) {
                this._Into_routing = ((System.Nullable<int>)(row[19]));
            }
            if ((false == row.IsNull(20))) {
                this._Supply_code = ((string)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Packweight = ((System.Nullable<int>)(row[21]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.TblWeight).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.TblWeight)(obj)).isAttached) 
                        && base.Equals(obj));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _Mater_code = new NBear.Common.PropertyItem("Mater_code", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Equip_code = new NBear.Common.PropertyItem("Equip_code", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Edt_code = new NBear.Common.PropertyItem("Edt_code", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Child_matercode = new NBear.Common.PropertyItem("Child_matercode", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Weight_type = new NBear.Common.PropertyItem("Weight_type", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Weight_id = new NBear.Common.PropertyItem("Weight_id", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Set_Weight = new NBear.Common.PropertyItem("Set_Weight", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Error_Allow = new NBear.Common.PropertyItem("Error_Allow", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Weight_Prop = new NBear.Common.PropertyItem("Weight_Prop", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Modify_Flag = new NBear.Common.PropertyItem("Modify_Flag", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Flag = new NBear.Common.PropertyItem("Flag", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _ObjID = new NBear.Common.PropertyItem("ObjID", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _B_Version = new NBear.Common.PropertyItem("B_Version", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _R_Version = new NBear.Common.PropertyItem("R_Version", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _S_Factory = new NBear.Common.PropertyItem("S_Factory", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Recipe_type = new NBear.Common.PropertyItem("Recipe_type", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Routing_type = new NBear.Common.PropertyItem("Routing_type", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Into_type = new NBear.Common.PropertyItem("Into_type", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Into_routing = new NBear.Common.PropertyItem("Into_routing", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Supply_code = new NBear.Common.PropertyItem("Supply_code", "Mesnac.Entity.TblWeight");
            
            protected NBear.Common.PropertyItem _Packweight = new NBear.Common.PropertyItem("Packweight", "Mesnac.Entity.TblWeight");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem Mater_code {
                get {
                    if ((aliasName == null)) {
                        return _Mater_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mater_code", _Mater_code.EntityConfiguration, _Mater_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equip_code {
                get {
                    if ((aliasName == null)) {
                        return _Equip_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equip_code", _Equip_code.EntityConfiguration, _Equip_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Edt_code {
                get {
                    if ((aliasName == null)) {
                        return _Edt_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Edt_code", _Edt_code.EntityConfiguration, _Edt_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Child_matercode {
                get {
                    if ((aliasName == null)) {
                        return _Child_matercode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Child_matercode", _Child_matercode.EntityConfiguration, _Child_matercode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight_type {
                get {
                    if ((aliasName == null)) {
                        return _Weight_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight_type", _Weight_type.EntityConfiguration, _Weight_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight_id {
                get {
                    if ((aliasName == null)) {
                        return _Weight_id;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight_id", _Weight_id.EntityConfiguration, _Weight_id.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Set_Weight {
                get {
                    if ((aliasName == null)) {
                        return _Set_Weight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Set_Weight", _Set_Weight.EntityConfiguration, _Set_Weight.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Error_Allow {
                get {
                    if ((aliasName == null)) {
                        return _Error_Allow;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Error_Allow", _Error_Allow.EntityConfiguration, _Error_Allow.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Weight_Prop {
                get {
                    if ((aliasName == null)) {
                        return _Weight_Prop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Weight_Prop", _Weight_Prop.EntityConfiguration, _Weight_Prop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Modify_Flag {
                get {
                    if ((aliasName == null)) {
                        return _Modify_Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Modify_Flag", _Modify_Flag.EntityConfiguration, _Modify_Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Flag {
                get {
                    if ((aliasName == null)) {
                        return _Flag;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Flag", _Flag.EntityConfiguration, _Flag.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem ObjID {
                get {
                    if ((aliasName == null)) {
                        return _ObjID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("ObjID", _ObjID.EntityConfiguration, _ObjID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem B_Version {
                get {
                    if ((aliasName == null)) {
                        return _B_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("B_Version", _B_Version.EntityConfiguration, _B_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem R_Version {
                get {
                    if ((aliasName == null)) {
                        return _R_Version;
                    }
                    else {
                        return new NBear.Common.PropertyItem("R_Version", _R_Version.EntityConfiguration, _R_Version.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem S_Factory {
                get {
                    if ((aliasName == null)) {
                        return _S_Factory;
                    }
                    else {
                        return new NBear.Common.PropertyItem("S_Factory", _S_Factory.EntityConfiguration, _S_Factory.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Recipe_type {
                get {
                    if ((aliasName == null)) {
                        return _Recipe_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Recipe_type", _Recipe_type.EntityConfiguration, _Recipe_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Routing_type {
                get {
                    if ((aliasName == null)) {
                        return _Routing_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Routing_type", _Routing_type.EntityConfiguration, _Routing_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Into_type {
                get {
                    if ((aliasName == null)) {
                        return _Into_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Into_type", _Into_type.EntityConfiguration, _Into_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Into_routing {
                get {
                    if ((aliasName == null)) {
                        return _Into_routing;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Into_routing", _Into_routing.EntityConfiguration, _Into_routing.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Supply_code {
                get {
                    if ((aliasName == null)) {
                        return _Supply_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Supply_code", _Supply_code.EntityConfiguration, _Supply_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Packweight {
                get {
                    if ((aliasName == null)) {
                        return _Packweight;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Packweight", _Packweight.EntityConfiguration, _Packweight.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
