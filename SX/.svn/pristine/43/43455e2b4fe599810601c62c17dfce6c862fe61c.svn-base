//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class Eqm_MeasureArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.Eqm_Measure> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsd=\"http://w" +
        "ww.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" " +
        "name=\"Mesnac.Entity.Eqm_Measure\" isReadOnly=\"false\" isAutoPreLoad=\"false\" isBatc" +
        "hUpdate=\"false\" isRelation=\"false\" mappingName=\"Eqm_Measure\" batchSize=\"10\">\r\n  " +
        "<Properties>\r\n    <Property name=\"JL_code\" type=\"System.Int32\" isInherited=\"fals" +
        "e\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\"" +
        " isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"f" +
        "alse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JL_" +
        "code\" mappingColumnType=\"System.Int32\" sqlType=\"int\" isPrimaryKey=\"true\" isNotNu" +
        "ll=\"true\" />\r\n    <Property name=\"JL_IDNO\" type=\"System.String\" isInherited=\"fal" +
        "se\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false" +
        "\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"" +
        "false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JL" +
        "_IDNO\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"fal" +
        "se\" isNotNull=\"false\" />\r\n    <Property name=\"JL_name\" type=\"System.String\" isIn" +
        "herited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" is" +
        "Query=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInd" +
        "exProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" map" +
        "pingName=\"JL_name\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(40)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JL_spec\" type=\"System" +
        ".String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContain" +
        "ed=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=" +
        "\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnor" +
        "e=\"false\" mappingName=\"JL_spec\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JL_type\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"JL_type\" mappingColumnType=\"System.String\" sq" +
        "lType=\"varchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"JL_Grade\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompo" +
        "undUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLo" +
        "ad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fa" +
        "lse\" isSerializationIgnore=\"false\" mappingName=\"JL_Grade\" mappingColumnType=\"Sys" +
        "tem.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n   " +
        " <Property name=\"JL_Precis\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JL_Precis\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"varchar(20)\" isPrimaryKey=\"false\" isNotNull" +
        "=\"false\" />\r\n    <Property name=\"Unit_name\" type=\"System.String\" isInherited=\"fa" +
        "lse\" sqlDefaultValue=\"\' \'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Unit_name\" mappingColumnType=\"System.String\" sqlType=\"varch" +
        "ar(6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"JL_tpcode\"" +
        " type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" sqlDefaultValue=\"(1)" +
        "\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" " +
        "isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fa" +
        "lse\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"JL_t" +
        "pcode\" mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrima" +
        "ryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Fac_name\" type=\"System.S" +
        "tring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained" +
        "=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"f" +
        "alse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=" +
        "\"false\" mappingName=\"Fac_name\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Pos_code\"" +
        " type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fal" +
        "se\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" i" +
        "sRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSeria" +
        "lizationIgnore=\"false\" mappingName=\"Pos_code\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property " +
        "name=\"Check_media\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Check_media\" mappingColumn" +
        "Type=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"fals" +
        "e\" />\r\n    <Property name=\"Handle_name\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Handl" +
        "e_name\" mappingColumnType=\"System.String\" sqlType=\"char(5)\" isPrimaryKey=\"false\"" +
        " isNotNull=\"false\" />\r\n    <Property name=\"Use_state\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"Use_state\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(20)\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Mem_note\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Mem_note\" mappingColumnType=\"System.String\" sqlType=\"va" +
        "rchar(50)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"WorkSh" +
        "op\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"" +
        "false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false" +
        "\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSe" +
        "rializationIgnore=\"false\" mappingName=\"WorkShop\" mappingColumnType=\"System.Strin" +
        "g\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Proper" +
        "ty name=\"YX_Date\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" " +
        "isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" is" +
        "FriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fals" +
        "e\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"YX_Dat" +
        "e\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isP" +
        "rimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Confirm_date\" type=\"" +
        "System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Confirm_date\" mappingColumnTyp" +
        "e=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" i" +
        "sNotNull=\"false\" />\r\n    <Property name=\"Begin_date\" type=\"System.Nullable`1[Sys" +
        "tem.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isC" +
        "ontained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelati" +
        "onKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializatio" +
        "nIgnore=\"false\" mappingName=\"Begin_date\" mappingColumnType=\"System.Nullable`1[Sy" +
        "stem.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  " +
        "  <Property name=\"LastCheckDate\" type=\"System.Nullable`1[System.DateTime]\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"LastCheckDate\" mappingColumnType=\"System.Nullable`1[System.DateTime]\" s" +
        "qlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=" +
        "\"Check_stand\" type=\"System.Nullable`1[System.Int32]\" isInherited=\"false\" isReadO" +
        "nly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendK" +
        "ey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIn" +
        "dexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Check_stand\" " +
        "mappingColumnType=\"System.Nullable`1[System.Int32]\" sqlType=\"int\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"Check_term\" type=\"System.String" +
        "\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fal" +
        "se\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\"" +
        " isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fals" +
        "e\" mappingName=\"Check_term\" mappingColumnType=\"System.String\" sqlType=\"varchar(2" +
        "0)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Manage_type\" " +
        "type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"fals" +
        "e\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" is" +
        "RelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerial" +
        "izationIgnore=\"false\" mappingName=\"Manage_type\" mappingColumnType=\"System.String" +
        "\" sqlType=\"varchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property" +
        " name=\"Check_user\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" i" +
        "sCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" is" +
        "LazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDe" +
        "sc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Check_user\" mappingColumnT" +
        "ype=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"false\" isNotNull=\"false" +
        "\" />\r\n    <Property name=\"Confirm_user\" type=\"System.String\" isInherited=\"false\"" +
        " isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" i" +
        "sFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"fal" +
        "se\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"Confi" +
        "rm_user\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(10)\" isPrimaryKey=\"" +
        "false\" isNotNull=\"false\" />\r\n    <Property name=\"Remark\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"Remark\" mappingColumnType=\"System.String\" sqlType=\"varchar(20)\" isPr" +
        "imaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Equipname\" type=\"Syst" +
        "em.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isConta" +
        "ined=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKe" +
        "y=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgn" +
        "ore=\"false\" mappingName=\"Equipname\" mappingColumnType=\"System.String\" sqlType=\"v" +
        "archar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</Entity" +
        "Configuration>")]
    public partial class Eqm_Measure : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _Eqm_MeasureEntityConfiguration;
        
        protected int _JL_code;
        
        protected string _JL_IDNO;
        
        protected string _JL_name;
        
        protected string _JL_spec;
        
        protected string _JL_type;
        
        protected string _JL_Grade;
        
        protected string _JL_Precis;
        
        protected string _Unit_name;
        
        protected global::System.Int32? _JL_tpcode;
        
        protected string _Fac_name;
        
        protected string _Pos_code;
        
        protected string _Check_media;
        
        protected string _Handle_name;
        
        protected string _Use_state;
        
        protected string _Mem_note;
        
        protected string _WorkShop;
        
        protected global::System.DateTime? _YX_Date;
        
        protected global::System.DateTime? _Confirm_date;
        
        protected global::System.DateTime? _Begin_date;
        
        protected global::System.DateTime? _LastCheckDate;
        
        protected global::System.Int32? _Check_stand;
        
        protected string _Check_term;
        
        protected string _Manage_type;
        
        protected string _Check_user;
        
        protected string _Confirm_user;
        
        protected string _Remark;
        
        protected string _Equipname;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.Eqm_Measure left, global::Mesnac.Entity.Eqm_Measure right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.Eqm_Measure left, global::Mesnac.Entity.Eqm_Measure right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public int JL_code {
            get {
                return this._JL_code;
            }
            set {
                this.OnPropertyChanged("JL_code", this._JL_code, value);
                this._JL_code = value;
            }
        }
        
        public string JL_IDNO {
            get {
                return this._JL_IDNO;
            }
            set {
                this.OnPropertyChanged("JL_IDNO", this._JL_IDNO, value);
                this._JL_IDNO = value;
            }
        }
        
        public string JL_name {
            get {
                return this._JL_name;
            }
            set {
                this.OnPropertyChanged("JL_name", this._JL_name, value);
                this._JL_name = value;
            }
        }
        
        public string JL_spec {
            get {
                return this._JL_spec;
            }
            set {
                this.OnPropertyChanged("JL_spec", this._JL_spec, value);
                this._JL_spec = value;
            }
        }
        
        public string JL_type {
            get {
                return this._JL_type;
            }
            set {
                this.OnPropertyChanged("JL_type", this._JL_type, value);
                this._JL_type = value;
            }
        }
        
        public string JL_Grade {
            get {
                return this._JL_Grade;
            }
            set {
                this.OnPropertyChanged("JL_Grade", this._JL_Grade, value);
                this._JL_Grade = value;
            }
        }
        
        public string JL_Precis {
            get {
                return this._JL_Precis;
            }
            set {
                this.OnPropertyChanged("JL_Precis", this._JL_Precis, value);
                this._JL_Precis = value;
            }
        }
        
        public string Unit_name {
            get {
                return this._Unit_name;
            }
            set {
                this.OnPropertyChanged("Unit_name", this._Unit_name, value);
                this._Unit_name = value;
            }
        }
        
        public global::System.Int32? JL_tpcode {
            get {
                return this._JL_tpcode;
            }
            set {
                this.OnPropertyChanged("JL_tpcode", this._JL_tpcode, value);
                this._JL_tpcode = value;
            }
        }
        
        public string Fac_name {
            get {
                return this._Fac_name;
            }
            set {
                this.OnPropertyChanged("Fac_name", this._Fac_name, value);
                this._Fac_name = value;
            }
        }
        
        public string Pos_code {
            get {
                return this._Pos_code;
            }
            set {
                this.OnPropertyChanged("Pos_code", this._Pos_code, value);
                this._Pos_code = value;
            }
        }
        
        public string Check_media {
            get {
                return this._Check_media;
            }
            set {
                this.OnPropertyChanged("Check_media", this._Check_media, value);
                this._Check_media = value;
            }
        }
        
        public string Handle_name {
            get {
                return this._Handle_name;
            }
            set {
                this.OnPropertyChanged("Handle_name", this._Handle_name, value);
                this._Handle_name = value;
            }
        }
        
        public string Use_state {
            get {
                return this._Use_state;
            }
            set {
                this.OnPropertyChanged("Use_state", this._Use_state, value);
                this._Use_state = value;
            }
        }
        
        public string Mem_note {
            get {
                return this._Mem_note;
            }
            set {
                this.OnPropertyChanged("Mem_note", this._Mem_note, value);
                this._Mem_note = value;
            }
        }
        
        public string WorkShop {
            get {
                return this._WorkShop;
            }
            set {
                this.OnPropertyChanged("WorkShop", this._WorkShop, value);
                this._WorkShop = value;
            }
        }
        
        public global::System.DateTime? YX_Date {
            get {
                return this._YX_Date;
            }
            set {
                this.OnPropertyChanged("YX_Date", this._YX_Date, value);
                this._YX_Date = value;
            }
        }
        
        public global::System.DateTime? Confirm_date {
            get {
                return this._Confirm_date;
            }
            set {
                this.OnPropertyChanged("Confirm_date", this._Confirm_date, value);
                this._Confirm_date = value;
            }
        }
        
        public global::System.DateTime? Begin_date {
            get {
                return this._Begin_date;
            }
            set {
                this.OnPropertyChanged("Begin_date", this._Begin_date, value);
                this._Begin_date = value;
            }
        }
        
        public global::System.DateTime? LastCheckDate {
            get {
                return this._LastCheckDate;
            }
            set {
                this.OnPropertyChanged("LastCheckDate", this._LastCheckDate, value);
                this._LastCheckDate = value;
            }
        }
        
        public global::System.Int32? Check_stand {
            get {
                return this._Check_stand;
            }
            set {
                this.OnPropertyChanged("Check_stand", this._Check_stand, value);
                this._Check_stand = value;
            }
        }
        
        public string Check_term {
            get {
                return this._Check_term;
            }
            set {
                this.OnPropertyChanged("Check_term", this._Check_term, value);
                this._Check_term = value;
            }
        }
        
        public string Manage_type {
            get {
                return this._Manage_type;
            }
            set {
                this.OnPropertyChanged("Manage_type", this._Manage_type, value);
                this._Manage_type = value;
            }
        }
        
        public string Check_user {
            get {
                return this._Check_user;
            }
            set {
                this.OnPropertyChanged("Check_user", this._Check_user, value);
                this._Check_user = value;
            }
        }
        
        public string Confirm_user {
            get {
                return this._Confirm_user;
            }
            set {
                this.OnPropertyChanged("Confirm_user", this._Confirm_user, value);
                this._Confirm_user = value;
            }
        }
        
        public string Remark {
            get {
                return this._Remark;
            }
            set {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }
        
        public string Equipname {
            get {
                return this._Equipname;
            }
            set {
                this.OnPropertyChanged("Equipname", this._Equipname, value);
                this._Equipname = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((Eqm_Measure._Eqm_MeasureEntityConfiguration == null)) {
                Eqm_Measure._Eqm_MeasureEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.Eqm_Measure");
            }
            return Eqm_Measure._Eqm_MeasureEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._JL_code,
                    this._JL_IDNO,
                    this._JL_name,
                    this._JL_spec,
                    this._JL_type,
                    this._JL_Grade,
                    this._JL_Precis,
                    this._Unit_name,
                    this._JL_tpcode,
                    this._Fac_name,
                    this._Pos_code,
                    this._Check_media,
                    this._Handle_name,
                    this._Use_state,
                    this._Mem_note,
                    this._WorkShop,
                    this._YX_Date,
                    this._Confirm_date,
                    this._Begin_date,
                    this._LastCheckDate,
                    this._Check_stand,
                    this._Check_term,
                    this._Manage_type,
                    this._Check_user,
                    this._Confirm_user,
                    this._Remark,
                    this._Equipname};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._JL_code = reader.GetInt32(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._JL_IDNO = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._JL_name = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._JL_spec = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._JL_type = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._JL_Grade = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._JL_Precis = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7))) {
                this._Unit_name = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8))) {
                this._JL_tpcode = reader.GetInt32(8);
            }
            if ((false == reader.IsDBNull(9))) {
                this._Fac_name = reader.GetString(9);
            }
            if ((false == reader.IsDBNull(10))) {
                this._Pos_code = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11))) {
                this._Check_media = reader.GetString(11);
            }
            if ((false == reader.IsDBNull(12))) {
                this._Handle_name = reader.GetString(12);
            }
            if ((false == reader.IsDBNull(13))) {
                this._Use_state = reader.GetString(13);
            }
            if ((false == reader.IsDBNull(14))) {
                this._Mem_note = reader.GetString(14);
            }
            if ((false == reader.IsDBNull(15))) {
                this._WorkShop = reader.GetString(15);
            }
            if ((false == reader.IsDBNull(16))) {
                this._YX_Date = this.GetDateTime(reader, 16);
            }
            if ((false == reader.IsDBNull(17))) {
                this._Confirm_date = this.GetDateTime(reader, 17);
            }
            if ((false == reader.IsDBNull(18))) {
                this._Begin_date = this.GetDateTime(reader, 18);
            }
            if ((false == reader.IsDBNull(19))) {
                this._LastCheckDate = this.GetDateTime(reader, 19);
            }
            if ((false == reader.IsDBNull(20))) {
                this._Check_stand = reader.GetInt32(20);
            }
            if ((false == reader.IsDBNull(21))) {
                this._Check_term = reader.GetString(21);
            }
            if ((false == reader.IsDBNull(22))) {
                this._Manage_type = reader.GetString(22);
            }
            if ((false == reader.IsDBNull(23))) {
                this._Check_user = reader.GetString(23);
            }
            if ((false == reader.IsDBNull(24))) {
                this._Confirm_user = reader.GetString(24);
            }
            if ((false == reader.IsDBNull(25))) {
                this._Remark = reader.GetString(25);
            }
            if ((false == reader.IsDBNull(26))) {
                this._Equipname = reader.GetString(26);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._JL_code = ((int)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._JL_IDNO = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._JL_name = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._JL_spec = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._JL_type = ((string)(row[4]));
            }
            if ((false == row.IsNull(5))) {
                this._JL_Grade = ((string)(row[5]));
            }
            if ((false == row.IsNull(6))) {
                this._JL_Precis = ((string)(row[6]));
            }
            if ((false == row.IsNull(7))) {
                this._Unit_name = ((string)(row[7]));
            }
            if ((false == row.IsNull(8))) {
                this._JL_tpcode = ((System.Nullable<int>)(row[8]));
            }
            if ((false == row.IsNull(9))) {
                this._Fac_name = ((string)(row[9]));
            }
            if ((false == row.IsNull(10))) {
                this._Pos_code = ((string)(row[10]));
            }
            if ((false == row.IsNull(11))) {
                this._Check_media = ((string)(row[11]));
            }
            if ((false == row.IsNull(12))) {
                this._Handle_name = ((string)(row[12]));
            }
            if ((false == row.IsNull(13))) {
                this._Use_state = ((string)(row[13]));
            }
            if ((false == row.IsNull(14))) {
                this._Mem_note = ((string)(row[14]));
            }
            if ((false == row.IsNull(15))) {
                this._WorkShop = ((string)(row[15]));
            }
            if ((false == row.IsNull(16))) {
                this._YX_Date = this.GetDateTime(row, 16);
            }
            if ((false == row.IsNull(17))) {
                this._Confirm_date = this.GetDateTime(row, 17);
            }
            if ((false == row.IsNull(18))) {
                this._Begin_date = this.GetDateTime(row, 18);
            }
            if ((false == row.IsNull(19))) {
                this._LastCheckDate = this.GetDateTime(row, 19);
            }
            if ((false == row.IsNull(20))) {
                this._Check_stand = ((System.Nullable<int>)(row[20]));
            }
            if ((false == row.IsNull(21))) {
                this._Check_term = ((string)(row[21]));
            }
            if ((false == row.IsNull(22))) {
                this._Manage_type = ((string)(row[22]));
            }
            if ((false == row.IsNull(23))) {
                this._Check_user = ((string)(row[23]));
            }
            if ((false == row.IsNull(24))) {
                this._Confirm_user = ((string)(row[24]));
            }
            if ((false == row.IsNull(25))) {
                this._Remark = ((string)(row[25]));
            }
            if ((false == row.IsNull(26))) {
                this._Equipname = ((string)(row[26]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.Eqm_Measure).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.Eqm_Measure)(obj)).isAttached) 
                        && (this.JL_code == ((global::Mesnac.Entity.Eqm_Measure)(obj)).JL_code));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _JL_code = new NBear.Common.PropertyItem("JL_code", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_IDNO = new NBear.Common.PropertyItem("JL_IDNO", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_name = new NBear.Common.PropertyItem("JL_name", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_spec = new NBear.Common.PropertyItem("JL_spec", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_type = new NBear.Common.PropertyItem("JL_type", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_Grade = new NBear.Common.PropertyItem("JL_Grade", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_Precis = new NBear.Common.PropertyItem("JL_Precis", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Unit_name = new NBear.Common.PropertyItem("Unit_name", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _JL_tpcode = new NBear.Common.PropertyItem("JL_tpcode", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Fac_name = new NBear.Common.PropertyItem("Fac_name", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Pos_code = new NBear.Common.PropertyItem("Pos_code", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Check_media = new NBear.Common.PropertyItem("Check_media", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Handle_name = new NBear.Common.PropertyItem("Handle_name", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Use_state = new NBear.Common.PropertyItem("Use_state", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Mem_note = new NBear.Common.PropertyItem("Mem_note", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _WorkShop = new NBear.Common.PropertyItem("WorkShop", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _YX_Date = new NBear.Common.PropertyItem("YX_Date", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Confirm_date = new NBear.Common.PropertyItem("Confirm_date", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Begin_date = new NBear.Common.PropertyItem("Begin_date", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _LastCheckDate = new NBear.Common.PropertyItem("LastCheckDate", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Check_stand = new NBear.Common.PropertyItem("Check_stand", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Check_term = new NBear.Common.PropertyItem("Check_term", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Manage_type = new NBear.Common.PropertyItem("Manage_type", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Check_user = new NBear.Common.PropertyItem("Check_user", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Confirm_user = new NBear.Common.PropertyItem("Confirm_user", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.Eqm_Measure");
            
            protected NBear.Common.PropertyItem _Equipname = new NBear.Common.PropertyItem("Equipname", "Mesnac.Entity.Eqm_Measure");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem JL_code {
                get {
                    if ((aliasName == null)) {
                        return _JL_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_code", _JL_code.EntityConfiguration, _JL_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_IDNO {
                get {
                    if ((aliasName == null)) {
                        return _JL_IDNO;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_IDNO", _JL_IDNO.EntityConfiguration, _JL_IDNO.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_name {
                get {
                    if ((aliasName == null)) {
                        return _JL_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_name", _JL_name.EntityConfiguration, _JL_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_spec {
                get {
                    if ((aliasName == null)) {
                        return _JL_spec;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_spec", _JL_spec.EntityConfiguration, _JL_spec.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_type {
                get {
                    if ((aliasName == null)) {
                        return _JL_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_type", _JL_type.EntityConfiguration, _JL_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_Grade {
                get {
                    if ((aliasName == null)) {
                        return _JL_Grade;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_Grade", _JL_Grade.EntityConfiguration, _JL_Grade.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_Precis {
                get {
                    if ((aliasName == null)) {
                        return _JL_Precis;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_Precis", _JL_Precis.EntityConfiguration, _JL_Precis.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Unit_name {
                get {
                    if ((aliasName == null)) {
                        return _Unit_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Unit_name", _Unit_name.EntityConfiguration, _Unit_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem JL_tpcode {
                get {
                    if ((aliasName == null)) {
                        return _JL_tpcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("JL_tpcode", _JL_tpcode.EntityConfiguration, _JL_tpcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Fac_name {
                get {
                    if ((aliasName == null)) {
                        return _Fac_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Fac_name", _Fac_name.EntityConfiguration, _Fac_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Pos_code {
                get {
                    if ((aliasName == null)) {
                        return _Pos_code;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Pos_code", _Pos_code.EntityConfiguration, _Pos_code.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_media {
                get {
                    if ((aliasName == null)) {
                        return _Check_media;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_media", _Check_media.EntityConfiguration, _Check_media.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Handle_name {
                get {
                    if ((aliasName == null)) {
                        return _Handle_name;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Handle_name", _Handle_name.EntityConfiguration, _Handle_name.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Use_state {
                get {
                    if ((aliasName == null)) {
                        return _Use_state;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Use_state", _Use_state.EntityConfiguration, _Use_state.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Mem_note {
                get {
                    if ((aliasName == null)) {
                        return _Mem_note;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Mem_note", _Mem_note.EntityConfiguration, _Mem_note.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem WorkShop {
                get {
                    if ((aliasName == null)) {
                        return _WorkShop;
                    }
                    else {
                        return new NBear.Common.PropertyItem("WorkShop", _WorkShop.EntityConfiguration, _WorkShop.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem YX_Date {
                get {
                    if ((aliasName == null)) {
                        return _YX_Date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("YX_Date", _YX_Date.EntityConfiguration, _YX_Date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Confirm_date {
                get {
                    if ((aliasName == null)) {
                        return _Confirm_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Confirm_date", _Confirm_date.EntityConfiguration, _Confirm_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Begin_date {
                get {
                    if ((aliasName == null)) {
                        return _Begin_date;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Begin_date", _Begin_date.EntityConfiguration, _Begin_date.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem LastCheckDate {
                get {
                    if ((aliasName == null)) {
                        return _LastCheckDate;
                    }
                    else {
                        return new NBear.Common.PropertyItem("LastCheckDate", _LastCheckDate.EntityConfiguration, _LastCheckDate.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_stand {
                get {
                    if ((aliasName == null)) {
                        return _Check_stand;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_stand", _Check_stand.EntityConfiguration, _Check_stand.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_term {
                get {
                    if ((aliasName == null)) {
                        return _Check_term;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_term", _Check_term.EntityConfiguration, _Check_term.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Manage_type {
                get {
                    if ((aliasName == null)) {
                        return _Manage_type;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Manage_type", _Manage_type.EntityConfiguration, _Manage_type.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Check_user {
                get {
                    if ((aliasName == null)) {
                        return _Check_user;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Check_user", _Check_user.EntityConfiguration, _Check_user.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Confirm_user {
                get {
                    if ((aliasName == null)) {
                        return _Confirm_user;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Confirm_user", _Confirm_user.EntityConfiguration, _Confirm_user.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Remark {
                get {
                    if ((aliasName == null)) {
                        return _Remark;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Equipname {
                get {
                    if ((aliasName == null)) {
                        return _Equipname;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Equipname", _Equipname.EntityConfiguration, _Equipname.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
