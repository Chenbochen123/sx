//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity {
    using System;
    using System.Xml.Serialization;
    using NBear.Common;
    
    
    [System.SerializableAttribute()]
    public partial class PstMaterialInOastArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstMaterialInOast> {
    }
    
    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstMaterialInOast\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstMaterialInOast\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"StorageID\" type=\"System.String\" is" +
        "Inherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" " +
        "isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isI" +
        "ndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" m" +
        "appingName=\"StorageID\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" " +
        "isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"StoragePlaceID\" typ" +
        "e=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" " +
        "isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRel" +
        "ationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializa" +
        "tionIgnore=\"false\" mappingName=\"StoragePlaceID\" mappingColumnType=\"System.String" +
        "\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n    <Property " +
        "name=\"Barcode\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"Barcode\" mappingColumnType=\"Sy" +
        "stem.String\" sqlType=\"nvarchar(36)\" isPrimaryKey=\"true\" isNotNull=\"true\" />\r\n   " +
        " <Property name=\"MaterCode\" type=\"System.String\" isInherited=\"false\" isReadOnly=" +
        "\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"" +
        "false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexP" +
        "ropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"MaterCode\" mappin" +
        "gColumnType=\"System.String\" sqlType=\"nvarchar(13)\" isPrimaryKey=\"false\" isNotNul" +
        "l=\"false\" />\r\n    <Property name=\"InTime\" type=\"System.Nullable`1[System.DateTim" +
        "e]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"f" +
        "alse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fals" +
        "e\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fa" +
        "lse\" mappingName=\"InTime\" mappingColumnType=\"System.Nullable`1[System.DateTime]\"" +
        " sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property nam" +
        "e=\"OutTime\" type=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isRead" +
        "Only=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriend" +
        "Key=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isI" +
        "ndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=\"OutTime\" map" +
        "pingColumnType=\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimary" +
        "Key=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"PrintTime\" type=\"System.St" +
        "ring\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=" +
        "\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"fa" +
        "lse\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"" +
        "false\" mappingName=\"PrintTime\" mappingColumnType=\"System.String\" sqlType=\"nvarch" +
        "ar(1000)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties>\r\n</EntityCo" +
        "nfiguration>")]
    public partial class PstMaterialInOast : NBear.Common.Entity {
        
        protected static NBear.Common.EntityConfiguration _PstMaterialInOastEntityConfiguration;
        
        protected string _StorageID;
        
        protected string _StoragePlaceID;
        
        protected string _Barcode;
        
        protected string _MaterCode;
        
        protected global::System.DateTime? _InTime;
        
        protected global::System.DateTime? _OutTime;
        
        protected string _PrintTime;
        
        public static @__Columns _ = new @__Columns();
        
		public static bool operator ==(global::Mesnac.Entity.PstMaterialInOast left, global::Mesnac.Entity.PstMaterialInOast right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


		public static bool operator !=(global::Mesnac.Entity.PstMaterialInOast left, global::Mesnac.Entity.PstMaterialInOast right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }


        
        public string StorageID {
            get {
                return this._StorageID;
            }
            set {
                this.OnPropertyChanged("StorageID", this._StorageID, value);
                this._StorageID = value;
            }
        }
        
        public string StoragePlaceID {
            get {
                return this._StoragePlaceID;
            }
            set {
                this.OnPropertyChanged("StoragePlaceID", this._StoragePlaceID, value);
                this._StoragePlaceID = value;
            }
        }
        
        public string Barcode {
            get {
                return this._Barcode;
            }
            set {
                this.OnPropertyChanged("Barcode", this._Barcode, value);
                this._Barcode = value;
            }
        }
        
        public string MaterCode {
            get {
                return this._MaterCode;
            }
            set {
                this.OnPropertyChanged("MaterCode", this._MaterCode, value);
                this._MaterCode = value;
            }
        }
        
        public global::System.DateTime? InTime {
            get {
                return this._InTime;
            }
            set {
                this.OnPropertyChanged("InTime", this._InTime, value);
                this._InTime = value;
            }
        }
        
        public global::System.DateTime? OutTime {
            get {
                return this._OutTime;
            }
            set {
                this.OnPropertyChanged("OutTime", this._OutTime, value);
                this._OutTime = value;
            }
        }
        
        public string PrintTime {
            get {
                return this._PrintTime;
            }
            set {
                this.OnPropertyChanged("PrintTime", this._PrintTime, value);
                this._PrintTime = value;
            }
        }
        
        public override NBear.Common.EntityConfiguration GetEntityConfiguration() {
            if ((PstMaterialInOast._PstMaterialInOastEntityConfiguration == null)) {
                PstMaterialInOast._PstMaterialInOastEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstMaterialInOast");
            }
            return PstMaterialInOast._PstMaterialInOastEntityConfiguration;
        }
        
        public override void ReloadQueries(bool includeLazyLoadQueries) {
        }
        
        public override object[] GetPropertyValues() {
            return new object[] {
                    this._StorageID,
                    this._StoragePlaceID,
                    this._Barcode,
                    this._MaterCode,
                    this._InTime,
                    this._OutTime,
                    this._PrintTime};
        }
        
        public override void SetPropertyValues(System.Data.IDataReader reader) {
            if ((false == reader.IsDBNull(0))) {
                this._StorageID = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1))) {
                this._StoragePlaceID = reader.GetString(1);
            }
            if ((false == reader.IsDBNull(2))) {
                this._Barcode = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3))) {
                this._MaterCode = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4))) {
                this._InTime = this.GetDateTime(reader, 4);
            }
            if ((false == reader.IsDBNull(5))) {
                this._OutTime = this.GetDateTime(reader, 5);
            }
            if ((false == reader.IsDBNull(6))) {
                this._PrintTime = reader.GetString(6);
            }
            this.ReloadQueries(false);
        }
        
        public override void SetPropertyValues(System.Data.DataRow row) {
            if ((false == row.IsNull(0))) {
                this._StorageID = ((string)(row[0]));
            }
            if ((false == row.IsNull(1))) {
                this._StoragePlaceID = ((string)(row[1]));
            }
            if ((false == row.IsNull(2))) {
                this._Barcode = ((string)(row[2]));
            }
            if ((false == row.IsNull(3))) {
                this._MaterCode = ((string)(row[3]));
            }
            if ((false == row.IsNull(4))) {
                this._InTime = this.GetDateTime(row, 4);
            }
            if ((false == row.IsNull(5))) {
                this._OutTime = this.GetDateTime(row, 5);
            }
            if ((false == row.IsNull(6))) {
                this._PrintTime = ((string)(row[6]));
            }
            this.ReloadQueries(false);
        }
        
        public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstMaterialInOast).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return ((((this.isAttached && ((global::Mesnac.Entity.PstMaterialInOast)(obj)).isAttached) 
                        && (this.StorageID == ((global::Mesnac.Entity.PstMaterialInOast)(obj)).StorageID)) 
                        && (this.StoragePlaceID == ((global::Mesnac.Entity.PstMaterialInOast)(obj)).StoragePlaceID)) 
                        && (this.Barcode == ((global::Mesnac.Entity.PstMaterialInOast)(obj)).Barcode));
        }
        
        public static @__Columns @__Alias(string aliasName) {
            return new @__Columns(aliasName);
        }
        
        public class @__Columns {
            
            protected string aliasName;
            
            protected NBear.Common.PropertyItem _StorageID = new NBear.Common.PropertyItem("StorageID", "Mesnac.Entity.PstMaterialInOast");
            
            protected NBear.Common.PropertyItem _StoragePlaceID = new NBear.Common.PropertyItem("StoragePlaceID", "Mesnac.Entity.PstMaterialInOast");
            
            protected NBear.Common.PropertyItem _Barcode = new NBear.Common.PropertyItem("Barcode", "Mesnac.Entity.PstMaterialInOast");
            
            protected NBear.Common.PropertyItem _MaterCode = new NBear.Common.PropertyItem("MaterCode", "Mesnac.Entity.PstMaterialInOast");
            
            protected NBear.Common.PropertyItem _InTime = new NBear.Common.PropertyItem("InTime", "Mesnac.Entity.PstMaterialInOast");
            
            protected NBear.Common.PropertyItem _OutTime = new NBear.Common.PropertyItem("OutTime", "Mesnac.Entity.PstMaterialInOast");
            
            protected NBear.Common.PropertyItem _PrintTime = new NBear.Common.PropertyItem("PrintTime", "Mesnac.Entity.PstMaterialInOast");
            
            public @__Columns() {
            }
            
            public @__Columns(string aliasName) {
                this.aliasName = aliasName;
            }
            
            public NBear.Common.PropertyItem StorageID {
                get {
                    if ((aliasName == null)) {
                        return _StorageID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StorageID", _StorageID.EntityConfiguration, _StorageID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem StoragePlaceID {
                get {
                    if ((aliasName == null)) {
                        return _StoragePlaceID;
                    }
                    else {
                        return new NBear.Common.PropertyItem("StoragePlaceID", _StoragePlaceID.EntityConfiguration, _StoragePlaceID.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem Barcode {
                get {
                    if ((aliasName == null)) {
                        return _Barcode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("Barcode", _Barcode.EntityConfiguration, _Barcode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem MaterCode {
                get {
                    if ((aliasName == null)) {
                        return _MaterCode;
                    }
                    else {
                        return new NBear.Common.PropertyItem("MaterCode", _MaterCode.EntityConfiguration, _MaterCode.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem InTime {
                get {
                    if ((aliasName == null)) {
                        return _InTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("InTime", _InTime.EntityConfiguration, _InTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem OutTime {
                get {
                    if ((aliasName == null)) {
                        return _OutTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("OutTime", _OutTime.EntityConfiguration, _OutTime.PropertyConfiguration, aliasName);
                    }
                }
            }
            
            public NBear.Common.PropertyItem PrintTime {
                get {
                    if ((aliasName == null)) {
                        return _PrintTime;
                    }
                    else {
                        return new NBear.Common.PropertyItem("PrintTime", _PrintTime.EntityConfiguration, _PrintTime.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
