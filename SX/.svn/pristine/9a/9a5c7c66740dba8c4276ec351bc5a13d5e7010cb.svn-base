//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mesnac.Entity
{
    using System;
    using System.Xml.Serialization;
    using NBear.Common;


    [System.SerializableAttribute()]
    public partial class PstMaterialAdjustArrayList : NBear.Common.EntityArrayList<Mesnac.Entity.PstMaterialAdjust>
    {
    }

    [System.SerializableAttribute()]
    [NBear.Common.EmbeddedEntityConfigurationAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<EntityConfiguration xmlns:xsi=\"http://w" +
        "ww.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" " +
        "name=\"Mesnac.Entity.PstMaterialAdjust\" isReadOnly=\"false\" isAutoPreLoad=\"false\" " +
        "isBatchUpdate=\"false\" isRelation=\"false\" mappingName=\"PstMaterialAdjust\" batchSi" +
        "ze=\"10\">\r\n  <Properties>\r\n    <Property name=\"BillNo\" type=\"System.String\" isInh" +
        "erited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQ" +
        "uery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isInde" +
        "xProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mapp" +
        "ingName=\"BillNo\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrim" +
        "aryKey=\"true\" isNotNull=\"true\" />\r\n    <Property name=\"AdjustDate\" type=\"System." +
        "Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUn" +
        "it=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"f" +
        "alse\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" " +
        "isSerializationIgnore=\"false\" mappingName=\"AdjustDate\" mappingColumnType=\"System" +
        ".Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isNotNull=" +
        "\"false\" />\r\n    <Property name=\"SourceStorage\" type=\"System.String\" isInherited=" +
        "\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"f" +
        "alse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexProper" +
        "ty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName" +
        "=\"SourceStorage\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(36)\" isPrim" +
        "aryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TargetStorage\" type=\"Sy" +
        "stem.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCon" +
        "tained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelation" +
        "Key=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationI" +
        "gnore=\"false\" mappingName=\"TargetStorage\" mappingColumnType=\"System.String\" sqlT" +
        "ype=\"nvarchar(36)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name" +
        "=\"MakerPerson\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCom" +
        "poundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazy" +
        "Load=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"" +
        "false\" isSerializationIgnore=\"false\" mappingName=\"MakerPerson\" mappingColumnType" +
        "=\"System.String\" sqlType=\"nvarchar(20)\" isPrimaryKey=\"false\" isNotNull=\"false\" /" +
        ">\r\n    <Property name=\"SourceInaccountDuration\" type=\"System.String\" isInherited" +
        "=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"" +
        "false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPrope" +
        "rty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingNam" +
        "e=\"SourceInaccountDuration\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(" +
        "6)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"TargetInaccou" +
        "ntDuration\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompou" +
        "ndUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoa" +
        "d=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"fal" +
        "se\" isSerializationIgnore=\"false\" mappingName=\"TargetInaccountDuration\" mappingC" +
        "olumnType=\"System.String\" sqlType=\"nvarchar(6)\" isPrimaryKey=\"false\" isNotNull=\"" +
        "false\" />\r\n    <Property name=\"ChkResultFlag\" type=\"System.String\" isInherited=\"" +
        "false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"false\" isQuery=\"fa" +
        "lse\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false\" isIndexPropert" +
        "y=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"false\" mappingName=" +
        "\"ChkResultFlag\" mappingColumnType=\"System.String\" sqlType=\"char(1)\" isPrimaryKey" +
        "=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ChkPerson\" type=\"System.Strin" +
        "g\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"false\" isContained=\"fa" +
        "lse\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelationKey=\"false" +
        "\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerializationIgnore=\"fal" +
        "se\" mappingName=\"ChkPerson\" mappingColumnType=\"System.String\" sqlType=\"nvarchar(" +
        "20)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"ChkDate\" typ" +
        "e=\"System.Nullable`1[System.DateTime]\" isInherited=\"false\" isReadOnly=\"false\" is" +
        "CompoundUnit=\"false\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isL" +
        "azyLoad=\"false\" isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDes" +
        "c=\"false\" isSerializationIgnore=\"false\" mappingName=\"ChkDate\" mappingColumnType=" +
        "\"System.Nullable`1[System.DateTime]\" sqlType=\"datetime\" isPrimaryKey=\"false\" isN" +
        "otNull=\"false\" />\r\n    <Property name=\"DeleteFlag\" type=\"System.String\" isInheri" +
        "ted=\"false\" sqlDefaultValue=\"\'0\'\" isReadOnly=\"false\" isCompoundUnit=\"false\" isCo" +
        "ntained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\" isRelatio" +
        "nKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSerialization" +
        "Ignore=\"false\" mappingName=\"DeleteFlag\" mappingColumnType=\"System.String\" sqlTyp" +
        "e=\"char(1)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n    <Property name=\"Remar" +
        "k\" type=\"System.String\" isInherited=\"false\" isReadOnly=\"false\" isCompoundUnit=\"f" +
        "alse\" isContained=\"false\" isQuery=\"false\" isFriendKey=\"false\" isLazyLoad=\"false\"" +
        " isRelationKey=\"false\" isIndexProperty=\"false\" isIndexPropertyDesc=\"false\" isSer" +
        "ializationIgnore=\"false\" mappingName=\"Remark\" mappingColumnType=\"System.String\" " +
        "sqlType=\"nvarchar(40)\" isPrimaryKey=\"false\" isNotNull=\"false\" />\r\n  </Properties" +
        ">\r\n</EntityConfiguration>")]
    public partial class PstMaterialAdjust : NBear.Common.Entity
    {

        protected static NBear.Common.EntityConfiguration _PstMaterialAdjustEntityConfiguration;

        protected string _BillNo;

        protected global::System.DateTime? _AdjustDate;

        protected string _SourceStorage;

        protected string _TargetStorage;

        protected string _MakerPerson;

        protected string _SourceInaccountDuration;

        protected string _TargetInaccountDuration;

        protected string _ChkResultFlag;

        protected string _ChkPerson;

        protected global::System.DateTime? _ChkDate;

        protected string _DeleteFlag;

        protected string _Remark;

        public static @__Columns _ = new @__Columns();

        public static bool operator ==(global::Mesnac.Entity.PstMaterialAdjust left, global::Mesnac.Entity.PstMaterialAdjust right) { return ((object)left) != null ? left.Equals(right) : ((object)right) == null ? true : false; }


        public static bool operator !=(global::Mesnac.Entity.PstMaterialAdjust left, global::Mesnac.Entity.PstMaterialAdjust right) { return ((object)left) != null ? !left.Equals(right) : ((object)right) == null ? false : true; }



        public string BillNo
        {
            get
            {
                return this._BillNo;
            }
            set
            {
                this.OnPropertyChanged("BillNo", this._BillNo, value);
                this._BillNo = value;
            }
        }

        public global::System.DateTime? AdjustDate
        {
            get
            {
                return this._AdjustDate;
            }
            set
            {
                this.OnPropertyChanged("AdjustDate", this._AdjustDate, value);
                this._AdjustDate = value;
            }
        }

        public string SourceStorage
        {
            get
            {
                return this._SourceStorage;
            }
            set
            {
                this.OnPropertyChanged("SourceStorage", this._SourceStorage, value);
                this._SourceStorage = value;
            }
        }

        public string TargetStorage
        {
            get
            {
                return this._TargetStorage;
            }
            set
            {
                this.OnPropertyChanged("TargetStorage", this._TargetStorage, value);
                this._TargetStorage = value;
            }
        }

        public string MakerPerson
        {
            get
            {
                return this._MakerPerson;
            }
            set
            {
                this.OnPropertyChanged("MakerPerson", this._MakerPerson, value);
                this._MakerPerson = value;
            }
        }

        public string SourceInaccountDuration
        {
            get
            {
                return this._SourceInaccountDuration;
            }
            set
            {
                this.OnPropertyChanged("SourceInaccountDuration", this._SourceInaccountDuration, value);
                this._SourceInaccountDuration = value;
            }
        }

        public string TargetInaccountDuration
        {
            get
            {
                return this._TargetInaccountDuration;
            }
            set
            {
                this.OnPropertyChanged("TargetInaccountDuration", this._TargetInaccountDuration, value);
                this._TargetInaccountDuration = value;
            }
        }

        public string ChkResultFlag
        {
            get
            {
                return this._ChkResultFlag;
            }
            set
            {
                this.OnPropertyChanged("ChkResultFlag", this._ChkResultFlag, value);
                this._ChkResultFlag = value;
            }
        }

        public string ChkPerson
        {
            get
            {
                return this._ChkPerson;
            }
            set
            {
                this.OnPropertyChanged("ChkPerson", this._ChkPerson, value);
                this._ChkPerson = value;
            }
        }

        public global::System.DateTime? ChkDate
        {
            get
            {
                return this._ChkDate;
            }
            set
            {
                this.OnPropertyChanged("ChkDate", this._ChkDate, value);
                this._ChkDate = value;
            }
        }

        public string DeleteFlag
        {
            get
            {
                return this._DeleteFlag;
            }
            set
            {
                this.OnPropertyChanged("DeleteFlag", this._DeleteFlag, value);
                this._DeleteFlag = value;
            }
        }

        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyChanged("Remark", this._Remark, value);
                this._Remark = value;
            }
        }

        public override NBear.Common.EntityConfiguration GetEntityConfiguration()
        {
            if ((PstMaterialAdjust._PstMaterialAdjustEntityConfiguration == null))
            {
                PstMaterialAdjust._PstMaterialAdjustEntityConfiguration = NBear.Common.MetaDataManager.GetEntityConfiguration("Mesnac.Entity.PstMaterialAdjust");
            }
            return PstMaterialAdjust._PstMaterialAdjustEntityConfiguration;
        }

        public override void ReloadQueries(bool includeLazyLoadQueries)
        {
        }

        public override object[] GetPropertyValues()
        {
            return new object[] {
                    this._BillNo,
                    this._AdjustDate,
                    this._SourceStorage,
                    this._TargetStorage,
                    this._MakerPerson,
                    this._SourceInaccountDuration,
                    this._TargetInaccountDuration,
                    this._ChkResultFlag,
                    this._ChkPerson,
                    this._ChkDate,
                    this._DeleteFlag,
                    this._Remark};
        }

        public override void SetPropertyValues(System.Data.IDataReader reader)
        {
            if ((false == reader.IsDBNull(0)))
            {
                this._BillNo = reader.GetString(0);
            }
            if ((false == reader.IsDBNull(1)))
            {
                this._AdjustDate = this.GetDateTime(reader, 1);
            }
            if ((false == reader.IsDBNull(2)))
            {
                this._SourceStorage = reader.GetString(2);
            }
            if ((false == reader.IsDBNull(3)))
            {
                this._TargetStorage = reader.GetString(3);
            }
            if ((false == reader.IsDBNull(4)))
            {
                this._MakerPerson = reader.GetString(4);
            }
            if ((false == reader.IsDBNull(5)))
            {
                this._SourceInaccountDuration = reader.GetString(5);
            }
            if ((false == reader.IsDBNull(6)))
            {
                this._TargetInaccountDuration = reader.GetString(6);
            }
            if ((false == reader.IsDBNull(7)))
            {
                this._ChkResultFlag = reader.GetString(7);
            }
            if ((false == reader.IsDBNull(8)))
            {
                this._ChkPerson = reader.GetString(8);
            }
            if ((false == reader.IsDBNull(9)))
            {
                this._ChkDate = this.GetDateTime(reader, 9);
            }
            if ((false == reader.IsDBNull(10)))
            {
                this._DeleteFlag = reader.GetString(10);
            }
            if ((false == reader.IsDBNull(11)))
            {
                this._Remark = reader.GetString(11);
            }
            this.ReloadQueries(false);
        }

        public override void SetPropertyValues(System.Data.DataRow row)
        {
            if ((false == row.IsNull(0)))
            {
                this._BillNo = ((string)(row[0]));
            }
            if ((false == row.IsNull(1)))
            {
                this._AdjustDate = this.GetDateTime(row, 1);
            }
            if ((false == row.IsNull(2)))
            {
                this._SourceStorage = ((string)(row[2]));
            }
            if ((false == row.IsNull(3)))
            {
                this._TargetStorage = ((string)(row[3]));
            }
            if ((false == row.IsNull(4)))
            {
                this._MakerPerson = ((string)(row[4]));
            }
            if ((false == row.IsNull(5)))
            {
                this._SourceInaccountDuration = ((string)(row[5]));
            }
            if ((false == row.IsNull(6)))
            {
                this._TargetInaccountDuration = ((string)(row[6]));
            }
            if ((false == row.IsNull(7)))
            {
                this._ChkResultFlag = ((string)(row[7]));
            }
            if ((false == row.IsNull(8)))
            {
                this._ChkPerson = ((string)(row[8]));
            }
            if ((false == row.IsNull(9)))
            {
                this._ChkDate = this.GetDateTime(row, 9);
            }
            if ((false == row.IsNull(10)))
            {
                this._DeleteFlag = ((string)(row[10]));
            }
            if ((false == row.IsNull(11)))
            {
                this._Remark = ((string)(row[11]));
            }
            this.ReloadQueries(false);
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(global::Mesnac.Entity.PstMaterialAdjust).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return ((this.isAttached && ((global::Mesnac.Entity.PstMaterialAdjust)(obj)).isAttached)
                        && (this.BillNo == ((global::Mesnac.Entity.PstMaterialAdjust)(obj)).BillNo));
        }

        public static @__Columns @__Alias(string aliasName)
        {
            return new @__Columns(aliasName);
        }

        public class @__Columns
        {

            protected string aliasName;

            protected NBear.Common.PropertyItem _BillNo = new NBear.Common.PropertyItem("BillNo", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _AdjustDate = new NBear.Common.PropertyItem("AdjustDate", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _SourceStorage = new NBear.Common.PropertyItem("SourceStorage", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _TargetStorage = new NBear.Common.PropertyItem("TargetStorage", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _MakerPerson = new NBear.Common.PropertyItem("MakerPerson", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _SourceInaccountDuration = new NBear.Common.PropertyItem("SourceInaccountDuration", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _TargetInaccountDuration = new NBear.Common.PropertyItem("TargetInaccountDuration", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _ChkResultFlag = new NBear.Common.PropertyItem("ChkResultFlag", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _ChkPerson = new NBear.Common.PropertyItem("ChkPerson", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _ChkDate = new NBear.Common.PropertyItem("ChkDate", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _DeleteFlag = new NBear.Common.PropertyItem("DeleteFlag", "Mesnac.Entity.PstMaterialAdjust");

            protected NBear.Common.PropertyItem _Remark = new NBear.Common.PropertyItem("Remark", "Mesnac.Entity.PstMaterialAdjust");

            public @__Columns()
            {
            }

            public @__Columns(string aliasName)
            {
                this.aliasName = aliasName;
            }

            public NBear.Common.PropertyItem BillNo
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _BillNo;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("BillNo", _BillNo.EntityConfiguration, _BillNo.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem AdjustDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _AdjustDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("AdjustDate", _AdjustDate.EntityConfiguration, _AdjustDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceStorage
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceStorage;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceStorage", _SourceStorage.EntityConfiguration, _SourceStorage.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem TargetStorage
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TargetStorage;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TargetStorage", _TargetStorage.EntityConfiguration, _TargetStorage.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem MakerPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _MakerPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("MakerPerson", _MakerPerson.EntityConfiguration, _MakerPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem SourceInaccountDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _SourceInaccountDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("SourceInaccountDuration", _SourceInaccountDuration.EntityConfiguration, _SourceInaccountDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem TargetInaccountDuration
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _TargetInaccountDuration;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("TargetInaccountDuration", _TargetInaccountDuration.EntityConfiguration, _TargetInaccountDuration.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkResultFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkResultFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkResultFlag", _ChkResultFlag.EntityConfiguration, _ChkResultFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkPerson
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkPerson;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkPerson", _ChkPerson.EntityConfiguration, _ChkPerson.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem ChkDate
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _ChkDate;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("ChkDate", _ChkDate.EntityConfiguration, _ChkDate.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem DeleteFlag
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _DeleteFlag;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("DeleteFlag", _DeleteFlag.EntityConfiguration, _DeleteFlag.PropertyConfiguration, aliasName);
                    }
                }
            }

            public NBear.Common.PropertyItem Remark
            {
                get
                {
                    if ((aliasName == null))
                    {
                        return _Remark;
                    }
                    else
                    {
                        return new NBear.Common.PropertyItem("Remark", _Remark.EntityConfiguration, _Remark.PropertyConfiguration, aliasName);
                    }
                }
            }
        }
    }
}
